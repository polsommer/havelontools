#put the target "default" first in case make is invoked w/o specifying a target

default: all

ifeq ($(BULLSEYE_BUILD),)
CPP	  = g++
else
CPP	  = /opt/app/bullseyecoverage/bin/g++
BULLSEYE_LIB = /opt/app/bullseyecoverage/lib/libcov.a
$(BULLSEYE_LIB)_dep:
	ls -l $(BULLSEYE_LIB)

COVFILE   = /home/bdalton/text.cov

endif

BOOTPRINT_LIB_PATH	=../../../../../../compile/$(PLATFORM)
BOOTPRINT_SRC_PATH      =../../../../../..
SHARED_DEBUG_LIB_PATH   =../../../../../../../dev/linux/debug/lib

#engine source tree defines

COLLISION_BASE_PATH		=engine/shared/library/sharedCollision
COLLISION_PATH                  =$(BOOTPRINT_SRC_PATH)/$(COLLISION_BASE_PATH)
COLLISION_INCLUDE_PATH		=$(COLLISION_PATH)/include/public
COLLISION_BUILD_PATH		=$(COLLISION_PATH)/build/$(PLATFORM)
COLLISION_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedCollision.so
$(COLLISION_DEBUG_LIB)_dep:
	+$(V)make -C $(COLLISION_BUILD_PATH) debug

COMMAND_PARSER_BASE_PATH        =engine/shared/library/sharedCommandParser
COMMAND_PARSER_PATH             =$(BOOTPRINT_SRC_PATH)/$(COMMAND_PARSER_BASE_PATH)
COMMAND_PARSER_INCLUDE_PATH	=$(COMMAND_PARSER_PATH)/include/public
COMMAND_PARSER_BUILD_PATH	=$(COMMAND_PARSER_PATH)/build/$(PLATFORM)
COMMAND_PARSER_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedCommandParser.so
$(COMMAND_PARSER_DEBUG_LIB)_dep:
	+$(V)make -C $(COMMAND_PARSER_BUILD_PATH) debug

COMPRESSION_BASE_PATH           =engine/shared/library/sharedCompression
COMPRESSION_PATH                =$(BOOTPRINT_SRC_PATH)/$(COMPRESSION_BASE_PATH)
COMPRESSION_INCLUDE_PATH	=$(COMPRESSION_PATH)/include/public
COMPRESSION_BUILD_PATH		=$(COMPRESSION_PATH)/build/$(PLATFORM)
COMPRESSION_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedCompression.so
$(COMPRESSION_DEBUG_LIB)_dep:
	+$(V)make -C $(COMPRESSION_BUILD_PATH) debug

DEBUG_BASE_PATH   =engine/shared/library/sharedDebug
DEBUG_PATH        =$(BOOTPRINT_SRC_PATH)/$(DEBUG_BASE_PATH)
DEBUG_INCLUDE_PATH	=$(DEBUG_PATH)/include/public
DEBUG_BUILD_PATH	=$(DEBUG_PATH)/build/$(PLATFORM)
DEBUG_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedDebug.so
DEBUG_RELEASE_PROJECT   =$(DEBUG_BUILD_PATH)/bugus_release
$(DEBUG_DEBUG_LIB)_dep:
	+$(V)make -C $(DEBUG_BUILD_PATH) debug

FILE_BASE_PATH   =engine/shared/library/sharedFile
FILE_PATH        =$(BOOTPRINT_SRC_PATH)/$(FILE_BASE_PATH)
FILE_INCLUDE_PATH	=$(FILE_PATH)/include/public
FILE_BUILD_PATH		=$(FILE_PATH)/build/$(PLATFORM)
FILE_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedFile.so
$(FILE_DEBUG_LIB)_dep:
	+$(V)make -C $(FILE_BUILD_PATH) debug

FOUNDATION_BASE_PATH   =engine/shared/library/sharedFoundation
FOUNDATION_PATH        =$(BOOTPRINT_SRC_PATH)/$(FOUNDATION_BASE_PATH)
FOUNDATION_INCLUDE_PATH	=$(FOUNDATION_PATH)/include/public
FOUNDATION_BUILD_PATH	=$(FOUNDATION_PATH)/build/$(PLATFORM)
FOUNDATION_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedFoundation.so
$(FOUNDATION_DEBUG_LIB)_dep:
	+$(V)make -C $(FOUNDATION_BUILD_PATH) debug

FOUNDATION_TYPES_BASE_PATH   =engine/shared/library/sharedFoundationTypes
FOUNDATION_TYPES_PATH        =$(BOOTPRINT_SRC_PATH)/$(FOUNDATION_TYPES_BASE_PATH)
FOUNDATION_TYPES_INCLUDE_PATH 	=$(FOUNDATION_TYPES_PATH)/include/public

FRACTAL_BASE_PATH   =engine/shared/library/sharedFractal
FRACTAL_PATH        =$(BOOTPRINT_SRC_PATH)/$(FRACTAL_BASE_PATH)
FRACTAL_INCLUDE_PATH	=$(FRACTAL_PATH)/include/public
FRACTAL_BUILD_PATH	=$(FRACTAL_PATH)/build/$(PLATFORM)
FRACTAL_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedFractal.so
$(FRACTAL_DEBUG_LIB)_dep:
	+$(V)make -C $(FRACTAL_BUILD_PATH) debug

IMAGE_BASE_PATH   =engine/shared/library/sharedImage
IMAGE_PATH        =$(BOOTPRINT_SRC_PATH)/$(IMAGE_BASE_PATH)
IMAGE_INCLUDE_PATH	=$(IMAGE_PATH)/include/public
IMAGE_BUILD_PATH	=$(IMAGE_PATH)/build/$(PLATFORM)
IMAGE_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedImage.so
$(IMAGE_DEBUG_LIB)_dep:
	+$(V)make -C $(IMAGE_BUILD_PATH) debug

IOWIN_BASE_PATH   =engine/shared/library/sharedIoWin
IOWIN_PATH        =$(BOOTPRINT_SRC_PATH)/$(IOWIN_BASE_PATH)
IOWIN_INCLUDE_PATH	=$(IOWIN_PATH)/include/public
IOWIN_BUILD_PATH	=$(IOWIN_PATH)/build/$(PLATFORM)
IOWIN_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedIoWin.so
$(IOWIN_DEBUG_LIB)_dep:
	+$(V)make -C $(IOWIN_BUILD_PATH) debug

LOG_BASE_PATH   	=engine/shared/library/sharedLog
LOG_PATH        	=$(BOOTPRINT_SRC_PATH)/$(LOG_BASE_PATH)
LOG_INCLUDE_PATH	=$(LOG_PATH)/include/public
LOG_BUILD_PATH		=$(LOG_PATH)/build/$(PLATFORM)
LOG_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedLog.so
$(LOG_DEBUG_LIB)_dep:
	+$(V)make -C $(LOG_BUILD_PATH) debug

MATH_BASE_PATH   =engine/shared/library/sharedMath
MATH_PATH        =$(BOOTPRINT_SRC_PATH)/$(MATH_BASE_PATH)
MATH_INCLUDE_PATH	=$(MATH_PATH)/include/public
MATH_BUILD_PATH		=$(MATH_PATH)/build/$(PLATFORM)
MATH_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedMath.so
$(MATH_DEBUG_LIB)_dep:
	+$(V)make -C $(MATH_BUILD_PATH) debug

MATH_ARCHIVE_BASE_PATH   =engine/shared/library/sharedMathArchive
MATH_ARCHIVE_PATH        =$(BOOTPRINT_SRC_PATH)/$(MATH_ARCHIVE_BASE_PATH)
MATH_ARCHIVE_INCLUDE_PATH	=$(MATH_ARCHIVE_PATH)/include/public

MEMORY_MANAGER_BASE_PATH   =engine/shared/library/sharedMemoryManager
MEMORY_MANAGER_PATH        =$(BOOTPRINT_SRC_PATH)/$(MEMORY_MANAGER_BASE_PATH)
MEMORY_MANAGER_INCLUDE_PATH	=$(MEMORY_MANAGER_PATH)/include/public
MEMORY_MANAGER_BUILD_PATH	=$(MEMORY_MANAGER_PATH)/build/$(PLATFORM)
MEMORY_MANAGER_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedMemoryManager.so
$(MEMORY_MANAGER_DEBUG_LIB)_dep:
	+$(V)make -C $(MEMORY_MANAGER_BUILD_PATH) debug

MESSAGE_DISPATCH_BASE_PATH   =engine/shared/library/sharedMessageDispatch
MESSAGE_DISPATCH_PATH        =$(BOOTPRINT_SRC_PATH)/$(MESSAGE_DISPATCH_BASE_PATH)
MESSAGE_DISPATCH_INCLUDE_PATH	=$(MESSAGE_DISPATCH_PATH)/include/public
MESSAGE_DISPATCH_BUILD_PATH	=$(MESSAGE_DISPATCH_PATH)/build/$(PLATFORM)
MESSAGE_DISPATCH_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedMessageDispatch.so
$(MESSAGE_DISPATCH_DEBUG_LIB)_dep:
	+$(V)make -C $(MESSAGE_DISPATCH_BUILD_PATH) debug

NETWORK_MESSAGES_BASE_PATH   =engine/shared/library/sharedNetworkMessages
NETWORK_MESSAGES_PATH        =$(BOOTPRINT_SRC_PATH)/$(NETWORK_MESSAGES_BASE_PATH)
NETWORK_MESSAGES_INCLUDE_PATH	=$(NETWORK_MESSAGES_PATH)/include/public
NETWORK_MESSAGES_BUILD_PATH	=$(NETWORK_MESSAGES_PATH)/build/$(PLATFORM)
NETWORK_MESSAGES_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedNetworkMessages.so
$(NETWORK_MESSAGES_DEBUG_LIB)_dep:
	+$(V)make -C $(NETWORK_MESSAGES_BUILD_PATH) debug

OBJECT_BASE_PATH   =engine/shared/library/sharedObject
OBJECT_PATH        =$(BOOTPRINT_SRC_PATH)/$(OBJECT_BASE_PATH)
OBJECT_INCLUDE_PATH	=$(OBJECT_PATH)/include/public
OBJECT_BUILD_PATH	=$(OBJECT_PATH)/build/$(PLATFORM)
OBJECT_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedObject.so
$(OBJECT_DEBUG_LIB)_dep:
	+$(V)make -C $(OBJECT_BUILD_PATH) debug

SKILL_SYSTEM_BASE_PATH   =engine/shared/library/sharedSkillSystem
SKILL_SYSTEM_PATH        =$(BOOTPRINT_SRC_PATH)/$(SKILL_SYSTEM_BASE_PATH)
SKILL_SYSTEM_INCLUDE_PATH     =$(SKILL_SYSTEM_PATH)/include/public
SKILL_SYSTEM_BUILD_PATH       =$(SKILL_SYSTEM_PATH)/build/$(PLATFORM)
SKILL_SYSTEM_DEBUG_LIB        	=$(SHARED_DEBUG_LIB_PATH)/libsharedSkillSystem.so
$(SKILL_SYSTEM_DEBUG_LIB)_dep:
	+$(V)make -C $(SKILL_SYSTEM_BUILD_PATH) debug

PATHFINDING_BASE_PATH   =engine/shared/library/sharedPathfinding
PATHFINDING_PATH        =$(BOOTPRINT_SRC_PATH)/$(PATHFINDING_BASE_PATH)
PATHFINDING_INCLUDE_PATH	=$(PATHFINDING_PATH)/include/public
PATHFINDING_BUILD_PATH	=$(PATHFINDING_PATH)/build/$(PLATFORM)
PATHFINDING_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedPathfinding.so
$(PATHFINDING_DEBUG_LIB)_dep:
	+$(V)make -C $(PATHFINDING_BUILD_PATH) debug

RANDOM_BASE_PATH   =engine/shared/library/sharedRandom
RANDOM_PATH        =$(BOOTPRINT_SRC_PATH)/$(RANDOM_BASE_PATH)
RANDOM_INCLUDE_PATH	=$(RANDOM_PATH)/include/public
RANDOM_BUILD_PATH	=$(RANDOM_PATH)/build/$(PLATFORM)
RANDOM_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedRandom.so
$(RANDOM_DEBUG_LIB)_dep:
	+$(V)make -C $(RANDOM_BUILD_PATH) debug

REGEX_BASE_PATH   =external/3rd/library/regex
REGEX_PATH        =$(BOOTPRINT_SRC_PATH)/$(REGEX_BASE_PATH)
REGEX_INCLUDE_PATH	=$(REGEX_PATH)
REGEX_BUILD_PATH	=$(REGEX_PATH)/libs/regex/build/gcc
REGEX_DEBUG_LIB		=$(REGEX_BUILD_PATH)/libboost_regex_debug.a


SHARED_DATABASE_INTERFACE_BASE_PATH   =engine/shared/library/sharedDatabaseInterface
SHARED_DATABASE_INTERFACE_PATH        =$(BOOTPRINT_SRC_PATH)/$(SHARED_DATABASE_INTERFACE_BASE_PATH)
SHARED_DATABASE_INTERFACE_INCLUDE_PATH	=$(SHARED_DATABASE_INTERFACE_PATH)/include/public
SHARED_DATABASE_INTERFACE_BUILD_PATH	=$(SHARED_DATABASE_INTERFACE_PATH)/build/$(PLATFORM)
SHARED_DATABASE_INTERFACE_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedDatabaseInterface.so
$(SHARED_DATABASE_INTERFACE_DEBUG_LIB)_dep:
	+$(V)make -C $(SHARED_DATABASE_INTERFACE_BUILD_PATH) debug


SHARED_REGEX_BASE_PATH       =engine/shared/library/sharedRegex
SHARED_REGEX_PATH            =$(BOOTPRINT_SRC_PATH)/$(SHARED_REGEX_BASE_PATH)
SHARED_REGEX_INCLUDE_PATH    =$(SHARED_REGEX_PATH)/include/public
SHARED_REGEX_BUILD_PATH	     =$(SHARED_REGEX_PATH)/build/$(PLATFORM)
SHARED_REGEX_DEBUG_LIB	     =$(SHARED_DEBUG_LIB_PATH)/libsharedRegex.so
$(SHARED_REGEX_DEBUG_LIB)_dep:
	+$(V)make -C $(SHARED_REGEX_BUILD_PATH) debug

SWITCHER_BASE_PATH   =engine/shared/library/sharedSwitcher
SWITCHER_PATH        =$(BOOTPRINT_SRC_PATH)/$(SWITCHER_BASE_PATH)
SWITCHER_INCLUDE_PATH	=$(SWITCHER_PATH)/include/public
SWITCHER_BUILD_PATH	=$(SWITCHER_PATH)/build/$(PLATFORM)
SWITCHER_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedSwitcher.so

SYNCHRONIZATION_BASE_PATH   =engine/shared/library/sharedSynchronization
SYNCHRONIZATION_PATH        =$(BOOTPRINT_SRC_PATH)/$(SYNCHRONIZATION_BASE_PATH)
SYNCHRONIZATION_INCLUDE_PATH	=$(SYNCHRONIZATION_PATH)/include/public
SYNCHRONIZATION_BUILD_PATH	=$(SYNCHRONIZATION_PATH)/build/$(PLATFORM)
SYNCHRONIZATION_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedSynchronization.so
$(SYNCHRONIZATION_DEBUG_LIB)_dep:
	+$(V)make -C $(SYNCHRONIZATION_BUILD_PATH) debug

TEMPLATE_BASE_PATH   =engine/shared/library/sharedTemplate
TEMPLATE_PATH        =$(BOOTPRINT_SRC_PATH)/$(TEMPLATE_BASE_PATH)
TEMPLATE_INCLUDE_PATH	=$(TEMPLATE_PATH)/include/public
TEMPLATE_BUILD_PATH	=$(TEMPLATE_PATH)/build/$(PLATFORM)
TEMPLATE_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedTemplate.so
$(TEMPLATE_DEBUG_LIB)_dep:
	+$(V)make -C $(TEMPLATE_BUILD_PATH) debug

TEMPLATE_DEFINITION_BASE_PATH   =engine/shared/library/sharedTemplateDefinition
TEMPLATE_DEFINITION_PATH        =$(BOOTPRINT_SRC_PATH)/$(TEMPLATE_DEFINITION_BASE_PATH)
TEMPLATE_DEFINITION_INCLUDE_PATH	=$(TEMPLATE_DEFINITION_PATH)/include/public
TEMPLATE_DEFINITION_BUILD_PATH	=$(TEMPLATE_DEFINITION_PATH)/build/$(PLATFORM)
TEMPLATE_DEFINITION_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libsharedTemplateDefinition.so
$(TEMPLATE_DEFINITION_DEBUG_LIB)_dep:
	+$(V)make -C $(TEMPLATE_DEFINITION_BUILD_PATH) debug

TERRAIN_BASE_PATH   =engine/shared/library/sharedTerrain
TERRAIN_PATH        =$(BOOTPRINT_SRC_PATH)/$(TERRAIN_BASE_PATH)
TERRAIN_INCLUDE_PATH	=$(TERRAIN_PATH)/include/public
TERRAIN_BUILD_PATH	=$(TERRAIN_PATH)/build/$(PLATFORM)
TERRAIN_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedTerrain.so
$(TERRAIN_DEBUG_LIB)_dep:
	+$(V)make -C $(TERRAIN_BUILD_PATH) debug

THREAD_BASE_PATH   =engine/shared/library/sharedThread
THREAD_PATH        =$(BOOTPRINT_SRC_PATH)/$(THREAD_BASE_PATH)
THREAD_INCLUDE_PATH	=$(THREAD_PATH)/include/public
THREAD_BUILD_PATH	=$(THREAD_PATH)/build/$(PLATFORM)
THREAD_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedThread.so
$(THREAD_DEBUG_LIB)_dep:
	+$(V)make -C $(THREAD_BUILD_PATH) debug

UTILITY_BASE_PATH   =engine/shared/library/sharedUtility
UTILITY_PATH        =$(BOOTPRINT_SRC_PATH)/$(UTILITY_BASE_PATH)
UTILITY_INCLUDE_PATH	=$(UTILITY_PATH)/include/public
UTILITY_BUILD_PATH	=$(UTILITY_PATH)/build/$(PLATFORM)
UTILITY_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libsharedUtility.so
$(UTILITY_DEBUG_LIB)_dep:
	+$(V)make -C $(UTILITY_BUILD_PATH) debug

ORACLE_CLIENT_PATH       	=$(ORACLE_HOME)
ORACLE_CLIENT_LIB		=$(ORACLE_CLIENT_PATH)/lib/libclntsh.so
$(ORACLE_CLIENT_LIB)_dep:
	@[ -f $(ORACLE_CLIENT_LIB) ] || echo "  [$(ORACLE_CLIENT_LIB)] is missing!"
	$(V)cd $(SHARED_DEBUG_LIB_PATH) && ln -sf $(ORACLE_CLIENT_LIB)

LIBXML_INCLUDE_PATH     =/usr/include/libxml2
LIBXML_LIB		=/usr/lib/libxml2.so
$(LIBXML_LIB)_dep:
	@[ -f $(LIBXML_LIB) ] || echo "  [$(LIBXML_LIB)] is missing!"
	$(V)cd $(SHARED_DEBUG_LIB_PATH) && ln -sf $(LIBXML_LIB)

SERVER_GAME_BASE_PATH   	=engine/server/library/serverGame
SERVER_GAME_PATH        	=$(BOOTPRINT_SRC_PATH)/$(SERVER_GAME_BASE_PATH)
SERVER_GAME_INCLUDE_PATH	=$(SERVER_GAME_PATH)/include/public
SERVER_GAME_BUILD_PATH		=$(SERVER_GAME_PATH)/build/$(PLATFORM)
SERVER_GAME_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libserverGame.so
$(SERVER_GAME_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_GAME_BUILD_PATH) debug

SERVER_KEYSHARE_BASE_PATH   =engine/server/library/serverKeyShare
SERVER_KEYSHARE_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_KEYSHARE_BASE_PATH)
SERVER_KEYSHARE_INCLUDE_PATH	=$(SERVER_KEYSHARE_PATH)/include/public
SERVER_KEYSHARE_BUILD_PATH	=$(SERVER_KEYSHARE_PATH)/build/$(PLATFORM)
SERVER_KEYSHARE_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libserverKeyShare.so
$(SERVER_KEYSHARE_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_KEYSHARE_BUILD_PATH) debug

SERVER_METRICS_BASE_PATH   =engine/server/library/serverMetrics
SERVER_METRICS_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_METRICS_BASE_PATH)
SERVER_METRICS_INCLUDE_PATH	=$(SERVER_METRICS_PATH)/include/public
SERVER_METRICS_BUILD_PATH	=$(SERVER_METRICS_PATH)/build/$(PLATFORM)
SERVER_METRICS_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libserverMetrics.so
$(SERVER_METRICS_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_METRICS_BUILD_PATH) debug

SERVER_NETWORK_MESSAGES_BASE_PATH   =engine/server/library/serverNetworkMessages
SERVER_NETWORK_MESSAGES_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_NETWORK_MESSAGES_BASE_PATH)
SERVER_NETWORK_MESSAGES_INCLUDE_PATH	=$(SERVER_NETWORK_MESSAGES_PATH)/include/public
SERVER_NETWORK_MESSAGES_BUILD_PATH	=$(SERVER_NETWORK_MESSAGES_PATH)/build/$(PLATFORM)
SERVER_NETWORK_MESSAGES_DEBUG_LIB    	=$(SHARED_DEBUG_LIB_PATH)/libserverNetworkMessages.so
$(SERVER_NETWORK_MESSAGES_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_NETWORK_MESSAGES_BUILD_PATH) debug

SERVER_PATHFINDING_BASE_PATH    =engine/server/library/serverPathfinding
SERVER_PATHFINDING_PATH         =$(BOOTPRINT_SRC_PATH)/$(SERVER_PATHFINDING_BASE_PATH)
SERVER_PATHFINDING_INCLUDE_PATH	=$(SERVER_PATHFINDING_PATH)/include/public
SERVER_PATHFINDING_BUILD_PATH	=$(SERVER_PATHFINDING_PATH)/build/$(PLATFORM)
SERVER_PATHFINDING_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libserverPathfinding.so
$(SERVER_PATHFINDING_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_PATHFINDING_BUILD_PATH) debug

SERVER_SCRIPT_BASE_PATH   =engine/server/library/serverScript
SERVER_SCRIPT_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_SCRIPT_BASE_PATH)
SERVER_SCRIPT_INCLUDE_PATH	=$(SERVER_SCRIPT_PATH)/include/public
SERVER_SCRIPT_BUILD_PATH	=$(SERVER_SCRIPT_PATH)/build/$(PLATFORM)
SERVER_SCRIPT_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH)/libserverScript.so
$(SERVER_SCRIPT_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_SCRIPT_BUILD_PATH) debug

SERVER_UTILITY_BASE_PATH   =engine/server/library/serverUtility
SERVER_UTILITY_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_UTILITY_BASE_PATH)
SERVER_UTILITY_INCLUDE_PATH	=$(SERVER_UTILITY_PATH)/include/public
SERVER_UTILITY_BUILD_PATH	=$(SERVER_UTILITY_PATH)/build/$(PLATFORM)
SERVER_UTILITY_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libserverUtility.so
$(SERVER_UTILITY_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_UTILITY_BUILD_PATH) debug

SERVER_DATABASE_BASE_PATH   =engine/server/library/serverDatabase
SERVER_DATABASE_PATH        =$(BOOTPRINT_SRC_PATH)/$(SERVER_DATABASE_BASE_PATH)
SERVER_DATABASE_INCLUDE_PATH	=$(SERVER_DATABASE_PATH)/include/public
SERVER_DATABASE_BUILD_PATH	=$(SERVER_DATABASE_PATH)/build/$(PLATFORM)
SERVER_DATABASE_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libserverDatabase.so
$(SERVER_DATABASE_DEBUG_LIB)_dep:
	+$(V)make -C $(SERVER_DATABASE_BUILD_PATH) debug

CLIENT_REMOTE_DEBUG_BASE_PATH   =engine/client/library/clientRemoteDebug
CLIENT_REMOTE_DEBUG_PATH        =$(BOOTPRINT_SRC_PATH)/$(CLIENT_REMOTE_DEBUG_BASE_PATH)
CLIENT_REMOTE_DEBUG_INCLUDE_PATH	=$(CLIENT_REMOTE_DEBUG_PATH)/include/public
CLIENT_REMOTE_DEBUG_BUILD_PATH	=$(CLIENT_REMOTE_DEBUG_PATH)/build/$(PLATFORM)
CLIENT_REMOTE_DEBUG_DEBUG_LIB		=$(SHARED_DEBUG_LIB_PATH )/debug/libclientRemoteDebug.so


# TODO: These really belong in game's defs.mak

SWG_SERVER_NETWORK_MESSAGES_BASE_PATH   =game/server/library/swgServerNetworkMessages
SWG_SERVER_NETWORK_MESSAGES_PATH        =$(BOOTPRINT_SRC_PATH)/$(SWG_SERVER_NETWORK_MESSAGES_BASE_PATH)
SWG_SERVER_NETWORK_MESSAGES_INCLUDE_PATH	  =$(SWG_SERVER_NETWORK_MESSAGES_PATH)/include/public
SWG_SERVER_NETWORK_MESSAGES_BUILD_PATH      =$(SWG_SERVER_NETWORK_MESSAGES_PATH)/build/$(PLATFORM)
SWG_SERVER_NETWORK_MESSAGES_DEBUG_LIB       	=$(SHARED_DEBUG_LIB_PATH)/libswgServerNetworkMessages.so
$(SWG_SERVER_NETWORK_MESSAGES_DEBUG_LIB)_dep:
	+$(V)make -C $(SWG_SERVER_NETWORK_MESSAGES_BUILD_PATH) debug

SWG_SHARED_NETWORK_MESSAGES_BASE_PATH    =game/shared/library/swgSharedNetworkMessages
SWG_SHARED_NETWORK_MESSAGES_PATH         =$(BOOTPRINT_SRC_PATH)/$(SWG_SHARED_NETWORK_MESSAGES_BASE_PATH)
SWG_SHARED_NETWORK_MESSAGES_INCLUDE_PATH =$(SWG_SHARED_NETWORK_MESSAGES_PATH)/include/public
SWG_SHARED_NETWORK_MESSAGES_BUILD_PATH   =$(SWG_SHARED_NETWORK_MESSAGES_PATH)/build/$(PLATFORM)
SWG_SHARED_NETWORK_MESSAGES_DEBUG_LIB    =$(SHARED_DEBUG_LIB_PATH)/libswgSharedNetworkMessages.so
$(SWG_SHARED_NETWORK_MESSAGES_DEBUG_LIB)_dep:
	+$(V)make -C $(SWG_SHARED_NETWORK_MESSAGES_BUILD_PATH) debug

SWG_SHARED_UTILITY_BASE_PATH       =game/shared/library/swgSharedUtility
SWG_SHARED_UTILITY_PATH        	   =$(BOOTPRINT_SRC_PATH)/$(SWG_SHARED_UTILITY_BASE_PATH)
SWG_SHARED_UTILITY_INCLUDE_PATH	   =$(SWG_SHARED_UTILITY_PATH)/include/public
SWG_SHARED_UTILITY_BUILD_PATH      =$(SWG_SHARED_UTILITY_PATH)/build/$(PLATFORM)
SWG_SHARED_UTILITY_DEBUG_LIB       =$(SHARED_DEBUG_LIB_PATH)/libswgSharedUtility.so
$(SWG_SHARED_UTILITY_DEBUG_LIB)_dep:
	+$(V)make -C $(SWG_SHARED_UTILITY_BUILD_PATH) debug


#external source tree defines

STL_BASE_PATH   =external/3rd/library/stlport453
STL_PATH        =$(BOOTPRINT_SRC_PATH)/$(STL_BASE_PATH)
STL_INCLUDE_PATH	= $(STL_PATH)/stlport
STL_LIB	= $(STL_PATH)/lib/libstlport_gcc.a
$(STL_LIB)_dep:
	make -C $(STL_PATH)/src -f gcc-linux.mak all_static

ZLIB_BASE_PATH   =external/3rd/library/zlib
ZLIB_PATH        =$(BOOTPRINT_SRC_PATH)/$(ZLIB_BASE_PATH)
ZLIB_INCLUDE_PATH	= $(ZLIB_PATH)/include
ZLIB_LIB	= $(ZLIB_PATH)/lib/linux/libz.a
$(ZLIB_LIB)_dep:
	@[ -f $(ZLIB_LIB) ] || echo "  [$(ZLIB_LIB)] is missing!"

BOOST_BASE_PATH = external/3rd/library/boost
BOOST_INCLUDE_PATH = $(BOOTPRINT_SRC_PATH)/$(BOOST_BASE_PATH)

PCRE_BASE_PATH       =external/3rd/library/pcre/4.1/linux
PCRE_PATH            =$(BOOTPRINT_SRC_PATH)/$(PCRE_BASE_PATH)
PCRE_INCLUDE_PATH    =$(PCRE_PATH)/include
PCRE_BUILD_PATH      =$(PCRE_PATH)/lib
PCRE_DEBUG_LIB       =$(PCRE_BUILD_PATH)/libpcre.a
$(PCRE_DEBUG_LIB)_dep:
	@[ -f $(PCRE_DEBUG_LIB) ] || @echo "  [$(PCRE_DEBUG_LIB)] is missing!"


SHARED_GAME_BASE_PATH   =engine/shared/library/sharedGame
SHARED_GAME_PATH        =$(BOOTPRINT_SRC_PATH)/$(SHARED_GAME_BASE_PATH)
SHARED_GAME_INCLUDE_PATH      = $(SHARED_GAME_PATH)/include/public
SHARED_GAME_BUILD_PATH        = $(SHARED_GAME_PATH)/build/$(PLATFORM)
SHARED_GAME_DEBUG_LIB         = $(SHARED_DEBUG_LIB_PATH)/libsharedGame.so
$(SHARED_GAME_DEBUG_LIB)_dep:
	+$(V)make -C $(SHARED_GAME_BUILD_PATH) debug

SHARED_NETWORK_BASE_PATH   =engine/shared/library/sharedNetwork
SHARED_NETWORK_PATH        =$(BOOTPRINT_SRC_PATH)/$(SHARED_NETWORK_BASE_PATH)
SHARED_NETWORK_INCLUDE_PATH      = $(SHARED_NETWORK_PATH)/include/public
SHARED_NETWORK_BUILD_PATH        = $(SHARED_NETWORK_PATH)/build/$(PLATFORM)
SHARED_NETWORK_DEBUG_LIB         = $(SHARED_DEBUG_LIB_PATH)/libsharedNetwork.so
$(SHARED_NETWORK_DEBUG_LIB)_dep:
	+$(V)make -C $(SHARED_NETWORK_BUILD_PATH) debug

SHARED_XML_BASE_PATH   =engine/shared/library/sharedXml
SHARED_XML_PATH        =$(BOOTPRINT_SRC_PATH)/$(SHARED_XML_BASE_PATH)
SHARED_XML_INCLUDE_PATH      = $(SHARED_XML_PATH)/include/public
SHARED_XML_BUILD_PATH        = $(SHARED_XML_PATH)/build/$(PLATFORM)
SHARED_XML_DEBUG_LIB         = $(SHARED_DEBUG_LIB_PATH)/libsharedXml.so
$(SHARED_XML_DEBUG_LIB)_dep:
	+$(V)make -C $(SHARED_XML_BUILD_PATH) debug

SESSIONAPI_BASE_PATH   =external/3rd/library/platform
SESSIONAPI_PATH        =$(BOOTPRINT_SRC_PATH)/$(SESSIONAPI_BASE_PATH)
SESSIONAPI_INCLUDE_PATH          = $(SESSIONAPI_PATH)/projects

UDPLIBRARY_BASE_PATH   =external/3rd/library/udplibrary
UDPLIBRARY_PATH        =$(BOOTPRINT_SRC_PATH)/$(UDPLIBRARY_BASE_PATH)
UDPLIBRARY_INCLUDE_PATH          = $(UDPLIBRARY_PATH)
UDPLIBRARY_BUILD_PATH            = $(UDPLIBRARY_PATH)
UDPLIBRARY_DEBUG_LIB             = $(UDPLIBRARY_PATH)/output/debug/libudplibrary.a
$(UDPLIBRARY_DEBUG_LIB)_dep:
	+$(V)make -C $(UDPLIBRARY_BUILD_PATH) debug
	+$(V)make -C $(UDPLIBRARY_BUILD_PATH) release

ARCHIVE_BASE_PATH   =external/ours/library/archive
ARCHIVE_PATH        =$(BOOTPRINT_SRC_PATH)/$(ARCHIVE_BASE_PATH)
ARCHIVE_INCLUDE_PATH =$(ARCHIVE_PATH)/include
ARCHIVE_BUILD_PATH	=$(ARCHIVE_PATH)/build/$(PLATFORM)
#ARCHIVE_DEBUG_LIB	=$(BOOTPRINT_LIB_PATH)/archive/debug/libourArchive.so
ARCHIVE_DEBUG_LIB	=$(BOOTPRINT_LIB_PATH)/archive/debug/libarchive.so
$(ARCHIVE_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(ARCHIVE_BUILD_PATH) debug

FILE_INTERFACE_BASE_PATH   =external/ours/library/fileInterface
FILE_INTERFACE_PATH        =$(BOOTPRINT_SRC_PATH)/$(FILE_INTERFACE_BASE_PATH)
FILE_INTERFACE_INCLUDE_PATH =$(FILE_INTERFACE_PATH)/include/public
FILE_INTERFACE_BUILD_PATH	=$(FILE_INTERFACE_PATH)/build/$(PLATFORM)
FILE_INTERFACE_DEBUG_LIB	=$(FILE_INTERFACE_BUILD_PATH)/output/debug/libfileInterface.so
$(FILE_INTERFACE_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(FILE_INTERFACE_BUILD_PATH) debug

UNICODE_ARCHIVE_BASE_PATH   =external/ours/library/unicodeArchive
UNICODE_ARCHIVE_PATH        =$(BOOTPRINT_SRC_PATH)/$(UNICODE_ARCHIVE_BASE_PATH)
UNICODE_ARCHIVE_INCLUDE_PATH    =$(UNICODE_ARCHIVE_PATH)/include/public
UNICODE_ARCHIVE_BUILD_PATH      =$(UNICODE_ARCHIVE_PATH)/build/$(PLATFORM)
UNICODE_ARCHIVE_DEBUG_LIB       =$(UNICODE_ARCHIVE_BUILD_PATH)/output/debug/libunicodeArchive.so
$(UNICODE_ARCHIVE_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(UNICODE_ARCHIVE_BUILD_PATH) debug

CRYPTO_BASE_PATH   	=external/ours/library/crypto
CRYPTO_PATH        	=$(BOOTPRINT_SRC_PATH)/$(CRYPTO_BASE_PATH)
CRYPTO_BUILD_PATH	=$(CRYPTO_PATH)/build/$(PLATFORM)
CRYPTO_DEBUG_LIB	=$(SHARED_DEBUG_LIB_PATH)/libcrypto.so
$(CRYPTO_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(CRYPTO_BUILD_PATH) debug

#./swg/current/src/external/ours/library/unicode/compile/linux/Debug/libunicode.a 

UNICODE_BASE_PATH   =external/ours/library/unicode
UNICODE_PATH        =$(BOOTPRINT_SRC_PATH)/$(UNICODE_BASE_PATH)
UNICODE_INCLUDE_PATH    =$(UNICODE_PATH)/include
UNICODE_BUILD_PATH	=$(UNICODE_PATH)/build/$(PLATFORM)
UNICODE_DEBUG_LIB	=$(UNICODE_PATH)/compile/linux/Debug/libunicode.so
$(UNICODE_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(UNICODE_BUILD_PATH) debug

LOCALIZATION_BASE_PATH   =external/ours/library/localization
LOCALIZATION_PATH        =$(BOOTPRINT_SRC_PATH)/$(LOCALIZATION_BASE_PATH)
LOCALIZATION_INCLUDE_PATH	=$(LOCALIZATION_PATH)/include
LOCALIZATION_BUILD_PATH	=$(LOCALIZATION_PATH)/build/$(PLATFORM)
LOCALIZATION_DEBUG_LIB		=$(LOCALIZATION_PATH)/compile/linux/Debug/liblocalization.so
$(LOCALIZATION_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(LOCALIZATION_BUILD_PATH) debug

LOCALIZATION_ARCHIVE_BASE_PATH   =external/ours/library/localizationArchive
LOCALIZATION_ARCHIVE_PATH        =$(BOOTPRINT_SRC_PATH)/$(LOCALIZATION_ARCHIVE_BASE_PATH)
LOCALIZATION_ARCHIVE_INCLUDE_PATH	=$(LOCALIZATION_ARCHIVE_PATH)/include/public
LOCALIZATION_ARCHIVE_BUILD_PATH         =$(LOCALIZATION_ARCHIVE_PATH)/build/$(PLATFORM)
LOCALIZATION_ARCHIVE_DEBUG_LIB          =$(LOCALIZATION_ARCHIVE_PATH)/compile/linux/Debug/liblocalizationArchive.so
$(LOCALIZATION_ARCHIVE_DEBUG_LIB)_dep:
	+$(V)make -j 1 -C $(LOCALIZATION_ARCHIVE_BUILD_PATH) debug

SESSIONAPI_BASE_PATH		=external/3rd/library/platform
SESSIONAPI_PATH			=$(BOOTPRINT_SRC_PATH)/$(SESSIONAPI_BASE_PATH)
SESSIONAPI_INCLUDE_PATH		=$(SESSIONAPI_PATH)/projects
LOGINAPI_DEBUG_LIB		=$(SESSIONAPI_PATH)/lib/debug/libLoginAPI.a
COMMONAPI_DEBUG_LIB		=$(SESSIONAPI_PATH)/lib/debug/libCommonAPI.a

$(LOGINAPI_DEBUG_LIB)_dep:
	make -C $(SESSIONAPI_PATH)/projects/Session/LoginAPI debug

$(COMMONAPI_DEBUG_LIB)_dep:
	make -C $(SESSIONAPI_PATH)/projects/Session/CommonAPI debug


MONAPI_BASE_PATH        =external/3rd/library/platform/MonAPI2
MONAPI_BUILD_PATH       =$(BOOTPRINT_SRC_PATH)/$(MONAPI_BASE_PATH)
MONAPI_DEBUG_PATH       =$(BOOTPRINT_SRC_PATH)/$(MONAPI_BASE_PATH)/lib
MONAPI_INCLUDE_PATH	=$(BOOTPRINT_SRC_PATH)/external/3rd/library/platform
MONAPI_DEBUG_LIB        =$(MONAPI_DEBUG_PATH)/libmonapi.a
$(MONAPI_DEBUG_LIB)_dep:
	+$(V)make -C $(MONAPI_BUILD_PATH) -f Makefile.oldBuildSystem debug


CHATAPI_BASE_PATH        =external/3rd/library/soePlatform/ChatAPI2/ChatAPI
CHATAPI_BUILD_PATH       =$(BOOTPRINT_SRC_PATH)/$(CHATAPI_BASE_PATH)/projects/Chat/ChatMono
CHATAPI_DEBUG_PATH       =$(BOOTPRINT_SRC_PATH)/$(CHATAPI_BASE_PATH)/lib/debug
CHATAPI_RELEASE_PATH     =$(BOOTPRINT_SRC_PATH)/$(CHATAPI_BASE_PATH)/lib/release
CHATAPI_INCLUDE_PATH_ONE =$(BOOTPRINT_SRC_PATH)/$(CHATAPI_BASE_PATH)/utils
CHATAPI_INCLUDE_PATH_TWO =$(BOOTPRINT_SRC_PATH)/$(CHATAPI_BASE_PATH)/projects/Chat
CHATAPI_DEBUG_LIB        =$(CHATAPI_DEBUG_PATH)/libChatAPI.a
$(CHATAPI_DEBUG_LIB)_dep:
	+$(V)make -C $(CHATAPI_BUILD_PATH) -f Makefile debug

CSASSIST_BASE_PATH        =external/3rd/library/soePlatform/CSAssist/projects/CSAssist/CSAssistgameapi
CSASSIST_BUILD_PATH       =$(BOOTPRINT_SRC_PATH)/$(CSASSIST_BASE_PATH)
CSASSIST_DEBUG_PATH       =$(BOOTPRINT_SRC_PATH)/$(CSASSIST_BASE_PATH)/debug
CSASSIST_RELEASE_PATH     =$(BOOTPRINT_SRC_PATH)/$(CSASSIST_BASE_PATH)/release
CSASSIST_INCLUDE_PATH     =$(BOOTPRINT_SRC_PATH)/$(CSASSIST_BASE_PATH)
CSASSIST_DEBUG_LIB        =$(CSASSIST_DEBUG_PATH)/libCSAssistgameapi.a
$(CSASSIST_DEBUG_LIB)_dep:
	+$(V)make -C $(CSASSIST_BUILD_PATH) debug


LIBBASE_BASE_PATH        =external/3rd/library/platform
LIBBASE_BUILD_PATH       =$(BOOTPRINT_SRC_PATH)/$(LIBBASE_BASE_PATH)/utils/Base/linux
LIBBASE_DEBUG_PATH       =$(BOOTPRINT_SRC_PATH)/$(LIBBASE_BASE_PATH)/lib/debug
LIBBASE_RELEASE_PATH     =$(BOOTPRINT_SRC_PATH)/$(LIBBASE_BASE_PATH)/lib/release
LIBBASE_INCLUDE_PATH_1   =$(BOOTPRINT_SRC_PATH)/$(LIBBASE_BASE_PATH)/Base/linux
LIBBASE_INCLUDE_PATH_2   =$(BOOTPRINT_SRC_PATH)/$(LIBBASE_BASE_PATH)/Base
LIBBASE_DEBUG_LIB        =$(LIBBASE_DEBUG_PATH)/libBase_MT.a
$(LIBBASE_DEBUG_LIB)_dep:
	+$(V)$(MAKE) -C $(LIBBASE_BUILD_PATH) debug_mt


#######################################################################
# Common library variables

COMMON_ENGINE_LIBRARY_INCLUDES = \
	$(DEBUG_INCLUDE_PATH) 			\
	$(FOUNDATION_INCLUDE_PATH) 		\
	$(FOUNDATION_TYPES_INCLUDE_PATH) 	\
	$(MEMORY_MANAGER_INCLUDE_PATH) 		\
	$(OBJECT_INCLUDE_PATH) 			\
	$(ARCHIVE_INCLUDE_PATH) 		\
	$(LOCALIZATION_INCLUDE_PATH) 		\
	$(LOCALIZATION_ARCHIVE_INCLUDE_PATH) 	\
	$(UNICODE_INCLUDE_PATH) 		\
	$(UNICODE_ARCHIVE_INCLUDE_PATH) 	\
	$(STL_INCLUDE_PATH) 			\
	$(ZLIB_INCLUDE_PATH) 			\
	$(SHARED_GAME_INCLUDE_PATH)		\
	$(SHARED_XML_INCLUDE_PATH)


#######################################################################
# Common application variables

COMMON_ENGINE_INCLUDES = \
	$(COMPRESSION_INCLUDE_PATH) \
	$(LIBBASE_INCLUDE_PATH_1) \
	$(LIBBASE_INCLUDE_PATH_2) \
	$(CRYPTO_PATH) \
	$(DEBUG_INCLUDE_PATH) \
	$(FILE_INCLUDE_PATH) \
	$(FILE_INTERFACE_INCLUDE_PATH) \
	$(FOUNDATION_INCLUDE_PATH) \
	$(FOUNDATION_TYPES_INCLUDE_PATH) \
	$(ARCHIVE_INCLUDE_PATH) \
	$(IMAGE_INCLUDE_PATH) \
	$(MATH_INCLUDE_PATH) \
	$(MATH_ARCHIVE_INCLUDE_PATH) \
	$(OBJECT_INCLUDE_PATH) \
	$(UNICODE_INCLUDE_PATH) \
	$(UNICODE_ARCHIVE_INCLUDE_PATH) \
	$(MEMORY_MANAGER_INCLUDE_PATH) \
	$(MESSAGE_DISPATCH_INCLUDE_PATH) \
	$(NETWORK_MESSAGES_INCLUDE_PATH) \
	$(OBJECT_INCLUDE_PATH) \
	$(SKILL_SYSTEM_INCLUDE_PATH) \
	$(PATHFINDING_INCLUDE_PATH) \
	$(RANDOM_INCLUDE_PATH) \
	$(SYNCHRONIZATION_INCLUDE_PATH) \
	$(THREAD_INCLUDE_PATH) \
	$(UTILITY_INCLUDE_PATH) \
	$(SERVER_KEYSHARE_INCLUDE_PATH) \
	$(SERVER_METRICS_INCLUDE_PATH) \
	$(SERVER_NETWORK_MESSAGES_INCLUDE_PATH) \
	$(SERVER_UTILITY_INCLUDE_PATH) \
	$(SHARED_NETWORK_INCLUDE_PATH) \
	$(SHARED_XML_INCLUDE_PATH) \
	$(LIBXML_INCLUDE_PATH) \
	$(STL_INCLUDE_PATH) \
	$(ZLIB_INCLUDE_PATH) \
	$(LOCALIZATION_INCLUDE_PATH) \
	$(LOCALIZATION_ARCHIVE_INCLUDE_PATH) \
	$(LOG_INCLUDE_PATH) \
	../../../../../../external/ours/library/singleton/include


ifeq ($(BULLSEYE_BUILD),)
COMMON_ENGINE_DEBUG_LIBS = 		\
	$(UDPLIBRARY_DEBUG_LIB) 	\
	$(COMMONAPI_DEBUG_LIB)		\
	$(LOGINAPI_DEBUG_LIB)		\
	$(LIBBASE_DEBUG_LIB)
else
COMMON_ENGINE_DEBUG_LIBS = 		\
	$(UDPLIBRARY_DEBUG_LIB) 	\
	$(COMMONAPI_DEBUG_LIB)		\
	$(LOGINAPI_DEBUG_LIB)		\
	$(LIBBASE_DEBUG_LIB)		\
	$(BULLSEYE_LIB)			
endif

COMMON_ENGINE_SHARED_DEBUG_LIBS= \
	$(COLLISION_DEBUG_LIB)          \
	$(OBJECT_DEBUG_LIB)             \
	$(TERRAIN_DEBUG_LIB)            \
	$(ARCHIVE_DEBUG_LIB)            \
	$(CRYPTO_DEBUG_LIB)             \
	$(COMPRESSION_DEBUG_LIB)        \
	$(DEBUG_DEBUG_LIB)              \
	$(FILE_DEBUG_LIB)               \
	$(FILE_INTERFACE_DEBUG_LIB)     \
	$(FRACTAL_DEBUG_LIB)            \
	$(FOUNDATION_DEBUG_LIB)         \
	$(IMAGE_DEBUG_LIB)              \
	$(LOCALIZATION_DEBUG_LIB)        \
	$(LOCALIZATION_ARCHIVE_DEBUG_LIB) \
	$(LOG_DEBUG_LIB)                \
	$(MATH_DEBUG_LIB)               \
	$(MESSAGE_DISPATCH_DEBUG_LIB)   \
	$(RANDOM_DEBUG_LIB)             \
	$(SHARED_NETWORK_DEBUG_LIB)     \
	$(SHARED_XML_DEBUG_LIB)         \
	$(LIBXML_LIB)                   \
	$(SERVER_KEYSHARE_DEBUG_LIB)    \
	$(SERVER_METRICS_DEBUG_LIB)     \
	$(NETWORK_MESSAGES_DEBUG_LIB)   \
	$(SERVER_NETWORK_MESSAGES_DEBUG_LIB) \
	$(SERVER_UTILITY_DEBUG_LIB)     \
	$(SYNCHRONIZATION_DEBUG_LIB)    \
	$(THREAD_DEBUG_LIB)             \
	$(UNICODE_DEBUG_LIB)            \
	$(UTILITY_DEBUG_LIB)            \
	$(UNICODE_ARCHIVE_DEBUG_LIB)    \
	$(MEMORY_MANAGER_DEBUG_LIB)     \

# empty targets, can oan be overriden by specific project makefiles

debug_custom_step:

release_custom_step:

depend_custom_step:

custom_clean_step:

