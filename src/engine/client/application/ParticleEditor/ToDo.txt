* General Tips *

- Submit bugs about coding standards.
- Make sure all the STL stuff is forward declared.
- Check all UNREFs, possibly remove them or the function argument if you will never use the variable
- Change asserts to FATAL_DEBUG (Lint catches and bitch at asserts())
- Check all copy constructors and assignment operators.
- Check explicit constructors, which only make sense on single parameter constructors (Lint catches this)
- Change all (foo == false && foo == true) to (!foo && foo) (Lint catches this)
- Learn to type faster!!!
- Profile
- o2c = transform.multiply(w2c, o2w);
- Replace OutputDebugString() with proper REPORT calls.
- Verify all load routines for proper handling of errors. Make sure and handle bad data without stopping the game.


* List from TestTrack 3.14.2003 *

- No way to rotate meshes or shader sprites, flip/mirror/etc
- No way to turn off emitters for debugging
- Add degrees of rotation as well as the current number of rotations
- Save out emitter as an emitter file
- Ctrl-right mouse button copy and paste emitters into the emitter group
- Assign texture to predefined shaders
- Attach multiple particles to one emitter
- Once an emitter is imported, it should cease to reference a particle file from disk nd become an editable instance.
- Middle mouse button should scroll instead of the right mouse button. Should be consistent with the viewer.
- Move emitter or emitter groups with the mouse in the viewport.

* Things to Do *

Current Punch List:

- Add fog color.
- Compile out std::string names in release build from waveform and all descriptions.
- Allow more than one attachment per particle
- Remind artists to pack textures
- Particle system fields.
	- Uniform
	- Gravity
	- Turbulence
	- Flocking
- Put ParticleEmitter::remove_if() in a namespace.

- XYZ translation to particle systems.
- Save a particle system location file so each time a particle system is loaded it places it in the same place. The camera should also snap to that new location in the world.
- Ability to attach multiple particles to a single emitter.
- Add DOT3 lighting support for particles.
- Add texture rotation, flip, and mirror.
- Grab and drag line connecting 2 control points.
- Ability to toggle visibility of emitters in the editor only.
- Allow degree rotation of emitters.
- Export/Import emitter files.
- Allow copy/paste emitters into emitter groups.
- Predefined texture shaders.
- Movement of particle effects with the mouse in the editor.
- Particle system timeline.
- Allow more than one emitter groups per particle system.

-------- High Priority --------

- Allow functionality to hook into the camera distance of a particle
- Allow mutliple particle textures to be drawn on the same particle.
- Check out QDir.
- Add session management for save on exit (http://doc.trolltech.com/3.0/session.html).
- Add QSplitter to the particle editor (override it?).
- Check out QWidgetStack (override it?) for displaying in the PEAttributeViewer.
- Allow pre-simulation of particle effects before they are rendered.
- Rename all Particle Editor files with PEWaveFormEdit.cpp for example.
- Cleanup all load functions like ParticleDescription. Data should not crash the game.
- Make sure there is adequate documentation.
- Add more tool tips.
- When a loop occurs, make sure and handle the overage by incrementing the next loop, or skip whole loops if a large
  enough delta time has occured.
- Add more DataLint code in load functions to check for bad data.
- Point sprites.
- Track down these memory leaks. See if they happen on the client or is it just in the particle editor?
    D:\_code\swg\current\src\engine\client\library\clientParticle\src\shared\ParticleDescription.cpp(57) : 093903E0 memory leak, 236 bytes
    D:\_code\swg\current\src\engine\client\library\clientParticle\src\shared\ParticleEmitterShape.cpp(29) : 093904F0 memory leak, 4 bytes
- Allow multiple emitter groups in the same particle effect.
- Again, why is maxParticles a float? rethink it, change it to an int.
- Add save confimation when overwrite and program exit.
- Allow min and max emitter lifetime specification.
- Rename this file to ParticleEditorToDo.txt
- Show the full path to the particle effect. Requires adding a ParticleEffectAttribute.ui and have Filename path displays similar to the ones for the shader.
- Fix the crash when too many vertices are submitted inside the ParticleEmitter::draw(). Allow max particles to be increased.
- Add a timer to MainWindow to check the positions of the child windows for bogus values, like if you resize the editor to make a window not visible, slam the window to (0, 0), add this to the sound editor.
- Allow particles to be a cross mesh of polygons, user-definable number of intersecting polygons.
- Generation Rate should not be allowed to go negative.
- Allow toggling of individual emitters/emitter groups, reference PhotoShop layer widget.

-------- Medium Priority --------

- Check detection of one shot/loop immediately.
- Don't draw alpha zero particles if possible. Need to move test outside of draw loop.
- Allow particles to die when below the terrain.
- Save out colorramps and waveforms. Have a viewer in the particle editor to select them from.
- Collision planes.
- Allow you to move the edges between the control points to move both attached control points
- Prefix Particle on all the Particle related class names for easier searching.
- Handle large deltas. Make sure the particles do not appear at far distances due to large deltas.
- Allow emitter group naming.
- Get ideas about adding rules from that new book you bought. Take some notes.
- Fix the problem that when a new waveform is loaded, the clamp min/max values get whacked. The partiche alpha waveform shows this problem.
- Allow movement of the emission normal from the surface of the shape.
- Reverse Min and Max.
- In BoxExtent change calculateCenterAndRadius() to calculateSphere()
- Add default static member variables for all descriptions.
- Make sure emitter rotations are emitters space relative, not world space relative.
- Make sure you are killing particles that go over their lifetime.
- Maybe make an optimization of checking for rotation by checking all the rotation control points ahead of time.
- Add emitter lifetime meter somewhere???
- Fix the color ramp getValue(), current method is slow. Add version that takes an iter as a hint of where to start.
- Allow selection and movement of multiple control points.
- Make sure you are not calculating emitter values inside inner loops processing particles.
- Move some of the things like parent transform from ParticleEmitter to ParticleAppearance, and just get it through parent->getTransform() or something
- Allow WaveForms to be mirred and flipped.

-------- Low Priority --------

- Add a bias to the random timing (Ask Jake for specification)
- Draw the letters x, y, and z on the axis.
- Maybe have a particle description base class with write(Iff &iff);
- Allow the specification of XYZ dimensions on the 3D shapes.

* Meeting hot list *

- Change the camera enum in scene->getView(int view) to the proper enum in groundScene.h
- Why is the enums in GroundScene private when they are needed to pass into getView()?

* QT Complaints *

- Why is Alt-O not an accelerator to the OK button in text edit and check box naming, but it is in text label naming?
- Why does escape not back out of the Text Label "Edit Text" option?
- Why can't I set the default selected item in a combo-box using the designer?
- Why do getOpenFileName() and getOpenFileNames() have their initial two parameters switched?
- Why are spaces allowed in front and behind any numbers in QLineEdit when a QIntValidator is assigned, spaces should not be allowed?
- Why are spaces allowed in ONLY front of any numbers in QLineEdit when a QDoubleValidator is assigned, spaces should not be allowed?
- I would like to connect a signal of when a widget has a focus change. When it loses, gains, whatever. Currently all I can do to get focus changes is wrap the widget I care about and override the virtual protected member function. In other words, provide more signals instead of the protected virtual functions in the QWidget class.
- Why can't I multi-open .ui files.
- Allow the specification of validators on text edits in Qt Designer.
- When using Qt Designeer, it is not obvious how to rename a MenuItem on a toolbar. Not renaming the displayed text, but renaming the name in the property window that is your object name in code. BTW, I think the problem is there is no property window for MenuItems, it always pulls up properties for the MenuBar.
 
* Possible changes to the programming standard *
 
- Just Copyright with no year. You can get the year in Perforce.
