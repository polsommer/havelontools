// ======================================================================
//
// Graphics.def
// jeff grills
//
// copyright 1999 Bootprint Entertainment
//
// ======================================================================

#ifndef INCLUDED_Graphics_DEF
#define INCLUDED_Graphics_DEF

// ======================================================================

typedef unsigned short Index;

enum GlFillMode
{
	GFM_wire,
	GFM_solid
};

enum GlCullMode
{
	GCM_none,
	GCM_clockwise,
	GCM_counterClockwise
};

enum GlScreenShotFormat
{
	GSSF_tga,
	GSSF_bmp,
	GSSF_jpg
};

struct Gl_metrics
{
	enum
	{
		MAX_PASSES = 4
	};

	// draw statistics
	int    vertices;
	int    indices;
	int    points;
	int    lines;
	int    triangles;
	int    drawPrimitiveCalls;
	int    drawIndexedPrimitiveCalls;
	int    perPassDrawPrimitiveCalls[MAX_PASSES];
	int    perPassDrawIndexedPrimitiveCalls[MAX_PASSES];
	int    perPassTriangles[MAX_PASSES];

	// texture statistics
	int    setTextureCalls;
	int    setTextureCacheMisses;
	int    setTextureUniqueTextures;
	int    textureMemoryTotal;
	int    textureMemoryUsed;
	int    textureMemoryCreated;
	int    textureMemoryDestroyed;
	int    textureMemoryModified;

	// vertex buffer statistics
	int    setVertexDeclarationCacheMisses;
	int    setVertexDeclarationCalls;
	int    setVertexBufferCalls;
	int    setVertexBufferUniqueVertexBuffers;
	int    setStreamSourceCalls;
	int    setStreamSourceCacheMisses;
	int    vertexBufferMemoryTotal;
	int    vertexBufferMemoryUsed;
	int    vertexBufferMemoryCreated;
	int    vertexBufferMemoryDestroyed;
	int    vertexBufferMemoryModified;
	int    vertexBufferMemoryDynamic;

	// index buffer statistics
	int    setIndexBufferCalls;
	int    setIndexBufferUniqueIndexBuffers;
	int    setIndexBufferCacheMisses;
	int    indexBufferMemoryTotal;
	int    indexBufferMemoryUsed;
	int    indexBufferMemoryCreated;
	int    indexBufferMemoryDestroyed;
	int    indexBufferMemoryModified;
	int    indexBufferMemoryDynamic;

	// misc stats
	int    setViewportCalls;
	int    setTransformCalls;
	int    setMaterialCalls;
	int    setRenderStateCalls;
	int    setRenderStateCacheMisses;
	int    setSamplerStateCalls;
	int    setSamplerStateCacheMisses;
	int    setTextureStageStateCalls;
	int    setTextureStageStateCacheMisses;
	int    setVertexShaderCalls;
	int    setVertexShaderCacheMisses;
};

struct GlMatrix4x4
{
	float matrix[4][4];
};

// Currently maps to DX9 D3DXIMAGE_FILEFORMAT 

enum Gl_imageFormat
{
    GLIF_bmp,
    GLIF_jpg,
    GLIF_tga,
    GLIF_png,
    GLIF_dds,
    GLIF_ppm,
    GLIF_dib,
    GLIF_hdr,
    GLIF_pfm
};

struct Gl_pixelRect
{
	void    *pixels;
	unsigned pitch; // y-stride
	unsigned colorBits;
	unsigned alphaBits;
};

struct Gl_rect
{
	int x0, y0, x1, y1;
};

// ======================================================================

#endif
