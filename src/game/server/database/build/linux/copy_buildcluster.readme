Function: Copies build cluster data and underlying schema structure to a user schema of your choice

Reason for existence: 

Copying data from the build cluster is not possible if the underlying schema structures
between source and destination schemas is different. So when someone wants the build
cluster data but there schema has changed or visa versa, they can't get it and
DBA intervention is required. This tools automates the DBA processes
and copies the entire schema structure data and all.

Requirements:

Needs oracle client with import and export utilities (verifying this is installed)
Perl Bash/Cygwin bash
User schema must have EXP_FULL_DATABASE and IMP_FULL_DATABASE permissions (they all do now on swodb)

Location:

on current in ../src/game/server/database/build/linux
and this utility must be run from this directory

Usage: 

The following line will perform the whole process:

make copy_buildcluster

OR

perl copy_buildcluster.pl --copybuildcluster --username=testuser --password=changeme --service=swodb

There are other options available (see below) but they are just the
individual steps and the casual DB user should never have to use them

$ perl copy_buildcluster.pl
Usage: copy_buildcluster.pl [COMMAND] [OPTION]...
Copy buildcluster using Oracle export/import.

******************* WARNING *******************.
* This utility will delete all existing user  *
*            objects in your schema           *
***********************************************.

Commands:
  --copybuildcluster    Perform complete buildcluster copy to user schema.
  --exportbuildcluster  Export buildcluster to file using direct path.
  --importbuildcluster  Import buildcluster from file using direct path.
  --createtypes         Recreate oracle typedefs.
  --wipeschema          Delete all objects from users schema.
  --recompilepackages   Recompile user database packages.
  --help                Display these options.

Options:
  --username=NAME       Specify the database user name. (Defaults to $USER.)
  --password=PASSWORD   Specify the database password.  (Defaults to "changeme".)
  --service=NAME        Specify the database service name.  (Defaults to "swodb".)

NOTES:

Just running this utility will not guarantee you a server that runs.
Once the tool has exited successfully, you must sync your code to the revision you wish to test on and run database_update.pl --delta.
If the delta between the build cluster DB version and your codes DB version is large, there is still a potential for problems.
In this case, please contact one of the SWG DB guys.


