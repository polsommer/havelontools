include library.chat;
include library.prose;
include library.utils;

const string[] MUSIC_NAMES					= {"starwars1",
											   "rock",
											   "starwars2",
											   "folk",
											   "starwars3",
											   "ceremonial",
											   "ballad",
											   "waltz",
											   "jazz",
											   "virtuoso"};

const string[] DANCE_NAMES					= {"basic",
											   "rhythmic",
											   "basic2",
											   "rhythmic2",
											   "footloose",
											   "formal",
											   "footloose2",
											   "formal2",
											   "popular",
											   "poplock",
											   "popular2",
											   "poplock2",
											   "lyrical",
											   "exotic",
											   "exotic2",
											   "lyrical2",
											   "exotic3",
											   "exotic4"};

const string PERFORMANCE_OBJVAR				= "quest.crowd_pleaser.performance";
const string PLAYER_OBJVAR					= PERFORMANCE_OBJVAR + ".player";
const string CONTROL_OBJVAR					= PERFORMANCE_OBJVAR + ".control";
const string RATING_OBJVAR					= PERFORMANCE_OBJVAR + ".ratings";
const string CHAT_OBJVAR					= PERFORMANCE_OBJVAR + ".chat";
const string STYLE_OBJVAR					= PERFORMANCE_OBJVAR + ".style";
const string AUDITION_OBJVAR				= "quest.crowd_pleaser.audition";
const string TYPE_OBJVAR					= AUDITION_OBJVAR + ".type";

trigger OnAttach() {

	attachScript(self, "npc.converse.npc_converse_menu");

	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation(obj_id speaker) {

	string phrase = utils.getStringScriptVar(self, CHAT_OBJVAR);
	string_id msg = new string_id("quest/crowd_pleaser/audience", phrase);

	if(utils.hasScriptVar(self, STYLE_OBJVAR)) {

		string style = utils.getStringScriptVar(self, STYLE_OBJVAR);

		if(!Character.isDigit(style.charAt(0)))
			style = parseName(style);

		prose_package pp = prose.getPackage(msg, style);

		chat.chat(self, speaker, null, null, chat.ChatFlag_targetOnly, pp);

	} else {

		chat.chat(self, speaker, msg, chat.ChatFlag_targetOnly);
	}

	return SCRIPT_CONTINUE;

}

messageHandler handleSetup() {

	int chance = rand(1, 100);

	obj_id control = params.getObjId("control");

	if(!isIdValid(control))
		return SCRIPT_CONTINUE;

	if(chance > 40) {

		int n = rand(0, 40);

		utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

		return SCRIPT_CONTINUE;
	}

	string type = utils.getStringScriptVar(control, TYPE_OBJVAR);

	resizeable string[] choices = new string[0];

	if(type == null || type.equals(""))
		type = "dance";

	if(chance > 10) {

		if(chance > 25) {

			if(type.equals("music")) {

				int m = rand(0, 5);

				utils.setScriptVar(self, CHAT_OBJVAR, "positive_" + m + "_m");

				for(int i = 0; i < MUSIC_NAMES.length; i++) {

					if(utils.hasScriptVar(control, RATING_OBJVAR + "." + MUSIC_NAMES[i])) {

						int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + MUSIC_NAMES[i]);

						if(rating > 0)
							choices = utils.addElement(choices, MUSIC_NAMES[i]);
					}
				}

				if(choices.length == 0) {

					int n = rand(0, 40);

					utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

					return SCRIPT_CONTINUE;
				}

				int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);

			} else {

				int d = rand(0, 5);

				utils.setScriptVar(self, CHAT_OBJVAR, "positive_" + d + "_d");

				for(int i = 0; i < MUSIC_NAMES.length; i++) {

					if(utils.hasScriptVar(control, RATING_OBJVAR + "." + DANCE_NAMES[i])) {

						int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + DANCE_NAMES[i]);

						if(rating > 0)
							choices = utils.addElement(choices, DANCE_NAMES[i]);
					}
				}

				if(choices.length == 0) {

					int n = rand(0, 40);

					utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

					return SCRIPT_CONTINUE;
				}

				int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);
			}

		} else {

			int f = rand(0, 5);

			utils.setScriptVar(self, CHAT_OBJVAR, "positive_" + f + "_f");

			for(int i = 1; i <= 8; i++) {

				if(utils.hasScriptVar(control, RATING_OBJVAR + "." + i)) {

					int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + i);

					if(rating > 0)
						choices = utils.addElement(choices, Integer.toString(i));
				}
			}

			if(choices.length == 0) {

				int n = rand(0, 40);

				utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

				return SCRIPT_CONTINUE;
			}

			int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);
		}

	} else {

		if(chance > 5) {

			if(type.equals("music")) {

				int m = rand(0, 5);

				utils.setScriptVar(self, CHAT_OBJVAR, "negative_" + m + "_m");

				for(int i = 0; i < MUSIC_NAMES.length; i++) {

					if(utils.hasScriptVar(control, RATING_OBJVAR + "." + MUSIC_NAMES[i])) {

						int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + MUSIC_NAMES[i]);

						if(rating < 0)
							choices = utils.addElement(choices, MUSIC_NAMES[i]);
					}
				}

				if(choices.length == 0) {

					int n = rand(0, 40);

					utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

					return SCRIPT_CONTINUE;
				}

				int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);

			} else {

				int d = rand(0, 5);

				utils.setScriptVar(self, CHAT_OBJVAR, "negative_" + d + "_d");

				for(int i = 0; i < MUSIC_NAMES.length; i++) {

					if(utils.hasScriptVar(control, RATING_OBJVAR + "." + DANCE_NAMES[i])) {

						int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + DANCE_NAMES[i]);

						if(rating < 0)
							choices = utils.addElement(choices, DANCE_NAMES[i]);
					}
				}

				if(choices.length == 0) {

					int n = rand(0, 40);

					utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

					return SCRIPT_CONTINUE;
				}

				int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);
			}

		} else {

			int f = rand(0, 5);

			utils.setScriptVar(self, CHAT_OBJVAR, "negative_" + f + "_f");

			for(int i = 1; i <= 8; i++) {

				if(utils.hasScriptVar(control, RATING_OBJVAR + "." + i)) {

					int rating = utils.getIntScriptVar(control, RATING_OBJVAR + "." + i);

					if(rating < 0)
						choices = utils.addElement(choices, Integer.toString(i));
				}
			}

			if(choices.length == 0) {

				int n = rand(0, 40);

				utils.setScriptVar(self, CHAT_OBJVAR, "neutral_" + n);

				return SCRIPT_CONTINUE;
			}

			int r = rand(0, (choices.length-1));

				utils.setScriptVar(self, STYLE_OBJVAR, choices[r]);
		}

	}

	return SCRIPT_CONTINUE;
}

string parseName(string name) {

	if(Character.isDigit(name.charAt(name.length() - 1)))
		name = name.substring(0, (name.length() - 1)) + " " + name.substring(name.length() - 1);

	name = name.substring(0,1).toUpperCase() + name.substring(1).toLowerCase();

	return name;
}