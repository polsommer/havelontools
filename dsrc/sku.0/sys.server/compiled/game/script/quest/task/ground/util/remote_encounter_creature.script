// =====================================================================
//
// remote_encounter_creature.script
// copyright, Sony Online Entertainment
//
// =====================================================================

// This script goes on a creature spawned by the remote encounter quest task type.
// It messages the player when the creature is killed.

// ---------------------------------------------------------------------

include base.remote_object;
include library.groundquests;
include library.utils;
include quest.task.ground.remote_encounter;

// ---------------------------------------------------------------------

const boolean LOGS_ENABLED = false;
const String REC = "RemoteEncounterCreature";

// ---------------------------------------------------------------------

trigger OnAttach()
{
	log("OnAttach");

	if (utils.hasScriptVar(self, remote_object.REQUESTER) && utils.hasScriptVar(self, remote_object.CREATE_PARAMS))
	{
		obj_id requester = utils.getObjIdScriptVar(self, remote_object.REQUESTER);

		dictionary createParams = utils.getDictionaryScriptVar(self, remote_object.CREATE_PARAMS);

		int questCrc = createParams.getInt(remote_encounter.QUEST_CRC);
		int taskId = createParams.getInt(remote_encounter.TASK_ID);

		int encounterDuration = groundquests.getTaskIntDataEntry(questCrc, taskId,
			remote_encounter.dataTableColumnEncounterDuration);

		messageTo(self, remote_encounter.REMOTE_ENCOUNTER_ESCAPE, null, encounterDuration, false);

		log("Chief Rock: Ship's current recharge rate is " + getShipShieldRechargeRate(self) + " Setting it to one hojillion");
		setShipShieldRechargeRate (self, 1000000000f);

	}
	else
	{
		//-- big trouble
		LOG(REC, "Error: Missing required script vars.");
		destroyObject(self);
	}

	return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------

messageHandler objectDestroyed()
{
	log("objectDestroyed");

	if (utils.hasScriptVar(self, remote_object.REQUESTER) && utils.hasScriptVar(self, remote_object.CREATE_PARAMS))
	{
		obj_id requester = utils.getObjIdScriptVar(self, remote_object.REQUESTER);

		dictionary createParams = utils.getDictionaryScriptVar(self, remote_object.CREATE_PARAMS);

		messageTo(requester, remote_encounter.REMOTE_ENCOUNTER_CREATURE_DIED, createParams, 0, false);
	}

    return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------

messageHandler remoteEncounterCleanup()
{
	log("remoteEncounterCleanup");

	destroyObject(self);

    return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------

messageHandler remoteEncounterEscape()
{
	log("remoteEncounterEscape");

	if (utils.hasScriptVar(self, remote_object.REQUESTER) && utils.hasScriptVar(self, remote_object.CREATE_PARAMS))
	{
		obj_id requester = utils.getObjIdScriptVar(self, remote_object.REQUESTER);

		dictionary createParams = utils.getDictionaryScriptVar(self, remote_object.CREATE_PARAMS);

		messageTo(requester, remote_encounter.REMOTE_ENCOUNTER_CREATURE_ESCAPED, createParams, 0, false);
	}

	destroyObjectHyperspace(self);

    return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------

messageHandler remoteEncounterSignaled()
{
	log("remoteEncounterSignaled");

	//-- make me vulnerable (this should be handled in a subclass to be more generic)
	log("Chief Rock: Ship's current recharge rate is " + getShipShieldRechargeRate(self) + " Setting it to much less");
	setShipShieldRechargeRate (self, 1.0f);
	return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------

void log(String text)
{
	if (LOGS_ENABLED)
	{
		LOG(REC, text);
	}
}

// ---------------------------------------------------------------------

void dumpScriptVars(obj_id self)
{
	obj_id requester = utils.getObjIdScriptVar(self, remote_object.REQUESTER);
	dictionary createParams = utils.getDictionaryScriptVar(self, remote_object.CREATE_PARAMS);

	log("REQUESTER: " + requester);
	log("CREATE_PARAMS: " + createParams.toString());
}

// =====================================================================
