/***** INCLUDES ********************************************************/

include library.groundquests;
include library.sui;
include library.utils;

/***** INHERITS ********************************************************/


/***** CONSTANTS *******************************************************/

const string_id	RADIAL_INSPECT  = new string_id ("quest/ground/util/quest_giver_object", "radial_inspect");
const string_id OFFER_QUEST_MSG	= new string_id	("quest/ground/util/quest_giver_object", "offer_quest");
const string_id SUI_TITLE		= new string_id ("quest/ground/util/quest_giver_object", "sui_title");
const string_id BUTTON_DECLINE  = new string_id ("quest/ground/util/quest_giver_object", "button_decline");
const string_id BUTTON_ACCEPT	= new string_id ("quest/ground/util/quest_giver_object", "button_accept");

const string_id ALREADY_COMPLETED_QUEST	= new string_id ("quest/ground/util/quest_giver_object", "already_completed_quest");
const string_id ALREADY_HAS_QUEST		= new string_id ("quest/ground/util/quest_giver_object", "already_has_quest");
const string_id DECLINED_QUEST			= new string_id ("quest/ground/util/quest_giver_object", "declined_quest");
const string_id OBJECT_UPLOADED			= new string_id ("quest/ground/util/quest_giver_object", "object_uploaded");

const string_id IMPERIAL_FACTION_REQ	= new string_id ("quest/ground/util/quest_giver_object", "imperial_faction_required");
const string_id REBEL_FACTION_REQ		= new string_id ("quest/ground/util/quest_giver_object", "rebel_faction_required");

const string QUEST_NAME_OBJVAR		= "questGiver.questName";
const string QUEST_IS_REPEATABLE	= "questGiver.questRepeatable";
const string NO_DELETE_OBJVAR		= "questGiver.noDelete";
const string OFFER_TEXT_OBJVAR		= "questGiver.offerText";
const string IMPERIAL_ONLY_OBJVAR	= "questGiver.imperialOnly";
const string REBEL_ONLY_OBJVAR		= "questGiver.rebelOnly";

/***** TRIGGERS ********************************************************/

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (groundquests.isQuestActive (player, "som_kenobi_hidden_treasure_2") || groundquests.hasCompletedQuest (player, "som_kenobi_hidden_treasure_2"))

	return SCRIPT_OVERRIDE;

	else if ( hasObjVar(self, QUEST_NAME_OBJVAR) )
	{
		string questName = getStringObjVar(self, QUEST_NAME_OBJVAR);
		if ( isGod(player) )
		{
			sendSystemMessageTestingOnly(player, "GODMODE MSG: quest name provided with questGiver.questName objvar is invalid.");
		}
	}
	return SCRIPT_CONTINUE;
}

