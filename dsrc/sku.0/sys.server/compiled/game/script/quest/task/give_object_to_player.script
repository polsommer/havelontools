include library.create;
include library.locations;
include library.quests;
include library.utils;

trigger OnQuestActivated(int questRow)
{
	LOG("newquests", "give_object_to_player - OnQuestActivated(+ " + questRow + ")");

	// determine if the trigger is related to this particular script
	// more than one task script may be attached to the player
	if(quests.isMyQuest(questRow, "quest.task.give_object_to_player"))
	{

		// get the name of the quest from the quests data table
		String questName = quests.getDataEntry(questRow, "NAME");

		if (questName != null)
		{
			String attachedScriptName;
			String parameterObjVarName = "quest." + questName + ".parameter";
			if(hasObjVar(self, parameterObjVarName))
			{
				attachedScriptName = getStringObjVar(self, parameterObjVarName);
			}
			else
			{
				attachedScriptName = quests.getDataEntry(questRow, "PARAMETER");
			}

			String templateName;
			String targetObjVarName = "quest." + questName + ".target";
			if(hasObjVar(self, targetObjVarName))
			{
				templateName = getStringObjVar(self, targetObjVarName);
			}
			else
			{
				templateName = quests.getDataEntry(questRow, "TARGET");
			}

			LOG("newquests", "give_object_to_player - questName = " + questName + " templateName = " + templateName + " attachedScriptName = " + attachedScriptName);

			boolean success = true;
			obj_id createdObject = createObjectInInventoryAllowOverload(templateName, self);
			if(createdObject != null)
			{
				if((attachedScriptName != null) && !attachedScriptName.equals(""))
				{
					attachScript(createdObject, attachedScriptName);
				}
			}
			else
			{
				CustomerServiceLog("fs_quests", "give_object_to_player: failed to create " + templateName + " in inventory for %TU ", self, null);
				success = false;
			}

			LOG("newquests", "give_object_to_player - success = " + success);
			// complete the task. It is normal for log output to indicate
			// that the encounter failed to activate, because this call
			// will deactivate it while in the process of activating it.
			quests.complete(questName, self, success);
		}
		else
		{
			CustomerServiceLog("fs_quests", "give_object_to_player: failed to retrieve quest name for quest id" + questRow + " for %TU ", self, null);
		}
	}
	return SCRIPT_CONTINUE;
}
