include library.chat;
include library.utils;
include library.ai_lib;
include library.utils;
include library.anims;
include library.create;
include ai.ai_combat;

/***** CONSTANTS **********************************/

const string STF_FILE = "quest/hero_of_tatooine/auth_chat";

/***** TRIGGERS **********************************/

trigger OnAttach()
{
	detachScript(self, "ai.ai_combat");
	setInvulnerable(self, true);
	// setName(self, "Tawn Lawblade (an officer)");
	messageTo (self, "action01", null, 10f, false);
	return SCRIPT_CONTINUE;
}

trigger OnArrivedAtLocation (string name)
{
	if (name == "pirateLoc" && !hasObjVar(self, "pirateReached"))
	{

		setObjVar(self, "pirateReached", 1);
		chat.chat(self, new string_id(STF_FILE, "auth_01"));

		obj_id building = getTopMostContainer (self );
		messageTo(building, "piratesCaptured", null, 1f, false);
		messageTo(self, "action02", null, 5f, false);
	}

	if (name == "wifeLoc" && !hasObjVar(self, "wifeReached"))
	{

		obj_id building = getTopMostContainer(self);
		obj_id wife = getObjIdObjVar(building, "wife");
		setObjVar(self, "wifeReached", 1);
		messageTo (self, "action03", null, 2f, false);
	}

	if (name == "door" && !hasObjVar(self, "doorReached"))
	{
		setObjVar(self, "doorReached", 1);
		destroyObject(self);
	}

	return SCRIPT_CONTINUE;
}


messageHandler action01()
{
	obj_id structure = getTopMostContainer (self);

	if(!isIdValid(structure))
		return SCRIPT_CONTINUE;

	obj_id building = getTopMostContainer (self );
	obj_id pirate = getCellId (building, "stair1");
	location here = getLocation (self);
	string planet = here.area;
	location pirateTarget = new location (-7.86f, -3.97f, -8.18f, planet, pirate);
	ai_lib.aiPathTo (self, pirateTarget);
	addLocationTarget ("pirateLoc", pirateTarget, 1);


	return SCRIPT_CONTINUE;
}

messageHandler action02()
{
	obj_id structure = getTopMostContainer (self);

	if(!isIdValid(structure))
		return SCRIPT_CONTINUE;

	obj_id building = getTopMostContainer (self );
	obj_id wife = getCellId (building, "livingroom");
	location here = getLocation (self);
	string planet = here.area;
	location wifeTarget = new location (-6.53f, 0.03f, -3.21f, planet, wife);
	ai_lib.aiPathTo (self, wifeTarget);
	addLocationTarget ("wifeLoc", wifeTarget, 1);


	return SCRIPT_CONTINUE;
}

messageHandler action03()
{
	obj_id structure = getTopMostContainer (self);

	if(!isIdValid(structure))
		return SCRIPT_CONTINUE;

	obj_id building = getTopMostContainer (self );
	obj_id door = getCellId (building, "hall1");
	location here = getLocation (self);
	string planet = here.area;
	location doorTarget = new location (-6.20f, 0.57f, 10.92f, planet, door);
	ai_lib.aiPathTo (self, doorTarget);
	addLocationTarget ("door", doorTarget, 1);

	return SCRIPT_CONTINUE;
}

