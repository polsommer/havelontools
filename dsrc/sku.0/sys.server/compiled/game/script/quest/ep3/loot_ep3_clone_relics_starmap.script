include library.utils;
include library.permissions;
include library.features;
include library.groundquests;


trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if ( !utils.isNestedWithin(self, player) )
		return SCRIPT_CONTINUE;

	menu_info_data mid = mi.getMenuItemByType (menu_info_types.ITEM_USE);
	if (mid != null)
		mid.setServerNotify (true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( !utils.isNestedWithin(self, player) )
		return SCRIPT_CONTINUE;

	if ( item == menu_info_types.SERVER_MENU1 || item == menu_info_types.ITEM_USE )			//customize
	{
		grantQuest(player, self);	
			
	}
	return SCRIPT_CONTINUE;
}	
	
void grantQuest(obj_id player, obj_id self)
{
	if(!isIdValid(player) || !exists(player)|| !isIdValid(self) || !exists(self))
	{
		return;
	}
	
	
	if(groundquests.isQuestActiveOrComplete(player, "ep3_clone_relics_nym_starmap_1") && !groundquests.hasCompletedQuest(player, "ep3_clone_relics_nym_starmap_4"))
	{
		//Player still have active starmap quests.
		sendSystemMessage(player, "You must complete the quest series before it can be reset", null);
		return;			

	}

	int currentTime = getCalendarTime();
	int starmapTimer = getIntObjVar(player, "ep3.starmapTimer");

	if(starmapTimer > currentTime && !isGod(player))
	{
		sendSystemMessage(player, "You cannot restart this quest for another " + utils.formatTimeVerbose(starmapTimer - currentTime) , null);
		return;
	}

	else if(starmapTimer > currentTime && isGod(player))
	{
		sendSystemMessage(player, "Bypassing timer due to god mode. Please say 'Thank you god mode for saving me  " + utils.formatTimeVerbose(starmapTimer - currentTime)+"'" , null);
	}


	if(groundquests.isQuestActiveOrComplete(player, "ep3_clone_relics_nym_starmap_1"))
	{
		groundquests.clearQuest(player,  "ep3_clone_relics_nym_starmap_1");
	}

	if(groundquests.isQuestActiveOrComplete(player, "ep3_clone_relics_nym_starmap_2"))
	{
		groundquests.clearQuest(player,  "ep3_clone_relics_nym_starmap_2");
	}

	if(groundquests.isQuestActiveOrComplete(player, "ep3_clone_relics_nym_starmap_3"))
	{
		groundquests.clearQuest(player,  "ep3_clone_relics_nym_starmap_3");
	}

	if(groundquests.isQuestActiveOrComplete(player, "ep3_clone_relics_nym_starmap_4"))
	{
		groundquests.clearQuest(player,  "ep3_clone_relics_nym_starmap_4");
	}		


	groundquests.grantQuest(player, "ep3_clone_relics_nym_starmap_1");

	int timeUntilReset = secondsUntilNextDailyTime(8, 0, 0);
	int nextReset = timeUntilReset + currentTime;
	setObjVar(player, "ep3.starmapTimer", nextReset);
	destroyObject(self);

	return;
}

