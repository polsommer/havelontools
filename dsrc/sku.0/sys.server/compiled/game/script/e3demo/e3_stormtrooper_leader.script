
include library.anims;
include library.space_utils;
include library.factions;

trigger OnAttach()
{
	messageTo( self, "moveToLocationOne", null, 5, false );
	setAnimationMood(self, "npc_imperial");
	factions.setFaction( self, "Imperial");
	return SCRIPT_CONTINUE;
}

messageHandler moveToLocationOne()
{
	pathToLocationOne( self );	
	return SCRIPT_CONTINUE;
}

void pathToLocationOne( obj_id self)
{
	location destLoc = new location(getLocation( self));
	destLoc.x = 6.5f;
	destLoc.y = 206;
	destLoc.z = 324;
	setObjVar( self, "intIndex", 1);
	pathTo( self, destLoc );
}

void pathToLocationTwo( obj_id self )
{
	location destLoc = new location(getLocation( self));
	destLoc.x = 6.5f;
	destLoc.y = 206.5f;
	destLoc.z = 330.6f;	
	pathTo( self, destLoc );
	setObjVar( self, "intIndex", 2);
}

void pathToLocationThree( obj_id self )
{
	location destLoc = new location(getLocation( self));
	destLoc.x = 6.5f;
	destLoc.y = 206.5f;
	destLoc.z = 335.6f;	
	pathTo( self, destLoc );
	setObjVar( self, "intIndex", 3);
}


trigger OnMovePathComplete()
{	
	// wait is 
	
	messageTo(self, "doFaceTo", null, 1.5f, false);
		
	return SCRIPT_CONTINUE;
}
messageHandler doFaceTo()
{
	obj_id[] objTestObjects = getAllObjectsWithObjVar(getLocation(self), 2000, "leaderFaceTo");
	faceTo(self, getLocation(objTestObjects[0]));			
	messageTo(self, "doNextMove", null, 2.5f, false);
	return SCRIPT_CONTINUE;

}
messageHandler doNextMove()

{
	float fltWait = rand(1,3);
	int intIndex = getIntObjVar(self, "intIndex");
	if(intIndex ==2)
	{
		messageTo(self, "doSalute", null, 1.5f, false);			
		return SCRIPT_CONTINUE;
	}
	int intRoll = 1;
	if(intIndex==1)
	{
		intRoll = 2;
	
	}
	if(intIndex==3)
	{
		intRoll = 2;
	}
	if(intIndex == 2)
	{
		intRoll = rand(1, 2);
		if(intRoll == 2)
		{
			intRoll = 3; 
		}	
	}
	if(intRoll==1)
	{
		messageTo(self, "doLocationOne", null, fltWait, false);
	}
	else if (intRoll==2)
	{
		messageTo(self, "doLocationTwo", null, fltWait, false);
	}		
	else
	{
		messageTo(self, "doLocationThree", null, fltWait, false);
	}	
	
	return SCRIPT_CONTINUE;
}

messageHandler doLocationOne()
{
	pathToLocationOne(self);
	return SCRIPT_CONTINUE;

}

messageHandler doLocationTwo()
{
	pathToLocationTwo(self);
	return SCRIPT_CONTINUE;

}
messageHandler doLocationThree()
{
	pathToLocationThree(self);
	return SCRIPT_CONTINUE;
}

messageHandler doSalute()
{
	doAnimationAction( self, anims.PLAYER_SALUTE2);
	dictionary dctParams = new dictionary();
	dctParams.put("strEmote", anims.PLAYER_SALUTE2);
	obj_id[] objObjects= getAllObjectsWithScript(getLocation(self), 2000, "e3demo.e3_stormtrooper");
	for(int intI = 0; intI < objObjects.length; intI++)
	{		
		space_utils.notifyObject(objObjects[intI], "doEmote", dctParams);
	}	
	float fltWait = rand(1, 5);
	int intRoll = rand(1, 2);
	if(intRoll==1)
	{
		messageTo(self, "doLocationOne", null, fltWait, false);
	}
	else
	{
		messageTo(self, "doLocationThree", null, fltWait, false);
	}	
	return SCRIPT_CONTINUE;
}


