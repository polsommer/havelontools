/**********************************************************************
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        player_structure_deed.script
 * Description:  base script for player structure deeds
 * @author       $Author:$
 * @version      $Revision:$
 **********************************************************************/


/***** INCLUDES ********************************************************/
include library.player_structure;
include library.xp;
include library.money;
include library.sui;
include library.utils;
include library.city;
include library.prose;
include library.factions;

/***** CONSTANTS *******************************************************/

const string_id SID_YOURE_NEUTRAL_EXCLUDED	= new string_id("faction/faction_hq/faction_hq_response", "youre_neutral_excluded");
const string_id SID_YOURE_COVERT_EXCLUDED	= new string_id("faction/faction_hq/faction_hq_response", "youre_covert_excluded");

/***** TRIGGERS ********************************************************/

trigger OnAboutToReceiveItem(obj_id srcContainer, obj_id transferer, obj_id item)
{
	LOG("LOG_CHANNEL", "permanent_structure::OnAboutToReceiveItem --" + transferer + " - " + item);

	if ( isPlayer( item ) )
	{
		// We are about to receive a player.
		// Check to see if they are covert. If they are covert, they aren't allowed to enter a overt base.
		if ( isNeutral( item ) && !isIdValid(srcContainer) )
		{
			LOG("LOG_CHANNEL", "permanent_structure::OnAboutToReceiveItem -- player checked out as neutral, so we're disallowing them entry.");
			sendSystemMessage( item, SID_YOURE_NEUTRAL_EXCLUDED );
			return SCRIPT_OVERRIDE;
		}

		if ( hasObjVar(self, "isPvpBase" ))
		{
			if ( isCovert( item ) && !isIdValid(srcContainer) )
			{
				LOG("LOG_CHANNEL", "permanent_structure::OnAboutToReceiveItem -- player checked out as covert, so we're disallowing them entry to the base flagged with isPvpBase objvar.");
				sendSystemMessage( item, SID_YOURE_COVERT_EXCLUDED );
				return SCRIPT_OVERRIDE;
			}
		}
	}
	

	return SCRIPT_CONTINUE;
}

trigger OnReceivedItem(obj_id srcContainer, obj_id transferer, obj_id item)
{
	utils.setScriptVar(item, factions.IN_ADHOC_PVP_AREA, true);
	return SCRIPT_CONTINUE;
}

trigger OnAboutToLoseItem(obj_id destContainer, obj_id transferer, obj_id item)
{
	utils.removeScriptVar(item, factions.IN_ADHOC_PVP_AREA);
 	return SCRIPT_CONTINUE;
}




boolean isCovert( obj_id target )
{
	int pvpType = pvpGetType( target );
	if ( pvpType == PVPTYPE_COVERT )
		return true;

	return false;
}



boolean isNeutral( obj_id target )
{
	int pvpType = pvpGetType( target );
	if ( pvpType == PVPTYPE_NEUTRAL )
		return true;

	return false;
}

