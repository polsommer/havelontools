
/**********************************************************************/

include library.holiday;
include library.utils;

/**********************************************************************/



/**********************************************************************/

trigger OnAttach()
{		
	messageTo(self, "initializeCupidSpawnerManager", null, 9, false);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	messageTo(self, "initializeCupidSpawnerManager", null, 9, false);
	return SCRIPT_CONTINUE;
}

messageHandler initializeCupidSpawnerManager()
{
	// Spawn cupid every hour.
	int hourlyCupidNpcsTime = createHourlyAlarmClock(self, "triggerHourlyCupidNPCs", null, 00, 0);
	return SCRIPT_CONTINUE;
}

messageHandler triggerHourlyCupidNPCs()
{
	getLovedayCupidSpawnerIds(self);
		
	// Spawn him again in an hour
	int hourlyCupidNpcsTime = createHourlyAlarmClock(self, "triggerHourlyCupidNPCs", null, 00, 0);
	return SCRIPT_CONTINUE;
}

void getLovedayCupidSpawnerIds(obj_id self)
{	
	utils.setScriptVar(self, holiday.GETTING_CUPID_SPAWNER_IDS, true);
	getClusterWideData(holiday.LOVEDAY_CUPID_MANAGER_NAME, holiday.LOVEDAY_CUPID_ELEMENT_NAME+"*", true, self);
}

trigger OnClusterWideDataResponse(string manage_name, string name, int request_id, string[] element_name_list, dictionary[] data, int lock_key)
{
	if (manage_name.equals(holiday.LOVEDAY_CUPID_MANAGER_NAME) )
	{
		if ( utils.hasScriptVar(self, holiday.GETTING_CUPID_SPAWNER_IDS) )
		{
			utils.removeScriptVar(self, holiday.GETTING_CUPID_SPAWNER_IDS);

			// Getting obj_ids for cupid spawners in Kaadara, Tyrena, and at the Southern Ewok Lake Village on Endor.
			if ( data.length > 0 )
			{
				dictionary webster = new dictionary();
				int choice = rand (0,holiday.LOVEDAY_LOCATIONS.length - 1);
				for ( int i = 0; i < holiday.LOVEDAY_LOCATIONS.length; i++ )
				{
					if ( data[i] != null && !data[i].isEmpty() )
					{
						obj_id spawner_id = obj_id.NULL_ID;
						string lovedayLoc = holiday.LOVEDAY_LOCATIONS[i];

						if ( data[i].containsKey(holiday.LOVEDAY_CUPID_ELEMENT_NAME + lovedayLoc) )
						{
							spawner_id = data[i].getObjId(holiday.LOVEDAY_CUPID_ELEMENT_NAME + lovedayLoc);
							if ( isIdValid(spawner_id) )
							{
								boolean cityChosen = false;
								if ( choice == i )
								{
									cityChosen = true;
								}
								webster.put("chosen_"+lovedayLoc, cityChosen);
								messageTo(spawner_id, "spawnHourlyCupidNPCs", webster, 1, false);
							}
						}
					}
				}
			}
		}
	}
	
	releaseClusterWideDataLock(manage_name, lock_key);
	return SCRIPT_CONTINUE;
}

//God Mode Testing
trigger OnHearSpeech(obj_id speaker, string text)
{
	if ( !isGod(speaker) || !hasObjVar(speaker, "cupidTestingAuthorized") )
	{
		return SCRIPT_CONTINUE;
	}
	
	if ( text.equals("cupid_testing_manager") )
	{
		getLovedayCupidSpawnerIds(self);
	}
	
	return SCRIPT_CONTINUE;
}
