
/***** INCLUDES ********************************************************/

include library.groundquests;
include library.static_item;
include library.utils;

/***** CONSTANTS *******************************************************/



/***** TRIGGERS *******************************************************/

trigger OnAttach()
{	
	messageTo(self, "initializeCardSpawner", null, 1, false);
	return SCRIPT_CONTINUE;
}

messageHandler initializeCardSpawner()
{	
	modifyPitch(self, 90);
	
	location here = getLocation(self);
	here.y = here.y + 0.05f;
	setLocation(self, here);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{	
	if ( canManipulate(player, self, false, false, 15, true) )
	{
		int menuOption = mi.addRootMenu(menu_info_types.ITEM_USE, new string_id("spam", "loveday_cards_take"));
	}

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if( canManipulate(player, self, false, false, 15, true) )
	{
		if( item == menu_info_types.ITEM_USE)
		{
			if( isIncapacitated(player) || isDead(player))
			{
				sendSystemMessage(player, new string_id("player_structure", "while_dead"));
				return SCRIPT_CONTINUE;
			}

			string cardType = getStringObjVar(self, "lovedayCardType");
			if ( cardType != null && cardType.length() > 0 )
			{
				obj_id inv = utils.getInventoryContainer(player);
				obj_id lovedayCard = static_item.createNewItemFunction(cardType, inv);
				groundquests.sendPlacedInInventorySystemMessage(player, lovedayCard);
				
				destroyObject(self);
			}
		}
	}
		
	return SCRIPT_CONTINUE;
}
