include library.ai_lib;
include library.factions;
include library.groundquests;
include library.holiday;

const string EMPIREDAY				= "event/empire_day";
const string_id SID_MNU_REBEL			= new string_id(EMPIREDAY, "imperial_crash_victim_rebel_menu");
const string_id SID_MNU_IMPERIAL		= new string_id(EMPIREDAY, "imeprial_crash_victim_imperial_menu");
const string_id SID_YOU_FIND_NOTHING		= new string_id(EMPIREDAY, "you_find_nothing");
trigger OnAttach()
{
	messageTo(self, "knockDown", null, 10, false);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	messageTo(self, "knockDown", null, 10, false);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if(isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;
		
	if(!groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01))
		return SCRIPT_CONTINUE;

	if(!groundquests.isTaskActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01, holiday.EMPIREDAYQUEST_REB_CORPSE_TASK))
		return SCRIPT_CONTINUE;

	if(factions.isImperial(player) || !factions.isRebel(player))
		return SCRIPT_CONTINUE;

	menu_info_data data = mi.getMenuItemByType (menu_info_types.SERVER_MENU2);
	mi.addRootMenu(menu_info_types.SERVER_MENU2, SID_MNU_REBEL);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;


	
	if(!groundquests.isQuestActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01))
		return SCRIPT_CONTINUE;

	if(!groundquests.isTaskActive(player, holiday.EMPIREDAYQUEST_REB_COMBAT_01, holiday.EMPIREDAYQUEST_REB_CORPSE_TASK))
		return SCRIPT_CONTINUE;

	if(factions.isImperial(player) || !factions.isRebel(player))
		return SCRIPT_CONTINUE;

	if(!hasObjVar(self, "hasIntel"))
	{
		sendSystemMessage(player, SID_YOU_FIND_NOTHING);
		return SCRIPT_CONTINUE;
	}
	groundquests.sendSignal(player, holiday.EMPIREDAYQUEST_REB_CORPSE_SIGNAL);
	return SCRIPT_CONTINUE;
}



messageHandler knockDown()
{
	ai_lib.aiSetPosture(self, POSTURE_KNOCKED_DOWN);
	return SCRIPT_CONTINUE;	
}