include library.cts;
include library.utils;

const boolean BLOGGING_ON 				= true;
const string BLOG_CATEGORY				= "CharacterTransfer";

const string STF_FILE 					= "veteran_new";
const string_id SID_OPEN_GIFT				= new string_id(STF_FILE,"open_gift");

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	blog("OnObjectMenuRequest init");	

	if(!isValidId(player) || !exists(player))
		return SCRIPT_CONTINUE;
	blog("OnObjectMenuRequest player valid");	

	if(!utils.isNestedWithinAPlayer(self))
		return SCRIPT_CONTINUE;
	blog("OnObjectMenuRequest is nested");	

	if(!hasObjVar(self, cts.CURRENT_PLAYER_OID) || !hasObjVar(self, cts.SPONSOR_PLAYER_OID))
		return SCRIPT_CONTINUE;
		
	blog("OnObjectMenuRequest has original owner and sponser");	

	if(!hasObjVar(self, cts.CTS_PAINTING_OBJVAR))
		return SCRIPT_CONTINUE;
		
	blog("OnObjectMenuRequest has cts painting");	

	int mnu = mi.addRootMenu (menu_info_types.ITEM_USE, SID_OPEN_GIFT);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(!isValidId(player) || !exists(player))
		return SCRIPT_CONTINUE;

	if(!utils.isNestedWithinAPlayer(self))
		return SCRIPT_CONTINUE;

	if(item != menu_info_types.ITEM_USE)
		return SCRIPT_CONTINUE;
		
	if(!cts.grantPackagedPainting(self, player))
	{
		CustomerServiceLog("CharacterTransfer", "CTS Sponsor Gift unpacked failed for player: "+ player + " " + getName(player)+". Offending object: "+self);
		return SCRIPT_CONTINUE;			
	}
		
	CustomerServiceLog("CharacterTransfer", "CTS Sponsor Gift unpacked and stamped. Destroying original sponsor gift object: "+self);
	destroyObject(self);
	return SCRIPT_CONTINUE;
}

trigger OnGetAttributes(obj_id player, string[] names, string[] attribs)
{
	int idx = utils.getValidAttributeIndex(names);
	
	if(idx == -1)
		return SCRIPT_CONTINUE;

	if(!isValidId(self) || !exists(self))
		return SCRIPT_CONTINUE;

	string inscriptionString = cts.getCtsInscription(self);
	if(inscriptionString != null && !inscriptionString.equals(""))
	{
		names[idx] = "inscription";
		attribs[idx] = inscriptionString;
		idx++;			
	}

	return SCRIPT_CONTINUE;
}

boolean blog(string msg)
{
	if(BLOGGING_ON)
		LOG(BLOG_CATEGORY, msg);
	return true;
}