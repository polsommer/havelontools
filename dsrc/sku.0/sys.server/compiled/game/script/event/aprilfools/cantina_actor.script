include library.utils;
include library.chat;
include library.ai_lib;

const string RAND_LOCATION = "datatables/event/aprilfools/random_location.iff";
const string POSITIONS = "datatables/event/aprilfools/cantina_positions.iff";
const string DATATABLE = "datatables/event/invasion/ewok_bonus_loot.iff";

messageHandler faceNorth()
{
	setYaw(self, 90);
	return SCRIPT_CONTINUE;
}

messageHandler faceSouth()
{
	setYaw(self, -89);
	return SCRIPT_CONTINUE;
}

messageHandler faceEast()
{
	setYaw(self, 179);
	return SCRIPT_CONTINUE;
}

messageHandler faceWest()
{
	setYaw(self, 0);
	return SCRIPT_CONTINUE;
}

messageHandler sayYourLine()
{
	string myLineStr = params.getString("myLine");
	string myMood = params.getString("myMood");
	string_id myLine = new string_id("aprilfools", myLineStr);

	if(myMood == "" || myMood == "null")
		myMood = "none";
	
	chat.chat(self, chat.CHAT_SAY, myMood, myLine);

	return SCRIPT_CONTINUE;
}

messageHandler becomeVulnerable()
{
	setInvulnerable(self, false);
	return SCRIPT_CONTINUE;
}

messageHandler becomeInvulnerable()
{
	setInvulnerable(self, true);
	return SCRIPT_CONTINUE;
}

messageHandler moveToRandomLocation()
{
	int numEntries = dataTableGetNumRows(RAND_LOCATION);
	int randomEntry = rand(0, numEntries - 1);
	location there = getLocation(self);
	float xDestination = dataTableGetFloat(RAND_LOCATION, randomEntry, "X");
	float zDestination = dataTableGetFloat(RAND_LOCATION, randomEntry, "Z");
	string cellDestinationStr = dataTableGetString(RAND_LOCATION, randomEntry, "CELL");

	float variableX = rand(-2.0f, 2.0f);
	float variableZ = rand(-2.0f, 2.0f);
	
	there.x = xDestination + variableX;
	there.z = zDestination + variableZ;
	obj_id building = getTopMostContainer(self);
	obj_id cellDestination = getCellId(building, cellDestinationStr);

	if(cellDestinationStr == "" || cellDestinationStr == "null" || !isIdValid(cellDestination) )
		return SCRIPT_CONTINUE;

	there.cell = cellDestination;

	ai_lib.aiPathTo(self, there);
	setMovementRun(self);

	return SCRIPT_CONTINUE;
}

messageHandler moveToMainActorPosition()
{
	int position = params.getInt("position");
	string actorRole = getStringObjVar(self, "aprilfools.actor_role");
	string myColumnForX = "";
	string myColumnForZ = "";

	if(actorRole == "ewok1")
	{
		myColumnForX = "EWOK_1X";
		myColumnForZ = "EWOK_1Z";
	}

	if(actorRole == "foil1")
	{
		myColumnForX = "FOIL_1X";
		myColumnForZ = "FOIL_1Z";
	}

	if(actorRole == "ewok2")
	{
		myColumnForX = "EWOK_2X";
		myColumnForZ = "EWOK_2Z";
	}

	if(actorRole == "ewok3")
	{
		myColumnForX = "EWOK_3X";
		myColumnForZ = "EWOK_3Z";
	}

	if(actorRole == "ewok4")
	{
		myColumnForX = "EWOK_4X";
		myColumnForZ = "EWOK_4Z";		
	}

	if(myColumnForX == "" || myColumnForX == "null" || myColumnForZ == "" || myColumnForZ == "null")
		return SCRIPT_CONTINUE;

	if(position < 0 || position > 5)
		return SCRIPT_CONTINUE;

	if(position > 0 && (actorRole == "ewok2" || actorRole == "ewok3" || actorRole == "ewok4") )
		return SCRIPT_CONTINUE;

	location there = getLocation(self);
	there.x = dataTableGetFloat(POSITIONS, position, myColumnForX);
	there.z = dataTableGetFloat(POSITIONS, position, myColumnForZ);
	obj_id building = getTopMostContainer(self);
	obj_id cantinaCell = getCellId(building, "cantina");

	if(!isIdValid(cantinaCell) )
		return SCRIPT_CONTINUE;

	there.cell = cantinaCell;

	ai_lib.aiPathTo(self, there);
	setMovementRun(self);

	return SCRIPT_CONTINUE;
}

messageHandler goDie()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;
}

messageHandler runAwayAndPoof()
{
//	obj_id cantina = getObjIdObjVar(self, "aprilfools.cantina");
//	setObjVar(cantina, "aprilfools.robbery_cycle", 999);
	setInvulnerable(self, false);

	setObjVar(self, "aprilfools.run_away", 1);
	location there = getLocation(self);
	obj_id building = getTopMostContainer(self);
	obj_id destinationCell = getCellId(building, "foyer1");

	if(!isIdValid(destinationCell) )
		return SCRIPT_CONTINUE;

	there.x = 43.0f;
	there.z = 0.0f;
	there.cell = destinationCell;

	ai_lib.aiPathTo(self, there);
	setMovementRun(self);

	return SCRIPT_CONTINUE;
}

trigger OnAboutToBeTransferred(obj_id destContainer, obj_id transferer)
{
	if(!hasObjVar(self, "aprilfools.run_away") )
		return SCRIPT_CONTINUE;

	int runAway = getIntObjVar(self, "aprilfools.run_away");
	obj_id building = getTopMostContainer(self);
	obj_id destinationCell = getCellId(building, "foyer1");

	if(destContainer == destinationCell && runAway == 1)
		destroyObject(self);

 	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated(obj_id killer)
{
	obj_id cantina = getObjIdObjVar(self, "aprilfools.cantina");
	setObjVar(cantina, "aprilfools.robbery_cycle", 999);
	removeObjVar(cantina, "aprilfools.ewok1");

 	return SCRIPT_CONTINUE;
}


messageHandler aiCorpsePrepared()
{
	int chance = rand(1, 200);

	if(hasObjVar(self, "aprilfools.ewok1") )
	{
		chance = 200;
//		messageTo(cantina, "concludeRobberyEvent", null, 1, false);
	}

	if(chance > 150)
	{
		int roll = rand(1, 100);
		int tableLength = dataTableGetNumRows(DATATABLE);

		if(tableLength < 1)
		{
			return SCRIPT_CONTINUE;
		}

		for(int i = 0; i < tableLength; i++)
		{
			int minRoll = dataTableGetInt(DATATABLE, i, "MIN_ROLL");
			
			if(minRoll > roll)
			{
				string loot = dataTableGetString(DATATABLE, i, "LOOT");
				obj_id inventory = utils.getInventoryContainer(self);
				obj_id reward = createObject(loot, inventory, "");
				return SCRIPT_CONTINUE;
			}
		}
	
	}

	return SCRIPT_CONTINUE;
}