include library.firework;
include library.utils;
include library.create;

trigger OnInitialize()
{
	string setting = getConfigSetting("EventTeam", "empireDay");

	if(setting == null || setting == "" || setting != "true")
		return SCRIPT_CONTINUE;

	float rightNow = getGameTime();
	float nextShowTime = rightNow + 3600;  // SHOULD BE 3600 ON FINAL
	setObjVar(self, "event.next_show_time", nextShowTime);

	messageTo(self, "fireworksTimerPing", null, 30, false);

	return SCRIPT_CONTINUE;
}

messageHandler fireworksTimerReset()
{

	float rightNow = getGameTime();
	float nextShowTime = rightNow + 3600;  // SHOULD BE 3600 ON FINAL
	setObjVar(self, "event.next_show_time", nextShowTime);

	return SCRIPT_CONTINUE;
}

messageHandler fireworksTimerPing()
{
	float nextShowTime = getFloatObjVar(self, "event.next_show_time");
	float rightNow = getGameTime();

	if(rightNow > nextShowTime)
	{
		messageTo(self, "broadcastFireworkAnnouncement", null, 1, false);
	}
	else
	{
		messageTo(self, "fireworksTimerPing", null, 3600, false); // SHOULD BE 3600 ON FINAL
	}

	return SCRIPT_CONTINUE;
}

messageHandler broadcastFireworkAnnouncement()
{

	obj_id[] objPlayers = getPlayerCreaturesInRange(self, 256.0f);	
	
	if (objPlayers != null && objPlayers.length>0)
	{
		for(int i = 0; i < objPlayers.length; i++)
		{
			sendSystemMessage(objPlayers[i], new string_id("event/empire_day", "fireworks_broadcast"));
		}
	}

	messageTo(self, "startHugeFireworkDisplay", null, 10, false);

	return SCRIPT_CONTINUE;
}

messageHandler startHugeFireworkDisplay()
{
	for(int i = 0; i < 150; i++)
	{
		messageTo(self, "launchRandomFirework", null, i*2, false);
	}

	messageTo(self, "fireworksTimerReset", null, 300, false);

	return SCRIPT_CONTINUE;
}

messageHandler launchRandomFirework()
{
	location here = getLocation(self);
	location there = utils.getRandomLocationInRing(here, 0, 64);

	int tableLength = dataTableGetNumRows(firework.TBL_FX);
	int roll = rand(1, tableLength);
	string template = dataTableGetString(firework.TBL_FX, roll, "template");

	obj_id effect = create.object(template, there);
	if (isIdValid(effect) )
		attachScript(effect, firework.SCRIPT_FIREWORK_CLEANUP);

	return SCRIPT_CONTINUE;
}

trigger OnHearSpeech(obj_id objSpeaker, string strText)
{

	if(isGod(objSpeaker))
	{
		if(toLower(strText).startsWith("startfireworks") )
		{
			messageTo(self, "broadcastFireworkAnnouncement", null, 1, false);
		}
	}

	return SCRIPT_CONTINUE;
}