include library.chat;
include library.create;
include library.groundquests;
include library.holiday;
include library.prose;
include library.stealth;
include library.utils;
const boolean LOGGING_ON			= true; 
const string MEATLUMP_LOG			= "empire_day_trigger";

const string CLIENT_EFFECT			= "appearance/pt_smoke_puff.prt";

trigger OnAttach()
{
	blog("GOODBYE OnAttach");

	messageTo(self, "pathToExit", null, 2, false);
	messageTo(self, "selfDestruct", null, 120, false);
	
	return SCRIPT_CONTINUE;
}

trigger OnMovePathComplete()
{
	blog("GOODBYE OnMovePathComplete");

	if(!hasObjVar(self, "exitPoint"))
		return SCRIPT_CONTINUE;

	if(!hasObjVar(self, "exitLocation"))
		return SCRIPT_CONTINUE;	

	if(getLocation(self) == getLocationObjVar(self, "exitLocation"))
	{
		signal(self);	
		messageTo(self, "selfDestruct", null, 2, false);
		return SCRIPT_CONTINUE;	
	}
	
	pathTo(self, getLocationObjVar(self, "exitLocation"));
	return SCRIPT_CONTINUE;	
}

trigger OnMoveMoving()
{
	blog("GOODBYE OnMoveMoving");

	if(!hasObjVar(self, "exitPoint"))
		return SCRIPT_CONTINUE;

	if(!hasObjVar(self, "exitLocation"))
		return SCRIPT_CONTINUE;	

	if(hasObjVar(self, "saidGoodbye"))
		return SCRIPT_CONTINUE;	
		

	if(!hasObjVar(self, "rescuer"))
	{
		setObjVar(self, "saidGoodbye", true);
		return SCRIPT_CONTINUE;
	}

	obj_id rescuer = getObjIdObjVar(self, "rescuer");
	if(!isValidId(rescuer) || !exists(rescuer))
	{
		setObjVar(self, "saidGoodbye", true);
		return SCRIPT_CONTINUE;
	}
	
	prose_package pp = prose.getPackage(new string_id("event/empire_day", "see_you_topside"), rescuer);
	chat.publicChat(self, rescuer, null, null, pp);
	setObjVar(self, "saidGoodbye", true);
		
	return SCRIPT_CONTINUE;
}

messageHandler pathToExit()
{
	blog("GOODBYE pathToExit");
	string mobDisguise = getStringObjVar(self, "disguise_npc");
	if(mobDisguise == null || mobDisguise.length() <= 0)
	{
		blog("GOODBYE pathToExit - Mob had no diguise");
		signal(self);		
		messageTo(self, "selfDestruct", null, 2, false);
		return SCRIPT_CONTINUE;	
	}

	obj_id[] exitPoints = getAllObjectsWithObjVar(getLocation(self), 40f, "disguise_exit");
	if(exitPoints == null || exitPoints.length <= 0)
	{
		blog("GOODBYE pathToExit - NO POINTS FOUND");
	
		signal(self);		
		messageTo(self, "selfDestruct", null, 2, false);
		return SCRIPT_CONTINUE;	
	}

	obj_id point = obj_id.NULL_ID;
	for(int i = 0; i < exitPoints.length; i++)
	{
		string var = getStringObjVar(exitPoints[i], "disguise_exit");
		if(var == null || !var.equals(mobDisguise))
		{
			blog("GOODBYE pathToExit - var: "+var +" mobDisguise: " +mobDisguise);
			continue;
		}
		point = exitPoints[i];
	}
	
	if(!isValidId(point) || !exists(point))
	{
		blog("GOODBYE pathToExit - NO POINTS FOUND AFTER LOOP");
	
		signal(self);		
		messageTo(self, "selfDestruct", null, 2, false);
		return SCRIPT_CONTINUE;	
	}
	
	location exitLocation = getLocation(point);
	if(exitLocation == null)
	{
		blog("GOODBYE pathToExit - LOCATION OF POINT 0 INVALID");
	
		signal(self);
		messageTo(self, "selfDestruct", null, 2, false);
		return SCRIPT_CONTINUE;	
	}

	blog("GOODBYE pathToExit - NPC should be pathing");
	
	pathTo(self, exitLocation);
	setObjVar(self, "exitPoint", point);
	setObjVar(self, "exitLocation", exitLocation);
	signal(self);
	messageTo(self, "selfDestruct", null, 9, false);

	return SCRIPT_CONTINUE;	
}

messageHandler selfDestruct()
{
	blog("GOODBYE selfDestruct");
	if(!hasObjVar(self, "sentSignal"))
	{
		signal(self);
	}
	destroyObject(self);
	return SCRIPT_CONTINUE;	
}

boolean blog(string msg)
{
	if(LOGGING_ON)
		LOG(MEATLUMP_LOG,msg);
	return true;
}

boolean signal(obj_id mob)
{
	blog("GOODBYE signal");

	obj_id rescuer = getObjIdObjVar(mob, "rescuer");
	if(!isValidId(rescuer) || !exists(rescuer))
	{
	//add customer serv
		blog("GOODBYE rescuer invalid");
		return false;
	}
	
	blog("GOODBYE rescuer valid: "+rescuer);

	groundquests.sendSignal(rescuer, "prisonerHasLeftTheBuilding");

	blog("GOODBYE signal sent");

	playClientEffectObj(mob, CLIENT_EFFECT, mob, "");
	setObjVar(mob, "sentSignal", true);

	return true;
}

