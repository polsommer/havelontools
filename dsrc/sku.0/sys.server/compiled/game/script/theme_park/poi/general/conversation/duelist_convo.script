include library.money;
include ai.ai_combat;
include library.chat;

const string CONVO = "npc_reaction/duelist";

trigger OnAttach ()
{
	attachScript (self, "npc.converse.npc_converse_menu");
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	attachScript (self, "npc.converse.npc_converse_menu");
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	if (hasObjVar (killer, "isDueling"))
	{
		setObjVar (killer, "duelwon", 1);
		removeObjVar (killer, "isDueling");
		return SCRIPT_CONTINUE;
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if (hasObjVar (speaker, "duelwon"))
	{
		chat.chat (speaker, new string_id(CONVO, "duel_6"));// You did it! Here's what I owe you.
		npcEndConversation (speaker);
		money.bankTo(money.ACCT_POI, speaker, 300);
		removeObjVar (speaker, "duelwon");
		return SCRIPT_CONTINUE;
	}
	else
	{
		string_id greeting = new string_id (CONVO, "duel_1");// I'm a little busy at the moment...
		string_id response[] = new string_id [2];
		response[0] = new string_id (CONVO, "player_1"); // What's going on?
		response[1] = new string_id (CONVO, "player_2"); // Sorry, I'll go.
		npcStartConversation (speaker, self, CONVO, greeting, response);
		return SCRIPT_CONTINUE;
	}
}


trigger OnNpcConversationResponse (string convoName, obj_id player, string_id response)
{
	if ( convoName != CONVO )
	{
		return SCRIPT_CONTINUE;
	}

 	if (( response.getAsciiId().equals("player_1"))) //  What's going on?
  	{
    		string_id message = new string_id (CONVO, "duel_2"); // My honor was insulted...
		npcSpeak(player, message);
		string_id responses[] = new string_id [2];
		responses[0] = new string_id (CONVO, "player_3"); // Why hasn't the duel started?
		responses[1] = new string_id (CONVO, "player_4"); // Ok, I'll let you two get to it.
		npcSetConversationResponses (player, responses);
		return SCRIPT_CONTINUE;
  	}

	if (( response.getAsciiId().equals("player_2"))) // Sorry, I'll go.
  	{
    	string_id message = new string_id (CONVO, "duel_3"); // Fine.
		npcSpeak(player, message);
		messageTo (self, "startDuel", null, 20, true);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
  	}

	if (( response.getAsciiId().equals("player_3"))) // Why hasn't the duel started?
  	{
    	string_id message = new string_id (CONVO, "duel_4"); // I'm not comfortable.  Fight for me?
		npcSpeak(player, message);
		string_id responses[] = new string_id [2];
		responses[0] = new string_id (CONVO, "player_5"); // No way.  I'm audi.
		responses[1] = new string_id (CONVO, "player_6"); // Sure, I like fightin'
		npcSetConversationResponses (player, responses);
		return SCRIPT_CONTINUE;
  	}

  	if (( response.getAsciiId().equals("player_4")) ) // I'll let you two get to it.
	  	{
	    	string_id message = new string_id (CONVO, "duel_3"); // Fine.
			npcSpeak(player, message);
			messageTo (self, "startDuel", null, 20, true);
			npcEndConversation (player);
			return SCRIPT_CONTINUE;
  	}
  	if (( response.getAsciiId().equals("player_5"))) // No way, I'm audi.
	  	{
	    	string_id message = new string_id (CONVO, "duel_3"); // Fine.
			npcSpeak(player, message);
			messageTo (self, "startDuel", null, 20, true);
			npcEndConversation(player);
			return SCRIPT_CONTINUE;
  	}

  	if (( response.getAsciiId().equals("player_6"))) // Ok, I like fightin.
	  	{
	    	string_id message = new string_id (CONVO, "duel_5"); // Wait for him to attack...
			npcSpeak(player, message);
			setObjVar (self, "player", player);
			setObjVar (player, "isDueling", 1);
			messageTo (self, "duelPlayer", null, 10, true);
			npcEndConversation(player);
			return SCRIPT_CONTINUE;
  	}
	return SCRIPT_CONTINUE;
}

messageHandler startDuel()
{
	obj_id opponent = getObjIdObjVar (self, "opponent");
	startCombat (self, opponent);
	startCombat (opponent, self);
	return SCRIPT_CONTINUE;
}

messageHandler duelPlayer()
{
	obj_id opponent = getObjIdObjVar (self, "opponent");
	obj_id player = getObjIdObjVar (self, "player");
	startCombat (opponent, player);
	return SCRIPT_CONTINUE;
}


