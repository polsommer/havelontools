include library.ai_lib;
include ai.ai_combat;
include ai.ai;

trigger OnEnteredCombat ()
{
	detachScript (self, "theme_park.tatooine.behavior.poi_waiting");
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	stop (self);
	setObjVar( self, "ai.defaultCalmBehavior", 1 );
	//attachScript ( self, "city.city_convo" );
	setObjVar (self, "animsLeft", 1);
	messageTo (self, "playAnimation", null, 5, false);
	return SCRIPT_CONTINUE;
}

messageHandler playAnimation ()
{
	if (!ai_lib.isInCombat (self))
	{
		int anims = getIntObjVar (self, "animsLeft");
		string action = "wave_hail";
		int move = rand (1, 5);
		switch (move)
		{
			case 1:
				action = "check_wrist_device";
				break;
			case 2:
				action = "cough_polite";
				break;
			case 3:
				action = "rub_belly";
				break;
			case 4:
				action = "scratch_head";
				break;
			case 5:
				action = "check_wrist_device";
				break;

		}
		doAnimationAction ( self, action );
		if (anims < 10)
		{
			int speed = rand (5, 6);
			messageTo (self, "playAnimation", null, speed, false);
			anims = anims + 1;
			setObjVar (self, "animsLeft", anims);
		}
		else
		{
			removeObjVar (self, "animsLeft");
		}
	}
	return SCRIPT_CONTINUE;
}

messageHandler killTarget ()
{
	debugSpeakMsg (self, "That's it! Now you die!");
	obj_id target = params.getObjId("target");
	startCombat ( self, target );
	return SCRIPT_CONTINUE;
}

messageHandler doFacing ()
{
	obj_id face = params.getObjId ("target");
	faceTo (self, face);
	faceTo (face, self);
	return SCRIPT_CONTINUE;
}
