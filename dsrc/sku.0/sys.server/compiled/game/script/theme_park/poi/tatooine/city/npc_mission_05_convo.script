include library.ai_lib;
include library.chat;
include library.factions;
include library.skill;
inherits systems.missions.base.mission_dynamic_base;

const string CONVO = "npc_mission/npc_mission_05";

trigger OnInitialize()
{
	messageTo(self, "cleanUpScripts", null, 3, true);
	setObjVar(self, "mission.intPersistent", 1);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}


trigger OnAttach()
{
	messageTo(self, "cleanUpScripts", null, 3, true);
	string[] strMissionTypes = new string[1];
	strMissionTypes[0] = NPC_PERSISTENT_MISSION_OBJVAR_NAMES[rand(0, NPC_PERSISTENT_MISSION_OBJVAR_NAMES.length-1)];
	setObjVar(self, "mission.strMissionTypes", strMissionTypes);			// Suppress linting - We know that this array will
																			// always be at least one element long
	int intMinDifficulty = rand(1, 10);
	int intMaxDifficulty = rand(20, 30);
	setObjVar(self, "mission.intMinDifficulty", intMinDifficulty);
	setObjVar(self, "mission.intMaxDifficulty", intMaxDifficulty);
	stop(self);
	attachScript (self, "npc.converse.npc_converse_menu");
	attachScript(self, "systems.missions.base.mission_npc");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}


trigger OnStartNpcConversation (obj_id speaker)
{
	if (ai_lib.isInCombat(self) || ai_lib.isInCombat(speaker))
	{
		return SCRIPT_OVERRIDE;
	}

	obj_id objMission =  getAssignedNPCMission(self, speaker); // gets the mission for the player created by the npc

	if(objMission!=null)
	{
		if(hasObjVar(objMission, "intMissionComplete"))
		{
			sendNPCMissionSuccess(objMission, self);
			return SCRIPT_CONTINUE;
		}
		else
		{
			// alreeady on mission
			string_id greeting = new string_id (CONVO, "npc_msn_05_greeting_onmission");// I'm not talking...
			chat.chat(self, greeting);
			return SCRIPT_CONTINUE;
		}
	}
	else
	{
		obj_id[] objMissionArray = getMissionObjects(speaker);
		if(objMissionArray!=null)
		{
			if(objMissionArray.length>=MAX_MISSIONS )
			{
				string_id greeting = new string_id (CONVO, "npc_msn_05_greeting_onothermission");// you're busy.
				chat.chat(self, greeting);
				return SCRIPT_CONTINUE;
			}
		}

	}


	string_id greeting = new string_id (CONVO, "npc_msn_05_greeting_01");// Hi.  I think you probably need some work.

	string_id response[] = new string_id [2];
	response[0] = new string_id (CONVO, "npc_msn_05_presp_greeting_01");// That's right.
	response[1] = new string_id (CONVO, "npc_msn_05_presp_greeting_02");// Do you have work?

	npcStartConversation (speaker, self, "missionConvo", greeting, response);
	return SCRIPT_CONTINUE;
}


trigger OnNpcConversationResponse (string convo, obj_id player, string_id response)
{
	if ( response.getAsciiId().equals("npc_msn_05_presp_greeting_01")) // That's right.
	{
		string_id message = new string_id (CONVO, "npc_msn_05_work_01");// That's what I figured.
		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_greeting_01")); // That's right.
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_greeting_02")); // Do you have work?
		npcAddConversationResponse( player, new string_id (CONVO,"npc_msn_05_presp_getmission_03")); // So do you have...
		npcAddConversationResponse( player, new string_id (CONVO,"npc_msn_05_presp_getmission_05")); // Actually...
		return SCRIPT_CONTINUE;
 	}

 	if ( response.getAsciiId().equals("npc_msn_05_presp_greeting_02") ) // Do you have work?
 	{
 		string_id message = new string_id (CONVO, "npc_msn_05_busy_01");// Of course...
 		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_greeting_01")); // That's right.
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_greeting_02")); // Do you have work?
 		npcAddConversationResponse( player, new string_id (CONVO,"npc_msn_05_presp_getmission_05")); // Actually...
 		return SCRIPT_CONTINUE;
	}


 	if ( response.getAsciiId().equals("npc_msn_05_presp_getmission_03") || response.getAsciiId().equals("npc_msn_05_presp_getmission_05"))
 	{
 		string_id message = new string_id (CONVO, "npc_msn_05_work_02"); // I've got something you can do.
 		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_getmission_03")); // So do you have...
		npcRemoveConversationResponse(player, new string_id (CONVO,"npc_msn_05_presp_getmission_05")); // Actually...
		npcAddConversationResponse( player, new string_id (CONVO,"npc_msn_05_presp_getmission_01")); // Let's hear it.
		return SCRIPT_CONTINUE;
	}

	if (response.getAsciiId().equals("npc_msn_05_presp_getmission_05")) // Actually...
	{
 		string_id message = new string_id (CONVO, "npc_msn_05_done_01"); // Well, come back...
 		npcSpeak(player, message);
		npcEndConversation (player);
		return SCRIPT_CONTINUE;

	}

 	if ( response.getAsciiId().equals("npc_msn_05_presp_getmission_01") || response.getAsciiId().equals("npc_msn_05_presp_getmission_02"))
 	{
 		obj_id objMission = getAssignedNPCMission(self, player);
 		if(objMission!=null)
 		{
			string_id strResponse = new string_id(CONVO, "npc_msn_05_greeting_onmission");// I'm not talking...
			npcSpeak(self, strResponse);
			npcEndConversation(player);
			return SCRIPT_CONTINUE; // NO MISSIONS FOR YOU!
		}

		int intPlayerDifficulty = getLevel(player);

		if(intPlayerDifficulty<=getIntObjVar(self, "intMinDifficulty"))
		{	string_id strResponse = new string_id("mission/mission_generic", "npc_job_request_wrong_difficulty");
			chat.chat(self, strResponse);
			npcEndConversation(player);
			return SCRIPT_CONTINUE;

		}

		obj_id objMissionData = getMissionObjectFromNPC(self, intPlayerDifficulty);

		if(objMissionData!=null)
		{
			if(validateNPCMissionForPlayer(self, objMissionData, player)) //
			{

				deltadictionary dctMissionInformation = player.getScriptVars();
				dctMissionInformation.put("mission.objNPCMission", objMissionData);
				LOG("missions", "putting "+objMissionData+" into dictionary for player");
				string_id message = getNPCMissionDescriptionId(objMissionData);	// this is the mission text and will work
				npcSpeak(player, message);
				string_id[] responses = new string_id[2];
				responses[0] = new string_id("mission/mission_generic", "npc_job_accept_yes"); //
				responses[1] = new string_id("mission/mission_generic", "npc_job_accept_no"); //
				npcSetConversationResponses (player, responses);
				return SCRIPT_CONTINUE;
			}

		}

		string_id strSpam = new string_id("mission/mission_generic", "npc_job_none_available");
		npcSpeak(player, strSpam);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
			// Put in the mission hooks here
	}

	if(response.getAsciiId().equals("npc_job_accept_yes"))
	{
		deltadictionary dctMissionInformation = player.getScriptVars();
		obj_id objMissionData = dctMissionInformation.getObjId("mission.objNPCMission");
		if(objMissionData==null)
		{

			return SCRIPT_CONTINUE;

		}
		string_id strResponse = new string_id("mission/mission_generic", "npc_job_accept_response_yes");
		LOG("missions", "objMissionData is "+objMissionData+" in npc crap");
		assignNPCMissionToPlayer(self, objMissionData, player);
		npcEndConversation (player);
		chat.chat(self, strResponse);


	}

	if(response.getAsciiId().equals("npc_job_accept_no"))
	{
		string_id strResponse = new string_id(CONVO, "npc_msn_05_decline");
		chat.chat(self, strResponse);
		npcEndConversation (player);



	}

	return SCRIPT_CONTINUE;



}


messageHandler cleanUpScripts ()
{
	if (!hasScript (self, "theme_park.poi.tatooine.city.npc_mission_convo"))
	{
		attachScript (self, "theme_park.poi.tatooine.city.npc_mission_convo");
	}
	return SCRIPT_CONTINUE;
}