include library.ai_lib;
include library.create;
include library.utils;

const string npcTable = "datatables/poi/city/convo_npc.iff";

trigger OnAttach ()
{
	messageTo(self, "handleSetUp", null, 1, false);
	
	return SCRIPT_CONTINUE;
}
trigger OnInitialize()
{
	messageTo(self, "handleSetUp", null, 3, false);
	
	return SCRIPT_CONTINUE;
}

messageHandler handleSetUp()
{
	if ( !utils.hasScriptVar(self, "alreadySpawned") )
	{
		utils.setScriptVar(self, "alreadySpawned", true);
	
		spawnGuyOne( self );
		spawnGuyTwo( self );
		messageTo( self, "handleChatting", null, 10, false);
		messageTo( self, "checkForScripts", null, 5, false );
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleChatting()
{
	messageTo( self, "handleChatting", null, 600, false);
	obj_id guy1 = getObjIdObjVar( self, "guy1" );
	obj_id guy2 = getObjIdObjVar( self, "guy2" );

	if ( !exists(guy1) || !exists(guy2) )
		return SCRIPT_CONTINUE;

	faceTo (guy1, guy2);
	faceTo (guy2, guy1);
	setAnimationMood (guy1, "conversation");
	setAnimationMood (guy2, "conversation");
	return SCRIPT_CONTINUE;
}

messageHandler handleGuyOneKilled()
{
	spawnGuyOne( self );
	return SCRIPT_CONTINUE;
}

messageHandler handleGuyTwoKilled()
{
	spawnGuyTwo( self );
	return SCRIPT_CONTINUE;
}

void spawnGuyOne( obj_id baseObject )
{
	//obj_id guy1 = create.themeParkObject( getRandomGuy(), 1,0, "handleGuyOneKilled", 0 );
	obj_id guy1 = create.themeParkObject( getRandomGuy(), 1,0 );
	
	string mission = getMissionText(baseObject);
	debugSpeakMsg (guy1, mission);
	attachScript (guy1, mission);
	setInvulnerable(guy1, true);	
	setCreatureStatic (guy1, true);
	setObjVar( baseObject, "guy1", guy1 );
}

void spawnGuyTwo( obj_id baseObject )
{
	//obj_id guy2 = create.themeParkObject( getRandomGuy(), 1,1, "handleGuyTwoKilled", 0 );
	obj_id guy2 = create.themeParkObject( getRandomGuy(), 1,1 );
	
	string mission = getFriendText(baseObject);
	attachScript (guy2, mission);
	setInvulnerable(guy2, true);
	setCreatureStatic (guy2, true);
	setObjVar( baseObject, "guy2", guy2 );
}

string getRandomGuy ()
{
	location here = getLocation (getSelf());
	string planet = here.area;
	string[] npcList = dataTableGetStringColumnNoDefaults( npcTable, planet);
	int npcNum = rand(0, npcList.length -1 );
	string npc = npcList[ npcNum];
	return npc;
}

string getMissionText(obj_id self)
{
	string mission = "";
	int msnTxt = 1;
	if (!hasObjVar (self, "missionText"))
	{
		msnTxt = rand (1, 5);
		setObjVar (self, "missionText", msnTxt);
		mission = "theme_park.poi.tatooine.city.npc_mission_0" + msnTxt + "_convo";
		return mission;
	}
	else
	{
		msnTxt = getIntObjVar (self, "missionText");
		mission = "theme_park.poi.tatooine.city.npc_mission_0" + msnTxt + "_convo";
		return mission;
	}
}

string getFriendText(obj_id self)
{
	string mission = "";
	int msnTxt = 1;
	if (!hasObjVar (self, "missionText"))
	{
		msnTxt = rand (1, 5);
		setObjVar (self, "missionText", msnTxt);
		mission = "theme_park.poi.tatooine.city.npc_mission_0" + msnTxt + "_friend_convo";
		return mission;
	}
	else
	{
		msnTxt = getIntObjVar (self, "missionText");
		mission = "theme_park.poi.tatooine.city.npc_mission_0" + msnTxt + "_friend_convo";
		return mission;
	}
}

messageHandler checkForScripts()
{
	if (hasScript (self, "theme_park.poi.launch"))
	{
		detachScript (self, "theme_park.poi.launch");
	}		
	return SCRIPT_CONTINUE;
}