include library.ai_lib;
include library.factions;
include ai.ai;

// This is the conversation for the "Friend" NPC who stands next to the mission-giving NPC in the city POI

trigger OnAttach()
{
	stop(self);
	
	attachScript (self, "npc.converse.npc_converse_menu");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}	

trigger OnStartNpcConversation (obj_id speaker)
{
	
	if (ai_lib.isInCombat(self) || ai_lib.isInCombat(speaker))
		return SCRIPT_OVERRIDE;
	
	if (hasObjVar(speaker,"knowsFriend"))
	{
		string_id greeting = new string_id ("npc_mission/npc_mission_01", "npc_msn_01_friend_greeting_02");
		// Well, hello!
		string_id response[] = new string_id [1];
		response[0] = new string_id ("npc_mission/npc_mission_01", "npc_msn_01_presp_greeting_01");
		// I'm looking for work
		npcStartConversation (speaker, self, "recruiting/imperial_recruit", greeting, response);		
	}
	else
	{
		string_id greeting = new string_id ("npc_mission/npc_mission_01", "npc_msn_01_friend_greeting_01");
		// Nice to see you again.
		string_id response[] = new string_id [1];
		response[0] = new string_id ("npc_mission/npc_mission_01", "npc_msn_01_presp_greeting_01");
			// I'm looking for work
		npcStartConversation (speaker, self, "recruiting/imperial_recruit", greeting, response);		
	}

	return SCRIPT_CONTINUE;	
}


trigger OnNpcConversationResponse (string convo, obj_id player, string_id response)
{
	if ( response.getAsciiId().equals("npc_msn_01_presp_greeting_01") || response.getAsciiId().equals("npc_msn_01_presp_greeting_02")) // I'm looking for work
 	{
		string_id message = new string_id ("npc_mission/npc_mission_01", "npc_msn_01_friend_work_01"); 
			// That's nothing new. Your kind is always looking for work, aren't they?
		npcSpeak(player, message);
		setObjVar(player, "knowsFriend", 1);
		npcRemoveConversationResponse(player, new string_id ("npc_mission/npc_mission_01","npc_msn_01_presp_greeting_01")); // 
		
		npcEndConversation (player);
		return SCRIPT_CONTINUE;
 	}

return SCRIPT_CONTINUE;

}
