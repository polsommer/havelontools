include library.groundquests;
include library.utils;

trigger OnIncapacitated (obj_id killer)
{
	failRescueQuest(self);
	tellMomIDied(self);
	return SCRIPT_CONTINUE;
}

messageHandler handleUpdatePrisonerRescueQuest()
{
	obj_id player = getObjIdObjVar(self, "player");
	if(!isValidId(player))
	{
		messageTo(self, "handleDestroySelf", null, 1, false);
		return SCRIPT_CONTINUE;
	}
	
	string signal = getStringObjVar(self, "signal");
	if(signal == null || signal.length() <= 0)
	{
		messageTo(self, "handleDestroySelf", null, 1, false);
		return SCRIPT_CONTINUE;
	}
	
	groundquests.sendSignal(player, signal);
	messageTo(self, "handleDestroySelf", null, 1, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleDestroySelf()
{
	tellMomIDied(self);
	destroyObject(self);
	return SCRIPT_CONTINUE;
}

boolean tellMomIDied(obj_id self)
{
	if(!isValidId(self))
		return false;
		
	obj_id mom = getObjIdObjVar (self, "mom");
	if(!isValidId(mom))
	{
		CustomerServiceLog("bad_spawner_data", "droid_cave_died.OnIncapacitated() Nym Pirate Cave Spawner Failed. Could not retrieve Cave OID to respawn the NPC.");	
		return false;
	}

	int spawnNum = getIntObjVar (self, "spawn_number");
	if (spawnNum <= 0)
	{
		CustomerServiceLog("bad_spawner_data", "droid_cave_died.OnIncapacitated() Nym Pirate Cave Spawner Failed. Could not retrieve NPC spawnNum from NPC Object.");		
		return false;
	}

	dictionary info = new dictionary();
	info.put ("spawnNumber", spawnNum );
	info.put ("spawnMob", self );

	messageTo(mom, "tellingMomIDied", info, 120, false );
	return true;
}

boolean failRescueQuest(obj_id self)
{
	obj_id player = getObjIdObjVar(self, "player");
	if(!isValidId(player))
	{
		messageTo(self, "handleDestroySelf", null, 1, false);
		return false;
	}
	
	string failSignal = getStringObjVar(self, "failSignal");
	if(failSignal == null || failSignal.length() <= 0)
	{
		messageTo(self, "handleDestroySelf", null, 1, false);
		return false;
	}
	
	groundquests.sendSignal(player, failSignal);
	messageTo(self, "handleDestroySelf", null, 1, false);
	return true;
}