/**
 * Copyright (c) ©2000-2003 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        message_assembled.script
 * Description:  message_assembled base logic
 * @author       $Author: breinhart $
 * @version      $Revision: #1 $
 */

//------------------------------------------------
// Includes
//------------------------------------------------

include library.sui;
include library.utils;

//------------------------------------------------
// Constants
//------------------------------------------------

const string 	IMPERIAL_STF		= "theme_park/alderaan/act2/imperial_missions";
const string	IMPERIAL_SHARED_STF	= "theme_park/alderaan/act2/shared_imperial_missions";

const string_id DISK_NAME_SLICER	= new string_id(IMPERIAL_SHARED_STF, "disk_name_slicer");

const string_id SID_USE				= new string_id(IMPERIAL_SHARED_STF, "use");
const string    SID_CLOSE			= "@"+IMPERIAL_SHARED_STF+":close";


//------------------------------------------------
// Methods
//------------------------------------------------

trigger OnInitialize()
{
	setName(self, DISK_NAME_SLICER);

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnObjectMenuRequest
//------------------------------------------------

trigger OnObjectMenuRequest( obj_id player, menu_info mi )
{
	// Add option to read the message.
	mi.addRootMenu( menu_info_types.SERVER_MENU1, SID_USE );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnObjectMenuSelect
//------------------------------------------------

trigger OnObjectMenuSelect( obj_id player, int item )
{
	// Display info dialog.
	if ( item == menu_info_types.SERVER_MENU1 )
		displayDialog( self, player );

	return SCRIPT_OVERRIDE;
}

//------------------------------------------------
// displayDialog
//------------------------------------------------

void displayDialog( obj_id self, obj_id player )
{
	string title = null;
	string text = null;
	
	string_id titleID = new string_id(IMPERIAL_STF, "disk_title");
	title = localize(titleID);
	string_id textID = new string_id(IMPERIAL_STF, "disk_text");
	text = localize(textID);

	// Display the dialog.
	createDialog( self, player, text, title );
}

//------------------------------------------------
// createDialog
//------------------------------------------------

int createDialog( obj_id self, obj_id player, string text, string title )
{
	if ( player == null )
		return -1;

	// Create the dialog page.
	int pid = sui.createSUIPage( sui.SUI_MSGBOX, self, player, "handleDialogInput" );

	// Add elements text.
	sui.setSUIProperty( pid, sui.MSGBOX_PROMPT, sui.PROP_TEXT, text );
	sui.setSUIProperty (pid, sui.MSGBOX_TITLE, sui.PROP_TEXT, title );

	// Add buttons.
	sui.msgboxButtonSetup( pid, sui.OK_ONLY );
	sui.setSUIProperty( pid, sui.MSGBOX_BTN_OK, sui.PROP_TEXT, SID_CLOSE );

	// Show dialog.
	sui.showSUIPage( pid );

	return pid;
}

