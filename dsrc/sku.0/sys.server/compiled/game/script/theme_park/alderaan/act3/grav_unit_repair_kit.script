/**
 * Copyright (c) ©2000-2003 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        message_assembled.script
 * Description:  message_assembled base logic
 * @author       $Author: breinhart $
 * @version      $Revision: #1 $
 */

//------------------------------------------------
// Includes
//------------------------------------------------

include library.sui;
include library.utils;

//------------------------------------------------
// Constants
//------------------------------------------------

const string	REBEL_SHARED_STF	= "theme_park/alderaan/act3/shared_rebel_missions";
const string_id GRAV_UNIT_REPAIRED	= new string_id(REBEL_SHARED_STF, "repair_grav_unit");
const string_id REPAIR_FAILED		= new string_id(REBEL_SHARED_STF, "repair_failed");
const string_id SID_REPAIR			= new string_id(REBEL_SHARED_STF, "repair");

const string BROKEN_GRAV_UNIT	= "object/tangible/theme_park/alderaan/act3/broken_grav_unit.iff";
const string REPAIRED_GRAV_UNIT	= "object/tangible/theme_park/alderaan/act3/repaired_grav_unit.iff";


//------------------------------------------------
// OnObjectMenuRequest
//------------------------------------------------

trigger OnObjectMenuRequest( obj_id player, menu_info mi )
{
	// Add option to repair.
	if (utils.playerHasItemByTemplate(player, BROKEN_GRAV_UNIT))
		mi.addRootMenu( menu_info_types.SERVER_MENU1, SID_REPAIR );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnObjectMenuSelect
//------------------------------------------------

trigger OnObjectMenuSelect( obj_id player, int item )
{
	if ( item == menu_info_types.SERVER_MENU1 )
		repairGravUnit( self, player );

	return SCRIPT_OVERRIDE;
}

void repairGravUnit(obj_id self, obj_id player)
{
	if (utils.playerHasItemByTemplate(player, BROKEN_GRAV_UNIT))
	{
		obj_id inventory = getObjectInSlot(player, "inventory");				
		obj_id gravUnit = createObject(REPAIRED_GRAV_UNIT, inventory, "");

		if (isIdValid(gravUnit))
		{
			sendSystemMessage(player, GRAV_UNIT_REPAIRED);

			obj_id brokenUnit = utils.getItemPlayerHasByTemplate(player, BROKEN_GRAV_UNIT);

			if (isIdValid(brokenUnit))
				destroyObject(brokenUnit);

			destroyObject(self);
		}
		else
		{
			sendSystemMessage(player, REPAIR_FAILED);
		}
	}
	else
	{
		sendSystemMessage(player, REPAIR_FAILED);
	}
}