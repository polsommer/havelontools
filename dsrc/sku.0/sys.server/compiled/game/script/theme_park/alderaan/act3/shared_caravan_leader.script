include library.ai_lib;
include library.create;
include library.utils;
include library.chat;


const string[] TEMPLATE_LIST	= { "object/building/poi/generic_flatten_medium.iff",
									"object/static/vehicle/e3/landspeeder.iff",
									"object/static/vehicle/e3/landspeeder.iff",
									"coa3_caravan_thug",
									"coa3_caravan_thug",
									"coa3_caravan_thug",
									"coa3_caravan_thug",
									"coa3_caravan_thug"
									};

const float[][] LOCATION_LIST	= { {  0.0f, 0.0f,  0.0f,  0.0f },
									{  8.0f, 0.0f,  2.0f, 25.0f },
									{  1.0f, 0.0f,  6.0f, 50.0f },
									{ 10.0f, 0.0f,  0.0f,  0.0f },
									{ -5.0f, 0.0f, 10.0f,  0.0f },
									{ -5.0f, 0.0f, -5.0f,  0.0f },
									{ 10.0f, 0.0f, -5.0f,  0.0f },
									{ -8.0f, 0.0f, -2.0f,  0.0f }
									};


trigger OnAttach()
{
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
	setCondition(self, CONDITION_CONVERSABLE);

	dictionary params = new dictionary();
	params.put("index", 0);

	messageTo(self, "spawnNextObject", params, 1, false);

	return SCRIPT_CONTINUE;
}

messageHandler spawnNextObject()
{
	int objectNum = params.getInt("index");

	// Spawn object
	location loc = getLocation(self);
	loc.x += LOCATION_LIST[objectNum][0];
	loc.y += LOCATION_LIST[objectNum][1];
	loc.z += LOCATION_LIST[objectNum][2];
	obj_id newObject = create.object(TEMPLATE_LIST[objectNum], loc);

	if (isIdValid(newObject))
	{
		setYaw(newObject, LOCATION_LIST[objectNum][3]);

		setObjVar(newObject, "coa3.shared.caravan_leader", self);

		resizeable obj_id[] objectList = getResizeableObjIdArrayObjVar(self, "coa3.shared.obj_list");
		if (objectList == null)
		{
			objectList = new Vector();
		}
		utils.addElement(objectList, newObject);
		if(objectList.length > 0) {

			setObjVar(self, "coa3.shared.obj_list", objectList);
		}
	}

	objectNum++;

	if (objectNum < TEMPLATE_LIST.length)
	{
		params.put("index", objectNum);
		messageTo(self, "spawnNextObject", params, 0, false);
	}

	return SCRIPT_CONTINUE;
}

//trigger OnDestroy()
//{
//	resizeable obj_id[] objectList = getResizeableObjIdArrayObjVar(self, "coa3.shared.obj_list");
//
//	for (int i = 0; i < objectList.length; i++)
//	{
//		if (isIdValid(objectList[i]))
//		{
//			destroyObject(objectList[i]);
//		}
//	}
//
//	return SCRIPT_CONTINUE;
//}