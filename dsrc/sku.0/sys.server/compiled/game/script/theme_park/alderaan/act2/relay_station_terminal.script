include library.utils;
include library.factions;
include library.badge;


const string 	REBEL_STF			= "theme_park/alderaan/act2/rebel_missions";
const string	REBEL_SHARED_STF	= "theme_park/alderaan/act2/shared_rebel_missions";

const string_id MESSAGE_SENT		= new string_id(REBEL_SHARED_STF, "message_sent");
const string_id MISSION_COMPLETE	= new string_id(REBEL_SHARED_STF, "mission_complete");
const string_id TERMINAL_LOCKED		= new string_id(REBEL_SHARED_STF, "terminal_locked");

const string_id SID_USE				= new string_id(REBEL_SHARED_STF, "use_terminal");



trigger OnObjectMenuRequest( obj_id player, menu_info mi )
{
	location loc = getLocation(self);
	obj_id cell = loc.cell;
	
	// Add option to read the message.
	if (hasObjVar(cell, "coa2.rebel.unlocked"))
	{
		mi.addRootMenu( menu_info_types.SERVER_MENU1, SID_USE );
	}

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect( obj_id player, int item )
{
	// Display info dialog.
	if ( item == menu_info_types.SERVER_MENU1 )
	{
		if (utils.playerHasItemByTemplate(player, "object/tangible/theme_park/alderaan/act2/interface_override_device.iff"))
		{
			obj_id device = utils.getItemPlayerHasByTemplate(player, "object/tangible/theme_park/alderaan/act2/interface_override_device.iff");
			destroyObject(device);
			
			setObjVar(player, "coa2.progress", 14);

			sendSystemMessage(player, MESSAGE_SENT);
			factions.awardFactionStanding(player, "Rebel", 500);
			sendSystemMessage(player, MISSION_COMPLETE);
			badge.grantBadge(player, "event_coa2_rebel");
			//badge.notifyHasBadge(player, "event_coa2_rebel");
			playMusic(player, "sound/music_lando_theme.snd");
			removeObjVar(player, "coa2.rebel");
		}
		else
		{
			sendSystemMessage(player, TERMINAL_LOCKED);
		}
	}

	return SCRIPT_CONTINUE;
}

