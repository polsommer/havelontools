include library.instance;
include library.groundquests;
include library.sui;
include library.utils;


trigger OnObjectMenuRequest(obj_id player, menu_info item)
{
	if (getDistance(player, self) > 6.0f)
		return SCRIPT_CONTINUE;

	item.addRootMenu(menu_info_types.ITEM_USE, new string_id("building_name", "mtp_hideout_instance_enter"));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE)
	{
		resizeable string[] startingTriggers = getStartingTrigger(player);
		if ( startingTriggers != null && startingTriggers.length > 0 )
		{
			if ( startingTriggers.length == 1 )
			{
				utils.setScriptVar(player, "mtp_currentInstanceTrigger", startingTriggers[0]);
				utils.setScriptVar(player, "mtp_hideoutCell", getLocation(self).cell);
				instance. requestInstanceMovement(player, "mtp_hideout_instance", startingTriggers[0]);
			}
			else
			{
				utils.setScriptVar(player, "mtp_availableStartingTriggers", startingTriggers);
				
				string title = utils.packStringId(new string_id("theme_park/corellia/quest", "mtp_choose_instance_title"));
				string prompt = utils.packStringId(new string_id("theme_park/corellia/quest","mtp_choose_instance_prompt"));
				
				string[] availableInstances = new string[startingTriggers.length];
				for ( int i = 0; i < startingTriggers.length; i++)
				{
					string instanceName = utils.packStringId(new string_id("theme_park/corellia/quest", startingTriggers[i]));
					availableInstances[i] = instanceName;
				}

				int pid = sui.listbox(self, player, prompt, sui.OK_CANCEL, title, availableInstances, "mtpInstanceSelected");

				if ( pid > -1 )
				{
					string scriptvar_path = "mtp_choose_instance." + player;
					utils.setScriptVar(self, scriptvar_path + ".pid", pid);
					return SCRIPT_CONTINUE;
				}
			}
		}
		else
		{			
			sendSystemMessage(player, new string_id("elevator_text", "mtp_unable_to_descend"));
		}
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

messageHandler mtpInstanceSelected()
{
	if ( (params == null) || (params.isEmpty()) )
	{
		return SCRIPT_CONTINUE;
	}

	obj_id player = sui.getPlayerId(params);

	int btn = sui.getIntButtonPressed(params);
	int idx = sui.getListboxSelectedRow(params);
	
	string scriptvar_path = "mtp_choose_instance." + player;
	string oldPidVar = scriptvar_path + ".pid";

	// clean up string vars
	if ( utils.hasScriptVar(self, oldPidVar) )
	{
		utils.removeScriptVar(self, oldPidVar);
	}

	if(btn == sui.BP_CANCEL)
	{
		utils.removeScriptVar(player, "mtp_availableStartingTriggers");
		return SCRIPT_CONTINUE;
	}
		
	string[] startingTriggers = utils.getStringArrayScriptVar(player, "mtp_availableStartingTriggers");
	utils.removeScriptVar(player, "mtp_availableStartingTriggers");
	
	utils.setScriptVar(player, "mtp_currentInstanceTrigger", startingTriggers[idx]);
	utils.setScriptVar(player, "mtp_hideoutCell", getLocation(self).cell);
	
	instance. requestInstanceMovement(player, "mtp_hideout_instance", startingTriggers[idx]);
	return SCRIPT_CONTINUE;
}

resizeable string[] getStartingTrigger(obj_id player)
{
	resizeable string[] startingTriggers = new string[0];
	
	if ( groundquests.isTaskActive(player, "mtp_hideout_instance_kill_all_droids", "gotoInstance") )
	{
		utils.addElement(startingTriggers, "mtp_kill_all_droids");
	}
	
	if ( groundquests.isTaskActive(player, "mtp_hideout_instance_kill_specific_droids", "gotoInstance") )
	{
		utils.addElement(startingTriggers, "mtp_kill_specific_droids");
	}

	if ( groundquests.isTaskActive(player, "mtp_hideout_instance_recover_supplies", "gotoInstance") )
	{
		utils.addElement(startingTriggers, "mtp_recover_supplies");
	}
	
	if ( groundquests.isTaskActive(player, "mtp_hideout_instance_escort_trapped_meatlump", "gotoInstance") )
	{
		utils.addElement(startingTriggers, "mtp_escort_trapped_meatlump");
	}
	
	return startingTriggers;
}
