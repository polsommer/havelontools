include library.ai_lib;
include library.create;
include library.instance;
include library.groundquests;
include library.structure;
include library.sui;
include library.utils;


trigger OnLogin()
{
	location here = getLocation(self);
	obj_id containingBuilding = getTopMostContainer(self);
	if ( isIdValid(containingBuilding) )
	{
		here = getLocation(containingBuilding);
	}
	
	string area = getBuildoutAreaName(here.x, here.z);
	
	if (area == null || area == "")
	{
		detachScript(self, "theme_park.meatlump.hideout.mtp_instance_player");
		return SCRIPT_CONTINUE;
	}
	
	if (area != "mtp_hideout_instance")
	{
		detachScript(self, "theme_park.meatlump.hideout.mtp_instance_player");
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

trigger OnNewbieTutorialResponse(string action)
{
    if ( action.equals("clientReady") )
    {
		location here = getLocation(self);
		if ( here.area.equals("dungeon1") )
		{
			obj_id containingBuilding = getTopMostContainer(self);
			if ( isIdValid(containingBuilding) )
			{
				here = getLocation(containingBuilding);
			}

			string buildoutAreaName = getBuildoutAreaName(here.x, here.z);
			if ( buildoutAreaName.equals("mtp_hideout_instance") )
			{
				if ( utils.hasScriptVar(self, "mtp_currentInstanceTrigger") )
				{
					string instanceTrigger = utils.getStringScriptVar(self, "mtp_currentInstanceTrigger");
					groundquests.sendSignal(self, instanceTrigger);
				}
			}
		}
    }
	
	return SCRIPT_CONTINUE;
}

trigger OnEnteredCombat()
{
	if ( utils.hasScriptVar(self, "mtp_rescuedMeatlump") )
	{
		obj_id rescuedMeatlump = utils.getObjIdScriptVar(self, "mtp_rescuedMeatlump");
		if ( isIdValid(rescuedMeatlump) )
		{
			messageTo(rescuedMeatlump, "mtp_handleRescuerAttacked", null, 0.5f, false);
		}
	}
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	if ( utils.hasScriptVar(self, "mtp_rescuedMeatlump") )
		utils.removeScriptVar(self, "mtp_rescuedMeatlump");
		
	if ( utils.hasScriptVar(self, "mtp_currentInstanceTrigger") )
		utils.removeScriptVar(self, "mtp_currentInstanceTrigger");
	
	return SCRIPT_CONTINUE;
}
