/***** INCLUDES ****************************************************/

include library.player_structure;
include library.utils;

/***** CONST *******************************************************/

const string_id ACCESS_DENIED						= new string_id("dungeon/death_watch", "access_denied");
const string_id MNU_WATER_VALVE						= new string_id("dungeon/death_watch", "mnu_water_valve");

/***** TRIGGERS ****************************************************/
trigger OnInitialize()
{
	//dictionary params = new dictionary();
	//params.put("terminal", self);
	messageTo(self, "handleTerminalObjVar", null, 1f, false);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	if (!hasObjVar(player, "death_watch.water_pressure"))
	{
		sendSystemMessage(player, ACCESS_DENIED);
		return SCRIPT_CONTINUE;
	}

	obj_id newPlayer = getObjIdObjVar(structure, "death_watch.water_pressure_mission");

	if (player != newPlayer)
	{
		sendSystemMessage(player, ACCESS_DENIED);
		removeObjVar(player, "death_watch.water_pressure");
		setObjVar(player, "death_watch.water_pressure_failed", 1);
		return SCRIPT_CONTINUE;
	}

	int mnuControl = mi.addRootMenu(menu_info_types.ITEM_USE, MNU_WATER_VALVE);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (!isIdValid(player))
		return SCRIPT_CONTINUE;

	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	//switch water valve on/off
	if ( item == menu_info_types.ITEM_USE )
	{
		//debugSpeakMsg(player, "I pressed the valve button");
		dictionary params = new dictionary();
		params.put("player", player);
		params.put("terminal", self);
		messageTo(structure, "handleTerminalSwitch", params, 1f, false);
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleTerminalObjVar()
{
	obj_id structure = player_structure.getStructure(self);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	obj_var_list ovl = getObjVarList(structure, "water_pressure.terminals");
	//debugSpeakMsg(self, "OVL is " + ovl);
	if ( ovl == null )
		return SCRIPT_CONTINUE;

	int numTypes = ovl.getNumItems();
	//debugSpeakMsg(self, "Number of items in list is " + numTypes);
	for ( int i = 0; i < numTypes; i++ )
	{
		obj_var ov = ovl.getObjVar(i);
		string ovName = ov.getName();
		obj_id[] data = ov.getObjIdArrayData();
		//debugSpeakMsg(self, "data is " + data);

		int pos = utils.getElementPositionInArray(data, self);
		//debugSpeakMsg(self, "Position in list is " + pos);
		if ( pos > -1 )
		{
			if (pos == 0)
			{
				setObjVar(self, "valve1", 1);
			}
			else if (pos == 1)
			{
				setObjVar(self, "valve2", 1);
			}
			else if (pos == 2)
			{
				setObjVar(self, "valve3", 1);
			}
			else if (pos == 3)
			{
				setObjVar(self, "valve4", 1);
			}
		}
	}
	return SCRIPT_CONTINUE;
}
