include library.buff;
include library.combat;
include library.trial;
include library.utils;

const boolean DO_LOGGING = true;

messageHandler dualityDetonation()
{
	const int DUALITY_DAMAGE = 8000;
	prose_package pp = new prose_package();
	pp.stringId = new string_id("cbt_spam", "duality_detonate_self");
	pp.actor.set(self);
	pp.target.set(self);
	pp.digitInteger = DUALITY_DAMAGE;
	
	combat.sendCombatSpamMessageProse(self, self, pp, true, true, false, COMBAT_RESULT_HIT);
	damage(self, DAMAGE_ELEMENTAL_HEAT, HIT_LOCATION_BODY, DUALITY_DAMAGE);
	
	obj_id[] targets = trial.getValidTargetsInRadius(self, 8.0f);
	
	if (targets == null || targets.length == 0)
		return SCRIPT_CONTINUE;


	for (int i=0;i<targets.length;i++)
	{
		if (targets[i] == self)
			continue;
			
		pp.stringId = new string_id("cbt_spam", "duality_detonate_other");
		pp.target.set(targets[i]);
		combat.sendCombatSpamMessageProse(self, targets[i], pp, true, true, false, COMBAT_RESULT_HIT);
		damage(targets[i], DAMAGE_ELEMENTAL_HEAT, HIT_LOCATION_BODY, DUALITY_DAMAGE);
	}
	
	playClientEffectObj(self, trial.PRT_WORKING_DUALITY_EXPLOSION, self, "root");
	/**if (buff.hasBuff(self, "aurekDuality"))
		buff.removeBuff(self, "aurekDuality");
	if (buff.hasBuff(self, "beshDuality"))
		buff.removeBuff(self, "beshDuality");**/

	return SCRIPT_CONTINUE;
}

messageHandler aurek_diminish()
{
	location loc = getLocation(self);
	
	obj_id cell = loc.cell;
	
	if (!isIdValid(cell) || (!getCellName(cell).equals("smallroom24") && !getCellName(cell).equals("smallroom21")))
		messageTo(self, "dualityDetonation", null, 0.0f, false);
		
	return SCRIPT_CONTINUE;
}

messageHandler besh_diminish()
{
	location loc = getLocation(self);
	
	obj_id cell = loc.cell;
	
	if (!isIdValid(cell) || (!getCellName(cell).equals("smallroom24") && !getCellName(cell).equals("smallroom21")))
		messageTo(self, "dualityDetonation", null, 0.0f, false);
	
	return SCRIPT_CONTINUE;
}

void doLogging(string section, string message)
{
	if (DO_LOGGING)
		LOG("doLogging/working_player/"+section, message);
}