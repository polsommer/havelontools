include library.space_dungeon;
include library.player_structure;
include library.utils;

//----------------------------------------------------------------------

trigger OnAttach ()
{
	//messageTo (self, "setUpDungeon", null, 3, false );
	obj_id controller = space_dungeon.getDungeonIdForPlayer ( self );
	string dungeonType = getStringObjVar (controller, "space_dungeon.name");

	setObjVar (self, "hracca_glade.dungeon_id", controller);
	listenToMessage(controller, "fiveMinuteTimer");
	listenToMessage(controller, "dungeonEnds");
	
	CustomerServiceLog ("DUNGEON_AvatarPlatform", "*Entered_AvatarPlatform - %TU", self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler fiveMinuteTimer ()
{
	int timeLeft = params.getInt ("timeLeft");
	sendSystemMessage (self, "You have " + timeLeft + " minutes left to complete your assignment.", null);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler dungeonEnds ()
{
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler setUpDungeon ()
{
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

void groupSetObjVar (obj_id player, string objVarName)
{
	setObjVar (player, objVarName, 1);
	obj_id[] members = getGroupMemberIds(player);

	if (members == null )
	{
		return;
	}

	int numInGroup = members.length;
	if (numInGroup == 0)
	{
		return;
	}

	for (int i = 0; i < numInGroup; i++)
	{
		obj_id thisMember = members[i];
		setObjVar (thisMember, objVarName, 1);
	}

	return;
}

//----------------------------------------------------------------------

trigger OnIncapacitated (obj_id killer)
{
	CustomerServiceLog("DUNGEON_HraccaGlade","*Player Died: %TU died in the Hracca Glade.", self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnLogin ()
{
	obj_id controller = space_dungeon.getDungeonIdForPlayer (self);

	if (!space_dungeon.verifyPlayerSession(controller, self))
		return SCRIPT_CONTINUE;

	string dungeonType = getStringObjVar (controller, "space_dungeon.name");

	if (dungeonType == null || dungeonType == "")
	{
		messageTo (self, "recheckDungeonType", null, 5, false );
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnDetach ()
{
	LOG ("space_dungeon", "*%TU had the Timer script detached from them.", self);
	
	obj_id controller = getObjIdObjVar (self, "hracca_glade.dungeon_id");
	stopListeningToMessage(controller, "fiveMinuteTimer");
	removeObjVar (self, "hracca_glade");

	destroyExtras (self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

void destroyExtras (obj_id self )
{
	return;
}

//----------------------------------------------------------------------

messageHandler recheckDungeonType ()
{
	obj_id controller = space_dungeon.getDungeonIdForPlayer (self );

	string dungeonType = getStringObjVar (controller, "space_dungeon.name");

	if (dungeonType == null || dungeonType == "")
	{
		CustomerServiceLog ("DUNGEON_HraccaGlade", "*%TU was not set declared because the dungeon (" + controller + ") didn't have a space_dungeon.name objVar.", self);
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonEjectConfirmed()
{
	LOG("space_dungeon", "theme_park.dungeon.hracca_monster_island.player.msgDungeonEjectConfirmed()");

	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.ejectPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonLaunchConfirmed()
{
	LOG("space_dungeon", "theme_park.dungeon.hracca_monster_island.player.msgDungeonLaunchConfirmed()");

	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.launchPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}
