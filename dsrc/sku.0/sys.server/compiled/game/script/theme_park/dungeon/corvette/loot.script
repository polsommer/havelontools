include library.create;
include library.utils;
include library.permissions;
include library.weapons;

trigger OnAttach ()
{
	detachScript (self, "item.container.loot_crate");
	attachScript (self, "item.container.base.base_container");
	obj_id dungeon = getTopMostContainer (self);
	string newLoot = pickNewLoot(dungeon);
	obj_id cargo = null;
	if(newLoot.startsWith("object/weapon/"))
	{
		cargo = weapons.createWeapon(newLoot, self, rand(0.80f, 0.95f));
	}
	else
	{
		cargo = createObject (newLoot, self, "");
	}
	string cargoName = getTemplateName (cargo);

	if (cargoName == null || cargoName == "")
	{
		return SCRIPT_CONTINUE;
	}

	if ( (cargoName == "object/tangible/component/vehicle/veh_power_plant_av21.iff") ||
	     (cargoName == "object/tangible/component/weapon/corvette_rifle_barrel.iff") )
	{
		setCraftedId(cargo, cargo);
		setCrafter(cargo, cargo);
	}

	return SCRIPT_CONTINUE;
}


trigger OnObjectMenuSelect(obj_id player, int item)
{
	string classTemplate = getSkillTemplate(player);
	if ( classTemplate == null || classTemplate.startsWith("entertainer") || classTemplate.startsWith("trader") )
	{
		sendSystemMessage (player, new string_id ("dungeon/corvette", "no_trader_farming_allowed"));
		return SCRIPT_CONTINUE;
	}
	
	if ( item == menu_info_types.ITEM_OPEN )
	{
		if (!hasObjVar (self, "used"))
		{
			setObjVar (self, "used", 1);
			spawnEnemies(self, player);
		}

		if ( !hasObjVar(self, permissions.VAR_PERMISSION_BASE) )
		{
			switch(getContainerType(self))
			{
				case 0:
					detachScript(self, "item.container.base.base_container");
					break;

				case 1:
					utils.requestContainerOpen(player, self);
					break;

				default:
					break;
			}
		}
	}

	return SCRIPT_CONTINUE;
}

string pickNewLoot (obj_id dungeon)
{
	string newLoot = "object/tangible/wearables/shirt/shirt_s03_rebel.iff";
	string missionType = getStringObjVar (dungeon, "space_dungeon.quest_type");

	if (missionType == null || missionType == "")
	{
		missionType = "none";
	}

	int pickNewLoot = rand (1, 10);

	if (missionType == "rebel_assassin" || missionType == "rebel_destroy" || missionType == "rebel_rescue")
	{
		switch(pickNewLoot)
		{
			case 1:
				newLoot = "object/tangible/wearables/shirt/shirt_s03_rebel.iff";
				break;

			case 2:
				newLoot = "object/tangible/wearables/armor/marine/armor_marine_chest_plate_rebel.iff";
				break;

			case 3:
				newLoot = "object/tangible/component/vehicle/veh_power_plant_av21.iff";
				break;

			case 4:
				newLoot = "object/tangible/food/spice/spice_giggledust.iff";
				break;

			case 5:
				newLoot = "object/weapon/melee/sword/sword_blade_ryyk.iff";
				break;

			case 6:
				newLoot = "object/weapon/ranged/rifle/rifle_lightning.iff";
				break;

			case 7:
				newLoot = "object/tangible/wearables/shirt/shirt_s03_rebel.iff";
				break;

			case 8:
				newLoot = "object/tangible/wearables/armor/marine/armor_marine_chest_plate_rebel.iff";
				break;

			case 9:
				newLoot = "object/weapon/ranged/pistol/pistol_fwg5.iff";
				break;

			case 10:
				newLoot = "object/tangible/loot/quest/bantha_doll.iff";
				break;

			default:
				break;
		}
	}

	else if (missionType == "imperial_assassin" || missionType == "imperial_rescue" || missionType == "imperial_destroy")
	{
		switch(pickNewLoot)
		{
			case 1:
				newLoot = "object/tangible/loot/loot_schematic/corellian_corvette_rifle_berserker_schematic.iff";
				break;

			case 2:
				newLoot = "object/tangible/component/weapon/corvette_rifle_barrel.iff";
				break;

			case 3:
				newLoot = "object/tangible/component/vehicle/veh_power_plant_av21.iff";
				break;

			case 4:
				newLoot = "object/weapon/ranged/rifle/rifle_e11.iff";
				break;

			case 5:
				newLoot = "object/weapon/ranged/rifle/rifle_lightning.iff";
				break;

			case 6:
				newLoot = "object/weapon/ranged/pistol/pistol_fwg5.iff";
				break;

			case 7:
				newLoot = "object/weapon/melee/sword/sword_blade_ryyk.iff";
				break;

			case 8:
				newLoot = "object/tangible/loot/quest/bantha_doll.iff";
				break;

			case 9:
				newLoot = "object/tangible/food/spice/spice_crash_n_burn.iff";
				break;

			case 10:
				newLoot = "object/weapon/melee/baton/baton_stun.iff";
				break;

			default:
				break;

		}
	}

	else
	{
		switch(pickNewLoot)
		{
			case 1:
				newLoot = "object/tangible/component/vehicle/veh_power_plant_av21.iff";
				break;

			case 2:
				newLoot = "object/tangible/loot/quest/bantha_doll.iff";
				break;

			case 3:
				newLoot = "object/tangible/food/spice/spice_giggledust.iff";
				break;

			case 4:
				newLoot = "object/weapon/melee/baton/baton_stun.iff";
				break;

			case 5:
				newLoot = "object/weapon/ranged/rifle/rifle_lightning.iff";
				break;

			case 6:
				newLoot = "object/weapon/melee/baton/baton_stun.iff";
				break;

			case 7:
				newLoot = "object/weapon/ranged/rifle/rifle_lightning.iff";
				break;

			case 8:
				newLoot = "object/weapon/ranged/rifle/rifle_e11.iff";
				break;

			case 9:
				newLoot = "object/weapon/melee/sword/sword_blade_ryyk.iff";
				break;

			case 10:
				newLoot = "object/tangible/food/spice/spice_crash_n_burn.iff";
				break;

			default:
				break;
		}
	}
	return newLoot;
}

void spawnEnemies(obj_id self, obj_id player)
{
	obj_id top = getTopMostContainer(self);
	location here = getLocation(self);
	obj_id cell = here.cell;
	string room = utils.getCellName(top, cell);
	location loc = getGoodLocation(top, room);
	string type = getTemplateName(top);

	if(type == "object/building/general/space_dungeon_corellian_corvette_imperial.iff")
	{
		obj_id guard = create.object("rebel_super_battle_droid", loc);
		return;
	}

	if(type == "object/building/general/space_dungeon_corellian_corvette_rebel.iff")
	{
		obj_id guard = create.object("imperial_super_battle_droid", loc);
	}
	else
	{
		obj_id guard = create.object("corsec_super_battle_droid", loc);
	}

	return;
}
