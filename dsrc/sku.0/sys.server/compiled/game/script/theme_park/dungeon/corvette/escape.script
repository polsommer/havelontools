include library.player_structure;
include library.space_dungeon;
include library.create;
include library.utils;
include library.permissions;

inherits terminal.base.base_terminal;

const string MSGS = "dungeon/corvette";

trigger OnAttach ()
{
	setName (self, "Escape Pod Controls");
	createTriggerVolume ( "escape_pod", 3, true );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect (obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{
		obj_id dungeon = getTopMostContainer (self);

		if (hasObjVar (player, "corl_corvette.mission_complete"))
		{
			messageTo (player, "rewardTime", null, 3, false );
			setObjVar (player, "corl_corvette.got_reward", 1);
		}
		else
		{
			CustomerServiceLog ("DUNGEON_CorellianCorvette", "*Corvette Escaped: %TU has left the Corvette via the escape pod.", player);
			space_dungeon.ejectPlayerFromDungeon (player);
		}

		dictionary webster = new dictionary ();
		int session = space_dungeon.getDungeonSessionId(dungeon);

		webster.put ("session", session);
		messageTo (self, "playersLeavingDungeon", webster, 60, false );
	}
	return SCRIPT_CONTINUE;
}

messageHandler cleanOutDungeon ()
{
	obj_id top = getTopMostContainer (self);
	if (hasObjVar (top, "fuel"))
	{
		removeObjVar (top, "fuel");
	}

	if (hasObjVar (top, "hyperdrive"))
	{
		removeObjVar (top, "hyperdrive");
	}

	if (hasObjVar (top, "engine"))
	{
		removeObjVar (top, "engine");
	}
	if (top == null)
	{
		return SCRIPT_CONTINUE;
	}
	int x = 0;
	while (x < 200)
	{
		string variable = "spawned" + x;
		if (hasObjVar (top, variable))
		{
			obj_id thing = getObjIdObjVar (top, variable);
			destroyObject (thing);
		}

		x = x + 1;
	}

	obj_id meeting = getCellId (top, "meetingroom38");
	obj_id elevator = getCellId (top, "elevator57");
	obj_id bridge = getCellId (top, "bridge66");
	obj_id officer1 = getCellId (top, "officerquarters64");
	obj_id officer2 = getCellId (top, "officerquarters65");

	detachScript (meeting, "theme_park.dungeon.corvette.locked");
	detachScript (elevator, "theme_park.dungeon.corvette.locked");
	detachScript (officer2, "theme_park.dungeon.corvette.locked");
	detachScript (officer1, "theme_park.dungeon.corvette.locked");
	detachScript (bridge, "theme_park.dungeon.corvette.locked");

	removeObjVar (top, "current_players");

	if (isIdValid(top))
	{
		space_dungeon.endDungeonSession(top);
	}

	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered (string volume, obj_id player )
{
	if (volume == "escape_pod")
	{
		string_id escapeMessage = new string_id (MSGS, "escape_pod_message");
		sendSystemMessage (player, escapeMessage);
	}
	return SCRIPT_CONTINUE;
}


messageHandler playersLeavingDungeon ()
{
		obj_id dungeon = getTopMostContainer ( self );

		int sentSession = params.getInt ("session");
		int thisSession = space_dungeon.getDungeonSessionId (dungeon);

		if (sentSession == thisSession)
		{

			obj_id [] playersLeft = player_structure.getPlayersInBuilding(dungeon);

			if (playersLeft == null)
			{
				messageTo (self, "cleanOutDungeon", null, 1, false );
				space_dungeon.endDungeonSession (dungeon);
				LOG ("space_dungeon", "corvette.escape.playersLeavingDungeon Says the players left in dungeon was NULL");
			}

			int numInDungeon = playersLeft.length;

			LOG ("space_dungeon", "corvette.escape.playersLeavingDungeon Says there are " + numInDungeon + " players left in the dungeon (" + dungeon + ")");

			if (numInDungeon == 0)
			{
				messageTo (self, "cleanOutDungeon", null, 1, false );
				space_dungeon.endDungeonSession (dungeon);
			}
		}

		return SCRIPT_CONTINUE;
}