/***** INCLUDES ****************************************************/

include library.player_structure;
include library.utils;

/***** CONST *******************************************************/

const string_id ACCESS_DENIED						= new string_id("dungeon/death_watch", "access_denied");
const string_id MNU_WATER_VALVE						= new string_id("dungeon/death_watch", "mnu_water_valve");

/***** TRIGGERS ****************************************************/
trigger OnInitialize()
{
	messageTo(self, "handleLightObjVar", null, 1f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleLightObjVar()
{
	obj_id structure = player_structure.getStructure(self);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	obj_var_list ovl = getObjVarList(structure, "water_pressure.lights");
	//debugSpeakMsg(self, "OVL is " + ovl);
	if ( ovl == null )
		return SCRIPT_CONTINUE;

	int numTypes = ovl.getNumItems();
	//debugSpeakMsg(self, "Number of items in list is " + numTypes);
	for ( int i = 0; i < numTypes; i++ )
	{
		obj_var ov = ovl.getObjVar(i);
		string ovName = ov.getName();
		obj_id[] data = ov.getObjIdArrayData();

		int pos = utils.getElementPositionInArray(data, self);
		//debugSpeakMsg(self, "Position in list is " + pos);
		if ( pos > -1 )
		{
			if (pos == 0)
			{
				setObjVar(structure, "light1", self);
			}
			else if (pos == 1)
			{
				setObjVar(structure, "light2", self);
			}
			else if (pos == 2)
			{
				setObjVar(structure, "light3", self);
			}
			else if (pos == 3)
			{
				setObjVar(structure, "light4", self);
			}
		}
	}

	return SCRIPT_CONTINUE;
}

