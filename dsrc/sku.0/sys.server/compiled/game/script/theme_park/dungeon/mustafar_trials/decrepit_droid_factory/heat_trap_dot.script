include library.trial;
include library.dot;

const int DAMAGE  = 2000;
const int DURATION = 5;

const boolean LOGGING				= false;

trigger OnAttach()
{
	messageTo(self, "validateBurn", null, 1, false);
	return SCRIPT_CONTINUE;
}

trigger OnLogin()
{
	obj_id top = getTopMostContainer(self);
	if (top == null)
		detachScript(self, "theme_park.dungeon.mustafar_trials.decrepit_droid_factory.heat_trap_dot");
		
	string template = getTemplateName(top);
	if (template.indexOf("decrepit") < 0)
		detachScript(self, "theme_park.dungeon.mustafar_trials.decrepit_droid_factory.heat_trap_dot");
	return SCRIPT_CONTINUE;		
}
messageHandler validateBurn()
{
	obj_id top = getTopMostContainer(self);
	string or5_script = "theme_park.dungeon.mustafar_trials.decrepit_droid_factory.colonel_or5";
	obj_id[] withScript = trial.getObjectsInDungeonWithScript(trial.getTop(self), or5_script);
	obj_id or_5 = null;
	if (withScript == null && withScript.length == 0)
		return SCRIPT_CONTINUE;
	else
		or_5 = withScript[0];
		
	if (top == null)
	{
		detachScript(self, "theme_park.dungeon.mustafar_trials.decrepit_droid_factory.heat_trap_dot");
		return SCRIPT_CONTINUE;
	}
	
	if (canSee(self, or_5) && !isDead(or_5))
	{
		if (!dot.isOnFire(self))
		{
			dot.applyDotEffect(self, or_5, dot.DOT_FIRE, "ddf_fire_cell_dot", HEALTH, -1, DAMAGE, DURATION, true, null);
		}
	}
	
	messageTo(self, "validateBurn", null, DURATION -1, false);
	return SCRIPT_CONTINUE;
}

void doLogging(string section, string message)
{
	if (LOGGING)
		LOG("logging/heat_trap_dot/"+section, message);
}