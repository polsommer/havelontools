include ai.ai_combat;
include library.ai_lib;
include library.utils;

const string_id FIVE					= new string_id("dungeon/myyydril", "five");
const string_id FOUR					= new string_id("dungeon/myyydril", "four");
const string_id THREE					= new string_id("dungeon/myyydril", "three");
const string_id TWO					= new string_id("dungeon/myyydril", "two");
const string_id ONE					= new string_id("dungeon/myyydril", "one");

const color RED   = new color(255,   0,   0, 255);

trigger OnAttach()
{

/** This event is broken. Grievous gets in a state where he won't fight back.

	setObjVar(self, "grievous.power_level", 0);
	ai_lib.setMood(self, "threaten");
	//ai_lib.setDefaultMoveSpeed(self, 3); <-- you can't do this any more.

	messageTo(self, "handleGrievousAiLoop", null, 3.0f, false);
	
**/
	return SCRIPT_CONTINUE;
}



messageHandler handleGrievousAiLoop()
{
	int level = getIntObjVar(self, "grievous.power_level");
	if ( level < 5)
	{
		obj_id powerCell = lookForPowerCells(self);
		if (isIdValid(powerCell))
		{
			dictionary d= new dictionary();
			d.put("powerCell", powerCell);
			if (utils.getBooleanScriptVar(self, "grievous.absorbing") == false)
				messageTo(self, "handleAbsorbPowerCell", d, 7.0f, false);
		}
	}
	messageTo(self, "handleGrievousAiLoop", null, 10.0f, false);
	return SCRIPT_CONTINUE;
}

obj_id lookForPowerCells(obj_id self)
{
	location selfLocation = getLocation(self);
	obj_id[] objectsInRange = getObjectsInRange(selfLocation, 200.0f);

	for (int i = 0; i < objectsInRange.length; i++)
	{
		if (hasObjVar(objectsInRange[i], "grievous_encounter.isPowerCell"))
		{
			obj_id powerCell = objectsInRange[i];
			ai_lib.aiFollow(self, powerCell);
			return powerCell;
		}
	}

	return null;
}

messageHandler handleAbsorbPowerCell()
{
	obj_id powerCell = params.getObjId("powerCell");
	float distance = getDistance(self, powerCell);

	if ( distance <= 15.0 )
	{
		if (utils.getBooleanScriptVar(self, "grievous.absorbing") == false)
		{
			utils.setScriptVar(self, "grievous.absorbing", true);
			dictionary d= new dictionary();
			d.put("powerCell", powerCell);

			messageTo(self, "handleAbsorb5", d, 1.0f, false);
	}
	}


	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb5()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		showFlyText(self, FIVE, 1.0f, RED);
		messageTo(self, "handleAbsorb4", params, 1.0f, false);
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb4()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		showFlyText(self, FOUR, 1.0f, RED);
		messageTo(self, "handleAbsorb3", params, 1.0f, false);
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb3()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		showFlyText(self, THREE, 1.0f, RED);
		messageTo(self, "handleAbsorb2", params, 1.0f, false);
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb2()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		showFlyText(self, TWO, 1.0f, RED);
		messageTo(self, "handleAbsorb1", params, 1.0f, false);
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb1()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		showFlyText(self, ONE, 1.0f, RED);
		messageTo(self, "handleAbsorb0", params, 1.0f, false);
	}
	else
	{
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleAbsorb0()
{
	if (utils.getBooleanScriptVar(self, "grievous.absorbing") == true)
	{
		obj_id powerCell = params.getObjId("powerCell");
		destroyObject(powerCell);
		int level = getIntObjVar(self, "grievous.power_level");
		if ( level < 5 )
		{
			setObjVar(self, "grievous.power_level", level + 1);
			playClientEffectObj(self, "appearance/pt_grievious_powerup.prt", self, "");
			int hp = getMaxAttrib(self, 0);
			debugSpeakMsg(self, "My hitpoints are at: " + hp);
			setMaxAttrib(self, 0,  hp + (int)(.10 * hp));
			int newHp = getMaxAttrib(self, 0);
			setAttrib(self, 0 , newHp);
			//debugSpeakMsg(self, "But they are now at: " + getMaxAttrib(self, 0));
		}
		level = getIntObjVar(self, "grievous.power_level");
		utils.setScriptVar(self, "grievous.absorbing", false);
	}


	return SCRIPT_CONTINUE;
}

trigger OnCreatureDamaged(obj_id attacker, obj_id weapon, int[] damage)
{
	utils.setScriptVar(self, "grievous.absorbing", false);
	return SCRIPT_CONTINUE;
}

trigger OnDestroy()
{
	obj_id contentManager = getObjIdObjVar(self, "grievous_encounter.contentManager");
	messageTo(contentManager, "handleNpcDeath", null, 1, false);
 	return SCRIPT_CONTINUE;
}
