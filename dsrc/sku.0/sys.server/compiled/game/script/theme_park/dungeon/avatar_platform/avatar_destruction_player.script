/***** INCLUDES ***********************************/

include library.space_dungeon;
include library.pclib;


/***** CONSTANTS **********************************/


/***** TRIGGERS ***************************************/
trigger OnAttach()
{
	obj_id structure = getTopMostContainer(self);
	string name = getTemplateName (structure);
	location here = getLocation( self );
	string planet = here.area;
	//debugSpeakMsg(self, "I am located on " + planet);
	if (planet != "kashyyyk_pob_dungeons")
	{
		detachScript(self, "theme_park.dungeon.avatar_platform.avatar_destruction_player");
		return SCRIPT_CONTINUE;
	}

	messageTo(self, "handleExplosionEffect", null, 20f, false);
	messageTo(self, "handleAvatarDestructionPlayer", null, 300f, false);
	playClientEffectObj(self, "clienteffect/avatar_overload_alarm.cef", self, "");
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	obj_id structure = getTopMostContainer(self);
	location here = getLocation( self );
	string planet = here.area;
	if (planet != "kashyyyk_pob_dungeons")
	{
		detachScript(self, "theme_park.dungeon.avatar_platform.avatar_destruction_player");
		return SCRIPT_CONTINUE;
	}

	messageTo(self, "handleExplosionEffect", null, 20f, false);
	messageTo(self, "handleAvatarDestructionPlayer", null, 300f, false);
	playClientEffectObj(self, "clienteffect/avatar_overload_alarm.cef", self, "");
	return SCRIPT_CONTINUE;
}

trigger OnLogin()
{
	obj_id structure = getTopMostContainer(self);
	string name = getTemplateName (structure);
	location here = getLocation( self );
	string planet = here.area;
	if (planet != "kashyyyk_pob_dungeons")
	{
		detachScript(self, "theme_park.dungeon.avatar_platform.avatar_destruction_player");
		return SCRIPT_CONTINUE;
	}

	messageTo(self, "handleExplosionEffect", null, 20f, false);
	messageTo(self, "handleAvatarDestructionPlayer", null, 300f, false);
	playClientEffectObj(self, "clienteffect/avatar_overload_alarm.cef", self, "");
	return SCRIPT_CONTINUE;
}

messageHandler handleExplosionEffect ()
{
	obj_id structure = getTopMostContainer(self);
	location here = getLocation( self );
	string planet = here.area;
	if (planet != "kashyyyk_pob_dungeons")
	{
		detachScript(self, "theme_park.dungeon.avatar_platform.avatar_destruction_player");
		return SCRIPT_CONTINUE;
	}

	playClientEffectLoc(self, "clienteffect/avatar_explosion_01.cef", getLocation (self), 0.0f);
	playClientEffectObj(self, "clienteffect/avatar_overload_alarm.cef", self, "");
	messageTo(self, "handleExplosionEffect", null, 15f, false);

	obj_id currentCell = getContainedBy(self);
	obj_id[] items = getContents(currentCell);

	if (items == null)
	{
		return SCRIPT_CONTINUE;
	}

	int numItems = items.length;
	if ( numItems > 0 )
	{
		for (int i = 0; i < numItems; i++)
		{
			if (isNpcCreature(items[i]))
			{
				int deathRoll = rand(1, 10);
				if ( deathRoll < 6 )
				{
					kill(items[i]);
				}
			}
		}
	}

	return SCRIPT_CONTINUE;
}

messageHandler handleAvatarDestructionPlayer ()
{
	obj_id structure = getTopMostContainer(self);
	location here = getLocation( self );
	string planet = here.area;
	if (planet != "kashyyyk_pob_dungeons")
	{
		detachScript(self, "theme_park.dungeon.avatar_platform.avatar_destruction_player");
		return SCRIPT_CONTINUE;
	}

	playClientEffectLoc(self, "clienteffect/avatar_explosion_02.cef", getLocation (self), 0.0f);

	killPlayer(self, structure);
	return SCRIPT_CONTINUE;
}

void killPlayer(obj_id player, obj_id killer)
{
	if ( !isIdValid(player) || !isIdValid(killer) || (!isPlayer(player)) )
	{
		return;
	}
	//set all pools to -50
	{
		int dam = -(getAttrib(player,HEALTH ) + 50);
		addAttribModifier(player, HEALTH,dam, 0f, 0f, MOD_POOL);
	}
	pclib.coupDeGrace(player, killer, false);
	ejectPlayerFromAvatar(player);
	return;
}

void ejectPlayerFromAvatar(obj_id player)
{
	pclib.resurrectPlayer(player, false);
	space_dungeon.ejectPlayerFromDungeon(player);
	return;
}
