include library.ai_lib;
include ai.ai_combat;
include library.combat;
include library.utils;

trigger OnExitedCombat()
{
	if (!ai_lib.isAiDead(self))
	{
		messageTo(self, "checkForReset", null, 60f, false);
	}

	return SCRIPT_CONTINUE;
}

messageHandler checkForReset ()
{
	if(ai_lib.isInCombat( self ) )
	{
		return SCRIPT_CONTINUE;
	}

	obj_id currentCell = getContainedBy(self);
	obj_id[] items = getContents(currentCell);

	if (items == null)
	{
		return SCRIPT_CONTINUE;
	}

	int numItems = items.length;
	if ( numItems > 0 )
	{
		for (int i = 0; i < numItems; i++)
		{
			if (isPlayer(items[i]))
			{
				messageTo(self, "checkForReset", null, 60f, false);
				return SCRIPT_CONTINUE;
			}
		}
	}

	resetBossFight(self);
	return SCRIPT_CONTINUE;
}

void resetBossFight(obj_id self)
{
	obj_id structure = getTopMostContainer(self);
	obj_id commandhall = getCellId(structure, "commandhall08");
	obj_id commanddeck = getCellId(structure, "commanddeck");

	permissionsMakePrivate(commanddeck);
	permissionsMakePublic(commandhall);

	removeObjVar(structure, "avatar_platform.boss_fight");
	removeObjVar(structure, "avatar_platform.boss_fight_door_locked");

	destroyObject(self);
	return;
}
