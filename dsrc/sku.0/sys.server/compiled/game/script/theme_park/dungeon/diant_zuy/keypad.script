include library.utils;
include library.permissions;

const string MSGS = "dungeon/diant_bunker";

trigger OnObjectMenuRequest (obj_id player, menu_info mi)
{
	menu_info_data mid = mi.getMenuItemByType(menu_info_types.ITEM_USE);
	if ( mid == null )
	{
		return SCRIPT_CONTINUE;
	}
	
	mid.setServerNotify(true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect (obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{

		keypad ( player );
	}
		
	return SCRIPT_CONTINUE;
}

void keypad( obj_id player )
{
	obj_id self = getSelf();
	int pid = createSUIPage ("Script.Keypad", self, player, "KeypadCallback");
	subscribeToSUIProperty(pid, "result.numberBox", "localtext");
	subscribeToSUIProperty(pid, "buttonEnter", "ButtonPressed");

	// Disabling Slice button and Keycard button for the Corvette
	setSUIProperty(pid, "buttonSlice", "enabled", "false");
	setSUIProperty(pid, "buttonSlice", "visible", "false");
	setSUIProperty(pid, "buttonKeycard", "enabled", "false");
	setSUIProperty(pid, "buttonKeycard", "visible", "false");
	
	showSUIPage (pid);
	
	return;
}

messageHandler KeypadCallback()
{
	obj_id top = getTopMostContainer(self);
	string result = params.getString("result.numberBox" + "." + "localtext");
	string button = params.getString("buttonEnter.ButtonPressed");
	obj_id player = params.getObjId ("player");
	string passcard = "object/tangible/loot/dungeon/corvette/passkey.iff";
	string room = getStringObjVar (self, "room");
	
	if (!isIdValid(player))
	{
		return SCRIPT_OVERRIDE;
	}		
	
	if ( button == null )
	{
		button = "none";
	}
	
	if ( result == null ) 
	{
		result = "0";
	}
	
	int passkey = getIntObjVar(top, "diant.sekritCode");
	
	if (passkey == 0)
	{
		passkey = -1;
	}
	
	if (button == "enter")
	{
		
		string pass = "";
		pass = pass + passkey;
		
		if (pass == result)
		{
			string_id open = new string_id (MSGS, "keypad_open");
			sendSystemMessage (player, open);

			string playerName = getFirstName(player);
			obj_id pantry = getCellId(top, "pantry");
			permissionsAddAllowed (pantry, playerName);
		}
		else
		{
			string_id lock = new string_id (MSGS, "keypad_lock");
			sendSystemMessage (player, lock);
		}
	}
	
	return SCRIPT_CONTINUE;
}