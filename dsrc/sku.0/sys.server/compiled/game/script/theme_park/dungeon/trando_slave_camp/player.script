include library.space_dungeon;
include library.player_structure;
include library.utils;
include library.groundquests;


//----------------------------------------------------------------------

trigger OnAttach ()
{
	messageTo (self, "setUpDungeon", null, 3, false );
	obj_id top = space_dungeon.getDungeonIdForPlayer ( self );
	string dungeonType = getStringObjVar (top, "space_dungeon.name");
	messageTo(self, "finishEntryQuest", null, 10, true);

	CustomerServiceLog ("DUNGEON_BlackscaleCompound", "*Entered_BlackscaleCompound - %TU", self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnLogin()
{
	string scene = getCurrentSceneName();
	if (!scene.equals("kashyyyk_north_dungeons"))
		detachScript(self, "theme_park.dungeon.trando_slave_camp.player");
	
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnDetach()
{
		
	groundquests.clearQuest(self, "ep3_slave_camp_control_room_access");
	return SCRIPT_CONTINUE;	
}

messageHandler setUpDungeon ()
{
	obj_id controller = space_dungeon.getDungeonIdForPlayer(self);

	messageTo (controller, "beginSpawn", null, 1, false );

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonEjectConfirmed()
{
	LOG("space_dungeon", "theme_park.dungeon.avatar_platform.player.msgDungeonEjectConfirmed()");

	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.ejectPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonLaunchConfirmed()
{
	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.launchPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}

//------------------------------------------------------------------------
messageHandler finishEntryQuest()
{
	groundquests.sendSignal(self, "signalSlaverCampEntered");
	return SCRIPT_CONTINUE;
}