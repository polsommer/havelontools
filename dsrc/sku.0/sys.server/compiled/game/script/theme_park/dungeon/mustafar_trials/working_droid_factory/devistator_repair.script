include library.trial;
include library.utils;


trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (!trial.isRruDeactivated(self))
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_RRU_ACTIVE);
	}
	else
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_RRU_INACTIVE);
	}
	sendDirtyObjectMenuNotification(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (item == menu_info_types.ITEM_USE)
	{
		if (!trial.isRruDeactivated(self) && hasCurrentInhibitor(player))
		{
			trial.setRruDeactivated(self, true);
			playPowerDown(self);
			utils.sendSystemMessagePob(trial.getTop(self), trial.WORKING_RRU_FALTER);
			messageTo(self, "resetRru", trial.getSessionDict(trial.getTop(self), "devistator_control"), rand(15, 28), false);
		}
		else if (!trial.isRruDeactivated(self) && !hasCurrentInhibitor(player))
		{
			sendSystemMessage(player, trial.WORKING_RRU_OP_CLUE);
		}
		else if (trial.isRruDeactivated(self))
		{
			return SCRIPT_CONTINUE;	
		}
	}

	return SCRIPT_CONTINUE;
}

void playPowerDown(obj_id self)
{
	string effect = "clienteffect/cyborg_itm_powerdown.cef";
	playClientEffectObj(self, effect, self, "");
}

void playPowerUp(obj_id self)
{
	string effect = "clienteffect/amb_biogenics_reactor_bootup.cef";
	playClientEffectObj(self, effect, self, "");
}

boolean hasCurrentInhibitor(obj_id player)
{
	if (!utils.hasScriptVar(player, trial.WORKING_INHIBITOR_TRACKER))
		return false;
		
	int tracking = utils.getIntScriptVar(player, trial.WORKING_INHIBITOR_TRACKER);
	utils.removeScriptVar(player, trial.WORKING_INHIBITOR_TRACKER);
	
	return (trial.getSession(trial.getTop(player), "devistator_control") == tracking);	
}

messageHandler resetRru()
{
	if (!trial.verifySession(trial.getTop(self), params, "devistator_control"))
	{
		return SCRIPT_CONTINUE;
	}

	if (trial.isDevistatorKilled(self))
	{
		return SCRIPT_CONTINUE;
	}	
	trial.bumpSession(trial.getTop(self), "devistator_control");
	playPowerUp(self);
	trial.setRruDeactivated(self, false);
	utils.sendSystemMessagePob(trial.getTop(self), trial.WORKING_RRU_RECHARGE);
	return SCRIPT_CONTINUE;
}