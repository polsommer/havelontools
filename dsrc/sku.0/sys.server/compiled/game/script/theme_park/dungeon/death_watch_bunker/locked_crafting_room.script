include library.utils;
include library.group;

trigger OnAttach ()
{
	permissionsMakePrivate ( self );
	return SCRIPT_CONTINUE;
}

trigger OnInitialize ()
{
	permissionsMakePrivate ( self );
	return SCRIPT_CONTINUE;
}

messageHandler unlockYourself()
{
	obj_id player = params.getObjId ("player");
	if (player == null)
	{
		CustomerServiceLog ("DUNGEON_DeathWatchBunker", "*Death Watch Problem: Player with a null ID tried to unlock the door...");
		return SCRIPT_CONTINUE;
	}
	removeAll(self);
	addPartyToList(player);
	dictionary webster = new dictionary ();
	webster.put ("player", player);
	messageTo (self, "cleanOutRoom", webster, 300, false);
	return SCRIPT_CONTINUE;
}

void addPartyToList(obj_id player)
{
	obj_id self = getSelf();
	string fname = getFirstName (player);
	permissionsAddAllowed (self, fname);

	if ( group.isGrouped(player) )
	{
		obj_id groupObj = getGroupObject(player);
		obj_id[] groupMembers = getGroupMemberIds(groupObj);
		int numGroupMembers = groupMembers.length;
		for (int f = 0; f < numGroupMembers; f++)
		{
			obj_id groupie = groupMembers[f];
			if ( isIdValid(groupie) )
			{
				if ( groupie != player )
				{
					string firstName = getFirstName (groupie);
					permissionsAddAllowed (self, firstName);
				}
			}
		}
	}
	else
	{
		permissionsAddAllowed (self, fname);
	}
	return;
}

void removeAll (obj_id self)
{
	string[] currentList = permissionsGetAllowed(self);

	int listNum = currentList.length;

	if (listNum > 0)
	{

		for (int i = 0; i < listNum; i++)
		{
			string thisMember = currentList[i];
			permissionsRemoveAllowed(self, thisMember);
		}
	}
	return;
}

// Cleanup code - Add the droids in the room to the room controller

messageHandler addTailorDroid()
{
	obj_id droid = params.getObjId ("droid");
	setObjVar (self, "tailorDroid", droid);
	return SCRIPT_CONTINUE;
}

messageHandler addEngineerDroid()
{
	obj_id droid = params.getObjId ("droid");
	setObjVar (self, "engineerDroid", droid);
	return SCRIPT_CONTINUE;
}

messageHandler addArmorDroid()
{
	obj_id droid = params.getObjId ("droid");
	setObjVar (self, "armorDroid", droid);
	return SCRIPT_CONTINUE;
}

messageHandler addJetPackDroid()
{
	obj_id droid = params.getObjId ("droid");
	setObjVar (self, "jetPackDroid", droid);
	return SCRIPT_CONTINUE;
}

messageHandler cleanOutRoom ()
{
	// Clean up the droids - PMW
	obj_id droid = null;
	
	if (hasObjVar (self, "tailorDroid"))
	{
		droid = getObjIdObjVar (self, "tailorDroid");
		if (isIdValid(droid))
		{
			messageTo (droid, "roomReset", null, 1, false);
		}
	}
	
	if (hasObjVar (self, "engineerDroid"))
	{
		droid = getObjIdObjVar (self, "engineerDroid");
		if (isIdValid(droid))
		{
			messageTo (droid, "roomReset", null, 1, false);
		}
	}
	
	if (hasObjVar (self, "jetPackDroid"))
	{
		droid = getObjIdObjVar (self, "jetPackDroid");
		if (isIdValid(droid))
		{
			messageTo (droid, "roomReset", null, 1, false);
		}
	}
	
	if (hasObjVar (self, "armorDroid"))
	{
		droid = getObjIdObjVar (self, "armorDroid");
		if (isIdValid(droid))
		{
			messageTo (droid, "roomReset", null, 1, false);
		}
	}
		
	obj_id player = params.getObjId ("player");
	location exitPoint = new location (-4648, 0, 4331, "endor", null);
	//sendSystemMessage (player, "You Gotta Go", null);
	if ( group.isGrouped(player) )
	{
		obj_id groupObj = getGroupObject(player);
		obj_id[] groupMembers = getGroupMemberIds(groupObj);
		int numGroupMembers = groupMembers.length;
		for (int f = 0; f < numGroupMembers; f++)
		{
			obj_id groupie = groupMembers[f];
			if ( isIdValid(groupie) )
			{
				if ( groupie != player )
				{
					utils.warpPlayer (groupie, exitPoint);
					detachScript (groupie, "theme_park.dungeon.death_watch_bunker.death_script");
				}
			}
		}
	}
	else
	{
		utils.warpPlayer (player, exitPoint);
		detachScript (player, "theme_park.dungeon.death_watch_bunker.death_script");
	}
	removeAll (self);
	return SCRIPT_CONTINUE;
}