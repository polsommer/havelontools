// Obiwan quest monitor script - this script checks for quest accomplishments and will try to spawn obi once you are ready.

// ********************************************************************
//					INCLUDES
// ********************************************************************

include library.chat;
include library.groundquests;
include library.mustafar;
include library.prose;
include library.utils;

// ********************************************************************
//					CONSTS
// ********************************************************************

const string TRIGGER_QUEST		= "som_prelude_obiwan_check";

const boolean CONST_FLAG_DO_LOGGING		= false;

// ********************************************************************
//					TRIGGERS
// ********************************************************************

trigger OnAttach ()
{
	if(hasObjVar(self, "didMustafarCrystalLair"))
		if(!isGod(self))
		{
			messageTo (self, "removeMonitor", null, 1, false);
			return SCRIPT_CONTINUE;
		}

	if(hasObjVar(self, "waitingOnObiwan"))
		messageTo(self, "recallObiwanDelay", null, 180, false);

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnDetach()
{

	if(hasObjVar(self, "waitingOnObiwan"))
		removeObjVar(self, "waitingOnObiwan");
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnInitialize()
{

	if(hasObjVar(self, "didMustafarCrystalLair"))
		if(!isGod(self))
		{
			messageTo (self, "removeMonitor", null, 1, false);
			return SCRIPT_CONTINUE;
		}
		return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnLogin ()
{
	if(hasObjVar(self, "didMustafarCrystalLair"))
		if(!isGod(self))
		{
			messageTo (self, "removeMonitor", null, 1, false);
			return SCRIPT_CONTINUE;
		}

	if(hasObjVar(self, "waitingOnObiwan"))
		if(!utils.hasScriptVar(self,"waitingOnObiwanLoop"))
		{
			utils.setScriptVar(self,"waitingOnObiwanLoop",1);	//so as to avoid firing if the player is merely crossing server boundarys on a single planet.
			messageTo(self, "recallObiwanDelay", null, 180, false);
		}
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnQuestCompleted(int questNameCrc)
{
	string questName = questGetQuestName(questNameCrc);
	int questNameChecksum = questName.indexOf("som_kenobi");	// if it's a kenobi quest that was completed
	if(questNameChecksum > -1)
	{
		string planetName = getCurrentSceneName();				// if we're on mustafar
		if (!planetName.startsWith("mustafar"))
			return SCRIPT_CONTINUE;

		if(mustafar.hasCompletedTrials(self))								// if we've completed all the necessary quests
		{
			if (mustafar.canCallObiwan(self))
			{
				messageTo(self, "callObiWanNow", null, 5f, false);
			}
			else
			{
				setObjVar(self, "waitingOnObiwan", 1);
				dictionary params = new dictionary();
				params.put("appearanceComment", 1);
				messageTo(self, "recallObiwanDelay", params, 180, false);
			}
		}
	}
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnSomeTaskActivated(int questCrc, int taskId)
{
	//int questCrc = questGetQuestId(questName);
	int appearanceComment = 0;
	//debugSpeakMsg (self, "onTaskActivated triggered");
	if (groundquests.isTaskActive(self, "som_kenobi_main_quest_killed", "talkKenobi1")|| groundquests.isTaskActive(self, "som_kenobi_main_quest_spared", "talkKenobi1"))
		appearanceComment = 2;
	else if (groundquests.isTaskActive(self, "som_kenobi_main_quest_3", "talkKenobi2")|| groundquests.isTaskActive(self, "som_kenobi_main_quest_3_b", "talkKenobi2"))
		appearanceComment = 3;

	//debugSpeakMsg (self, "appearanceComment=" + appearanceComment);
	if (appearanceComment > 0)
	{
	//	debugSpeakMsg (self, "appearanceComment was greater than 0");
		if (mustafar.canCallObiwan(self))
		{
			messageTo(self, "callObiWanNow", null, 5f, false);
		}
		else
		{
			setObjVar(self, "waitingOnObiwan", appearanceComment);
			dictionary params = new dictionary();
			params.put("appearanceComment", appearanceComment);
			messageTo(self, "recallObiwanDelay", params, 10, false);
		}
	}
	//debugSpeakMsg (self, "went to return script continue");
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnSomeTaskCompleted(int questCrc, int taskId)
{
	location currentLoc = getLocation(self);
	obj_id obiwanObject = getFirstObjectWithObjVar(currentLoc, 100f, "mustafar_obiwan");
	if(isIdValid(obiwanObject))
		messageTo(obiwanObject, "despawnObiwanDelay", null, 10, false);	//This messagehandler sets up the delay between Obi despawning
	return SCRIPT_CONTINUE;
}

// ********************************************************************
//					FUNCTIONS
// ********************************************************************


void debugLogging(string section, string message)
{
	if (CONST_FLAG_DO_LOGGING)
		LOG("debug/obiwan_quest_monitor/"+section, message);
}


// ********************************************************************
//					MESSAGE HANDLERS
// ********************************************************************

// entry from obiwan_event_manager

messageHandler recallObiwanDelay()
{
	debugLogging("recallObiwanDelay: ", " entered.");

	obj_id obiwan = null;
	if(hasObjVar(self, "waitingOnObiwan"))
	{
		if (mustafar.canCallObiwan(self))
			obiwan = mustafar.callObiwan(self, true);
		messageTo(self, "recallObiwanDelay", null, 360, false);
	}
	return SCRIPT_CONTINUE;
}

messageHandler callObiWanNow()
{
	mustafar.callObiwan(self, true, 1);

	return SCRIPT_CONTINUE;
}

messageHandler removeMonitor()
{
	removeObjVar(self, "waitingOnObiwan");
	removeObjVar(self, "waitingOnObiwanLoop");
	removeObjVar(self, "sawObiwanAtLauncher");
	groundquests.completeQuest(self, "som_kenobi_main_quest_3");
	groundquests.completeQuest(self, "som_kenobi_main_quest_3_b");
	detachScript(self, "theme_park.dungeon.mustafar_trials.obiwan_finale.obiwan_quest_monitor");
	return SCRIPT_CONTINUE;
}
