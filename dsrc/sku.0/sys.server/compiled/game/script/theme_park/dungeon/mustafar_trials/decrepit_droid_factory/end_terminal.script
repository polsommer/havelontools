include library.trial;
include library.sui;
include library.space_dungeon;
include library.instance;

const string DECREPIT_STF			= "mustafar/decrepit_droid_factory";
const string_id SID_ACTIVATE_FACTORY		= new string_id(DECREPIT_STF, "activate_factory");
const string_id SID_FACTORY_ACTIVE		= new string_id(DECREPIT_STF, "factory_active");
const string_id SID_EXIT_TRIAL			= new string_id(DECREPIT_STF, "decrepit_exit");
const string_id SID_EXIT_TRIAL_CONFIRM		= new string_id(DECREPIT_STF, "decrepit_exit_confirm");


trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	boolean decrepitDefeated = trial.isDecrepitDefeated(self);
	
	if (!decrepitDefeated)
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, SID_ACTIVATE_FACTORY);
	}
	else
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, SID_FACTORY_ACTIVE);
		mi.addRootMenu (menu_info_types.ITEM_USE_SELF, SID_EXIT_TRIAL);
	}
	sendDirtyObjectMenuNotification(self);
	
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (item == menu_info_types.ITEM_USE)
	{
		if (!trial.isDecrepitDefeated(self))
		{
			winTrial(self);
		}
	}
	if (item == menu_info_types.ITEM_USE_SELF)
	{
		if (trial.isDecrepitDefeated(self))
		{
			confirmEject(player, self);
		}
	}

	return SCRIPT_CONTINUE;
}

void winTrial(obj_id terminal)
{
	obj_id top = trial.getTop(terminal);
	messageTo(top, "winTrial", null, 0, false);
}

void confirmEject(obj_id player, obj_id terminal)
{
	
	string confirm = "@"+SID_EXIT_TRIAL_CONFIRM; 
	int pid = sui.msgbox(terminal, player, confirm, sui.YES_NO, "msgDungeonEjectConfirmed");
}

messageHandler msgDungeonEjectConfirmed()
{
	string button = params.getString("buttonPressed");
	obj_id player = params.getObjId("player");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}
	instance.requestExitPlayer("decrepit_droid_factory", player);
	return SCRIPT_CONTINUE;
}

