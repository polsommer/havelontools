/***** INCLUDES ****************************************************/

include library.player_structure;
include library.utils;
include library.create;
include library.group;

/***** CONST *******************************************************/

const string_id MNU_OPEN_DOOR						= new string_id("dungeon/death_watch", "mnu_open_door");
const string_id ACCESS_GRANTED						= new string_id("dungeon/death_watch", "access_granted");
const string_id ENTRANCE_DENIED						= new string_id("dungeon/death_watch", "entrance_denied");


/***** TRIGGERS ****************************************************/

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	int mnuControl = mi.addRootMenu(menu_info_types.ITEM_USE, MNU_OPEN_DOOR);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (!isIdValid(player))
		return SCRIPT_CONTINUE;

	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	if ( item == menu_info_types.ITEM_USE )
	{
		checkAuthorization(structure, player);
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

void checkAuthorization(obj_id structure, obj_id player)
{
	if(!isIdValid(player) || !isIdValid(structure))
		return;

	obj_id self = getSelf();

	if(hasObjVar(player, "mand.acknowledge"))
	{
		CustomerServiceLog ("DUNGEON_DeathWatchBunker", "*Death Watch Entry: Player %TU has entered the Death Watch Bunker.", self);
		attachScript (player, "theme_park.dungeon.death_watch_bunker.death_script");
		sendSystemMessage(player, ACCESS_GRANTED);
		unlockDoors(structure, player);
	}
	else
	{
		sendSystemMessage(player, ENTRANCE_DENIED);
	}
	return;
}

void unlockDoors(obj_id structure, obj_id player)
{
	if(!group.isGrouped(player))
	{
		setObjVar(player, "death_watch.entrancePass", 1);
		obj_id openRoom = getCellId(structure, "smallroom2");
		dictionary info = new dictionary ();
		info.put ("player", player);
		info.put ("room", openRoom);
		messageTo(openRoom, "addToList", info, 1, false);
		return;
	}

	if(group.isGrouped(player))
	{
		resizeable obj_id[] members = group.getPCMembersInRange(player, 100f);
		if ( members != null && members.length > 0 )
		{
			int numInGroup = members.length;

			if (numInGroup < 1)
				return;

			for (int i = 0; i < numInGroup; i++)
			{
		 		obj_id thisMember = members[i];
		 		setObjVar(thisMember, "death_watch.entrancePass", 1);
		 		obj_id openRoom = getCellId(structure, "smallroom2");
		 		dictionary params = new dictionary ();
				params.put ("player", thisMember);
				params.put ("room", openRoom);
		 		messageTo(openRoom, "addToList", params, 1f, false);
			}
		}
	}
	return;
}


