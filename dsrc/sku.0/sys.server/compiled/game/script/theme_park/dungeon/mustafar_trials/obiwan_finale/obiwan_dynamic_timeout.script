// Obiwan dynamic timeout script - this script checks for breaching of a trigger volume and despawns obi if the player hasn't breached it within a time period.

// ********************************************************************
//					INCLUDES
// ********************************************************************

include library.mustafar;
include library.utils;

// ********************************************************************
//					CONSTS
// ********************************************************************

const string TRIGGER_VOLUME_OBI				= "obiwan_interest_volume";
const float OBI_INTEREST_RADIUS				= 7f;

const boolean CONST_FLAG_DO_LOGGING		= false;

const int OBIWAN_DESPAWN_DELAY				= 150;

// ********************************************************************
//					TRIGGERS
// ********************************************************************

trigger OnAttach ()
{
	if (!utils.hasScriptVar(self, "player"))
		detachScript(self,"theme_park.dungeon.mustafar_trials.obiwan_finale.obiwan_dynamic_timeout");
	else
	{
		obiwanTriggerVolumeInitializer(self);
		messageTo(self, "obiwanTimeoutDelay", null, OBIWAN_DESPAWN_DELAY, false);	//This messagehandler sets up the delay between Obi spawning and despawning if not approached
	}
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnInitialize ()
{
	messageTo(self, "obiwanTimeoutDelay", null, OBIWAN_DESPAWN_DELAY, false);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{
	if (isPlayer(breacher) && !isIncapacitated(breacher))
	{
		if (volumeName.equals(TRIGGER_VOLUME_OBI))
		{
			if (utils.hasScriptVar(self, "player"))
			{
				obj_id player = utils.getObjIdScriptVar(self, "player");
				if (breacher == player)
				{
					utils.setScriptVar(self,"approachedByPlayer", 1);
					messageTo(self, "despawnObiwanDelay", null, 120, false);	//This messagehandler sets up the delay between Obi spawning and despawning if not approached
				}
			}
		}
	}

	return SCRIPT_CONTINUE;
}

// ********************************************************************
//					FUNCTIONS
// ********************************************************************


void debugLogging(string section, string message)
{
	if (CONST_FLAG_DO_LOGGING)
		LOG("debug/obiwan_dynamic_timeout/"+section, message);
}

//----------------------------------------------------------------------

void obiwanTriggerVolumeInitializer(obj_id self)
{
	if(!hasTriggerVolume(self, TRIGGER_VOLUME_OBI))
	{
		createTriggerVolume(TRIGGER_VOLUME_OBI, OBI_INTEREST_RADIUS, true);
	}
	else
	{
		obj_id[] triggerVolumeDenizens = getTriggerVolumeContents(self, TRIGGER_VOLUME_OBI);
		for(int i = 0; i < triggerVolumeDenizens.length; i++)
		{
			if(isPlayer(triggerVolumeDenizens[i]) && !isIncapacitated(triggerVolumeDenizens[i]))
			{
				if (utils.hasScriptVar(self, "player"))
				{
					obj_id player = utils.getObjIdScriptVar(self, "player");
					if (triggerVolumeDenizens[i] == player)
					{
						utils.setScriptVar(self,"approachedByPlayer", 1);
						messageTo(self, "despawnObiwanDelay", null, 120, false);	//This messagehandler sets up the delay between Obi spawning and despawning if not approached
					}
				}
				return;
			}
		}
	}
	return;
}


// ********************************************************************
//					MESSAGE HANDLERS
// ********************************************************************

// entry from this script

messageHandler obiwanTimeoutDelay()
{
	debugLogging("obiwanTimeoutDelay: ", " entered.");
	if (!utils.hasScriptVar(self,"approachedByPlayer"))
		destroyObject(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

// entry from obiwan_event_manager

messageHandler despawnObiwanDelay()
{
	debugLogging("despawnObiwanDelay: ", " entered.");

	if(isInNpcConversation(self))
		messageTo(self, "despawnObiwanDelay", null, OBIWAN_DESPAWN_DELAY, false);	//This messagehandler sets up the delay between Obi spawning and despawning if not approached
	else
	{
		//special CEF to cover his despawning here.
		setCreatureCover(self, 125);
		setCreatureCoverVisibility(self, false);
		playClientEffectObj(self, "clienteffect/combat_special_attacker_cover.cef", self, "");
		destroyObject(self);
	}

	return SCRIPT_CONTINUE;
}