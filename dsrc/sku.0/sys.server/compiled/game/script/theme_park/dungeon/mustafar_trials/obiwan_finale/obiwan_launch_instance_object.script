// Obiwan event launch instance object script - sets up and hooks up the player for the obiwan event on mustafar.
//This script borrows heavily from THicks link_player script

// ********************************************************************
//					INCLUDES
// ********************************************************************

include library.chat;
include library.groundquests;
include library.mustafar;
include library.pet_lib;
include library.prose;
include library.space_dungeon;
include library.space_dungeon_data;
include library.sui;
include library.utils;
include library.instance;

// ********************************************************************
//					CONSTS
// ********************************************************************

const string_id SID_LAST_QUEST 				= new string_id(mustafar.STF_OBI_MSGS, "obiwan_quest_almost_complete");

const string_id SID_LAUNCH 						= new string_id(mustafar.STF_OBI_MSGS, "obiwan_finale_launch");
const string_id SID_EJECT 						= new string_id(mustafar.STF_OBI_MSGS, "obiwan_finale_eject");
const string_id SID_LEAVE_YOUR_GROUP		= new string_id(mustafar.STF_OBI_MSGS, "obi_leave_your_group");

const string TRIGGER_VOLUME_OBI				= "obiwan_interest_volume";
const float OBI_INTEREST_RADIUS				= 8f;

const string_id SID_UNABLE_TO_FIND_DUNGEON		   	= new string_id("dungeon/space_dungeon", "unable_to_find_dungeon");
const string_id SID_NO_TICKET							= new string_id("dungeon/space_dungeon", "no_ticket");
const string_id SID_REQUEST_TRAVEL	   			        = new string_id("dungeon/space_dungeon", "request_travel");
const string_id SID_REQUEST_TRAVEL_OUTSTANDIN		= new string_id("dungeon/space_dungeon", "request_travel_outstanding");
//const string_id SID_SLAVER_CAMP						= new string_id("travel/zone_transition", "kachirho_trando_slave_camp");
const string_id SID_LAIR_CRYSTAL						= new string_id("travel/zone_transition", "lair_of_the_crystal");							//	<-NEW NEW
const string_id SID_NO_PERMISSION						= new string_id("travel/zone_transition", "default_no_access");

//const string QUEST					= "ep3_slaver_gursan_entry_quest";

const boolean CONST_FLAG_DO_LOGGING		= false;

// ********************************************************************
//					TRIGGERS
// ********************************************************************
																				//COMMENTED OUT FOR TESTING ONLY! 	RE-ENABLE!
trigger OnAttach ()
{
	launchObjectTriggerVolumeInitializer(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnInitialize ()
{
	launchObjectTriggerVolumeInitializer(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{
	debugLogging("OnTriggerVolumeEntered: ", " entered.");

	if (isPlayer(breacher) && !isIncapacitated(breacher))
	{
		if (volumeName.equals(TRIGGER_VOLUME_OBI))
		{
			if (readyForLair(breacher))
			{
				if (mustafar.canCallObiwan(breacher, self))
					spawnObi(breacher, self);
				//else
					//delayedSpawnObi(breacher, self);
			}
		}
	}

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnObjectMenuRequest(obj_id player, menu_info item)
{
	if (hasObjVar(player, "didMustafarCrystalLair"))	// has the player not already accomplished this event?
	{
		sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
		debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
		return SCRIPT_CONTINUE;
	}

	if (groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_visible") || groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_b_visible"))	// has the player not already accomplished this event?
	{
		sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
		debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
		setObjVar(player, "didMustafarCrystalLair", 1);
		return SCRIPT_CONTINUE;
	}

	if (isGod(player))
	{
		item.addRootMenu (menu_info_types.ITEM_USE, SID_LAUNCH);

		if (getDistance(player, self) > 6.0f)
			return SCRIPT_CONTINUE;

		utils.dismountRiderJetpackCheck(player);

		location locHere = getLocation(player);
		string scene = locHere.area;


		item.addRootMenu(menu_info_types.ITEM_USE, SID_LAIR_CRYSTAL);
	}

	else if (hasObjVar(player,"sawObiwanAtLauncher"))
	{
		item.addRootMenu (menu_info_types.ITEM_USE, SID_LAUNCH);

		if (getDistance(player, self) > 6.0f)
			return SCRIPT_CONTINUE;

		utils.dismountRiderJetpackCheck(player);

		location locHere = getLocation(player);
		string scene = locHere.area;

		item.addRootMenu(menu_info_types.ITEM_USE, SID_LAIR_CRYSTAL);
	}

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnObjectMenuSelect(obj_id player, int item)
{
	LOG("space_dungeon", "theme_park.dungeon.mustafar_trials.obiwan_finale.launch_instance_object.OnObjectMenuSelect()");


	if (hasObjVar(player, "didMustafarCrystalLair"))	// has the player not already accomplished this event?
	{
		sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
		debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
		return SCRIPT_CONTINUE;
	}

	if (groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_visible") || groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_b_visible"))	// has the player not already accomplished this event?
	{
		sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
		debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
		setObjVar(player, "didMustafarCrystalLair", 1);
		return SCRIPT_CONTINUE;
	}

	else if (isGod(player) || hasObjVar(player,"sawObiwanAtLauncher"))
	{
		if ( item == menu_info_types.ITEM_USE)
		{
			instance.requestInstanceMovement(player, "obiwan_crystal_cave");
			return SCRIPT_CONTINUE;
		}
	}

	return SCRIPT_CONTINUE;
}


// ********************************************************************
//					FUNCTIONS
// ********************************************************************


void debugLogging(string section, string message)
{
	if (CONST_FLAG_DO_LOGGING)
		LOG("debug/obiwan_launch_instance_object/"+section, message);
}


boolean readyForLair(obj_id player)
{
	if (groundquests.isTaskActive(player, "som_kenobi_main_quest_3", "talkKenobi3")|| groundquests.isTaskActive(player, "som_kenobi_main_quest_3_b", "talkKenobi3")||
		groundquests.isTaskActive (player, "som_kenobi_main_quest_3", "killSinistro")|| groundquests.isTaskActive (player, "som_kenobi_main_quest_3_b", "killSinistro"))
	{
		return true;
	}
	return false;
}


//----------------------------------------------------------------------

void confirmLaunch(obj_id player, obj_id terminal)
{
	debugLogging("confirmLaunch: ", " entered.");

	//if (hasScript(player, "theme_park.dungeon.mustafar_trials.obiwan_finale.obiwan_event_player"))
	//{
		if (hasObjVar(player, "didMustafarCrystalLair"))	// has the player not already accomplished this event?
		{
			sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
			debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
			return;
		}

		if (groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_visible") || groundquests.hasCompletedQuest(player, "som_kenobi_main_quest_3_b_visible"))	// has the player not already accomplished this event?
		{
			sendSystemMessage(player, mustafar.SID_ALREADY_COMPLETED);
			debugLogging("OnObjectMenuRequest: ", " player has already completed final quest. No call.");
			setObjVar(player, "didMustafarCrystalLair", 1);
			return;
		}

		else if (isIdValid(getGroupObject(player)))
		{
			prose_package pp = prose.getPackage(SID_LEAVE_YOUR_GROUP, getEncodedName(player));
			prose.setTT( pp, player );
			sendSystemMessageProse(player, pp);
			return;
		}

		LOG("space_dungeon", "theme_park.dungeon.mustafar_trials.obiwan_finale.launch_instance_object.confirmLaunch()");

		string title = "@mustafar/obiwan_finale:begin_quest_title";
		string_id prompt = new string_id(mustafar.STF_OBI_MSGS, "begin_quest_prompt");
		prose_package pp = new prose_package();
		prose.setStringId(pp, prompt);
		prose.setTU(pp, getEncodedName(player));
		int pid = sui.msgbox(terminal, player, pp, sui.YES_NO, title,"msgDungeonLaunchConfirmed");
		utils.setScriptVar(terminal, "player", player);

		debugLogging("//*************// confirmLaunch: ", "////>>>> just fired off the SUI.");
	//}
	//else
	//{
	//	sendSystemMessage(player, mustafar.SID_NO_OBI_CONVO_YET);
	//	debugLogging("canCallObiwan: ", " doesn't appear to have talked to Obi yet. No entrance to crystal lair for them..");
	//	//warpPlayer(player, "mustafar", -670, 18, -137, null, -670, 18, -137);
	//}

	return;
}

//----------------------------------------------------------------------

// should we be checking to see if the player is incombat or incapped or in range before exiting?
void confirmEject(obj_id player, obj_id terminal)
{
	if (hasScript(player, "theme_park.dungeon.mustafar_trials.obiwan_finale.obiwan_event_player"))
	{
		LOG("space_dungeon", "theme_park.dungeon.mustafar_trials.obiwan_finale.launch_instance_object.confirmEject()");

		string title = "@mustafar/obiwan_finale:end_quest_title";
		string_id prompt = new string_id(mustafar.STF_OBI_MSGS, "end_quest_prompt");
		prose_package pp = new prose_package();
		prose.setStringId(pp, prompt);
		prose.setTU(pp, getEncodedName(player));
		int pid = sui.msgbox(terminal, player, pp, sui.YES_NO, title,"msgDungeonEjectConfirmed");
	}
	else
	{
		warpPlayer(player, "mustafar", -670, 18, -137, null, -670, 18, -137);
	}
	return;
}


//----------------------------------------------------------------------

void launchObjectTriggerVolumeInitializer(obj_id self)
{
	if(!hasTriggerVolume(self, TRIGGER_VOLUME_OBI))
	{
		createTriggerVolume(TRIGGER_VOLUME_OBI, OBI_INTEREST_RADIUS, true);
	}
	else
	{
		obj_id[] denizens = getTriggerVolumeContents(self, TRIGGER_VOLUME_OBI);
		for(int i = 0; i < denizens.length; i++)
		{
			if(isPlayer(denizens[i]) && !isIncapacitated(denizens[i]))
			{
				if(mustafar.canCallObiwan(denizens[i], self))
				{
					spawnObi(denizens[i], self);
					return;
				}
			}
		}
	}

	return;
}

//----------------------------------------------------------------------

void spawnObi(obj_id player, obj_id landmark)
{
	obj_id obiwan = mustafar.callObiwan(player, landmark, true);

	prose_package pp = prose.getPackage(SID_LAST_QUEST);		// Finally, our quest is almost complete, %TU
	prose.setTT( pp, player );
	chat.chat (obiwan, player, pp);
	return;
}


// ********************************************************************
//					MESSAGE HANDLERS
// ********************************************************************

