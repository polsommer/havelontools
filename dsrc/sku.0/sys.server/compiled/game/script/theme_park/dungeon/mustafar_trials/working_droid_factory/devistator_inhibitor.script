include library.trial;
include library.utils;


trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (!trial.isRruDeactivated(self) && trial.isDevistatorEngaged(self))
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_INHIBITOR_COLLECT);
	}
	else if (!trial.isRruDeactivated(self) && !trial.isDevistatorEngaged(self))
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_INHIBITOR_INACTIVE);
	}
	else if (trial.isRruDeactivated(self) && !trial.isDevistatorKilled(self))
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_INHIBITOR_RECHARGE);
	}
	else
	{
		mi.addRootMenu (menu_info_types.ITEM_USE, trial.WORKING_INHIBITOR_INACTIVE);
	}
	sendDirtyObjectMenuNotification(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (item == menu_info_types.ITEM_USE)
	{
		if (!trial.isRruDeactivated(self) && trial.isDevistatorEngaged(self))
		{
			utils.setScriptVar(player, trial.WORKING_INHIBITOR_TRACKER, trial.getSession(trial.getTop(self), "devistator_control"));
			sendSystemMessage(player, trial.WORKING_INHIBITOR_TAKEN);
		}
		else if (!trial.isRruDeactivated(self) && !trial.isDevistatorEngaged(self))
		{
			sendSystemMessage(player, trial.WORKING_INHIBITOR_INACTIVE);
		}
		else if (trial.isRruDeactivated(self) && !trial.isDevistatorKilled(self))
		{
			sendSystemMessage(player, trial.WORKING_INHIBITOR_RECHARGE);
		}
		else
		{
			sendSystemMessage(player, trial.WORKING_INHIBITOR_INACTIVE);
		}
	}

	return SCRIPT_CONTINUE;
}

