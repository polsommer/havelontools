include library.space_dungeon;
include library.player_structure;
include library.utils;

const string MSGS = "dungeon/corvette";

//----------------------------------------------------------------------

trigger OnAttach ()
{
	messageTo (self, "setUpDungeon", null, 3, false );
	obj_id top = space_dungeon.getDungeonIdForPlayer ( self );
	string dungeonType = getStringObjVar (top, "space_dungeon.name");

	setObjVar (self, "corl_corvette.id", top);
	CustomerServiceLog ("DUNGEON_AvatarPlatform", "*Entered_AvatarPlatform - %TU", self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------


messageHandler dungeonEnds ()
{
	obj_id dungeon = space_dungeon.getDungeonIdForPlayer (self);
	location podLanding = new location ();
	if (!hasObjVar (self, "podLanding"))
	{
//		setObjVar (self, "podLanding", podLanding);
	}
	else
	{
//		podLanding = getLocationObjVar (self, "podLanding");
	}


	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler setUpDungeon ()
{
	obj_id top = space_dungeon.getDungeonIdForPlayer (self);
	if (hasScript (top, "theme_park.dungeon.corvette.spawned"))
	{
		return SCRIPT_CONTINUE;
	}
	else
	{
		messageTo (top, "beginSpawn", null, 1, false );
		attachScript (top, "theme_park.dungeon.corvette.spawned");
	}
	return SCRIPT_CONTINUE;
}


trigger OnIncapacitated (obj_id killer)
{
	string fname = getName (self);
	CustomerServiceLog("DUNGEON_AvatarPlatform","*Corvette Died: %TU died on the Corellian Corvette.", self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnLogin ()
{
	obj_id top = space_dungeon.getDungeonIdForPlayer (self);

	if (!space_dungeon.verifyPlayerSession(top, self))
		return SCRIPT_CONTINUE;

	string dungeonType = getStringObjVar (top, "space_dungeon.name");

	if (dungeonType == null || dungeonType == "")
	{
		messageTo (self, "recheckDungeonType", null, 5, false );
		return SCRIPT_CONTINUE;
	}


	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

trigger OnDetach ()
{
	obj_id top = getObjIdObjVar (self, "corl_corvette.id");
	LOG ("space_dungeon", "*%TU was had the Timer script detached from themselves.", self);
	removeObjVar (self, "corl_corvette");
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------


//----------------------------------------------------------------------

messageHandler recheckDungeonType ()
{
	obj_id top = space_dungeon.getDungeonIdForPlayer (self );

	string dungeonType = getStringObjVar (top, "space_dungeon.name");

	if (dungeonType == null || dungeonType == "")
	{
		CustomerServiceLog ("DUNGEON_AvatarPlatform", "*%TU was not set declared because the dungeon (" + top + ") didn't have a space_dungeon.name objVar.", self);
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonEjectConfirmed()
{
	LOG("space_dungeon", "theme_park.dungeon.avatar_platform.player.msgDungeonEjectConfirmed()");

	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.ejectPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}

//----------------------------------------------------------------------

messageHandler msgDungeonLaunchConfirmed()
{
	LOG("space_dungeon", "theme_park.dungeon.avatar_platform.player.msgDungeonLaunchConfirmed()");

	string button = params.getString("buttonPressed");
	if (button.equals("Cancel"))
	{
		return SCRIPT_CONTINUE;
	}

	space_dungeon.launchPlayerFromDungeon(self);
	return SCRIPT_CONTINUE;
}
//----------------------------------------------------------------------
//Prevent use of Unstick command in Avatar Platform
trigger OnUnsticking()
{
	if (getLocation(self).area.equals("dungeon1"))
	{
		detachScript(self, "theme_park.dungeon.avatar_platform");
		return SCRIPT_CONTINUE;
	}
	
	return SCRIPT_OVERRIDE;
}