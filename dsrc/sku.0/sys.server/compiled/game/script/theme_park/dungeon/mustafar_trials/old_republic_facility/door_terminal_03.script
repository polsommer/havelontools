include library.prose;
include library.sui;

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	obj_id building = getTopMostContainer(self);

	int id = mi.addRootMenu(menu_info_types.SERVER_MENU1, new string_id("mustafar/old_republic_facility", "door_terminal_use"));
	menu_info_data mid = mi.getMenuItemById(id);
	mid.setServerNotify(true);

	int status = 0;

	if(hasObjVar(building, "status"))
		status = getIntObjVar(building, "status");

	if(status == 2)
		mi.addRootMenu(menu_info_types.SERVER_MENU2, new string_id("mustafar/old_republic_facility", "door_terminal_use_card"));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(item == menu_info_types.SERVER_MENU1)
	{
		readTerminal(self, player);
	}

	if(item == menu_info_types.SERVER_MENU2)
	{
		useCard(self, player);
	}

	sendDirtyObjectMenuNotification(self);

	return SCRIPT_CONTINUE;
}

void readTerminal(obj_id self, obj_id player)
{
	obj_id building = getTopMostContainer(self);

	string title = "@mustafar/old_republic_facility:door_terminal_sui_title";
	string prompt = "@mustafar/old_republic_facility:door_terminal_03_sui_prompt";

	int status = 0;

	if(hasObjVar(building, "status"))
		status = getIntObjVar(building, "status");

	if(status < 3)
	{
		prompt += "_a";
	}

	int pid = sui.msgbox(player, player, prompt, sui.OK_ONLY, title, "noHandler");

	return;
}

void useCard(obj_id self, obj_id player)
{
	obj_id building = getTopMostContainer(self);

	int status = 0;

	if(hasObjVar(building, "status"))
		status = getIntObjVar(building, "status");

	if(status >= 3)
		return;

	obj_id smallroom21 	= getCellId(building, "smallroom21");
	permissionsMakePublic(smallroom21);

	setObjVar(building, "status", 3);

	sendSystemMessage(player, new string_id("mustafar/old_republic_facility", "door_terminal_03_msg_self"));

	obj_id group = getGroupObject(player);

	if(isIdValid(group))
	{
		obj_id[] members = getGroupMemberIds(group);

		if(members == null || members.length == 0)
			return;

		for(int i = 0; i < members.length; i++)
		{

			if(members[i] != player)
			{
				prose_package pp = new prose_package();
				pp = prose.setStringId(pp, new string_id("mustafar/old_republic_facility", "door_terminal_03_msg_other"));
				pp = prose.setTU(pp, player);
				sendSystemMessageProse(members[i], pp);
			}
		}
	}

	return;
}

