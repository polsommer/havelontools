/***** INCLUDES ***********************************/

include library.ai_lib;
include library.player_structure;
include library.utils;

/***** CONSTANTS **********************************/

const string_id MNU_ISSUE_FILTER					= new string_id("dungeon/death_watch", "mnu_issue_filter");
const string_id ISSUE_FILTER						= new string_id("dungeon/death_watch", "issue_filter");
const string_id ALREADY_HAS_FILTER					= new string_id("dungeon/death_watch", "already_has_filter");

/***** TRIGGERS ***************************************/
trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	if (checkForFilter(player) == true)
	{
		sendSystemMessage(player, ALREADY_HAS_FILTER);
		return SCRIPT_CONTINUE;
	}

	int mnuControl = mi.addRootMenu(menu_info_types.ITEM_USE, MNU_ISSUE_FILTER);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (!isIdValid(player))
		return SCRIPT_CONTINUE;

	if (isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	obj_id structure = player_structure.getStructure(player);
	if ( !isIdValid(structure) )
		return SCRIPT_CONTINUE;

	//default menu functionality
	if ( item == menu_info_types.ITEM_USE )	//generic use
	{
		giveFilter(player);
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}

boolean checkForFilter(obj_id player)
{
	obj_id[] objContents = utils.getContents(player, true);

	if( objContents != null )
	{
		for( int intI = 0; intI<objContents.length; intI++ )
		{
			string strItemTemplate = getTemplateName(objContents[intI]);
			if( strItemTemplate=="object/tangible/dungeon/death_watch_bunker/filter.iff")
			{
				return true;
			}
		}
	}
	return false;
}

void giveFilter(obj_id player)
{
	obj_id playerInv = getObjectInSlot( player, "inventory" );

	if(isIdValid(playerInv))
	{
		obj_id item = createObject( "object/tangible/dungeon/death_watch_bunker/filter.iff", playerInv, "" );
		if(isIdValid(item))
		{
			sendSystemMessage(player, ISSUE_FILTER);
			return;
	 	}
	}
	return;
}
