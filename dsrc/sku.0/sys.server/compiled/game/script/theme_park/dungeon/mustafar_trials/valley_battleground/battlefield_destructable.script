include library.ai_lib;
include library.factions;
include library.trial;
include library.utils;

const string VOLUME_NAME				= "addGeneratorHate";
const float VOLUME_RANGE				= 40.0f;

trigger OnAttach()
{
	trial.setInterest(self);
	setTriggerVolume(self);
	setMaxHitpoints(self, 20000);
	setHitpoints(self, 20000);
	setInvulnerable(self, false);
	factions.setIgnorePlayer(self);
	return SCRIPT_CONTINUE;
}

trigger OnObjectDisabled (obj_id killer)
{
	location death = getLocation( self );
	playClientEffectObj(killer, "clienteffect/combat_explosion_lair_large.cef", self, "");
	playClientEffectLoc(killer, "clienteffect/combat_explosion_lair_large.cef", death, 0);


	setInvulnerable( self, true );
	messageTo( self, "destroyDisabledLair", null, .5f, false );
	obj_id[] enemies = getWhoIsTargetingMe( self );
	if ( enemies != null && enemies.length > 1 )
	{
		for ( int i = 0; i < enemies.length; i++ )
		{
			if ( isPlayer( enemies[i] ) )
			{
				setTarget( enemies[i], null );
				setCombatTarget( enemies[i], null );
			}
		}
	}
	return SCRIPT_CONTINUE;

}

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{
	if (volumeName.equals(VOLUME_NAME))
	{
		if (utils.hasScriptVar(breacher, trial.BATTLEFIELD_DROID_ARMY))
			addHate(breacher, self, 1000);
	}
	return SCRIPT_CONTINUE;
}

void setTriggerVolume(obj_id self)
{
	createTriggerVolume(VOLUME_NAME, VOLUME_RANGE, true);
}

messageHandler destroyDisabledLair()
{
	destroyObject( self );
	return SCRIPT_CONTINUE;
}

trigger OnObjectDamaged(obj_id attacker, obj_id weapon, int damage)
{

	int curHP = getHitpoints (self);
	int maxHP = getMaxHitpoints( self );
	int smolder = (maxHP - (maxHP/3));
	int fire = (maxHP/ 3);

	if (!hasObjVar (self, "playingEffect"))
	{
		if (curHP < smolder)
		{
			if (curHP < fire)
			{
				location death = getLocation (self);
				setObjVar (self, "playingEffect", 1);
				messageTo (self, "effectManager", null, 15, true);
			}
			else
			{
				location death = getLocation (self);
				//playClientEffectObj(attacker, "clienteffect/lair_med_damage_smoke.cef" , self, "");
				//playClientEffectLoc(attacker, "clienteffect/combat_explosion_lair_large.cef", death, 0);
				setObjVar (self, "playingEffect", 1);
				messageTo (self, "effectManager", null, 15, true);
			}
		}
	}


	return SCRIPT_CONTINUE;
}


messageHandler effectManager ()
{
	removeObjVar (self, "playingEffect");
	return SCRIPT_CONTINUE;
}

