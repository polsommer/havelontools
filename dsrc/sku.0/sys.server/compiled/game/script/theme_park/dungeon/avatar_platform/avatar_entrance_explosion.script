include library.groundquests;
include library.chat;

const string STF									= "dungeon/avatar_platform";
const string_id OPENING								= new string_id(STF, "trando_chat_01");
const string_id RESPONSE							= new string_id(STF, "trando_chat_02");

trigger OnReceivedItem (obj_id destinationCell, obj_id transferrer, obj_id item)
{
	if (!isPlayer (item))
	{
		return SCRIPT_CONTINUE;
	}

	if(!groundquests.isQuestActive(item, "ep3_trando_hssissk_zssik_10"))
	{
		return SCRIPT_CONTINUE;
	}

	obj_id structure = getTopMostContainer (self);

	if(hasObjVar(structure, "avatar_platform.avatar_destruct_sequence") && !hasObjVar(structure, "avatar_platform.explosion_sequence_hall"))
	{
		startExplosionFinal(item, self);
	}

	return SCRIPT_CONTINUE;
}

void startExplosionFinal(obj_id player, obj_id self)
{
	obj_id structure = getTopMostContainer(self);
	obj_id[] items = getContents(self);

	if (items != null && items.length > 0)
	{
		for (int i=0;i<items.length;i++)
		{
			if (isPlayer(items[i]))
			{
				startExplosionSequence(player, self);
				setObjVar(structure, "avatar_platform.explosion_sequence_hall", 1);
				return;
			}
		}
	}

	if(hasObjVar(structure, "avatar_platform.explosion_sequence_hall"))
	{
		removeObjVar(structure, "avatar_platform.explosion_sequence_hall");
	}
	return;
}

void startExplosionSequence(obj_id player, obj_id self)
{
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 91.1f, 0.0f, 24.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion01", info, 2f, false);
	return;
}

messageHandler handleMoreExplosion01 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 91.1f, 0.0f, 18.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion02", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion02 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 97.2f, 0.0f, 18.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion03", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion03 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 97.2f, 0.0f, 24.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion04", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion04 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 101.8f, 0.0f, 18.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion05", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion05 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 101.8f, 0.0f, 24.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion06", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion06 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 108.9f, 0.0f, 18.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handleMoreExplosion07", info, 2f, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleMoreExplosion07 ()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	obj_id entrance = getCellId( structure, "entrance" );
	location here = getLocation( self );
	string planet = here.area;
	dictionary info = new dictionary();
	info.put ("player", player );

	location explosionPnt = new location( 108.9f, 0.0f, 24.4f, planet, entrance );
	playClientEffectLoc(player, "clienteffect/avatar_hallway_explosion.cef", explosionPnt, 0.0f);
	messageTo(self, "handlePlayerCheck", info, 2f, false);
	return SCRIPT_CONTINUE;
}
messageHandler handlePlayerCheck ()
{
	obj_id structure = getTopMostContainer(self);
	obj_id[] items = getContents(self);

	if (items != null && items.length > 0)
	{
		for (int i=0;i<items.length;i++)
		{
			if (isPlayer(items[i]))
			{
				startExplosionSequence(items[i], self);
				setObjVar(structure, "avatar_platform.explosion_sequence_hall", 1);
				return SCRIPT_CONTINUE;
			}
		}
	}
	if(hasObjVar(structure, "avatar_platform.explosion_sequence_hall"))
	{
		removeObjVar(structure, "avatar_platform.explosion_sequence_hall");
	}
	return SCRIPT_CONTINUE;
}