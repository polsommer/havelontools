include library.ai_lib;
include library.utils;
include library.trial;
include library.space_dungeon;
include library.healing;
include library.prose;
include library.combat;


trigger OnAttach()
{
	trial.setHp(self, trial.HP_SHER_KAR_LIFESAPPER);
	trial.bumpSession(self);
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated(obj_id killer)
{
	messageTo(trial.getTop(self), "lifeSapperDied", null, 0, false);
	return SCRIPT_CONTINUE;
}

trigger OnEnteredCombat()
{
	messageTo(self, "lifeTap", trial.getSessionDict(self), 2, false);
	return SCRIPT_CONTINUE;
}

trigger OnExitedCombat()
{
	trial.bumpSession(self);
	return SCRIPT_CONTINUE;
}

messageHandler doAttack()
{
	obj_id[] players = trial.getValidTargetsInDungeon(trial.getTop(self));
	obj_id closest = trial.getClosest(self, players);
	startCombat(self, closest);
	return SCRIPT_CONTINUE;
}


messageHandler lifeTap()
{
	if (!trial.verifySession(self, params))
		return SCRIPT_CONTINUE;
		
		
	obj_id defender = getTarget(self);
	if (!isIdValid(defender))
		return SCRIPT_CONTINUE;
		
	int healthDamage = 200;
	obj_id sherKar = utils.getObjIdScriptVar(trial.getTop(self), trial.MONSTER_SHER_KAR);
	healing.healDamage(sherKar, healthDamage);
	healing.healDamage(self, healthDamage);

	prose_package pp = new prose_package();
	pp.stringId = new string_id("cbt_spam", "symbiot_drain");
	pp.actor.set(self);

	pp.target.set(defender);
	pp.digitInteger = healthDamage;
	combat.sendCombatSpamMessageProse(defender, self, pp, true, true, false, COMBAT_RESULT_HIT);

	damage(defender, DAMAGE_ELEMENTAL_ELECTRICAL, HIT_LOCATION_BODY, healthDamage);
	
	messageTo(self, "lifeTap", trial.getSessionDict(self), 2, false);
	return SCRIPT_CONTINUE;
}
