include library.utils;
include library.create;
include library.trial;
include library.badge;
include library.buff;
include library.ai_lib;
include library.instance;

const boolean LOGGING					= false;

messageHandler beginSpawn()
{
	clearEventArea(self);
	messageTo(self, "prepareEventArea", null, 5, false);
	return SCRIPT_CONTINUE;
}

messageHandler dungeonCleanup()
{
	clearEventArea(self);
	return SCRIPT_CONTINUE;
}

messageHandler cleanupSpawn()
{
	clearEventArea(self);
	return SCRIPT_CONTINUE;
}

void clearEventArea(obj_id dungeon)
{
	obj_id[] contents = trial.getAllObjectsInDungeon(dungeon);
	if (contents == null || contents.length == 0)
	{
		doLogging("clearEventArea", "Dungeon was empty, return");
		return;
	}	
	for (int i = 0; i<contents.length; i++)
	{
		if (isPlayer(contents[i]))
		{
		}
		else
		{	
			if (isMob(contents[i]))
			{
				trial.cleanupNpc(contents[i]);
			}
			else if (trial.isTempObject(contents[i]))
			{
				trial.cleanupNpc(contents[i]);
			}
		}
	}
}

messageHandler prepareEventArea()
{
	spawnSherKar(self);
	spawnGuards(self);
	return SCRIPT_CONTINUE;
}

void spawnSherKar(obj_id self)
{
	obj_id[] wp = trial.getObjectsInDungeonWithObjVar(self, trial.MONSTER_WP);
	if (wp == null || wp.length == 0)
		return;
		
	for (int i=0;i<wp.length;i++)
	{
		if (getStringObjVar(wp[i], trial.MONSTER_WP).equals("sher_kar"))
		{
			obj_id sherKar = create.object("som_sherkar", getLocation(wp[i]));
			setYaw(sherKar, -10);
			utils.setScriptVar(self, trial.MONSTER_SHER_KAR, sherKar);
		}
	}
}

void spawnGuards(obj_id self)
{
	obj_id[] wp = trial.getObjectsInDungeonWithObjVar(self, trial.MONSTER_WP);
	if (wp ==  null || wp.length == 0)
		return;
	
	int type = 0;
	obj_id[] guards = new obj_id[4];
	for (int i=0;i<wp.length;i++)
	{
		if (getStringObjVar(wp[i], trial.MONSTER_WP).startsWith("guard"))
		{
			if (type == 0 || type == 1)
			{
				guards[type] = create.object("som_sherkar_praetorian", getLocation(wp[i]));
				faceTo(guards[type], utils.getObjIdScriptVar(self, trial.MONSTER_SHER_KAR));
				type++;
			}
			else if (type == 2)
			{
				guards[type] = create.object("som_sherkar_karling", getLocation(wp[i]));
				faceTo(guards[type], utils.getObjIdScriptVar(self, trial.MONSTER_SHER_KAR));
				type++;			
			}
			else if (type == 3)
			{
				guards[type] = create.object("som_sherkar_symbiot", getLocation(wp[i]));
				faceTo(guards[type], utils.getObjIdScriptVar(self, trial.MONSTER_SHER_KAR));
				type++;			
			}
		}
	}
	
	ai_lib.establishAgroLink(guards[0], guards);
}


messageHandler doMidEvent()
{
	obj_id[] players = trial.getValidTargetsInDungeon(self);
	if (players == null || players.length == 0)
	{
		return SCRIPT_CONTINUE;
	}
	
//	buff.applyBuff(players, "euphoria");
	return SCRIPT_CONTINUE;
}

messageHandler doEndEvent()
{
	obj_id[] players = trial.getValidTargetsInDungeon(self);
	if (players == null || players.length == 0)
	{
		return SCRIPT_CONTINUE;
	}
//	buff.applyBuff(players, "euphoria");
	return SCRIPT_CONTINUE;
}

messageHandler sherKarDied()
{
	utils.sendSystemMessagePob(self, trial.MONSTER_SK_DEFEATED);
	obj_id[] players = trial.getPlayersInDungeon(self);
	badge.grantBadge(players, "bdg_must_kill_sher_kar");
	instance.setClock(self, 305);
	return SCRIPT_CONTINUE;
}
void doLogging(string section, string message)
{
	if (LOGGING || trial.MONSTER_LOGGING)
		LOG("doLogging/monster_manager/"+section, message);
}
