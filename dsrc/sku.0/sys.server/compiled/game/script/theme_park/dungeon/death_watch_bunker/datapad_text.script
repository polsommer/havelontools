include library.sui;
include library.pet_lib;

trigger OnAttach ()
{
	setName (self, "Data Storage Unit");
	if (!hasObjVar (self, "text_id"))
	{
		int book = rand (1, 10);
		setObjVar (self, "text_id", book);
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info mi)
{
	menu_info_data mid = mi.getMenuItemByType(menu_info_types.ITEM_USE);
	if ( mid == null )
	{
		return SCRIPT_CONTINUE;
	}

	mid.setServerNotify(true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect (obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{
		testSui( self, player );
	}

	return SCRIPT_CONTINUE;
}

int testSui(obj_id self, obj_id player)
{
	// Create the dialog page.

	int pid = sui.createSUIPage( sui.SUI_MSGBOX, self, player, "readableText" );

	string_id fallBackString = new string_id ("BOOK", "wiped");
	string_id fallBackTitle = new string_id ("BOOK", "no_title");

	if (hasObjVar (self, "text_id"))
	{
		int textNum = getIntObjVar (self, "text_id");
		fallBackString = new string_id ("dungeon/death_watch_book_text", "text_" + textNum);
		fallBackTitle = new string_id ("dungeon/death_watch_book_text", "title_" + textNum);
	}

	string text = getString (fallBackString);
	string title = getString (fallBackTitle);

	if (title == null || title == "")
	{
		title = "NO TITLE";
	}

	if (text == null || text == "")
	{
		text = "The information stored here has been removed.";
	}

	// Add elements text.
	//setSUIProperty(pid, "", "Size", "450,375");
	setSUIProperty(pid, "", "Size", "450,375");
	setSUIProperty(pid, sui.MSGBOX_TITLE, sui.PROP_TEXT, title);
	setSUIProperty(pid, sui.MSGBOX_PROMPT, sui.PROP_TEXT, text);

	// Add buttons.
	sui.msgboxButtonSetup(pid, sui.OK_ONLY);
	setSUIProperty(pid, sui.MSGBOX_BTN_OK, sui.PROP_TEXT, "CLOSE" );

	// Show dialog.
	sui.showSUIPage( pid );

	return pid;
}
