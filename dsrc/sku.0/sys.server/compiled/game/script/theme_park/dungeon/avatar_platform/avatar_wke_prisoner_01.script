/***** INCLUDES ***********************************/

include library.ai_lib;
include library.chat;
include library.create;
include library.utils;
include library.chat;
include library.groundquests;


/***** CONSTANTS **********************************/
const string STF									= "dungeon/avatar_platform";
const string_id THANKS								= new string_id(STF, "wke_thanks_01");
const string_id NO_QUEST							= new string_id(STF, "wke_no_quest_01");

/***** TRIGGERS ***************************************/
trigger OnAttach()
{
	obj_id structure = getTopMostContainer(self);
	setObjVar(structure, "avatar_platform.wke_prisoner_01", self);
	return SCRIPT_CONTINUE;
}

trigger OnArrivedAtLocation (string name)
{
	if (name == "fleepoint")
	{
		destroyObject(self);
	}
	return SCRIPT_CONTINUE;
}


messageHandler handleFireDeath()
{
	obj_id structure = getTopMostContainer(self);
	obj_id player = params.getObjId( "player" );
	setObjVar(structure, "avatar_platform.wke_completed_01", 1);
	playClientEffectLoc(player, "clienteffect/avatar_wke_fire_01.cef", getLocation(self), 0f);
	setPosture(self, POSTURE_INCAPACITATED);
	messageTo(self, "handleCleanUp", null, 10f, false);

	return SCRIPT_CONTINUE;
}

messageHandler handleFreedom()
{
	obj_id player = params.getObjId( "player" );
	obj_id structure = getTopMostContainer(self);
	setObjVar(structure, "avatar_platform.wke_completed_01", 1);

	if(groundquests.hasCompletedQuest(player, "ep3_avatar_wke_prisoner_01") ||
		groundquests.isQuestActive(player, "ep3_avatar_wke_prisoner_01"))
	{
		chat.chat(self, NO_QUEST);
	}
	else
	{
		chat.chat(self, THANKS);
		groundquests.grantQuest(player, "ep3_avatar_wke_prisoner_01");
	}

	obj_id destination = getCellId (structure, "techhall09");
	location here = getLocation (self);
	string planet = here.area;
	location escape = new location (-168.9f, 0, -122.5f, planet, destination);
	ai_lib.aiPathTo (self, escape);
	addLocationTarget ("fleepoint", escape, 1);
	return SCRIPT_CONTINUE;
}

messageHandler handleCleanUp ()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;
}


