include library.utils;
include library.permissions;

const string MSGS = "dungeon/corvette";

trigger OnObjectMenuRequest (obj_id player, menu_info mi)
{
	menu_info_data mid = mi.getMenuItemByType(menu_info_types.ITEM_USE);
	if ( mid == null )
	{
		return SCRIPT_CONTINUE;
	}
	
	mid.setServerNotify(true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect (obj_id player, int item)
{
	obj_id top = getTopMostContainer (self);
	if ( item == menu_info_types.ITEM_USE )
	{
		if (hasObjVar (self, "vette.door_quest"))
		{
			string room = getStringObjVar (self, "room");
			if (hasObjVar (player, "corl_corvette." + room))
			{
				obj_id theRoom = getCellId (top, room);
				messageTo (theRoom, "unlock", null, 1, false );
				string_id open = new string_id (MSGS, "open");
				sendSystemMessage (player, open);
			}
			else
			{
				string whichRoom = getStringObjVar (self, "room");
				if (whichRoom == "elevator57")
				{
					string_id elevator_locked = new string_id (MSGS, "elevator_locked");
					sendSystemMessage ( player, elevator_locked);
				}
				
				if (whichRoom == "meetingroom38")
				{
					string_id meeting_locked = new string_id (MSGS, "meeting_room_locked");
					sendSystemMessage ( player, meeting_locked );
				}
			}
			
		}
		else
		{
			keypad ( player );
		}
	}
		
	return SCRIPT_CONTINUE;
}

void keypad( obj_id player )
{
	obj_id self = getSelf();
	int pid = createSUIPage ("Script.Keypad", self, player, "KeypadCallback");
	subscribeToSUIProperty(pid, "result.numberBox", "localtext");
	subscribeToSUIProperty(pid, "buttonEnter", "ButtonPressed");

	// Disabling Slice button and Keycard button for the Corvette
	setSUIProperty(pid, "buttonSlice", "enabled", "false");
	setSUIProperty(pid, "buttonSlice", "visible", "false");
	setSUIProperty(pid, "buttonKeycard", "enabled", "false");
	setSUIProperty(pid, "buttonKeycard", "visible", "false");
	
	showSUIPage (pid);
	
	return;
}

messageHandler KeypadCallback()
{
	string result = params.getString("result.numberBox" + "." + "localtext");
	string button = params.getString("buttonEnter.ButtonPressed");
	obj_id player = params.getObjId ("player");
	string passcard = "object/tangible/loot/dungeon/corvette/passkey.iff";
	string room = getStringObjVar (self, "room");
	
	if (!isIdValid(player))
	{
		return SCRIPT_OVERRIDE;
	}		
	
	if ( button == null )
	{
		button = "none";
	}
	
	if ( result == null ) 
	{
		result = "0";
	}
	
	string objVarToCheck = getGroupObjVars( player, room );
	int passkey = getIntObjVar (player, objVarToCheck);
	
	if (passkey == 0)
	{
		passkey = -1;
	}
	
	if (button == "enter")
	{
		string_id goodCode = new string_id (MSGS, "right_code");
		
		obj_id mom = getTopMostContainer ( self );
		obj_id openRoom = getCellId (mom, room);
		
		string pass = "";
		pass = pass + passkey;
		
		if (pass == result)
		{
			messageTo (openRoom, "unlock", null, 1, false );
			string_id open = new string_id (MSGS, "open");
			sendSystemMessage (player, open);
		}
		else
		{
			string_id lock = new string_id (MSGS, "lock");
			sendSystemMessage (player, lock);
		}
	}
	
	return SCRIPT_CONTINUE;
}

string getGroupObjVars ( obj_id player, string roomName )
{
	string totalName = "corl_corvette." + roomName;
	string code = "";		
		
	if (hasObjVar (player, totalName))
	{
		return totalName;
	}

	obj_id[] members = getGroupMemberIds(player);	
	
	if (members == null )
	{
		return code;
	}		
	
	int numInGroup = members.length;
	if (numInGroup == 0)
	{
		return code;
	}

	for (int i = 0; i < numInGroup; i++)
	{
		obj_id thisMember = members[i];
		if (hasObjVar (thisMember, totalName))
		{
			return totalName;
		}			
	}

	return code;
}

