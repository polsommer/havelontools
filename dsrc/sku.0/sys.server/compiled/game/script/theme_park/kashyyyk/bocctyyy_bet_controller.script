include library.space_dungeon;

messageHandler beginSpawn()
{
	//LOG("bocctyyy_path", "Dungeon controller received beginSpawn message.");
	
	if ( !hasObjVar(self, space_dungeon.VAR_QUEST_TYPE) )
	{
		LOG("bocctyyy_path", "Dungeon controller did not have quest type objvar.");
		return SCRIPT_CONTINUE;
	}

	// if entering for testing purposes without a quest, don't spawn anything.
	string questName = getStringObjVar(self, space_dungeon.VAR_QUEST_TYPE);
	if ( questName == null || questName.equals("") || questName.equals("none") )
	{
		LOG("bocctyyy_path", "Dungeon controller: quest name was null, empty, or none.");
		return SCRIPT_CONTINUE;
	}
	
	//LOG("bocctyyy_path", "Dungeon controller: quest name is " + questName);
	
	dictionary webster = new dictionary();
	webster.put ("questName", questName);
	
	obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
	if( spawners != null && spawners.length > 0 )
	{
		for ( int i = 0; i < spawners.length; i++ )
		{
			obj_id spawner = spawners[i];
			messageTo(spawner, "doBocctyyySpawnEvent", webster, 1, false);
		}
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler msgSpaceDungeonCleanup()
{
	//LOG("bocctyyy_path", "Bocctyyy controller received msgSpaceDungeonCleanup message.");
	
	obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
	//LOG("bocctyyy_path", "Bocctyyy controller: msgSpaceDungeonCleanup - number of spawners = " + spawners.length + ".");
	if( spawners != null && spawners.length > 0 )
	{
		for ( int i = 0; i < spawners.length; i++ )
		{
			obj_id spawner = spawners[i];
			messageTo(spawner, "doCleanupEvent", null, 1, false);
		}
	}
	
	if ( hasObjVar(self, space_dungeon.VAR_QUEST_TYPE) )
	{
		removeObjVar(self, space_dungeon.VAR_QUEST_TYPE);
	}
	
	return SCRIPT_CONTINUE;
}

/*
trigger OnHearSpeech(obj_id speaker, string text)
{ 
	if( isGod(speaker) )
	{
		int stringCheck = text.indexOf("bocctyyy_path_spawn");
		if ( stringCheck > -1 )
		{
			sendSystemMessage(speaker, "Bocctyyy Path Controller: Beginning spawn...", "");

			string questName = "";
			int which = rand(1,4);
			switch (which)
			{
				case 1:
					questName = "ep3_hunt_sordaan_uller_bet";
					break;
				case 2:
					questName = "ep3_hunt_sordaan_walluga_bet";
					break;
				case 3:
					questName = "ep3_hunt_sordaan_mouf_bet";
					break;
				case 4:
					questName = "ep3_hunt_sordaan_webweaver_bet";
					break;
			}
			
			sendSystemMessage(speaker, "Bocctyyy Path Controller: Beginning spawn of " + questName, "");
			setObjVar(self, space_dungeon.VAR_QUEST_TYPE, questName);
			messageTo(self, "beginSpawn", null, 1, false);
			return SCRIPT_OVERRIDE;
		}
		
		stringCheck = text.indexOf("bocctyyy_path_cleanup");
		if ( stringCheck > -1 )
		{
			sendSystemMessage(speaker, "Bocctyyy Path Controller: Cleaning up...", "");
			
			messageTo(self, "msgSpaceDungeonCleanup", null, 1, false);
			return SCRIPT_OVERRIDE;
		}

	}
	
	return SCRIPT_CONTINUE;
}
*/