include library.space_dungeon;
include library.utils;

// weather states
const int CHISS_FOG_ON = 0;
const int CHISS_FOG_OFF = 1;

messageHandler beginSpawn()
{	
	if ( !hasObjVar(self, space_dungeon.VAR_QUEST_TYPE) )
	{
		return SCRIPT_CONTINUE;
	}
	
	// if entering for testing purposes without a quest, don't spawn anything.
	string questName = getStringObjVar(self, space_dungeon.VAR_QUEST_TYPE);
	if ( questName == null || questName.equals("") || questName.equals("none") )
	{
		return SCRIPT_CONTINUE;
	}
	
	obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
	if( spawners != null && spawners.length > 0 )
	{
		for ( int i = 0; i < spawners.length; i++ )
		{
			obj_id spawner = spawners[i];
			
			dictionary webster = new dictionary();
			webster.put ("controllerObject", self);
			webster.put ("spawnChissOnly", true);
			messageTo(spawner, "doHraccaSpawnEvent", webster, 1, false);
		}
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler registerChissPoacher()
{
	obj_id chissPoacher = params.getObjId("chissPoacher");
	if ( isIdValid(chissPoacher) )
	{
		if (!hasObjVar (self, "chissPoacherList"))
		{
			resizeable obj_id[] chissPoachers = new obj_id[0];
			utils.addElement (chissPoachers, chissPoacher);
			if ( chissPoachers != null && chissPoachers.length > 0  )
			{
				setObjVar (self, "chissPoacherList", chissPoachers);
			}
		}
		else
		{
			resizeable obj_id[] chissPoacherList = getResizeableObjIdArrayObjVar (self, "chissPoacherList");
			chissPoacherList.add(chissPoacher);
			if ( chissPoacherList != null && chissPoacherList.length > 0 )
			{
				setObjVar (self, "chissPoacherList", chissPoacherList);
			}
		}
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler handleChissPoacherDestroyed()
{
	// Once all of the Chiss poachers are dead, spawn the kkorrwrot
	obj_id deadChissPoacher = params.getObjId("deadChissPoacher");
	if ( isIdValid(deadChissPoacher) )
	{
		if ( hasObjVar (self, "chissPoacherList") )
		{
			resizeable obj_id[] chissPoacherList = getResizeableObjIdArrayObjVar (self, "chissPoacherList");
			if ( chissPoacherList != null && chissPoacherList.length > 0 )
			{
				int previousNumPoachers = chissPoacherList.length;
				if(chissPoacherList.contains(deadChissPoacher))
				{
					chissPoacherList.remove(deadChissPoacher);

					if ( chissPoacherList != null && chissPoacherList.length > 0)
					{
						setObjVar (self, "chissPoacherList", chissPoacherList);
						
						string_id message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_38");
						switch(chissPoacherList.length )
						{
							case 38:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_38");
								sendChissCountUpdateMessage(self, message);
								break;
							case 20:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_20");
								sendChissCountUpdateMessage(self, message);
								break;
							case 10:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_10");
								sendChissCountUpdateMessage(self, message);
								break;
							case 5:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_5");
								sendChissCountUpdateMessage(self, message);
								break;
							case 2:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_2");
								sendChissCountUpdateMessage(self, message);
								break;
							case 1:
								message = new string_id ("theme_park/kashyyyk/hracca", "chiss_report_1");
								sendChissCountUpdateMessage(self, message);
								break;
							default:
								break;
						}
					}
					else
					{
						removeObjVar(self, "chissPoacherList");
						
						// no more chiss pochers, so spawn the kkorrwrot
						obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
						if( spawners != null && spawners.length > 0 )
						{
							for ( int i = 0; i < spawners.length; i++ )
							{
								obj_id spawner = spawners[i];

								dictionary webster = new dictionary();
								webster.put ("controllerObject", self);
								webster.put ("spawnKkorrwrot", true);
								messageTo(spawner, "doHraccaSpawnEvent", webster, 1, false);
							}
						}
						
						obj_id[] playersInInstance = space_dungeon.getPlayersInInstance(self);
						if ( playersInInstance != null && playersInInstance.length > 0  )
						{
							for ( int i = 0; i < playersInInstance.length; i++ )
							{
								obj_id player = playersInInstance[i];
								play2dNonLoopingSound(player, "sound/quest_hracca_kkorrwrot_roar.snd");
							}
						}
					}
				}
			}
		}
	}
	return SCRIPT_CONTINUE;
}

void sendChissCountUpdateMessage(obj_id controller, string_id message)
{
	obj_id[] playersInInstance = space_dungeon.getPlayersInInstance(controller);
	if ( playersInInstance != null && playersInInstance.length > 0  )
	{
		for ( int i = 0; i < playersInInstance.length; i++ )
		{
			obj_id player = playersInInstance[i];
			sendSystemMessage(player, message);
		}
	}
	
	return;
}

messageHandler msgSpaceDungeonCleanup()
{
	obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
	if( spawners != null && spawners.length > 0 )
	{
		for ( int i = 0; i < spawners.length; i++ )
		{
			obj_id spawner = spawners[i];
			messageTo(spawner, "doCleanupEvent", null, 1, false);
		}
	}
	
	if ( hasObjVar(self, "chissPoacherList") )
	{
		removeObjVar(self, "chissPoacherList");
	}
	
	return SCRIPT_CONTINUE;
}


trigger OnHearSpeech(obj_id speaker, string text)
{ 
	/*
	if( isGod(speaker) )
	{
		sendSystemMessage(speaker, "Hracca Controller: OnHearSpeech - text = " + text, "");
		
		int stringCheck = text.indexOf("hracca_chiss_count");
		if ( stringCheck > -1 )
		{
			if ( hasObjVar (self, "chissPoacherList") )
			{
				resizeable obj_id[] chissPoacherList = getResizeableObjIdArrayObjVar (self, "chissPoacherList");
				if ( chissPoacherList != null )
				{
					sendSystemMessage(speaker, "Chiss poacher count in your glade: " + chissPoacherList.length, "");
				}
				else
				{
					sendSystemMessage(speaker, "chissPoacherList was null.", "");
				}
			}
			else
			{
				sendSystemMessage(speaker, "chissPoacherList objvar was not found.", "");
			}
			
			return SCRIPT_CONTINUE;
		}
		
		stringCheck = text.indexOf("hracca_spawn_chiss");
		if ( stringCheck > -1 )
		{		
			sendSystemMessage(speaker, "Hracca Controller: Beginning spawn... ", "");
			setObjVar(self, space_dungeon.VAR_QUEST_TYPE, "ep3_hunt_hracca_kkorrwrot_hunt");
			messageTo(self, "beginSpawn", null, 1, false);
			return SCRIPT_CONTINUE;
		}
		
		stringCheck = text.indexOf("hracca_spawn_kkorrwrot");
		if ( stringCheck > -1 )
		{		
			sendSystemMessage(speaker, "Hracca Controller: Spawning Kkorrwrot... ", "");
			obj_id[] spawners = space_dungeon.getRegisteredObjects(self);
			if( spawners != null && spawners.length > 0 )
			{
				for ( int i = 0; i < spawners.length; i++ )
				{
					obj_id spawner = spawners[i];

					dictionary webster = new dictionary();
					webster.put ("controllerObject", self);
					webster.put ("spawnKkorrwrot", true);
					messageTo(spawner, "doHraccaSpawnEvent", webster, 1, false);
				}
			}
			return SCRIPT_CONTINUE;
		}
		
		stringCheck = text.indexOf("hracca_roar");
		if ( stringCheck > -1 )
		{
			sendSystemMessage(speaker, "Hracca Controller: Kkorrwrot roar...", "");
			play2dNonLoopingSound(speaker, "sound/quest_hracca_kkorrwrot_roar.snd");
			return SCRIPT_CONTINUE;
		}
		
		stringCheck = text.indexOf("hracca_cleanup");
		if ( stringCheck > -1 )
		{
			sendSystemMessage(speaker, "Hracca Controller: Cleaning up...", "");
			
			messageTo(self, "msgSpaceDungeonCleanup", null, 1, false);
			return SCRIPT_CONTINUE;
		}
		
		stringCheck = text.indexOf("hracca_help");
		if ( stringCheck > -1 )
		{
			sendSystemMessage(speaker, "Hracca Controller: hracca_chiss_count, hracca_spawn_chiss, hracca_spawn_kkorrwrot, hracca_roar, hracca_cleanup", "");
			return SCRIPT_CONTINUE;
		}
	}
	*/
	return SCRIPT_CONTINUE;
}

messageHandler testWeatherStateChange()
{
	return SCRIPT_CONTINUE;
}

