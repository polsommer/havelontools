include library.space_dungeon;

const string lastTrailGuideTransition					= "lastRryattTransition";

trigger OnLogin()
{
	string scene = getCurrentSceneName();
	if (!scene.equals("kashyyyk_rryatt_trail"))
		detachScript(self, "theme_park.kashyyyk.rryatt_trail.rryatt_player");
		
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	if (hasObjVar(self, lastTrailGuideTransition))
		removeObjVar(self, lastTrailGuideTransition);
	
	return SCRIPT_CONTINUE;
}

trigger OnUnsticking()
{
	obj_id movementBase = obj_id.NULL_ID;
	
	if (hasObjVar(self, lastTrailGuideTransition))
	{
		movementBase = getObjIdObjVar(self, lastTrailGuideTransition);
		if (isIdValid(movementBase) && exists(movementBase))
		{
			string moveTo = getStringObjVar(movementBase, "zoneLine");
			dictionary params = new dictionary();
			params.put("player", self);
			params.put("zoneIn", false);
			messageTo(movementBase, "handleZoneTransitionRequest", params, 0, false);
			return SCRIPT_CONTINUE;
		}
	}
	
	if (hasObjVar(self, space_dungeon.INSTANCE_ID))
	{
		movementBase = getObjIdObjVar(self, space_dungeon.INSTANCE_ID);
		if (isIdValid(movementBase) && exists(movementBase))
		{
			location baseLoc = getLocation(movementBase);
			warpPlayer(self, baseLoc.area, baseLoc.x, baseLoc.y, baseLoc.z, null, 0,0,0);
			return SCRIPT_CONTINUE;
		}
	}
	
	return SCRIPT_CONTINUE;
}