include ai.ai_combat;
include library.locations;
include library.quests;
include library.create;
include library.factions;

trigger OnAttach ()
{
	string datatable = getStringObjVar (self, "quest_table");
			
	string gatingString = dataTableGetString (datatable, 1, "overall_objvar");
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	string target = dataTableGetString (datatable, questNum, "npc_name");
	int totalQuestNum = getIntObjVar (self, gatingString);
	string file = "theme_park_jabba/quest_details";
	string entry = questID + "_" + totalQuestNum;
	
	location questLoc = getLocationObjVar (self, questID + ".questLoc");
	obj_id waypoint = quests.addThemeParkWaypoint( self, questID, "quest", questLoc, 15, target, file, entry );
	if (questID != null && questID != "")
	{
		setObjVar (self, questID + ".waypoint", waypoint);
		addLocationTarget ("spawnGuy", questLoc, 100);
	}		
	return SCRIPT_CONTINUE;
}

trigger OnArrivedAtLocation( string name )
{
	string datatable = getStringObjVar (self, "quest_table");
		
	string gatingString = dataTableGetString (datatable, 1, "overall_objvar");
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	
	if (name == "quest")
	{
		quests.clearQuestLocationTarget (self, questID, name);
	}
	
	if (name == "spawnGuy")
	{
		removeLocationTarget(name);
		location spawn = getLocationObjVar (self, questID + ".questLoc"	);
		string toSpawn = dataTableGetString (datatable, questNum, "extra_spawn");
		//string bldgName = dataTableGetString (datatable, questNum);
		string bldgScript = dataTableGetString (datatable, questNum, "spawn_script");
		obj_id bldg = createObject (toSpawn, spawn);
		setObjVar (self, questID + ".vip", bldg);
		attachScript (bldg, bldgScript);
		if (questID != null && questID != "")
		{
			setObjVar (bldg, "player", self);
			setObjVar (self, questID + ".bldg", bldg);
			setObjVar (bldg, "quest_table", datatable);
			setObjVar (bldg, "questNum", questNum);
		}			
		//setName (bldg, bldgName);
		createGuards(bldg);
	}
	if (name == "home")
	{
		quests.clearQuestLocationTarget (self, questID, name);
	}		
	return SCRIPT_CONTINUE;
}

messageHandler finishRantokQuest()
{
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 1, "overall_objvar");
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	location home = getLocationObjVar (self, questID + ".home");
	string file = "theme_park_jabba/quest_details";
	string entry = questID + "_return";
	
	obj_id waypoint = getObjIdObjVar (self, questID + ".waypoint");
	if (waypoint != null)
	{
		destroyWaypointInDatapad(waypoint, self);
	}

	if (questID != null && questID != "")
	{
		setObjVar (self, questID + ".done", 1);
		obj_id waypointhome = quests.addThemeParkWaypoint( self, questID, "home", home, 190, "Finish Quest", file, entry );
		sendSystemMessage (self, "Return to Jabba's Palace for your reward, the mission is complete.", null);
		setObjVar (self, questID + ".waypointhome", waypointhome);
	}		
	return SCRIPT_CONTINUE;
}	

void createGuards(obj_id bldg)
{
	location g1 = getLocation(bldg);
	g1.x = g1.x + 10;
	location g2 = getLocation(bldg);
	g2.x = g2.x - 10;
	location g3 = getLocation (bldg);
	g3.z = g3.z - 10;
	location g4 = getLocation (bldg);
	g4.z = g4.z + 10;
	obj_id guard1 = create.object ("valarian_thug", g1);
	obj_id guard2 = create.object ("valarian_thug", g2);
	obj_id guard3 = create.object ("valarian_thug", g3);
	obj_id guard4 = create.object ("valarian_thug", g4);
	setUpNpc (guard1);
	setUpNpc (guard2);
	setUpNpc (guard3);
	setUpNpc (guard4);
	factions.setFaction (guard1, "valarian");	
	factions.setFaction (guard2, "valarian");
	factions.setFaction (guard3, "valarian");
	factions.setFaction (guard4, "valarian");
	setObjVar (bldg, "guard1", guard1);
	setObjVar (bldg, "guard2", guard2);
	setObjVar (bldg, "guard3", guard3);
	setObjVar (bldg, "guard4", guard4);

	dictionary enemies = new dictionary();
	enemies.put ("guard1", guard1);
	enemies.put ("guard2", guard2);
	enemies.put ("guard3", guard3);
	enemies.put ("guard4", guard4);
	enemies.put ("player", getSelf());
	
	messageTo (getSelf(), "makeEnemyAttack", enemies, 3, true);	
	return;
}	

void setUpNpc (obj_id newNpc)
{
	return;
}

trigger OnWaypointGetAttributes (obj_id waypoint, obj_id player, string[] names, string[] attribs)
{
	string questId = getStringObjVar (player, "questID");
	string file = getStringObjVar (player, questId + ".file");
	string entry = getStringObjVar (player, questId + ".entry");
	
	obj_id wp = getObjIdObjVar (player, questId + ".waypoint");
	obj_id wph = getObjIdObjVar (player, questId + ".waypointhome");
	
	if (waypoint != wp && waypoint != wph)
	{
		return SCRIPT_OVERRIDE;
	}	
	
	string_id detail = new string_id (file, entry);
	string questDetails = "@"+detail.toString();
	int idx = 0;
	while (idx >= 0)
	{
		string currentName = names[idx];
		if (names[idx] == null)
		{
			names[idx] = "quest_details";
			attribs[idx] = questDetails;
			idx = -1;
		}
		else
		{
			idx = idx + 1;
		}
	}	
		
	
	return SCRIPT_CONTINUE;
}	

trigger OnWaypointDestroyed(obj_id waypoint)
{
	string questID = getStringObjVar (self, "questID");
	
	if (questID == null)
	{
		return SCRIPT_OVERRIDE;
	}
	else
	{
		int stringCheck = questID.indexOf("jabbas_palace");
	
		if (stringCheck > -1)
		{
			dictionary questBook = new dictionary();
			questBook.put( "questID", questID);
			messageTo (self, "removeJabbaQuestInfo", questBook, 2, true);
			return SCRIPT_CONTINUE;
		}
		else
		{
			return SCRIPT_OVERRIDE;
		}		
	}
}	

messageHandler makeEnemyAttack()
{
	obj_id guard1 = params.getObjId ("guard1");
	obj_id guard2 = params.getObjId ("guard2");
	obj_id guard3 = params.getObjId ("guard3");
	obj_id guard4 = params.getObjId ("guard4");
	obj_id player = params.getObjId ("player");
	startCombat(guard1, player);	
	startCombat(guard2, player);	
	startCombat(guard3, player);	
	startCombat(guard4, player);	
	return SCRIPT_CONTINUE;
}

messageHandler removeJabbaQuestInfo()
{
	string questID = params.getString ("questID");
	if (questID == null)
	{
		questID = "none";
	}		
	int questNum = getIntObjVar (self, questID + ".questNum");
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 1, "overall_objvar");
	string selfScript = dataTableGetString (datatable, questNum, "player_script");
	string type = dataTableGetString (datatable, questNum, "quest_type");
	obj_id waypoint = getObjIdObjVar (self, questID + ".waypoint");
	
	if (waypoint != null)
	{
		destroyObject (waypoint);
	}	

	if (hasObjVar (self, questID + ".vip"))
	{
		return SCRIPT_CONTINUE;
	}
	else
	{
		if (type == "rescue" || type == "arrest" || type == "escort")
		{
			obj_id vip = getObjIdObjVar (self, questID + ".vip");
			messageTo (vip, "stopFollowing", null, 1, true);
		}		
	
		removeObjVar (self, questID);
		removeObjVar (self, "quest_table");
		removeObjVar (self, "questNum");
		removeObjVar (self, "boss");
		
		if (hasScript (self, selfScript))
		{
			detachScript (self, selfScript);
		}		
		return SCRIPT_CONTINUE;
	}
}

