include library.ai_lib;
include library.create;
include library.space_utils;
include library.space_dungeon;
include library.spawning;
include library.utils;


trigger OnAttach()
{
	if ( utils.hasScriptVar (self, "tempStartUpMarker") )
	{
		utils.removeScriptVar(self, "tempStartUpMarker");
	}
	
	messageTo (self, "spawnerStartUp", null, 9, true);
	return SCRIPT_CONTINUE;
}


trigger OnInitialize()
{
	messageTo (self, "spawnerStartUp", null, 11, true);
	return SCRIPT_CONTINUE;
}

messageHandler spawnerStartUp()
{
	if( !utils.hasScriptVar(self, "tempStartUpMarker") )
	{

		if ( utils.hasScriptVar (self, "myCreations") )
		{
			resizeable obj_id[] theList = utils.getResizeableObjIdArrayScriptVar (self, "myCreations");

			for (int i = 0; i < theList.length; ++i)
			{
				destroyObject (theList[i]);
			}

			utils.removeScriptVar (self, "myCreations");
		}
		
		utils.setScriptVar(self, "tempStartUpMarker", true);
		messageTo (self, "spawnMeatlumpThugs", null, 9, true);
		
		messageTo (self, "removeTempStartUpObjvar", null, 39, true);
	}
	return SCRIPT_CONTINUE;
}

messageHandler removeTempStartUpObjvar()
{
	if ( utils.hasScriptVar (self, "tempStartUpMarker") )
	{
		utils.removeScriptVar(self, "tempStartUpMarker");
	}
	return SCRIPT_CONTINUE;
}

messageHandler spawnMeatlumpThugs()
{	
	if ( utils.hasScriptVar (self, "myCreations") )
	{
		resizeable obj_id[] theList = utils.getResizeableObjIdArrayScriptVar (self, "myCreations");
		if (theList == null || theList.length < 1)
		{
			utils.removeScriptVar(self, "myCreations");
		}
		else
		{
			return SCRIPT_CONTINUE;
		}
	}
	
	string meatlump = "meatlump_stooge";
	
	resizeable obj_id[] myCreations = new obj_id[0];
	location spawnerLoc = getLocation(self);
	
	// meatlump thug #1
	location meatlumpLoc1 = new location(spawnerLoc.x-2, spawnerLoc.y, spawnerLoc.z, "corellia", obj_id.NULL_ID);
	obj_id meatlump1 = create.object(meatlump, meatlumpLoc1);
	
	ai_lib.setDefaultCalmBehavior(meatlump1, ai_lib.BEHAVIOR_SENTINEL);
	//ai_lib.setDefaultCalmMood(meatlump1, "npc_standing_drinking");
	int meatlumpYaw1 = -90;
	setYaw (meatlump1, meatlumpYaw1);
	
	setObjVar(meatlump1, "objParent", self);
	attachScript(meatlump1, "theme_park.corellia.content.meatlump_act1_spawned_tracker");
	
	utils.addElement (myCreations, meatlump1);


	// meatlump thug #2
	location meatlumpLoc2 = new location(spawnerLoc.x, spawnerLoc.y, spawnerLoc.z+2, "corellia", obj_id.NULL_ID);
	obj_id meatlump2 = create.object(meatlump, meatlumpLoc2);
	
	ai_lib.setDefaultCalmBehavior(meatlump2, ai_lib.BEHAVIOR_SENTINEL);
	//ai_lib.setDefaultCalmMood(meatlump2, "npc_standing_drinking");
	int meatlumpYaw2 = 0;
	setYaw (meatlump2, meatlumpYaw2);
	
	setObjVar(meatlump2, "objParent", self);
	attachScript(meatlump2, "theme_park.corellia.content.meatlump_act1_spawned_tracker");
	
	utils.addElement (myCreations, meatlump2);
	
	
	// meatlump thug #3
	location meatlumpLoc3 = new location(spawnerLoc.x+2, spawnerLoc.y, spawnerLoc.z, "corellia", obj_id.NULL_ID);
	obj_id meatlump3 = create.object(meatlump, meatlumpLoc3);
	
	ai_lib.setDefaultCalmBehavior(meatlump3, ai_lib.BEHAVIOR_SENTINEL);
	//ai_lib.setDefaultCalmMood(meatlump3, "npc_standing_drinking");
	int meatlumpYaw3 = -45;
	setYaw (meatlump3, meatlumpYaw3);
	
	setObjVar(meatlump3, "objParent", self);
	attachScript(meatlump3, "theme_park.corellia.content.meatlump_act1_spawned_tracker");
	
	utils.addElement (myCreations, meatlump3);
	

	if ( myCreations != null && myCreations.length > 0  )
	{
		utils.setScriptVar (self, "myCreations", myCreations);
	}
	
	if ( utils.hasScriptVar(self, "respawnMeatlumpsDelay") )
	{
		utils.removeScriptVar(self, "respawnMeatlumpsDelay");
	}

	return SCRIPT_CONTINUE;
}

messageHandler spawnMerkie()
{
	// Spawn Merkie Howzat

	resizeable obj_id[] myCreations = new obj_id[0];

	location merkieLoc = getLocation(self);
	string merkieTemplate = "corellia_meatlump_merkie_howzat";

	obj_id merkie = create.object(merkieTemplate, merkieLoc);

	ai_lib.setDefaultCalmBehavior(merkie, ai_lib.BEHAVIOR_SENTINEL);
	//ai_lib.setDefaultCalmMood(merkie, "npc_standing_drinking");
	int merkieYaw = 180;
	setYaw (merkie, merkieYaw);

	setObjVar(merkie, "objParent", self);
	attachScript(merkie, "theme_park.corellia.content.meatlump_act1_spawned_tracker");

	utils.addElement (myCreations, merkie);

	if ( myCreations != null && myCreations.length > 0  )
	{
		utils.setScriptVar (self, "myCreations", myCreations);
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler meatlumpDead()
{
	if ( !params.containsKey("deadNpc") )
	{
		return SCRIPT_CONTINUE;
	}
		
	obj_id deadNpc = params.getObjId("deadNpc");
	string deadType = params.getString("deadType");
	
	if ( isIdValid(deadNpc) )
	{
		resizeable obj_id[] meatlumpList = utils.getResizeableObjIdArrayScriptVar (self, "myCreations");
		if ( meatlumpList != null && meatlumpList.length > 0 )
		{
			if(meatlumpList.contains(deadNpc))
			{
				meatlumpList.remove(deadNpc);
				
				if ( meatlumpList != null && meatlumpList.length > 0 )
				{
					utils.setScriptVar (self, "myCreations", meatlumpList);
				}
				else
				{
					utils.removeScriptVar(self, "myCreations");
					
					if( deadType.equals("meatlump_stooge") )
					{
						messageTo (self, "spawnMerkie", null, 2, true);
					}
					else
					{
						int delay = rand(199, 249);
						utils.setScriptVar(self, "respawnMeatlumpsDelay", delay);
						messageTo (self, "spawnMeatlumpThugs", null, delay, true);
					}
				}
			}
		}
	}
	
	return SCRIPT_CONTINUE;
}

