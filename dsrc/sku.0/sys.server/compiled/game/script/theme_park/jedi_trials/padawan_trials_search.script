// For the Corellian Corvette quests" a player on the quest must find certain documents using this search.

/***** INCLUDES ********************************************************/

include library.jedi_trials;
include library.utils;

/***** INHERITS ********************************************************/


/***** CONSTANTS *******************************************************/

const string DATATABLE_NAME					= "datatables/dungeon/corellian_corvette_quest.iff";

const string_id SEARCH_ITEM         	 	= new string_id ("bestine", "search_item"); // "Search"
const string_id ALREADY_SEARCHED_MSG   	 	= new string_id ("jedi_trials", "already_searched"); // "You've already searched here."
const string_id SUCCESSFUL_SEARCH_MSG    	 	= new string_id ("jedi_trials", "successful_search_msg"); // "You search and find something then place it into your inventory."
const string_id INVENTORY_FULL_MSG   	 	= new string_id ("bestine", "inventory_full"); // "You find something but have no room in your inventory for it. Try again when you are carrying fewer things."

const string ALREADY_SEARCHED_OBJVAR		= "alreadySearched";

/***** TRIGGERS ********************************************************/

trigger OnAttach()
{
	createTriggerVolume( "DestroyNpcVolume", 32.0f, true );
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeExited( string volumeName, obj_id breacher )
{
	if ( isPlayer( breacher ) )
	{
		if ( volumeName.equals("DestroyNpcVolume") )
		{
			obj_id trialPlayer = getObjIdObjVar(self, jedi_trials.PADAWAN_TRIAL_PLAYER_OBJVAR);
			
			if ( trialPlayer == breacher )
			{
				destroyObject(self);
			}
		}
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{	
	if ( canSearch(self, player) )
	{
		int menuOption = mi.addRootMenu ( menu_info_types.SERVER_ITEM_OPTIONS, SEARCH_ITEM);
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.SERVER_ITEM_OPTIONS)
	{	
		if ( canSearch(self, player) )
		{				
			if ( hasObjVar(self, ALREADY_SEARCHED_OBJVAR) )	
			{
				sendSystemMessage(player, ALREADY_SEARCHED_MSG);
			}
			else
			{
				sendSystemMessage(player, SUCCESSFUL_SEARCH_MSG);
				
				setObjVar(player, "jedi_trials.padawan_trials.temp.spokeToTarget_01", true);
				setObjVar(self, ALREADY_SEARCHED_OBJVAR, true);
				
				messageTo(player, "handleSetBeginLoc", null, 1, false);
			}
		}
	}
	return SCRIPT_CONTINUE;
}

/***** FUNCTIONS *******************************************************/

boolean canSearch(obj_id self, obj_id player)
{
	obj_id trialPlayer = getObjIdObjVar(self, jedi_trials.PADAWAN_TRIAL_PLAYER_OBJVAR);
	if ( player == trialPlayer )
	{	
		return hasObjVar(player, "jedi_trials.padawan_trials.temp.acceptedTask");
	}
	return false;
}
