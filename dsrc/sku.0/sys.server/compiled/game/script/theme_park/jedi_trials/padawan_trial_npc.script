include ai.ai_combat;
include library.jedi_trials;

trigger OnAttach()
{
	createTriggerVolume( "DestroyNpcVolume", 32.0f, true );
	createTriggerVolume( "faceToTriggerVolume", 8.0f, true );
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered( string volumeName, obj_id breacher )
{
	if ( isMob(self) )
	{
		if ( isPlayer( breacher ) )
		{
			if ( volumeName == "faceToTriggerVolume" )
			{
				if ( !isInNpcConversation(self) )
				{
					if ( canSee( self, breacher ) )
					{
						faceTo( self, breacher );
					}
				}
			}
		}
	}
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeExited( string volumeName, obj_id breacher )
{
	if ( isPlayer( breacher ) )
	{
		if ( volumeName.equals("DestroyNpcVolume") )
		{
			obj_id trialPlayer = getObjIdObjVar(self, jedi_trials.PADAWAN_TRIAL_PLAYER_OBJVAR);
			
			if ( trialPlayer == breacher )
			{
				if ( isInvulnerable(self) )
				{
					// only delete self if player has already conducted quest business
					if ( hasObjVar(self, "padawan_trials.playerAccepted")
						|| hasObjVar(self, "padawan_trials.playerSucceeded")
						|| hasObjVar(self, "padawan_trials.playerFailed") )
					{
						destroyObject(self);
					}
				}
			}
		}
	}
	return SCRIPT_CONTINUE;
}


messageHandler handleQuestStartAttack()
{
	obj_id player = params.getObjId("player");
	startCombat( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated(obj_id attacker)
{
	obj_id trialPlayer = getObjIdObjVar(self, jedi_trials.PADAWAN_TRIAL_PLAYER_OBJVAR);
	
	dictionary webster = new dictionary();
	webster.put("attacker", attacker);
	webster.put("trialNpc", self);
	
	messageTo(trialPlayer, "handlerTrialNpcKilled", webster, 1, false);
	return SCRIPT_CONTINUE;
}

