include library.hue;
include library.utils;
include library.ai_lib;
include library.colors;
include library.factions;
include library.space_flags;

inherits theme_park.recruitment.base.base_recruiter;

const string CONVO						= "recruiting/rebel_recruit";

trigger OnInitialize()
{
	if (!hasObjVar (self, "dressed"));
	{
		obj_id suit = createObject ("object/tangible/wearables/bodysuit/bodysuit_bwing.iff", self, "");
		obj_id boots = createObject ("object/tangible/wearables/boots/boots_s03.iff", self, "");
		hue.setColor (suit, 1, colors.ORANGE);
		hue.hueObject (self);
		hue.randomizeObject (self);
		pvpSetAlignedFaction (self, ##"rebel");
		pvpMakeDeclared(self);
		string hair_table = "datatables/npc_customization/human_male_hair.iff";
		int numHair = dataTableGetNumRows (hair_table);
		int hairCol = dataTableGetNumColumns (hair_table);
		hairCol = hairCol - 1;
		numHair = numHair - 1;
		hairCol = rand (1, hairCol);
		numHair = rand (1, numHair);
		string hair = dataTableGetString ( hair_table, numHair, hairCol );
		obj_id hairStyle = createObject (hair, self, "");
		hue.hueObject (hairStyle);
		setObjVar (self, "dressed", 1);
	}

	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if (ai_lib.isInCombat(self) || ai_lib.isInCombat(speaker))
		return SCRIPT_OVERRIDE;

	string_id greeting = new string_id (CONVO, "rr1"); // The wind whistles...
	resizeable string_id[] response = new string_id[0];

	boolean addRedeemOption = false;

	//do factional data item stuff here

	string faction = factions.getFaction (speaker);

	if (faction != null)
	{
		if (faction == factions.FACTION_REBEL)
		{
			greeting = new string_id (CONVO, "rr13"); // Hello friend.
			response = utils.addElement(response, new string_id (CONVO, "rr14")); // I'm tired of being a rebel...
		}
		else if (faction == factions.FACTION_IMPERIAL)
		{
			greeting = new string_id (CONVO, "rr16"); // I'm not doing anything...
			response = utils.addElement(response, new string_id (CONVO, "rr17")); // All right then.
		}
	}
	else
	{
		greeting = new string_id (CONVO, "rr1"); // The wind whistles...
		response = utils.addElement(response, new string_id (CONVO, "rr2")); // But the sun doesn't...
		response = utils.addElement(response, new string_id (CONVO, "rr3")); // Um...what?
	}

	if ( addRedeemOption )
	{
		response = utils.addElement(response, new string_id(DATA_ITEM_CONVO, "redeem"));
	}

	if ( (response == null) || (response.length == 0) )
	{
		return SCRIPT_OVERRIDE;
	}
	else
	{
		npcStartConversation (speaker, self, CONVO, greeting, response);
	}

	return SCRIPT_CONTINUE;
}


trigger OnNpcConversationResponse (string convo, obj_id player, string_id response)
{
	if ( response.getTable().equals(DATA_ITEM_CONVO) )
	{
		//do factional data item stuff here
		return SCRIPT_CONTINUE;
	}

	if ( response.getAsciiId().equals("rr2")) // But the sun doesn't...
 	{
		string_id message = new string_id (CONVO, "rr4"); // Who gave you...
		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr2")); // But...
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr3")); // Um...
		npcAddConversationResponse( player, new string_id (CONVO,"rr5")); // I was just...
		npcAddConversationResponse( player, new string_id (CONVO,"rr6")); // Some Pilots...
		return SCRIPT_CONTINUE;
 	}

	if ( response.getAsciiId().equals("rr3")) // Um...what?
 	{
		string_id message = new string_id (CONVO, "rr11"); // well, nevermind...
		npcSpeak (player, message);
		npcEndConversation (player);
		return SCRIPT_CONTINUE;
 	}

	if ( response.getAsciiId().equals("rr5") ) // I was just guessing...
	{
		string_id message = new string_id (CONVO, "rr7"); // Are you interested in...
		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr5")); // I was just...
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr6")); // Some Pilots...
		npcAddConversationResponse( player, new string_id (CONVO,"rr8")); // Won't that ...
		npcAddConversationResponse( player, new string_id (CONVO,"rr9")); // I am. ...
		return SCRIPT_CONTINUE;
	}

	if ( response.getAsciiId().equals("rr6") ) // Some Pilots...
	{
		string_id message = new string_id (CONVO, "rr7"); // Are you interested in...
		npcSpeak(player, message);
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr5")); // I was just...
		npcRemoveConversationResponse(player, new string_id (CONVO,"rr6")); // Some Pilots...
		npcAddConversationResponse( player, new string_id (CONVO,"rr8")); // Won't that ...
		npcAddConversationResponse( player, new string_id (CONVO,"rr9")); // I am. ...
		return SCRIPT_CONTINUE;
	}

	if ( response.getAsciiId().equals("rr8")) // Um...what?
 	{
		string_id message = new string_id (CONVO, "rr12"); // If all you're....
		npcSpeak (player, message);
		npcEndConversation (player);
		return SCRIPT_CONTINUE;
 	}

	if ( response.getAsciiId().equals("rr9")) // Good...
 	{
		string_id message = new string_id (CONVO, "rr10"); // Good.
		npcSpeak (player, message);
		npcEndConversation (player);
		pvpSetAlignedFaction ( player, ##"rebel");
		pvpMakeDeclared (player);
		return SCRIPT_CONTINUE;
 	}
 	if (response.getAsciiId().equals("rr14")) //I'm tired of being...
	{
 		string_id message = new string_id (CONVO, "rr15"); //Ok, you're out
 		npcSpeak (player, message);
 		npcEndConversation (player);

		//this automatically clears their aligned faction and
		// sets their pvpType to NEUTRAL:
		pvpSetAlignedFaction(self,0);
		pvpMakeNeutral(self);

		//if they are pilots, set their alignedFaction (they'll still be pvp Type neutral)
		if ( space_flags.isImperialPilot(self) )
			pvpSetAlignedFaction( self, ##"imperial" );
		else if ( space_flags.isRebelPilot(self) )
			pvpSetAlignedFaction( self, ##"rebel" );

 		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("rr17")) // All Right then..
	{
		string_id message = new string_id (CONVO, "rr18"); // Thanks for nothing.
		npcSpeak (player, message);
		npcEndConversation (player);
		return SCRIPT_CONTINUE;
 	}

	return SCRIPT_CONTINUE;
}
