include library.ai_lib;
include library.factions;
include library.groundquests;
include library.holiday;

const string MENU_STRING_FILE			= "theme_park/outbreak/outbreak";
const string MENU_OBJ_VAR			= "computer_system";
const string NO_MENU_OBJ_VAR			= "none";
const string KEY_QUEST_INT_OBJVAR		= "quest";
const string IMPERIAL_KEY_QUEST			= "outbreak_quest_administrative_building_imperial_0";
const string REBEL_KEY_QUEST			= "outbreak_quest_administrative_building_rebel_0";
const string NEUTRAL_KEY_QUEST			= "outbreak_quest_administrative_building_neutral_0";
const string FOUND_KEY_SIGNAL			= "hasFoundKey";
const string OUTBREAK_KEY_SEARCH		= "search_body_outbreak_key";

const string_id SID_YOU_FIND_NOTHING		= new string_id(MENU_STRING_FILE, "you_find_nothing");
const string_id SID_THIS_NOT_FOR_YOU		= new string_id(MENU_STRING_FILE, "you_need_parts");


trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{

	if(isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	if(!hasObjVar(self, MENU_OBJ_VAR))
		return SCRIPT_CONTINUE;

	string menuObjVar = getStringObjVar(self, MENU_OBJ_VAR);
	if(menuObjVar == null || menuObjVar.length() <= 0)
		return SCRIPT_CONTINUE;

	//this is the objvar flag for no menu at all
	if(menuObjVar.equals(NO_MENU_OBJ_VAR))
		return SCRIPT_CONTINUE;

	menu_info_data data = mi.getMenuItemByType (menu_info_types.SERVER_MENU2);
	mi.addRootMenu(menu_info_types.ITEM_USE, new string_id(MENU_STRING_FILE, menuObjVar));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{

	if(isDead(player) || isIncapacitated(player))
		return SCRIPT_CONTINUE;

	if(!hasObjVar(self, MENU_OBJ_VAR))
		return SCRIPT_CONTINUE;

	if(item != menu_info_types.ITEM_USE)
		return SCRIPT_CONTINUE;

	string menuObjVar = getStringObjVar(self, MENU_OBJ_VAR);
	if(menuObjVar == null || menuObjVar.length() <= 0)
		return SCRIPT_CONTINUE;
		
	CustomerServiceLog("outbreak_themepark", "fix_dungeon_comp_systems.OnObjectMenuSelect() menuObjVar: "+menuObjVar);
		
	if(menuObjVar.equals("damage_control"))
	{
		if(!groundquests.isTaskActive(player, "outbreak_quest_facility_01", "repairDamageControlModule"))
		{
			sendSystemMessage(player, SID_THIS_NOT_FOR_YOU);		
			return SCRIPT_CONTINUE;
		}
		
		groundquests.sendSignal(player, "damageControlModuleRepaired"); 
		return SCRIPT_CONTINUE;		
	}
	else if(menuObjVar.equals("communications"))
	{
		CustomerServiceLog("outbreak_themepark", "fix_dungeon_comp_systems.OnObjectMenuSelect() Key menu selected by Player: "+player);
	
		if(!groundquests.isTaskActive(player, "outbreak_quest_facility_01", "repairCommunicationsModule"))
		{
			sendSystemMessage(player, SID_THIS_NOT_FOR_YOU);		
			return SCRIPT_CONTINUE;
		}
		
		groundquests.sendSignal(player, "communicationsModuleRepaired"); 
		return SCRIPT_CONTINUE;	
	}
	sendSystemMessage(player, SID_YOU_FIND_NOTHING);
	
	return SCRIPT_CONTINUE;
}
