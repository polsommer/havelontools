include library.utils;
include library.ai_lib;
include library.chat;
include ai.ai_combat;
include library.badge;
include library.prose;
include library.factions;

const string CONVO_FILE			= "theme_park/warren/warren";
const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";
const string PASSKEYCODE		= "object/tangible/mission/quest_item/warren_passkey_s01.iff";

trigger OnAttach()
{
	setCondition( self, CONDITION_CONVERSABLE );

	setName( self, "" );
	setName( self, new string_id ( "theme_park/warren/warren_system_messages", "name_heff" ));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if ( ai_lib.isInCombat( self ) || ai_lib.isInCombat( speaker ) || ai_lib.aiIsDead( self ) )
		return SCRIPT_CONTINUE;

	chat.setChatMood( self, chat.MOOD_SCARED );

	//already did this:
	if ( badge.hasBadge( speaker, "warren_hero" ) )
	{
		//if you have taken down teraud:
		chat.chat( self, new string_id( CONVO_FILE, "heff_done" ) );//You're a peach!
		return SCRIPT_CONTINUE;
	}
	else if (!hasEvidence( speaker ) )
	{
		chat.chat( self, new string_id( CONVO_FILE, "heff_bye" ) );//Leave me alone
		return SCRIPT_CONTINUE;
	}

	faceToBehavior( self, speaker );
	string_id greeting = new string_id (CONVO_FILE, "heff_start");//What?
	string_id response[] = new string_id [1];
	response[0] = new string_id (CONVO_FILE, "heff_reply_1");//I have evidence!
	npcStartConversation (speaker, self, CONVO_FILE, greeting, response);

	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	if ( !convo.equals( CONVO_FILE ) )
		return SCRIPT_CONTINUE;

	npcRemoveConversationResponse(player, response );

	if ( response.getAsciiId().equals("heff_reply_1"))//I have evidence
	{
		string_id message = new string_id (CONVO_FILE, "heff_1");//Sweet!
		npcSpeak( player, message );
		if ( takeAllEvidence( player ) )
		{
			if ( !badge.hasBadge ( player, "warren_hero" ) )
			{
				badge.grantBadge(player, "warren_hero");
				factions.addFactionStanding( player, "Imperial", 500.0f );
			}
		}
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

boolean hasEvidence( obj_id player )
{
	obj_id pInv = utils.getPlayerDatapad(player);
	obj_id[] contents = getContents( pInv );
	if ( contents == null )
	{
		//debugSpeakMsg( player, "you got nothing" );
		return false;
	}

	//we set an array of 0's and change elements 1 through 4 to '1' if the
	// player has the corresponding evidence bit:
	int[] evCount = new int[5];
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( hasObjVar( contents[i], "warren.evidence" ) )
		{
			evCount[ getIntObjVar( contents[i], "warren.evidence" ) ] = 1;
  		}
 	}

	//we count from 1 to 4 to ensure all these elements were set to 1
	// if any were not set to 1 then the user is missing an evidence bit:
	for ( int i = 1; i < 5; i++ )
	{
		if ( evCount[i]==0 )
			return false;
	}

	return true;
}

boolean takeAllEvidence( obj_id player )
{
	obj_id pInv = utils.getPlayerDatapad(player);
	obj_id[] contents = getContents( pInv );
	if ( contents == null )
	{
		//debugSpeakMsg( player, "you got nothing" );
		return false;
	}

	//see above hasEvidence, this works just like that
	int[] evCount = new int[5];
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( hasObjVar( contents[i], "warren.evidence" ) )
		{
			evCount[ getIntObjVar( contents[i], "warren.evidence" ) ] = 1;
			destroyObject( contents[i] );
  		}
 	}

	for ( int i = 1; i < 5; i++ )
	{
		if ( evCount[i]==0 )
			return false;
	}

	return true;
}
