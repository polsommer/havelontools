include library.utils;

const string TURRET_DATA_TEMPLATE	= "object/tangible/mission/quest_item/warren_turret_sequence.iff";
const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

trigger OnInitialize()
{
	utils.setScriptVar( self, "messageSent", true );
	messageTo( self, "respawnTurretData", null, 1, false );
	return SCRIPT_CONTINUE;
}

void spawnTurretData( obj_id container )
{
	obj_id[] contents = getContents( container );
	if ( contents != null )
	{
		for ( int i = 0; i < contents.length; i++)
		{
			if ( hasObjVar( contents[i], "warren.turretData" ) )
			{
				//remove all the extra turret data.
				for(int j = i+1; j < contents.length; ++j)
				{
					destroyObject(contents[j]);
				}
				return; //we have our turret data
			}
		}
	}
	obj_id turretData = createObject( TURRET_DATA_TEMPLATE, container, "" );
	attachScript( turretData, "theme_park.warren.turret_data" );
	setObjVar( turretData, "warren.turretData", true );

	setName( turretData, "" );
	setName( turretData, new string_id( SYSTEM_MESSAGES, "turret_data_name" ) );

}

messageHandler respawnTurretData()
{
	utils.removeScriptVar( self, "messageSent" );
	spawnTurretData( self );
	return SCRIPT_CONTINUE;
}

trigger OnClosedContainer(obj_id player)
{
	if ( utils.hasScriptVar( self, "messageSent" ) )
		return SCRIPT_CONTINUE;//already sent a message to respawn this

	obj_id[] contents = getContents( self );
	if ( contents != null )
	{
		for ( int i = 0; i < contents.length; i++)
		{
			if ( hasObjVar( contents[i], "warren.turretData" ) )
			{
				removeObjVar( contents[i], "warren.turretCodeSequence" );
				return SCRIPT_CONTINUE;//still has a letter in it
			}
		}
	}

	messageTo( self, "respawnTurretData", null, 900, false );//respawns every 500 minutes
	utils.setScriptVar( self, "messageSent", true );
	return SCRIPT_CONTINUE;
}

