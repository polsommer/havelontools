include library.ai_lib;
include ai.ai_combat;
include library.factions;
include library.utils;
include library.attrib;
include library.chat;

const string CONVO_FILE			= "theme_park/warren/warren";

const string ALERT_VOLUME_NAME = "alertVolume";
const string AGGRO_VOLUME_NAME = "aggroVolume";

const string ACTION_ALERT = "alert";
const string ACTION_THREATEN = "threaten";

trigger OnAttach()
{
	if ( !hasObjVar( self, "ai.diction") )
		setObjVar( self, "ai.diction", "military" );

	if ( getConfigSetting("GameServer", "disableAITriggerVolumes") == null )
	{
		createTriggerVolume( ALERT_VOLUME_NAME, 15.0f, true );
		createTriggerVolume( AGGRO_VOLUME_NAME, 8.0f, true );
	}

	setObjVar( self, "ai.rangedOnly", true );

	if ( !hasObjVar( self, "ai.grenadeType" ))
	{
		setObjVar( self, "ai.grenadeType", "object/weapon/ranged/grenade/grenade_fragmentation" );
	}
	setName( self, "" );
	setName( self, new string_id ( "theme_park/warren/warren_system_messages", "name_jerrd" ));
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	if ( getConfigSetting("GameServer", "disableAITriggerVolumes") == null )
	{
		createTriggerVolume( ALERT_VOLUME_NAME, 15.0f, true );
		createTriggerVolume( AGGRO_VOLUME_NAME, 8.0f, true );
	}
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered( string volumeName, obj_id breacher )
{
	if ( hasObjVar( breacher, "gm") )
		return SCRIPT_CONTINUE;

	if ( ai_lib.isInCombat( self ) || ai_lib.isInCombat( breacher))
		return SCRIPT_CONTINUE;

	if ( breacher == self )
		return SCRIPT_CONTINUE;

	if ( isIncapacitated(self) || ai_lib.isAiDead( breacher ))
		return SCRIPT_CONTINUE;

	if ( !isPlayer( breacher) )
		return SCRIPT_CONTINUE;

	if ( !ai_lib.isInCombat( self ) )
	{
		if ( volumeName == ALERT_VOLUME_NAME )
		{
			chat.setAngryMood( self );
			chat.chat( self, new string_id( CONVO_FILE, "guard_warning" ));//Don't come any closer!
		}
		else if ( volumeName == AGGRO_VOLUME_NAME )
		{
			startCombat( self, breacher );
			return SCRIPT_CONTINUE;
		}
	}
	return SCRIPT_CONTINUE;
}

