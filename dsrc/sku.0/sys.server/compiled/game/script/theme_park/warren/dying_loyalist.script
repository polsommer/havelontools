include library.utils;
include library.ai_lib;
include library.chat;
include ai.ai_combat;

const string CONVO_FILE			= "theme_park/warren/warren";
const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

trigger OnAttach()
{
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_LOITER );
	setCondition( self, CONDITION_CONVERSABLE );
	chat.setChatMood( self, chat.MOOD_SCARED );

	setName( self, "" );
	setName( self, new string_id ( "theme_park/warren/warren_system_messages", "name_dirk" ));
	setInvulnerable( self, true );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if ( ai_lib.isInCombat( self ) || ai_lib.isInCombat( speaker ) || ai_lib.aiIsDead( self ) )
		return SCRIPT_CONTINUE;

	chat.setChatMood( self, chat.MOOD_SCARED );

	faceToBehavior( self, speaker );
	string_id greeting = new string_id (CONVO_FILE, "loyalist_start");//Don't hurt me
	chat.chat( self, greeting );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated( obj_id killer )
{
	obj_id warren = getObjIdObjVar( self, "warren.bldg" );
	messageTo( warren, "handleLoyalistDied", null, 800, false );
	return SCRIPT_CONTINUE;
}
