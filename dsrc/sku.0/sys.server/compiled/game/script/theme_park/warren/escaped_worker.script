include library.utils;
include library.ai_lib;
include library.chat;
include ai.ai_combat;

const string CONVO_FILE			= "theme_park/warren/warren";
const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

trigger OnAttach()
{
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_LOITER );
	setCondition( self, CONDITION_CONVERSABLE );
	chat.setChatMood( self, chat.MOOD_SCARED );

	setName( self, "" );
	setName( self, new string_id ( "theme_park/warren/warren_system_messages", "name_phy" ));
	setInvulnerable( self, true );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if ( ai_lib.isInCombat( self ) || ai_lib.isInCombat( speaker ) || ai_lib.aiIsDead( self ) )
		return SCRIPT_CONTINUE;

	chat.setChatMood( self, chat.MOOD_SCARED );

	faceToBehavior( self, speaker );
	string_id greeting = new string_id (CONVO_FILE, "worker_start");//Don't hurt me
	string_id response[] = new string_id [2];
	response[0] = new string_id (CONVO_FILE, "worker_reply_1");//who are you?
	response[1] = new string_id (CONVO_FILE, "worker_reply_2");//what is this place?
	npcStartConversation (speaker, self, CONVO_FILE, greeting, response);

	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	if ( !convo.equals( CONVO_FILE ) )
		return SCRIPT_CONTINUE;

	npcRemoveConversationResponse(player, response );

	if ( response.getAsciiId().equals("worker_reply_1"))//Who are you
	{
		string_id message = new string_id (CONVO_FILE, "worker_1");//I am a worker
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( CONVO_FILE, "worker_1_reply_1" ));//Are there more workers in here?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("worker_1_reply_1"))//Are there more workers in here?
	{
		string_id message = new string_id (CONVO_FILE, "worker_3");//there are many workers trapped below
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( CONVO_FILE, "worker_3_reply_1" ));//What do you mean 'trapped'?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("worker_3_reply_1"))//What do you mean 'trapped'?
	{
		string_id message = new string_id (CONVO_FILE, "worker_4");//The elevator is locked and you need a passcode
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( CONVO_FILE, "worker_4_reply_1" ));//What's the passcode?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("worker_4_reply_1"))//What's the passcode?
	{
		string_id message = new string_id (CONVO_FILE, "worker_5");//I don't know
		npcSpeak( player, message );
		return SCRIPT_CONTINUE;
	}



	if ( response.getAsciiId().equals("worker_reply_2"))//What is this place?
	{
		string_id message = new string_id (CONVO_FILE, "worker_2");//the warren
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( CONVO_FILE, "worker_2_reply_2" ));//what happened here?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("worker_2_reply_2"))//What happened here?
	{
		string_id message = new string_id (CONVO_FILE, "worker_6");//An imperial bigwig came and all hell broke loose
		npcSpeak( player, message );
		return SCRIPT_CONTINUE;
	}


	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated( obj_id killer )
{
	obj_id warren = getObjIdObjVar( self, "warren.bldg" );
	messageTo( warren, "handleEscapedWorkerDied", null, 800, false );
	return SCRIPT_CONTINUE;
}
