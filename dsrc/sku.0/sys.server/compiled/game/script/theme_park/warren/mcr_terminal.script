include library.utils;
include library.sui;
include library.colors;

const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

const string DEACTIVATE = "mcr_term_deactivated";
const string ACTIVATE = "mcr_term_active";

trigger OnInitialize()
{
	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "mcr_term_name_on" ) );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	boolean isInactive = utils.getBooleanScriptVar( self, "warren.isInactive" );
	if ( isInactive )
	{
		showFlyText(self, new string_id ( SYSTEM_MESSAGES, DEACTIVATE ), 1.75f, colors.GREENYELLOW);
		//debugSpeakMsg( self, "I am already inactive");
		return SCRIPT_CONTINUE;//do nothing, already inactive
	}
	if ( !hasPasskey( player, self ) )
	{
		//debugSpeakMsg( self, "You don't have the key for this");
		showFlyText(self, new string_id ( SYSTEM_MESSAGES, ACTIVATE ), 1.75f, colors.GREENYELLOW);
		return SCRIPT_CONTINUE;
	}

	showFlyText(self, new string_id ( SYSTEM_MESSAGES, DEACTIVATE ), 1.75f, colors.GREENYELLOW);
	deactivateTerminal( self );

	return SCRIPT_CONTINUE;
}

boolean hasPasskey( obj_id player, obj_id self )
{
	obj_id pInv = utils.getInventoryContainer( player );
	obj_id[] contents = getContents( pInv );
	if ( contents == null )
	{
		//debugSpeakMsg( item, "you got nothing" );
		return false;
	}

	int keyNum = getIntObjVar( self, "warren.passkeyNumber" );
	if ( keyNum == 0 )
	{
		debugSpeakMsg( self, "I AM SUPPOSED TO HAVE A warren.passkeyNumber OBJVAR BUT I DON'T" );
		return false;
	}

	for ( int i = 0; i < contents.length; i++ )
	{
		int passKeyNumber = getIntObjVar( contents[i], "warren.passkeyNumber" );
		if ( passKeyNumber == keyNum )
		{
			//debugSpeakMsg( self, "You got it!" );
			destroyObject( contents[i] );
			return true;
		}
	}
	return false;
}

void deactivateTerminal( obj_id self )
{
	//flag this terminal as de-activated:
	utils.setScriptVar( self, "warren.isInactive", true );

	//tell the building this terminal has been deactivated:
	obj_id bldg = getTopMostContainer( self );
	int keyNum = getIntObjVar( self, "warren.passkeyNumber" );
	utils.setScriptVar( bldg, "warren.passkeyNumberDeactivated"+keyNum, true );
	messageTo( self, "handleReactiveTerminal", null, 1800, false );

	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "mcr_term_name_off" ) );

	return;
}

messageHandler handleReactiveTerminal()
{
	//remove flag from terminal:
	utils.removeScriptVar( self, "warren.isInactive" );

	//...and inform the bldg:
	obj_id bldg = getTopMostContainer( self );
	int keyNum = getIntObjVar( self, "warren.passkeyNumber" );
	utils.removeScriptVar( bldg, "warren.passkeyNumberDeactivated"+keyNum );

	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "mcr_term_name_on" ) );

	return SCRIPT_CONTINUE;
}
