include library.utils;
include library.colors;

const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

const string COREROD_TEMPLATE	= "object/tangible/mission/quest_item/warren_core_control_rod_s01.iff";

trigger OnInitialize()
{
	setOwner( self, obj_id.NULL_ID );

	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "core_name_on" ) );

	return SCRIPT_CONTINUE;
}

void checkForReactorShutDown( obj_id self )
{
	obj_id bldg = getTopMostContainer( self );
	if ( !isIdValid( bldg ) )
		return;

	obj_id[] contents = getContents( self );
	if ( contents == null )
		return;

	int coreCount = 0;
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( hasObjVar( contents[i], "warren.reactorControlRod" ))
			coreCount++;

		//shut down if both rods are here:
		if ( coreCount > 1 )
		{
			shutDownCore( self, bldg );
			return;
		}
	}
}

void checkForReactorShutDown( obj_id self, obj_id player )
{
	obj_id bldg = getTopMostContainer( self );

	obj_id[] contents = getContents( utils.getInventoryContainer(player) );
	if ( contents == null )
		return;

	int coreCount = 0;
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( hasObjVar( contents[i], "warren.reactorControlRod" ))
		{
			moveCoreRodFromPlayerToContainer( contents[i], self );
			sendSystemMessage( player, new string_id( SYSTEM_MESSAGES, "insert_rod" ) );
			doAnimationAction( player, "manipulate_low" );
			coreCount++;
		}

		//shut down if both rods are here:
		if ( coreCount > 1 )
		{
			shutDownCore( self, bldg );
			return;
		}
		else if ( coreCount > 0 )
		{
			checkForReactorShutDown( self );
		}
	}
}

void shutDownCore( obj_id self, obj_id bldg )
{
	permissionsMakePublic( getCellId( getTopMostContainer(self), "plusroom84") );
	utils.setScriptVar( bldg, "warren.reactorOverriden", true );
	messageTo( self, "handleReactivateCore", null, 3600, false );//turn it on later
	showFlyText(self, new string_id ( SYSTEM_MESSAGES, "deactivate_core" ), 1.75f, colors.GREENYELLOW);

	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "core_name_off" ) );

	obj_id[] contents = getContents( self );
	if ( contents == null )
		return;
	for ( int i = 0; i < contents.length; i++ )
	{
		destroyObject( contents[i] );
	}
}

messageHandler handleReactivateCore()
{
	obj_id bldg = getTopMostContainer( self );
	if ( !isIdValid( bldg ) )
		return SCRIPT_CONTINUE;

	utils.removeScriptVar( bldg, "warren.reactorOverriden" );
	permissionsMakePrivate( getCellId( getTopMostContainer(self), "plusroom84") );

	setName( self, "" );
	setName( self, new string_id( SYSTEM_MESSAGES, "core_name_on" ) );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info item)
{
	checkForReactorShutDown( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnOpenedContainer( obj_id player )
{
	checkForReactorShutDown( self, player );
	return SCRIPT_CONTINUE;
}

void moveCoreRodFromPlayerToContainer( obj_id coreRod, obj_id container )
{
	//destroy the old one:

	//Make a new one in there:
	destroyObject( coreRod );
	coreRod = createObject( COREROD_TEMPLATE, container, "" );
	setObjVar( coreRod, "warren.reactorControlRod", true );
	setName( coreRod, "" );
	setName( coreRod, new string_id(SYSTEM_MESSAGES, "core_rod_name"));
}

