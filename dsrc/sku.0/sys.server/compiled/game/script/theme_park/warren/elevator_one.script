include library.locations;
include library.utils;
include library.pet_lib;
include library.colors;

const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

const string ACTIVATE = "elev_one_secure";

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu2 = mi.addRootMenu (menu_info_types.ELEVATOR_DOWN, new string_id("elevator_text","down"));
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	location here = getLocation (player);
	location term = getLocation (self);
	float range = getDistance(here, term);
	if (range > 3.0)
	{
		sendSystemMessage (player, new string_id ( SYSTEM_MESSAGES, "elev_range" ) );
		return SCRIPT_OVERRIDE;
	}

	if ( item == menu_info_types.ELEVATOR_DOWN)
	{
		if ( isSecurityActive( self ) )
		{
		 	showFlyText(self, new string_id ( SYSTEM_MESSAGES, ACTIVATE ), 1.75f, colors.GREENYELLOW);
			return SCRIPT_OVERRIDE;
		}
		movePartyDown( self, player );
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

boolean isSecurityActive( obj_id elevator )
{
	obj_id bldg = getTopMostContainer( elevator );
	for ( int i = 1; i < 5; i++ )
	{
		if ( !utils.hasScriptVar( bldg, "warren.passkeyNumberDeactivated"+i ) )
		{
			//debugSpeakMsg( elevator, "Security lock engaged" );
			return true;
		}
	}
	//debugSpeakMsg( elevator, "Security lock disengaged" );
	return false;
}

void movePartyDown( obj_id self, obj_id player )
{
	location elevLoc = getLocation( self );
	obj_id cell = elevLoc.cell;

	obj_id[] contents = getContents( cell );
	for ( int i = 0; i < contents.length; i++ )
	{
		//move all the players and pets down a level:
		if ( isPlayer( contents[i] ) )
		{
			playClientEffectObj(contents[i], "clienteffect/elevator_descend.cef", contents[i], null);
			if (elevatorMove (contents[i], -1) == 0)
			{
				sendSystemMessage (contents[i], new string_id ( SYSTEM_MESSAGES, "elev_toolow" ) );
				return;
			}
		}
		else if ( pet_lib.isPet( contents[i] ) )
		{
			elevatorMove (contents[i], -1);//pets just get moved without the fanfare
		}
	}
}

