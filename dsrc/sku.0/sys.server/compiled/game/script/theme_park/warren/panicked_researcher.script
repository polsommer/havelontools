include library.utils;
include library.ai_lib;
include library.chat;
include ai.ai_combat;

const string CONVO_FILE			= "theme_park/warren/warren";
const string SYSTEM_MESSAGES	= "theme_park/warren/warren_system_messages";

trigger OnAttach()
{
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_LOITER );
	setCondition( self, CONDITION_CONVERSABLE );
	chat.setChatMood( self, chat.MOOD_SCARED );

	setInvulnerable( self, true );

	setName( self, "" );
	setName( self, new string_id ( "theme_park/warren/warren_system_messages", "name_manx" ));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if ( ai_lib.isInCombat( self ) || ai_lib.isInCombat( speaker ) || ai_lib.aiIsDead( self ) )
		return SCRIPT_CONTINUE;

	chat.setChatMood( self, chat.MOOD_SCARED );

	faceToBehavior( self, speaker );

	if ( isReactorDisabled(self) )
	{
		string_id greeting = new string_id (CONVO_FILE, "researcher_2");//Good thing the reactor has been disabled!
		chat.chat( self, greeting );
		return SCRIPT_CONTINUE;
	}

	if ( hasBothCores( speaker ))
	{
		string_id greeting = new string_id (CONVO_FILE, "researcher_3");//Now they need to be put in the reactor core. But the door is locked… there's two manual override switches on this floor… somewhere.
		chat.chat( self, greeting );
		return SCRIPT_CONTINUE;
	}


	string_id greeting = new string_id (CONVO_FILE, "researcher_start");//It's hopeless! The reactor core is going to blow! We'll all die!
	string_id response[] = new string_id [1];
	response[0] = new string_id (CONVO_FILE, "researcher_reply_1");//What do we do?
	npcStartConversation (speaker, self, CONVO_FILE, greeting, response);

	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	if ( !convo.equals( CONVO_FILE ) )
		return SCRIPT_CONTINUE;

	npcRemoveConversationResponse(player, response );

	if ( response.getAsciiId().equals("researcher_reply_1"))//What do we do?
	{
		string_id message = new string_id (CONVO_FILE, "researcher_1");//The only way to fix it, he says, is to "Get the spare reactor core rods from the basement… behind the holding pen. The backup system should have taken over, but I think it was manually overridden…"
		npcSpeak( player, message );
	}
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated( obj_id killer )
{
	obj_id warren = getObjIdObjVar( self, "warren.bldg" );
	messageTo( warren, "handleResearcherDied", null, 800, false );
	return SCRIPT_CONTINUE;
}

boolean isReactorDisabled(obj_id self)
{
	obj_id warren = getObjIdObjVar( self, "warren.bldg" );
	if ( !isIdValid(warren) )
		return false;

	if ( utils.hasScriptVar( warren, "warren.reactorOverriden" ) )
		return true;

	return false;
}

boolean hasBothCores( obj_id player )
{
	obj_id pInv = utils.getInventoryContainer( player );
	obj_id[] contents = getContents( pInv );
	if ( contents == null )
	{
		//debugSpeakMsg( item, "you got nothing" );
		return false;
	}

	//see if you have 2 cores in your inventory:
	int countCores = 0;
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( hasObjVar( contents[i], "warren.reactorCore" ) )
		{
			countCores++;
			if ( countCores > 1 )
				return true;
		}
	}

	return false;
}
