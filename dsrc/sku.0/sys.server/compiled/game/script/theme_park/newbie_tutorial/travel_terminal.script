include library.groundquests;
include library.utils;
include library.features;
include library.weapons;
include java.util.Vector;
include java.util.Arrays;


inherits theme_park.newbie_tutorial.tutorial_base;

const string_id SID_USE_MENU = new string_id ("sui", "use");

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int menuOption = mi.addRootMenu ( menu_info_types.ITEM_USE, SID_USE_MENU);

	//make sure the bank objvar gets cleared:
	removeObjVar( player, "banking_bankid" );

	removeStaticWaypoint( self );
	//sysMessage( player, "select_dest" );
	if ( hasObjVar( self, "newbie.skipped") )
	{
		if ( !hasScript( player, NEWBIE_SCRIPT_SKIPPED ))
			attachScript( player, NEWBIE_SCRIPT_SKIPPED );

	}
	setLookAtTarget(player, null);
	transferBankToInventory(player);

	//equip your weapon:
	obj_id currentWeapon = getCurrentWeapon( player );
	if ( hasObjVar( currentWeapon, "newbie.item" ) )
		destroyObject( currentWeapon );

	obj_id playerInv = utils.getInventoryContainer(player);
	obj_id[] contents = getContents(playerInv);
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( isWeapon(contents[i]) )
		{
			string templateName = getTemplateName( contents[i] );
			obj_id weapon = weapons.createWeapon(templateName, playerInv, 0.75f);
			equip(weapon, player);
			destroyObject( contents[i] );
			break;
		}
	}

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{

		if (!hasScript (player, NEWBIE_SCRIPT_SKIPPED))
		{
			if (!hasObjVar (player, "newbie.talkedtojedi"))
			{
				string_id TALK_TO_JEDI = new string_id(NEWBIE_STRING_FILE, "talk_to_jedi");
				sendSystemMessage (player, TALK_TO_JEDI);
				return SCRIPT_CONTINUE;
			}
			else
			{
				removeObjVar (player, "newbie.talkedtojedi");
			}
		}

		leaveTutorial(self, player);
	}
	return SCRIPT_CONTINUE;
}

void leaveTutorial(obj_id self, obj_id player)
{
	//make sure the bank objvar gets cleared:
	removeObjVar( player, "banking_bankid" );

	removeStaticWaypoint( self );
	//sysMessage( player, "select_dest" );
	if ( hasObjVar( self, "newbie.skipped") )
	{
		if ( !hasScript( player, NEWBIE_SCRIPT_SKIPPED ))
			attachScript( player, NEWBIE_SCRIPT_SKIPPED );

	}
	setLookAtTarget(player, null);
	transferBankToInventory(player);

	//equip your weapon:
	obj_id currentWeapon = getCurrentWeapon( player );
	if ( hasObjVar( currentWeapon, "newbie.item" ) )
		destroyObject( currentWeapon );

	obj_id playerInv = utils.getInventoryContainer(player);
	obj_id[] contents = getContents(playerInv);
	for ( int i = 0; i < contents.length; i++ )
	{
		if ( isWeapon(contents[i]) )
		{
			string templateName = getTemplateName( contents[i] );
			obj_id weapon = weapons.createWeapon(templateName, playerInv, 0.75f);
			equip(weapon, player);
			destroyObject( contents[i] );
			break;
		}
	}
	sendToMosEisley( player );
}

void sendToMosEisley( obj_id player )
{
		// Starting ALL new characters in Mos Eisley on Tatooine
		string planet = "tatooine";
		float locX = 3528.0f + rand(-2.5f, 2.5f);
		float locY = 5.0f;
		float locZ = -4804.0f + rand(-2.5f, 2.5f);

		setYaw(player, 180.0f);

		groundquests.completeQuest(player, "quest/c_newbie_hall_01");
		groundquests.completeQuest(player, "quest/c_newbie_hall_02");
		groundquests.completeQuest(player, "quest/c_newbie_hall_range01");
		groundquests.completeQuest(player, "quest/c_newbie_hall_range02");
		groundquests.completeQuest(player, "quest/c_newbie_hall_03");
		groundquests.completeQuest(player, "quest/c_newbie_hall_jedi");

		newbieTutorialRequest(player, "clientReady");
		attachScript (player, "theme_park.newbie_tutorial.new_player_ribbon");
		warpPlayer(player, planet, locX, locY, locZ, null, 0.0f, 0.0f, 0.0f);
		return;
}

messageHandler warp_player_now()
{
	obj_id player = params.getObjId("player");
	leaveTutorial(self,player);
	return SCRIPT_CONTINUE;
}
