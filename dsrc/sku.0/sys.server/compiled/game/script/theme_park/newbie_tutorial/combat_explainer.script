include library.chat;
include library.utils;
include library.weapons;

inherits theme_park.newbie_tutorial.tutorial_base;

messageHandler handlePlayerArrival()
{
	obj_id player = getPlayer( self );
	faceToBehavior( self, player );
	messageTo( self, "handleGreetPlayer", null, 1, false );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	removeStaticWaypoint( self );
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	faceToBehavior( self, player );
	return SCRIPT_CONTINUE;
}

messageHandler handleGreetPlayer()
{
	obj_id player = getPlayer( self );
	if ( !isInRoom( player, "r7" ))
	{
		doAnimationAction( self, "salute1" );
		return SCRIPT_CONTINUE;
	}

	if ( hasObjVar( player, "newbie.hasWeapon" ))
	{
		string_id greeting = new string_id (NEWBIE_CONVO, "convo_4_repeat");//you can't go in there.  He's crazy
		chat.chat( self, greeting );
		return SCRIPT_CONTINUE;
	}

	doAnimationAction( self, "slow_down" );

	string_id greeting = new string_id (NEWBIE_CONVO, "convo_4_start");//you can't go in there.  He's crazy
	chat.chat( self, greeting );

	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	doAnimationAction( self, "slow_down" );
	utils.setScriptVar( speaker, "newbie.alreadyTalkedToCombatExplainer", true );

	if ( hasObjVar( speaker, "newbie.hasWeapon" ))
	{
		if ( hasObjVar( speaker, "newbie.killedPirate" ))
		{
			string_id greeting = new string_id (NEWBIE_CONVO, "good_job");//Good boy, now go back the other way
			chat.chat( self, greeting );
		}
		else
		{
			string_id greeting = new string_id (NEWBIE_CONVO, "convo_4_repeat");//you can't go in there.  He's crazy
			chat.chat( self, greeting );
		}
		return SCRIPT_CONTINUE;
	}

	string_id greeting = new string_id (NEWBIE_CONVO, "convo_4_start");//you can't go in there.  He's crazy
	string_id response[] = new string_id [2];
	response[0] = new string_id (NEWBIE_CONVO, "convo_4_reply_1");//calm down
	response[1] = new string_id (NEWBIE_CONVO, "convo_4_reply_2");//so how do I get out of here?
	npcStartConversation (speaker, self, CONVO, greeting, response);

	return SCRIPT_CONTINUE;
}


trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	npcRemoveConversationResponse(player, response );

	if (!convo.equals( CONVO ))
		return SCRIPT_CONTINUE;

	if ( response.getAsciiId().equals("convo_4_reply_1"))//calm down
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_4_explain_1");//Go check for survivors
		npcSpeak( player, message );
		doAnimationAction( self, "point_away" );
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_4_reply_3" ));//You do it
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_4_reply_4" ));//Ok
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("convo_4_reply_2"))//How do I leave?
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_4_explain_2");//The only way is through here
		npcSpeak( player, message );
		doAnimationAction( self, "shrug_hands" );
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_4_reply_5" ));//I'll have to go there
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("convo_4_reply_3"))//Why don't you do it?
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_4_explain_3");//I need to stand guard
		npcSpeak( player, message );
		doAnimationAction( self, "point_to_self" );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("convo_4_reply_4") || response.getAsciiId().equals("convo_4_reply_5") )//I'll do it
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_4_weapon_1");//Take a weapon
		npcSpeak( player, message );
		giveWeapon( self, player );
		doAnimationAction( self, "wave_finger_warning" );
		string_id[] responses = new string_id[1];
		responses[0] = new string_id( NEWBIE_CONVO, "convo_4_reply_7" );//Thanks
		npcSetConversationResponses( player, responses);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("convo_4_reply_7") )//thanks
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_4_end");//whatever
		npcSpeak( player, message );
		doAnimationAction( self, "wave_on_dismissing" );
		npcEndConversation( player );
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

void giveWeapon( obj_id npc, obj_id player )
{
	obj_id weapon = weapons.createWeapon(NEWBIE_WEAPON, npc, 0.75f);

	dictionary parms = new dictionary();
	if ( weapon != null )
	{
		setObjVar( weapon, "newbie.item", true );
		parms.put( "player", player );
		parms.put( "weapon", weapon );
	}
	messageTo( npc, "handleGiveWeapon", parms, 2, false );
}

messageHandler handleGiveWeapon()
{
	obj_id player = params.getObjId( "player" );
	obj_id weapon = params.getObjId( "weapon" );

	if ( player != null && weapon != null )
	{
		if ( hasObjVar( player, "newbie.hasWeapon" ) )
			return SCRIPT_CONTINUE;

		obj_id playerInv = getObjectInSlot( player, "inventory" );
		obj_id myInv = getObjectInSlot( self, "inventory" );
		putIn( weapon, myInv );
		//putIn( weapon, playerInv );
		destroyObject( weapon );
		weapon = weapons.createWeapon(NEWBIE_WEAPON, playerInv, 0.75f);
		setObjVar( weapon, "newbie.item", true );
		equip(weapon, player);

		setObjVar( player, "newbie.hasWeapon", true );

		//sysMessage( player, "receive_weapon" );
	}

	return SCRIPT_CONTINUE;
}

