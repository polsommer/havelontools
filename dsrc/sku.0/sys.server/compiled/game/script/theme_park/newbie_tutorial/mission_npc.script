include library.chat;
include library.utils;

inherits theme_park.newbie_tutorial.tutorial_base;

messageHandler handleYellAtNewbie()
{
	obj_id player = getPlayer( self );
	faceToBehavior( self, player );
	doAnimationAction( self, "point_accusingly" );
	if ( !hasObjVar( self, "newbie.hasGivenMission" ))
		chat.chat( self, new string_id ( NEWBIE_CONVO, "mission_hail" ));
	else
		chat.chat( self, new string_id ( NEWBIE_CONVO, "mission_repeat" ));

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	removeStaticWaypoint( self );
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);
	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	utils.setScriptVar( speaker, "newbie.doneTalking", true );
	chat.setBadMood( self );
	faceToBehavior( self, speaker );
	string_id greeting = new string_id (NEWBIE_CONVO, "mission_1_start");//Now we're in a conversation
	string_id response[] = new string_id [2];
	response[0] = new string_id (NEWBIE_CONVO, "mission_1_reply_1");//Where is the quartermaster?
	response[1] = new string_id (NEWBIE_CONVO, "mission_1_reply_2");//Will do!

	npcStartConversation (speaker, self, CONVO, greeting, response);

	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	if ( response.getAsciiId().equals("mission_1_reply_1") ||
		 response.getAsciiId().equals("mission_1_reply_2")
		)//Where is the quartermaster? or Will Do.
		{
			string_id message = new string_id (NEWBIE_CONVO, "mission_1_waypoint");//have a waypoint
			npcSpeak( player, message );
			doAnimationAction( self, "manipulate_medium" );
			messageTo( player, "handleGetTravelWaypoint", null, 0, false );
			npcEndConversation( player );
			setObjVar( self, "newbie.hasGivenMission", true );
		}

	return SCRIPT_CONTINUE;
}

