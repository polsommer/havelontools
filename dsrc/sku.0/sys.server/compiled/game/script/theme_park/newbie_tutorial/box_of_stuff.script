include library.colors;

inherits theme_park.newbie_tutorial.tutorial_base;

trigger OnAttach()
{
	for ( int i = 0; i < BOX_CONTENTS.length; i++ )
	{
		obj_id item = createObject( BOX_CONTENTS[i], self, "");
		attachScript( item, BOX_ITEM_SCRIPT );
		setObjVar( item, "newbie.item", true );
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if ( hasObjVar( self, "newbie.boxEmptied"))
		return SCRIPT_CONTINUE;

	setObjVar( player, "newbie.getBoxOfStuff", true );
//	playMusic( player, "sound/tut_15_opencontainer.snd" );

	//sysMessageToPlayer( self, "prompt_choose_open" );

	return SCRIPT_CONTINUE;
}

messageHandler handlePromptToOpen()
{
	if ( hasObjVar( self, "newbie.boxOpened" ))
		return SCRIPT_CONTINUE;

	obj_id player = getPlayer( self );
	//sysMessageToPlayer( self, "prompt_open_box" );
	//playMusic( player, "sound/tut_14_openbox.snd" );
	messageTo( self, "handleRepeatBoxOpenPrompt", null, VERY_LONG_DELAY, false );

	return SCRIPT_CONTINUE;
}

messageHandler handleRepeatBoxOpenPrompt()
{
	obj_id player = getPlayer( self );
	if ( !isInRoom( player, "r2" ))
		return SCRIPT_CONTINUE;

	if ( hasObjVar( self, "newbie.boxOpened" ))
		return SCRIPT_CONTINUE;

	if ( hasObjVar( self, "newbie.boxEmptied"))
		return SCRIPT_CONTINUE;

	//playMusic( player, "sound/tut_16_intheboxyouneed.snd" );

	//sysMessageToPlayer( self, "repeat_open_box" );
	flyText( self, "open_me", 1.5f, colors.YELLOW );
	messageTo( self, "handleOpenMeFlyText", null, 5, false );
	return SCRIPT_CONTINUE;
}

messageHandler handleOpenMeFlyText()
{
	if ( hasObjVar( self, "newbie.stopFlyText" ))
		return SCRIPT_CONTINUE;

	flyText( self, "open_me", 1.5f, colors.YELLOW );
	messageTo( self, "handleOpenMeFlyText", null, 5, false );
	return SCRIPT_CONTINUE;
}


trigger OnOpenedContainer( obj_id player )
{
	removeStaticWaypoint( self );

	if ( hasObjVar( self, "newbie.boxEmptied"))
		return SCRIPT_CONTINUE;

	setObjVar( self, "newbie.boxOpened", true );
	setObjVar( self, "newbie.stopFlyText", true );
	messageTo( self, "handleExplainTakeItem", null, 4, false );
	return SCRIPT_CONTINUE;
}

messageHandler handleExplainTakeItem()
{
	obj_id player = getPlayer( self );
	obj_id[] contents = getContents( self );
	if ( contents != null || contents.length > 0 )
	{
//		playMusic( player, "sound/tut_16_a_youcantake.snd" );
		//sysMessageToPlayer( self, "prompt_take_items" );
	}

	messageTo (player, "moveOnToNextRoom", null, 5, false );
	return SCRIPT_CONTINUE;
}

trigger OnClosedContainer(obj_id player)
{
	if ( hasObjVar(self, "newbie.boxEmptied"))
		return SCRIPT_CONTINUE;

	//obj_id[] contents = getContents( self );
	//if ( contents == null || contents.length == 0 )
   	//{
		setObjVar( self, "newbie.boxEmptied", true );
		messageTo( player, "handleExplainFreemouse", null, 1, false );
		return SCRIPT_CONTINUE;
	//}

	//removeObjVar( self, "newbie.boxOpened" );
	//messageTo( self, "handleRepeatBoxOpenPrompt", null, VERY_LONG_DELAY, false );

	//obj_id greeter = getObjIdObjVar( getTopMostContainer( self ), "newbie.greeter" );
	//messageTo( greeter, "handleExplainEndConvo", null, 5, false );

	//return SCRIPT_CONTINUE;
}

trigger OnAboutToBeTransferred(obj_id destContainer, obj_id transferer)
{
	debugSpeakMsg (self, "There's no possible explanation for this.");
	if ( isPlayer( transferer ) )
	{
		sendSystemMessageTestingOnly (transferer, "You cannot pick that up.");
		return SCRIPT_OVERRIDE;
	}
 	return SCRIPT_CONTINUE;
}
