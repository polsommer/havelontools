include library.chat;
include library.ai_lib;

inherits theme_park.newbie_tutorial.tutorial_base;

trigger OnAttach()
{
	createTriggerVolume( "playerEntered", 10.0f, true );
	setYaw( self, 91.0f );
	return SCRIPT_CONTINUE;
}

messageHandler handleInitiateConvo()
{
	obj_id player = getPlayer( self );
	faceToBehavior( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{

	if (hasObjVar( self, "newbie.greeted"))
		return SCRIPT_CONTINUE;

	obj_id player = getPlayer( self );
	if ( player != breacher )
		return SCRIPT_CONTINUE;

	if ( volumeName.equals("playerEntered") )
	{
		ai_lib.aiStopFollowing( self );
		stop( self );
		faceToBehavior( self, player );
		doAnimationAction( self, "wave_hail" );
		chat.chat( self, new string_id ( NEWBIE_CONVO, "clone_greeting" ));
		setObjVar( self, "newbie.greeted", true );
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data mdata = mi.getMenuItemById(mnu);
	mdata.setServerNotify(false);

	return SCRIPT_CONTINUE;
}

trigger OnStartNpcConversation (obj_id speaker)
{
	if ( hasObjVar( self, "newbie.noTalking"))
		return SCRIPT_CONTINUE;

	faceToBehavior( self, speaker );
	string_id greeting = new string_id (NEWBIE_CONVO, "convo_2_start");//I can tell you about cloning or insurance
	string_id response[] = new string_id [2];
	response[0] = new string_id (NEWBIE_CONVO, "convo_2_reply_1");//cloning
	response[1] = new string_id (NEWBIE_CONVO, "convo_2_reply_2");//insurance

	npcStartConversation (speaker, self, CONVO, greeting, response);

	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse(string convo, obj_id player, string_id response)
{
	npcRemoveConversationResponse(player, response );

	if ( response.getAsciiId().equals("convo_2_reply_1"))//cloning
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_cloning");//cloning is a save game
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_3" ));//how often should I clone
	}
	else if ( response.getAsciiId().equals("convo_2_reply_2"))//insurance
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_insurance");//corpse-runs suck
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_4" ));//What happens to uninsured items
	}
	else if ( response.getAsciiId().equals("convo_2_reply_3"))//How often should I clone
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_cloning_2");//when you get new skills
		npcSpeak( player, message );
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_5" ));//Do I have to clone every time I die
	}
	else if ( response.getAsciiId().equals("convo_2_reply_4"))//What happens to uninsured items
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_insurance_2");//you do a corpse run, which sucks
		npcSpeak( player, message );
		//npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_6" ));//Running back to my corpse sounds like fun
		//npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_7" ));//I hate the idea of running to my corpse
		npcAddConversationResponse( player, new string_id( NEWBIE_CONVO, "convo_2_reply_8" ));//Do I have to insure my items every time I die?
	}
	else if ( response.getAsciiId().equals("convo_2_reply_5"))//Do I have to clone every time I die
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_cloning_3");//No, only after you acquire a new skill.
		npcSpeak( player, message );
	}
	else if ( response.getAsciiId().equals("convo_2_reply_6"))//Sounds like fun
	{
		npcRemoveConversationResponse(player, new string_id( NEWBIE_CONVO, "convo_2_reply_7" ) );//I hate that
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_insurance_3");//You're strange
		npcSpeak( player, message );
	}
	else if ( response.getAsciiId().equals("convo_2_reply_7"))//Sounds like fun
	{
		npcRemoveConversationResponse(player, new string_id( NEWBIE_CONVO, "convo_2_reply_6" ) );//I love that!
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_insurance_4");//Yep, it can be a real chore.
		npcSpeak( player, message );
	}
	else if ( response.getAsciiId().equals("convo_2_reply_8"))//Do I have to re-insure
	{
		string_id message = new string_id (NEWBIE_CONVO, "convo_2_insurance_5");//Yes
		npcSpeak( player, message );
	}

	return SCRIPT_CONTINUE;
}

messageHandler handleInitiateClonePrompt()
{
	location destLoc = new location( getLocation( self ));
	destLoc.x = CLONE_PROMPT_LOCATION_X;
	destLoc.z = CLONE_PROMPT_LOCATION_Z;
	destLoc.cell = getCellId(getTopMostContainer( self ), CLONE_PROMPT_LOCATION_CELL);
	setMovementWalk( self );
	ai_lib.aiStopFollowing( self );
	pathTo( self, destLoc );
	setHomeLocation( self, destLoc );
	messageTo( self, "handleExplainTerminalOne", null, 8, false );
	return SCRIPT_CONTINUE;
}

trigger OnMovePathComplete()
{
	if (!isInRoom( getPlayer(self), "r5" ))
		return SCRIPT_CONTINUE;

	faceToBehavior( self, getPlayer( self ));
	messageTo( self, "handleCorrectFacing", null, 2, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleCorrectFacing()
{
	if (!isInRoom( getPlayer(self), "r5" ))
		return SCRIPT_CONTINUE;

	faceToBehavior( self, getPlayer( self ));
	return SCRIPT_CONTINUE;
}

messageHandler handleExplainTerminalOne()
{
	obj_id player = getPlayer( self );
	if (!isInRoom( player, "r5" ))
		return SCRIPT_CONTINUE;

	setObjVar( self, "newbie.noTalking", true );

	chat.chat( self, new string_id ( NEWBIE_CONVO, "convo_3_explain_terminal_1" ));
	messageTo( self, "handleExplainTerminalTwo", null, 5, false );
	return SCRIPT_CONTINUE;
}

messageHandler handleExplainTerminalTwo()
{

	messageTo( self, "handleDoneTalking", null, 5, false );

	if (!isInRoom( getPlayer(self), "r5" ))
		return SCRIPT_CONTINUE;

	chat.chat( self, new string_id ( NEWBIE_CONVO, "convo_3_explain_terminal_2" ));
	return SCRIPT_CONTINUE;
}

messageHandler handleDoneTalking()
{
	removeObjVar( self, "newbie.noTalking");
	return SCRIPT_CONTINUE;
}

