include library.veteran_deprecated;

const int ALLOW_DELETE_AGE = 3*60*60;
const string NEW_PLAYER_SCRIPT = "theme_park.new_player.new_player";

const int ACCOUNT_AGE_CAP = 30; // account is greater than 30 days old

trigger OnDestroy()
{
	string newPlayerQuestsEnabled = getConfigSetting("New_Player", "NewPlayerQuestsEnabled");
	if(newPlayerQuestsEnabled == null || !newPlayerQuestsEnabled.equals("true"))
	{
		return SCRIPT_CONTINUE;
	}

	obj_id datapad = getContainedBy( self );
	if ( !isIdValid( datapad ) )
	{
		return SCRIPT_CONTINUE;
	}
	
	obj_id player = getContainedBy( datapad );
	if ( !isIdValid( player) )
	{
		return SCRIPT_CONTINUE;
	}
	
	// if account age is at or greater than set cap, 
	// allow them to delete their helper droid.
	if ( hasObjVar(player, veteran_deprecated.OBJVAR_TIME_ACTIVE) )
	{
		int accountTime = getIntObjVar(player, veteran_deprecated.OBJVAR_TIME_ACTIVE);
		if ( accountTime >= ACCOUNT_AGE_CAP )
		{
			return SCRIPT_CONTINUE;
		}
	}
	
	int playTime = getPlayerPlayedTime(player);
	if ( playTime > ALLOW_DELETE_AGE )
	{
		detachScript(player, NEW_PLAYER_SCRIPT);
	}
	else
	{
		obj_var_list varList = getObjVarList(player, "new_player.quest");
		if ( varList == null )
		{
			detachScript(player, NEW_PLAYER_SCRIPT);
		}
		else
		{
			int numItem = varList.getNumItems();
			for ( int i = 0; i < numItem; i++ )
			{
				obj_var var = varList.getObjVar(i);
				int questNum = var.getIntData();
				if (  questNum > 0)
				{
					// didn't finish at least one of their quests
					messageTo(player, "handleHelperDroidCheck", null, 9, false);
					return SCRIPT_CONTINUE;
				}
			}
			// doesn't have any partial quests
			detachScript(player, NEW_PLAYER_SCRIPT);
		}
	}
	return SCRIPT_CONTINUE;
}
