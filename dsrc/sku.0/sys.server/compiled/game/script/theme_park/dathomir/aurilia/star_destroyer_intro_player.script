
/***** INCLUDES ********************************************************/

include library.money;
include library.groundquests;
include library.sui;
include library.utils;

/***** INHERITS ********************************************************/


/***** CONSTANTS *******************************************************/

const string_id SID_NO_MONEY_MSG		 = new string_id ("quest/force_sensitive/fs_crafting", "tracking_data_no_money");
const string_id SID_PURCHASE_MSG_01		 = new string_id ("quest/force_sensitive/fs_crafting", "tracking_data_purchase_msg_01");
const string_id SID_PURCHASE_MSG_02		 = new string_id ("quest/force_sensitive/fs_crafting", "tracking_data_purchase_msg_02");
const string_id SID_PURCHASE_MSG_03		 = new string_id ("quest/force_sensitive/fs_crafting", "tracking_data_purchase_msg_03");

const int TRACKING_DATA_COST			= 1100;

/***** TRIGGERS ********************************************************/


messageHandler handlePurchaseTrackingData()
{
	if ( groundquests.isTaskActive(self, "star_destroyer_intro_rebel", "star_destroyer_intro_01") ||
		groundquests.isTaskActive(self, "star_destroyer_intro_neutral", "star_destroyer_intro_01") )
	{
		if (!money.hasFunds(self, money.MT_TOTAL, TRACKING_DATA_COST) )
		{
			string str_no_money = utils.packStringId(SID_NO_MONEY_MSG);
			sui.msgbox(self, str_no_money);
		}
		else
		{
			obj_id starportDroid = utils.getObjIdScriptVar(self, "crafting4.starportDroid");
			
			utils.moneyOutMetric(self, "FS_QUESTS", TRACKING_DATA_COST);
			money.requestPayment(self, starportDroid, TRACKING_DATA_COST, "pass_fail", null, true);
			
			sendSystemMessage(self, SID_PURCHASE_MSG_01);
			messageTo(self, "handleTrackingDataPurchaseMsg02", null, rand(1,4), false);
		}
		
		utils.removeScriptVar(self, "crafting4.starportDroid");
	}
	return SCRIPT_CONTINUE;
}

messageHandler handleTrackingDataPurchaseMsg02()
{
	sendSystemMessage(self, SID_PURCHASE_MSG_02);
	messageTo(self, "handleTrackingDataPurchaseMsg03", null, rand(1,2), false);
	return SCRIPT_CONTINUE;
}

messageHandler handleTrackingDataPurchaseMsg03()
{
	sendSystemMessage(self, SID_PURCHASE_MSG_03);
	groundquests.sendSignal(self, "star_destroyer_intro_01");
	
	messageTo(self, "handleTrackingDataScriptCleanup", null, rand(1,2), false);
	return SCRIPT_CONTINUE;
}

messageHandler handleTrackingDataScriptCleanup()
{
	detachScript(self, "theme_park.dathomir.aurilia.star_destroyer_intro_player");
		
	return SCRIPT_CONTINUE;
}

