const string CONVO = "tatooine_convo";
const location mos_eisley = new location (3355, 6, -5018, "tatooine", null);
const location mos_espa = new location (-2882, 7, 2097, "tatooine");
const location bestine = new location (-927, 11, -4483, "tatooine");
const location anchorhead = new location (62, 11, -5078, "tatooine");
const location bank_eisley = new location (3499, 10, -4944, "tatooine", null);
const location bank_espa = new location (-2699, 12, 2585, "tatooine");
const location bank_bestine = new location (-900, 13, -4403, "tatooine");
const location bank_anchorhead = new location (25, 8, -5550, "tatooine");
const location starport_eisley = new location (3534, 5, -4803, "tatooine", null);
const location starport_espa = new location (-2681, 7, 2291, "tatooine");
const location starport_bestine = new location (-769, 11, -4257, "tatooine");
const location starport_anchorhead = new location (178, 9, -5314, "tatooine");
const location cantina_eisley = new location (3467, 5, -4852, "tatooine", null);
const location cantina_espa = new location (-2569, 6, 2560, "tatooine");
const location cantina_bestine = new location (-875, 11, -4284, "tatooine");
const location cantina_anchorhead = new location (110, 16, -5422, "tatooine");
const location trainer_eisley = new location (3467, 5, -4852, "tatooine", null);
const location trainer_espa = new location (-2895, 8, 2457, "tatooine");
const location trainer_bestine = new location (-849, 8, -4158, "tatooine");
const location trainer_anchorhead = new location (-101, 13, -5420, "tatooine");
const location cloning_facility_eisley = new location (3467, 5, -4852, "tatooine", null);
const location cloning_facility_espa = new location (-2405, 7, 2369, "tatooine");
const location cloning_facility_bestine = new location (-741, 12, -3984, "tatooine");
const location cloning_facility_anchorhead = new location (81, 10, -5204, "tatooine");
const location jabba = new location (-6390, 83, -7180, "tatooine");
const location dera = new location (10, 0, 10, "tatooine");
const location talmont = new location (-933, 10, -4295, "tatooine");
const location combat_trainer_eisley = new location (-1100, 0, -3737, "tatooine");
const location combat_trainer_espa = new location (-1100, 0, -3737, "tatooine");
const location combat_trainer_bestine = new location (-1100, 0, -3737, "tatooine");
const location combat_trainer_anchorhead = new location (-1100, 0, -3737, "tatooine");
const location crafting_trainer_eisley = new location (-1100, 0, -3737, "tatooine");
const location crafting_trainer_espa = new location (-1100, 0, -3737, "tatooine");
const location crafting_trainer_bestine = new location (-1100, 0, -3737, "tatooine");
const location crafting_trainer_anchorhead = new location (-1100, 0, -3737, "tatooine");
const location university_trainer_eisley = new location (-1100, 0, -3737, "tatooine");
const location university_trainer_espa = new location (-1100, 0, -3737, "tatooine");
const location university_trainer_bestine = new location (-1100, 0, -3737, "tatooine");
const location university_trainer_anchorhead = new location (-1100, 0, -3737, "tatooine");

trigger OnAttach ()
{
	if (!hasScript (self, "npc.converse.npc_converse_menu"))
	{
		attachScript(self, "npc.converse.npc_converse_menu");
	}
	return SCRIPT_CONTINUE;
}	

trigger OnStartNpcConversation ( obj_id speaker )
{
		string_id greeting = new string_id (CONVO, "greeting_1"); //
		string_id response[] = new string_id [4];
		response[0] = new string_id (CONVO, "player_1"); // I'd like cities...
		response[1] = new string_id (CONVO, "player_3"); // I'd like people...
		response[2] = new string_id (CONVO, "player_2"); // I'd liike a Mission...
		response[3] = new string_id (CONVO, "player_13"); // I'd like directions...
		npcStartConversation (speaker, self, CONVO, greeting, response);
		return SCRIPT_CONTINUE;
}


trigger OnNpcConversationResponse (string convo, obj_id player, string_id response)
{


	if ( response.getAsciiId().equals("player_1")) // I'd like cities...
	{
		string_id message = new string_id (CONVO, "cities_1"); // Which city...?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "player_4") ); // Mos Eisley...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_5") ); // Mos Espa...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_6") ); // Anchorhead...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_7") ); // Bestine...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_2") ); /* I'd like a mission... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_3") ); /* I'd like people... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_13") ); /* I'd like directions... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_1") ); /* I'd like cities... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_3")) // I'd like people...
	{
		string_id message = new string_id (CONVO, "people_1"); // Who...?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "player_8") ); // Jabba...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_9") ); // Talmont...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_10") ); // Dera Darklighter...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_11") ); // Tusken Raiders...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_2") ); /* I'd like a mission... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_1") ); /* I'd like cities... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_3") ); /* I'd like people... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_13") ); /* I'd like directions... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_2")) // I'd like a mission...
	{
		string_id message = new string_id (CONVO, "mission_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_2") );
		// *****PLAYER GETS A MISSION RIGHT HERE *****
		// *****PLAYER GETS A MISSION RIGHT HERE *****
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_4")) // Mos Eisley...
	{
		string_id message = new string_id (CONVO, "mos_eisley_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_4") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_5")) // Mos Espa...
	{
		string_id message = new string_id (CONVO, "mos_espa_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_5") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_6")) // Anchorhead...
	{
		string_id message = new string_id (CONVO, "anchorhead_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_6") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_7")) // Bestine...
	{
		string_id message = new string_id (CONVO, "bestine_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_7") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_8")) // Jabba...
	{
		string_id message = new string_id (CONVO, "jabba_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_8") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_9")) // Talmont...
	{
		string_id message = new string_id (CONVO, "talmont_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_9") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_10")) // Dera Darklighter...
	{
		string_id message = new string_id (CONVO, "dera_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_10") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_11")) // Tusken Raiders...
	{
		string_id message = new string_id (CONVO, "tuskens_1");
		npcSpeak (player, message);
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_11") );
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_12")) // Can I ask More...?
	{
		string_id message = new string_id (CONVO, "sure_1");
		npcSpeak (player, message);
		string_id[] responses = new string_id[4];
		responses[0] = new string_id(CONVO, "player_1"); // I'd like cities...
		responses[1] = new string_id(CONVO, "player_3"); // I'd like people...
		responses[2] = new string_id(CONVO, "player_2"); // I'd like a Mission...
		responses[3] = new string_id(CONVO, "player_13"); // I'd like directions...
		npcSetConversationResponses (player, responses);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_13")) // I'd like directions...
	{
		string_id message = new string_id (CONVO, "where_1"); // Where would you like directions to?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "player_14") ); // A city...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_15") ); // A specific building...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_16") ); // A specific person...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_2") ); /* I'd like a mission... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_3") ); /* I'd like people... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_13") ); /* I'd like directions... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_1") ); /* I'd like cities... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_14")) // A city...
	{
		string_id message = new string_id (CONVO, "find_city_1"); // Which city do you need help finding?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "directions_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "directions_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "directions_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "directions_anchorhead") ); // Anchorhead
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_15") ); /* A specific building... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_14") ); /* A specific city... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_16") ); /* A specific person... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_15")) // A specific building...
	{
		string_id message = new string_id (CONVO, "find_bldg_1"); // Which building do you need help finding?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "bank") ); // The bank.
		npcAddConversationResponse ( player, new string_id (CONVO, "cantina") ); // The Cantina
		npcAddConversationResponse ( player, new string_id (CONVO, "cloning_facility") ); // The Cloning Facility
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer") ); // The Trainer
		npcAddConversationResponse ( player, new string_id (CONVO, "starport") ); // The starport
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_15") ); /* A specific building... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_14") ); /* A specific city... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_16") ); /* A specific person... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("player_16")) // A specific person...
	{
		string_id message = new string_id (CONVO, "find_person_1"); // Who do you need help finding?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "find_jabba") ); // Jabba the Hutt...
		npcAddConversationResponse ( player, new string_id (CONVO, "find_talmont") ); // Prefect Talmont...
		npcAddConversationResponse ( player, new string_id (CONVO, "find_dera") ); // Dera Darklighter...
		npcAddConversationResponse ( player, new string_id (CONVO, "find_trainer") ); // a skill trainer...
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_14") ); /* A specific city... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_16") ); /* A specific person... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "player_15") ); /* A specific building... */
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("directions_eisley")) // Where is Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( mos_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("directions_espa")) // Where is Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint (mos_espa, player);
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("directions_anchorhead")) // Where is Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( anchorhead, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("directions_bestine")) // Where is Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("bank")) // Where is the bank?
	{
		string_id message = new string_id (CONVO, "bank_city"); // The bank in which city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "bank_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "bank_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "bank_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "bank_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "bank") ); /* The Bank */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cantina") ); /* The Cantina */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cloning_facility") ); /* The Cloning Facility */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer") ); /* The Trainer */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "starport") ); /* The starport */
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cantina")) // Where is the cantina?
	{
		string_id message = new string_id (CONVO, "cantina_city"); // The cantina in which city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "cantina_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "cantina_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "cantina_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "cantina_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cantina") ); /* The Cantina */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "bank") ); /* The Bank */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cloning_facility") ); /* The Cloning Facility */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer") ); /* The Trainer */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "starport") ); /* The starport */
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("trainer")) // Where is the trainer?
	{
		string_id message = new string_id (CONVO, "trainer_city"); // The trainer in which city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer") ); /* The Trainer */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "bank") ); /* The Bank */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cloning_facility") ); /* The Cloning Facility */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cantina") ); /* The Cantina */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "starport") ); /* The starport */
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("starport")) // Where is the starport?
	{
		string_id message = new string_id (CONVO, "starport_city"); // The starport in which city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "starport_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "starport_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "starport_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "starport_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "bank") ); /* The Bank */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cloning_facility") ); /* The Cloning Facility */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer") ); /* The Trainer */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "starport") ); /* The starport */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cantina") ); /* The cantina */
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cloning_facility")) // Where is the cloning_facility?
	{
		string_id message = new string_id (CONVO, "cloning_facility_city"); // The cloning facility in which city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "cloning_facility_eisley") ); // Mos Eisley
		npcAddConversationResponse ( player, new string_id (CONVO, "cloning_facility_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "cloning_facility_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "cloning_facility_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "bank") ); /* The Bank */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "cantina") ); /* The Cantina */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer") ); /* The Trainer */
		npcRemoveConversationResponse ( player, new string_id (CONVO, "starport") ); /* The starport */
		npcAddConversationResponse ( player, new string_id (CONVO, "player_12") ); // Can I ask more questions...?
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("bank_eisley")) // Where is the bank in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( bank_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("bank_espa")) // Where is the bank in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( bank_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("bank_anchorhead")) // Where is the bank in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( bank_anchorhead, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("bank_bestine")) // Where is the bank in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( bank_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cantina_eisley")) // Where is the cantina in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cantina_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cantina_espa")) // Where is the cantina in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cantina_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cantina_anchorhead")) // Where is the cantina in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cantina_anchorhead, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cantina_bestine")) // Where is the cantina in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cantina_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("trainer_eisley")) // Where is the trainer in Mos Eisley
	{
		string_id message = new string_id (CONVO, "which_trainer"); // Let me add that to your datapad
		makeWaypoint ( trainer_eisley, player );
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "university_trainer_eisley") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "crafting_trainer_eisley") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "combat_trainer_eisley") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_eisley") ); //Mos Eisley
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_espa") ); //Mos Espa
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); //Bestine
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_anchorhead") ); //Anchorhead
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("trainer_espa")) // Where is the trainer in Mos Espa
	{
		string_id message = new string_id (CONVO, "which_trainer"); // Let me add that to your datapad
		makeWaypoint ( trainer_espa, player );
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "university_trainer_espa") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "crafting_trainer_espa") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "combat_trainer_espa") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_eisley") ); //Mos Eisley
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_espa") ); //Mos Espa
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); //Bestine
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_anchorhead") ); //Anchorhead
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("trainer_anchorhead")) // Where is the trainer in Anchorhead
	{
		string_id message = new string_id (CONVO, "which_trainer"); // Let me add that to your datapad
		makeWaypoint ( trainer_anchorhead, player );
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "university_trainer_anchorhead") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "crafting_trainer_anchorhead") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "combat_trainer_anchorhead") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_eisley") ); //Mos Eisley
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_espa") ); //Mos Espa
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); //Bestine
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_anchorhead") ); //Anchorhead
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("trainer_bestine")) // Where is the trainer in Bestine
	{
		string_id message = new string_id (CONVO, "which_trainer"); // Let me add that to your datapad
		makeWaypoint ( trainer_bestine, player );
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "university_trainer_bestine") ); // Mos Espa
		npcAddConversationResponse ( player, new string_id (CONVO, "crafting_trainer_bestine") ); // Bestine
		npcAddConversationResponse ( player, new string_id (CONVO, "combat_trainer_bestine") ); // Anchorhead
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_eisley") ); //Mos Eisley
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_espa") ); //Mos Espa
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); //Bestine
		npcRemoveConversationResponse ( player, new string_id (CONVO, "trainer_anchorhead") ); //Anchorhead
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cloning_facility_eisley")) // Where is the cloning_facility in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cloning_facility_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cloning_facility_espa")) // Where is the cloning_facility in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cloning_facility_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cloning_facility_anchorhead")) // Where is the cloning_facility in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cloning_facility_anchorhead, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("cloning_facility_bestine")) // Where is the cloning_facility in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( cloning_facility_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("starport_eisley")) // Where is the starport in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( starport_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("starport_espa")) // Where is the starport in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( starport_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("starport_anchorhead")) // Where is the starport in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( starport_anchorhead, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("starport_bestine")) // Where is the starport in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( starport_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
   	if ( response.getAsciiId().equals("find_jabba")) // Where is Jabba the Hutt?
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( jabba, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("find_talmont")) // Where is Prefect Talmont?
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( talmont, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("find_dera")) // Where is Dera Darklighter?
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( dera, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("find_trainer")) // Where can I find someone to train me?
	{
		string_id message = new string_id (CONVO, "trainers_loc"); // Trainer in what city?
		npcSpeak (player, message);
		npcAddConversationResponse ( player, new string_id (CONVO, "trainer_bestine") ); // In Bestine...
		npcAddConversationResponse ( player, new string_id (CONVO, "") ); // A specific building...
		npcAddConversationResponse ( player, new string_id (CONVO, "") ); // A specific person...
		npcAddConversationResponse ( player, new string_id (CONVO, "") ); // Can I ask more questions...?
		npcRemoveConversationResponse (player, new string_id (CONVO, "find_dera") ); /* I'd like dera... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "find_talmont") ); /* I'd like talmont... */
		npcRemoveConversationResponse (player, new string_id (CONVO, "find_jabba") ); /* I'd like jabba...*/
		npcRemoveConversationResponse (player, new string_id (CONVO, "find_trainer") ); /* I'd like a trainer*/
		return SCRIPT_CONTINUE;
	}
	
	if ( response.getAsciiId().equals("combat_trainer_eisley")) // Where is the trainer in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( combat_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("crafting_trainer_eisley")) // Where is the trainer in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( crafting_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("university_trainer_eisley")) // Where is the trainer in Mos Eisley
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( university_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}	
	if ( response.getAsciiId().equals("combat_trainer_espa")) // Where is the trainer in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( combat_trainer_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("crafting_trainer_espa")) // Where is the trainer in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( crafting_trainer_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("university_trainer_espa")) // Where is the trainer in Mos Espa
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( university_trainer_espa, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}	
	if ( response.getAsciiId().equals("combat_trainer_bestine")) // Where is the trainer in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( combat_trainer_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("crafting_trainer_bestine")) // Where is the trainer in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( crafting_trainer_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("university_trainer_bestine")) // Where is the trainer in Bestine
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( university_trainer_bestine, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}	
	if ( response.getAsciiId().equals("combat_trainer_eisley")) // Where is the trainer in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( combat_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("crafting_trainer_eisley")) // Where is the trainer in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( crafting_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}
	if ( response.getAsciiId().equals("university_trainer_eisley")) // Where is the trainer in Anchorhead
	{
		string_id message = new string_id (CONVO, "add_to_radar"); // Let me add that to your datapad
		makeWaypoint ( university_trainer_eisley, player );
		npcSpeak (player, message);
		npcEndConversation(player);
		return SCRIPT_CONTINUE;
	}		
	return SCRIPT_CONTINUE;
}

void makeWaypoint ( location loc, obj_id player )
{
	obj_id waypoint = createWaypointInDatapad( player, loc );
	if (isIdValid(waypoint))
	{
		setWaypointVisible( waypoint, true);
		setWaypointActive( waypoint, true);
	}
}

