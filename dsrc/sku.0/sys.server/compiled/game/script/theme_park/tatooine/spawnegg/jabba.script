const string SCRIPTPATH = "theme_park.tatooine.";
const string TEMPLATE = "object/creature/npc/theme_park/jabba_the_hutt.iff";
const string[] SCRIPTS = {
	"jabba_adv_quest_1.jabba",
	"jabba_advanced_quest_2.jaq2_jabba_convo",
	"jabba_advanced_quest_3.jabba_quest3_jabba",
	"jabba_combat_1.jvcm1_jabba_convo",
	"jabba_combat_2.jvcm2_jabba_convo",
	"jabba_veteran_crafting_1.jvc1_jabba_convo",
	"jabba_veteran_crafting_2.jvc2_jabba_convo"
	};

/* -----------------3/20/2002 5:34PM-----------------
 * This script should be attached to a spawnegg in
 * the location that the NPC should be spawned.
 *
 * The NPC will be created at the spawnegg's location
 * with an npc_death script attached.  When the NPC
 * is destroyed, that script will messageTo the
 * NPCDestroyed messageHandler in this script.
 *
 * This will recreate the npc.
 *
 * --------------------------------------------------*/


trigger OnInitialize()
{
	if ( !hasObjVar( self, "theme_park.spawn_egg_npc" ))
		messageTo( self, "makeNPC", null, 1, true );

	return SCRIPT_CONTINUE;
}

messageHandler NPCDestroyed()
{
	messageTo( self, "makeNPC", null, 1, true );
	return SCRIPT_CONTINUE;
}

messageHandler makeNPC()
{
	obj_id myNPC = createObjectAt( TEMPLATE, self );
	setObjVar( myNPC, "theme_park.spawn_egg", self );
	attachScript( myNPC, "theme_park.spawn_egg.npc_death" );
	for ( int i = 0; i <= SCRIPTS.length-1; i++ )
	{
		attachScript( myNPC, SCRIPTPATH + SCRIPTS[i] );
	}
	setObjVar( self, "theme_park.spawn_egg_npc", myNPC );
	return SCRIPT_CONTINUE;
}

