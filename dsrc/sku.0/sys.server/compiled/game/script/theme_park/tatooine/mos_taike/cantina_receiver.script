include library.ai_lib;
include library.chat;
include library.utils;

trigger OnAttach()
{
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	attachScript (self, "npc.converse.npc_converse_menu");
	return SCRIPT_CONTINUE;
}	

trigger OnStartNpcConversation (obj_id speaker)
{
	string datatable = "datatables/theme_park/mos_taike_cantina.iff";
	string CONVO = "theme_park_mos_taike/cantina_owner";

	int questNum = getIntObjVar (self, "quest");

	if (ai_lib.isInCombat(self) || ai_lib.isInCombat(speaker))
		return SCRIPT_OVERRIDE;

	if (hasObjVar (speaker, "mos_taike.cantina.receiver"))
	{
		obj_id courier = getObjIdObjVar (speaker, "mos_taike.cantina.receiver");
		if (courier == self)
		{
			obj_id playerInv = utils.getInventoryContainer(speaker);
			if (checkForItem(playerInv) == true)
			{
				string reward = "npc_thanks_" + (questNum);
				string_id message = new string_id (CONVO, reward);
				chat.chat (self, message);
				messageTo (speaker, "finishQuest", null, 0, true);
				return SCRIPT_OVERRIDE;				
			}				
			else
			{
				string_id work = new string_id(CONVO, "gotowork");
				chat.chat (self, work);
				return SCRIPT_CONTINUE;
			}				
		}			
		else
		{
			string_id cant = new string_id(CONVO, "cantwork");
			chat.chat (self, cant);
			return SCRIPT_CONTINUE;
		}
	}		
	else 
	{
		string npcGreet = "npc_1_" + questNum;
		string response1 = "player_1_" + questNum;
		string response2 = "player_2_" + questNum;
		string response3 = "player_3_" + questNum;
		
		string_id greeting = new string_id (CONVO,npcGreet);
	
		string_id response[] = new string_id [3];
		response[0] = new string_id (CONVO, response1);
		response[1] = new string_id (CONVO, response2);
		response[2] = new string_id (CONVO, response3);
			
		npcStartConversation (speaker, self, "questConvo", greeting, response);
	}		
	
	return SCRIPT_CONTINUE;
}

boolean checkForItem(obj_id inv)
{
	string datatable = "datatables/theme_park/mos_taike_cantina.iff";
	int questNum = getIntObjVar (getSelf(), "quest");
	string giveMe = dataTableGetString (datatable, 0, questNum-1);
	boolean hadIt = false;

	obj_id[] contents = getContents(inv);
	for ( int i = 0; i < contents.length; i++ )
	{
		string itemInInventory = getTemplateName (contents[i]);
		if (itemInInventory == giveMe)
		{
			destroyObject (contents[i]);
			hadIt = true;
		}			
	}
	return hadIt;
}	

