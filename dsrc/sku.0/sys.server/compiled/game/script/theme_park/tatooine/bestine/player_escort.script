include library.locations;
include library.quests;
include library.create;

trigger OnAttach ()
{
	location questLoc = getLocationObjVar (self, "bestine.om.vip_loc");
	quests.addQuestLocationTarget ( self, null, "quest", questLoc, 15);
	addLocationTarget ("spawnGuy", questLoc, 100);
	return SCRIPT_CONTINUE;
}	

trigger OnArrivedAtLocation( string name )
{
	int questNum = getIntObjVar (self, "bestine_progress.om_quest");
	string datatable = "datatables/theme_park/bestine_om.iff";
	
	string npcType = dataTableGetString (datatable, 0, questNum-1);
	string npcName = dataTableGetString (datatable, 2, questNum-1);
	
	if (name == "quest")
	{
		quests.clearQuestLocationTarget (self, null, name);
	}
	if (name == "spawnGuy")
	{
		removeLocationTarget(name);
		location spawn = getLocationObjVar (self, "bestine.om.vip_loc");
		obj_id npc = create.object (npcType, spawn);
		setName (npc, npcName);
		string rewardScript = "theme_park.tatooine.bestine.om_vip";
		attachScript (npc, rewardScript);
		setObjVar (npc, "player", self);
		setObjVar (self, "bestine.om.vipObjId", npc);
		setObjVar (npc, "quest", questNum);
	}
	if (name == "questGiver")
	{
		quests.clearQuestLocationTarget (self, null, name);
		obj_id vip = getObjIdObjVar (self, "bestine.om.vipObjId");
		dictionary parms = new dictionary();
		parms.put ("player", self);
		messageTo (vip, "stopFollowing", parms, 0, true);
	}		
	return SCRIPT_CONTINUE;
}

messageHandler finishQuest()
{
	location questGiver = getLocationObjVar (self, "bestine.om.omLoc");
	quests.addQuestLocationTarget ( self, null, "questGiver", questGiver, 10);
	return SCRIPT_CONTINUE;
}	