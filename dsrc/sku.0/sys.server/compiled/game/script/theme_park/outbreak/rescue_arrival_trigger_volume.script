include library.attrib;
include library.groundquests;

const boolean LOGGING_ON			= true; 
const string SCRIPT_LOG				= "outbreak_pathing";

const string TRIGGER_NAME_PREFIX 		= "rescue_arrival_trigger_";
const string UPDATE_SIGNAL			= "update_signal";
const float TRIGGER_RADIUS 			= 6f;

trigger OnInitialize()
{
	//on init add trig volume
	setAttributeInterested(self, attrib.OUTBREAK_SURVIVOR);
	createTriggerVolume(TRIGGER_NAME_PREFIX + self, TRIGGER_RADIUS, true);
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered(string volumeName, obj_id whoTriggeredMe)
{
	blog("OnTriggerVolumeEntered INIT: "+whoTriggeredMe);

	if(isPlayer(whoTriggeredMe))
		return SCRIPT_CONTINUE;

	if(hasObjVar(whoTriggeredMe, "sci"))//scientists need to just destroy
	{
		CustomerServiceLog("outbreak_themepark", "survivor_pathing.OnMovePathComplete() whoTriggeredMe: "+whoTriggeredMe+" is a Scientist Survivor. Destroying.");
	
		messageTo(whoTriggeredMe, "cleanUpNpcTimer", null, 1, false);
		return SCRIPT_CONTINUE;	
	}

	if(!hasObjVar(whoTriggeredMe, "myEscort"))
		return SCRIPT_CONTINUE;

	blog("OnTriggerVolumeEntered: NPC has myEscort");

	messageTo(whoTriggeredMe, "creditPlayerRescue", null, 40, false);

	attachScript(whoTriggeredMe, "conversation.survivor_02");
	setInvulnerable(whoTriggeredMe, true);	
	setCondition(whoTriggeredMe, CONDITION_CONVERSABLE);

	obj_id player = getObjIdObjVar(whoTriggeredMe, "myEscort");
	if(!isValidId(player))
	{
		CustomerServiceLog("outbreak_themepark", "survivor_pathing.OnMovePathComplete() Player: "+player+" OID was invalid so the player could not receive the fail signal.");
		return SCRIPT_CONTINUE;
	}
	CustomerServiceLog("outbreak_themepark", "survivor_pathing.startSurvivorPathing() the NPC is now invulnerable and waiting for player "+player);

	string signalUpdate = getStringObjVar(whoTriggeredMe, UPDATE_SIGNAL);
	if(signalUpdate == null || signalUpdate.length() <= 0)
	{
		CustomerServiceLog("outbreak_themepark", "survivor_pathing.OnMovePathComplete() The Rescued NPC did not have the appropriate signal to update the players quest for Player: "+player+" ("+getPlayerName(player)+"). The player may not receive credit for the rescue.");
		return SCRIPT_CONTINUE;	
	}
	CustomerServiceLog("outbreak_themepark", "survivor_pathing.startSurvivorPathing() the NPC update signal is: "+signalUpdate);
	
	groundquests.sendSignal(player, signalUpdate);
	
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeExited(string volumeName, obj_id whoTriggeredMe)
{
	blog("Exited trigger volume: "+whoTriggeredMe);
	return SCRIPT_CONTINUE;
}

boolean blog(string msg)
{
	if(LOGGING_ON)
		LOG(SCRIPT_LOG,msg);
	return true;
}
