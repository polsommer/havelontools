include library.ai_lib;
const string_id SID_JIN_ESCAPED 	= new string_id("theme_park/outbreak/outbreak", "dr_jin_escaped");

trigger OnIncapacitateTarget(obj_id victim)
{
	CustomerServiceLog("quest", "griffax_jin_undead.OnIncapacitateTarget() Dr. Jin Incapacitated a target.");
	obj_id owner = getObjIdObjVar(self, "owner");
	if(!isValidId(owner))
	{
		CustomerServiceLog("quest", "griffax_jin_undead.OnIncapacitateTarget() Dr. Jin Incapacitated a target but the owner could not be found.");	
		return SCRIPT_CONTINUE;
	}	
	if(victim != owner)
	{
		CustomerServiceLog("quest", "griffax_jin_undead.OnIncapacitateTarget() Dr. Jin Incapacitated a target but the owner was not the target incapped.");	
		return SCRIPT_CONTINUE;
	}

	messageTo(self, "cleanupDrJin", null, 2, false);
 	return SCRIPT_CONTINUE;
}

trigger OnExitedCombat()
{
	if(ai_lib.isDead(self))
		return SCRIPT_CONTINUE;
		
	CustomerServiceLog("quest", "griffax_jin_undead.OnExitedCombat() Dr. Jin has stopped combat.");
	obj_id owner = getObjIdObjVar(self, "owner");
	if(!isValidId(owner))
	{
		CustomerServiceLog("quest", "griffax_jin_undead.OnIncapacitateTarget() Dr. Jin Incapacitated a target but the owner could not be found.");	
		return SCRIPT_CONTINUE;
	}	

	messageTo(self, "cleanupDrJin", null, 12, false);
	return SCRIPT_CONTINUE;
}


//------------------------------------------------
// MESSAGE HANDLERS
//------------------------------------------------
messageHandler cleanupDrJin()
{
	//If the player stealthed and then attacked or has some help
	//abort the cleanUp
	obj_id owner = getObjIdObjVar(self, "owner");
	
	if(ai_lib.isInCombat(self))
	{
		if(isValidId(owner) && exists(owner) && !isDead(owner))
		{
			obj_id[] haters = getHateList(self);

			if(haters != null || haters.length > 0)
			{
				for(int i=0;i<haters.length;i++)
				{
					if(owner == haters[i])
					{
 						return SCRIPT_CONTINUE;	
					}
				}
			}
		}
	}

	CustomerServiceLog("quest", "griffax_jin_undead.cleanupDrJin() Dr. Jin is being cleaned up because the player owner was incapacitated or ran away.");
	if(isValidId(owner) && exists(owner))
	{	
		sendSystemMessage(owner, SID_JIN_ESCAPED);	
	}
	destroyObject(self);
 	return SCRIPT_CONTINUE;	
}