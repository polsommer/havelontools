include library.utils;
include library.ai_lib;
include library.spawning;
include library.create;


trigger OnAttach()
{
	if ( hasObjVar(self, "imperialBannerSpawned") )
		removeObjVar(self, "imperialBannerSpawned");

	if ( hasObjVar(self, "rebelBannerSpawned") )
		removeObjVar(self, "rebelBannerSpawned");

	if (canSpawnByConfigSetting())
	messageTo(self, "doImperialBannerEvent", null, 10, false);

	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	if ( hasObjVar(self, "imperialBannerSpawned") )
		removeObjVar(self, "imperialBannerSpawned");

	if ( hasObjVar(self, "rebelBannerSpawned") )
		removeObjVar(self, "rebelBannerSpawned");
	
	if (canSpawnByConfigSetting())
		messageTo(self, "doImperialBannerEvent", null, 20, false);

	return SCRIPT_CONTINUE;
}

messageHandler doImperialBannerEvent()
{
	if ( !hasObjVar(self, "imperialBannerSpawned") )
	{
		string imperialBanner = "object/tangible/quest/rebel/rtp_hansolo_imperial_banner.iff";

		location here = getLocation(self);
		
		obj_id objTemplate = createObject(imperialBanner, here);

		setObjVar(objTemplate, "objParent", self);
		setObjVar(self, "imperialBannerSpawned", true);

		float spawnerYaw = getYaw(self);
		setYaw(objTemplate, spawnerYaw);
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler doRebelBannerEvent()
{
	if ( !hasObjVar(self, "rebelBannerSpawned") )
	{
		string rebelBanner = "object/tangible/quest/rebel/rtp_hansolo_rebel_banner.iff";

		location here = getLocation(self);

		obj_id objTemplate = createObject(rebelBanner, here);

		setObjVar(objTemplate, "objParent", self);
		setObjVar(self, "rebelBannerSpawned", true);

		float spawnerYaw = getYaw(self);
		setYaw(objTemplate, spawnerYaw);
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler spawnDestroyed()
{
	if ( hasObjVar(self, "rebelBannerSpawned") )
	{
		removeObjVar(self, "rebelBannerSpawned");
		messageTo(self, "doImperialBannerEvent", null, 0, false);
	}
	else if ( hasObjVar(self, "imperialBannerSpawned") )
	{
		removeObjVar(self, "imperialBannerSpawned");
		messageTo(self, "doRebelBannerEvent", null, 0, false);
	}
	
	return SCRIPT_CONTINUE;

}

boolean canSpawnByConfigSetting()
{
	string disableSpawners = getConfigSetting("GameServer", "disableAreaSpawners");
	if (disableSpawners == null)
		return true;

	if (disableSpawners.equals("true") || disableSpawners.equals("1"))
		return false;

	return true;
}