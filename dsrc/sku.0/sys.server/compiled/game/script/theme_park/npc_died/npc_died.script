// This script is used to send a message to a spawner to let it know an NPC
// it spawned has been detroyed.

trigger OnIncapacitated (obj_id killer)
{
	if ( hasObjVar(self, "useOnIncapTrigger") )
	{
//		LOG("NPC_DIED SCRIPT", "trigger OnIncapacitated starting. Self: " + self);
		obj_id spawner = getObjIdObjVar( self, "spawner" );
		const string npc_type = getCreatureName(self);
		dictionary npcParams = new dictionary();
		
		if (npc_type == null)
		{
			npcParams.put("npc_type", "nothing");
		}
		else
		{
			npcParams.put("npc_type", npc_type);
		}
		
//		LOG("NPC_DIED SCRIPT", "messageTo being sent. Who died: " + npc_type);
		messageTo( spawner, "npcDied", npcParams, 5, false );
	}
		return SCRIPT_CONTINUE;
}


trigger OnDestroy ()
{
	if ( hasObjVar(self, "useOnIncapTrigger") )
	{
		return SCRIPT_CONTINUE;
	}
	
//	LOG("NPC_DIED SCRIPT", "trigger OnDestroy starting. Self: " + self);
	obj_id spawner = getObjIdObjVar( self, "spawner" );
	string npc_type = getCreatureName(self);
	dictionary npcParams = new dictionary();

	if (npc_type == null)
	{
		npcParams.put("npc_type", "nothing");
	}
	else
	{
		npcParams.put("npc_type", npc_type);
	}
	
//	LOG("NPC_DIED SCRIPT", "messageTo being sent. Who died: " + npc_type);
	messageTo( spawner, "npcDied", npcParams, 5, false );
		return SCRIPT_CONTINUE;
}
