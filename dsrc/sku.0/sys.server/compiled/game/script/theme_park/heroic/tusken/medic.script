include library.ai_lib;
include library.factions;
include library.skill;
include library.trial;
include library.utils;

messageHandler findSquad()
{
	if (utils.hasScriptVar(self, "squad"))
	{
		obj_id curSquad = utils.getObjIdScriptVar(self, "squad");
		
		if (isIdValid(curSquad) && exists(curSquad) && !isDead(curSquad))
		{
			return SCRIPT_CONTINUE;
		}
	}
	
	
	obj_id[] allObj = getObjectsInRange(getLocation(self), 1000.0f);//utils.getAllObjectsInBuildoutArea(self);
	
	resizeable obj_id[] allies = new obj_id[0];
	resizeable obj_id[] gods = new obj_id[0];
	
	for (int i=0;i<allObj.length;i++)
	{
		
		if (!isValidTarget(self, allObj[i]))
			continue;

		if (isGod(allObj[i]))
		{
			gods.add(allObj[i]);
		}
			
		if (utils.hasScriptVar(allObj[i], "squad"))
			continue;
	
		if (allObj[i] == self)
			continue;
			
		allies.add(allObj[i]);	
	}

	if (allies == null || allies.length == 0)
	{
		messageTo(self, "findAllies", null, 60.0f, false);
		sendGodMessage(gods, "I could locate no valid allies to attach to, will try again in 60 seconds");
		return SCRIPT_CONTINUE;
	}

	obj_id mySquad = allies[rand(0, allies.length - 1)];
	
	setCreatureCoverVisibility(self, false);
	setLocation(self, getLocation(mySquad));

	dictionary dict = new dictionary();
	dict.put("squad", mySquad);
	messageTo(self, "followMySquad", dict, 0.0f, false);
	
	sendGodMessage(gods, "Medic("+self+") just attached myself to espa personel ("+mySquad+"). Come to "+getLocation(mySquad)+" to see the happy couple");

	return SCRIPT_CONTINUE;
}

messageHandler followMySquad()
{
	obj_id mySquad = params.getObjId("squad");

	ai_lib.aiFollow(self, mySquad);
	setCreatureCoverVisibility(self, true);
	
	utils.setScriptVar(self, "squad", mySquad);
	
	messageTo(self, "performHeal", trial.getSessionDict(self), 12.0f, false);

	return SCRIPT_CONTINUE;
}


trigger OnEnteredCombat()
{
	trial.bumpSession(self);
	
	messageTo(self, "performHeal", trial.getSessionDict(self), 10.0f, false);
	return SCRIPT_CONTINUE;
}

trigger OnExitedCombat()
{
	trial.bumpSession(self);
	return SCRIPT_CONTINUE;
}

messageHandler performHeal()
{
	if (!trial.verifySession(self, params))
	{
		return SCRIPT_CONTINUE;
	}	
		
	obj_id[] targets = getObjectsInRange(getLocation(self), 25.0f);
	
	resizeable obj_id[] toHeal = new obj_id[0];
	
	for (int i=0;i<targets.length;i++)
	{
		if (!isValidTarget(self, targets[i]))
			continue;
			
		toHeal.add(targets[i]);
	}
	
	if (toHeal == null || toHeal.length == 0)
	{
		messageTo(self, "performHeal", trial.getSessionDict(self), rand(15.0f,30.0f), false);
		return SCRIPT_CONTINUE;
	}
	
	int valueHealed = 0;
	
	for (int q=0;q<toHeal.length;q++)
	{
		int curHealth = getHealth(toHeal[q]);
		int maxHealth = getMaxHealth(toHeal[q]);
		int difference = maxHealth - curHealth;
		
		if (difference > 0)
		{
			int capIt = difference > 5000 ? 5000 : difference;
			addToHealth(toHeal[q], capIt);
			valueHealed+= capIt;
			playClientEffectLoc(toHeal[q], "clienteffect/bacta_bomb.cef" , getLocation(toHeal[q]), 0);
		}
	}
	
	if (valueHealed > 0)
		playClientEffectLoc(self, "appearance/pt_medic_healing_energy_area.prt" , getLocation(self), 0);
		
	messageTo(self, "performHeal", trial.getSessionDict(self), rand(15.0f, 30.0f), false);
		
	return SCRIPT_CONTINUE;
}

boolean isValidTarget(obj_id self, obj_id target)
{
	if (!isMob(target) && !isPlayer(target))
		return false;

	if (isIdValid(getLocation(target).cell))
		return false;

	if (isDead(target))
		return false;

	if (factions.getFaction(target) == null || factions.getFaction(target) == "")
		return false;
		
	if (!factions.getFaction(target).equals("espa") && !factions.getFaction(target).equals("espa_guard"))
		return false;
		
	if (!getCreatureCoverVisibility(target))
		return false;
		
	return true;

}

trigger OnDeath(obj_id killer, obj_id corpseId)
{
	trial.bumpSession(self);
 	return SCRIPT_CONTINUE;
}

void sendGodMessage(resizeable obj_id[] gods, string message)
{
	if (gods != null || gods.length > 0)
	{
		obj_id[] xfer = gods;
		utils.sendSystemMessageTestingOnly(xfer, message);	
	}
}
