include library.skill;
include library.trial;
include library.utils;

trigger OnDetach()
{
	stopClientEffectObjByLabel(trial.getPlayersInDungeon(trial.getTop(self)), self,  "burn");
	return SCRIPT_CONTINUE;
}

trigger OnAttach()
{
	detachScript(self, "ai.ai");
	detachScript(self, "ai.creature_combat");
	attachScript(self, "player.yavin_e3");
	obj_id[] players = trial.getPlayersInDungeon(trial.getTop(self));
	
	setCreatureCoverVisibility(self, false);
	
	if (hasObjVar(self, "doBurn"))
	{
		messageTo(self, "start_burn", null, 2.0f, false);
	}
	
	if (players == null || players.length == 0)
		return SCRIPT_CONTINUE;

	
	for (int i=0;i<players.length;i++)
	{
		addPassiveReveal(self, players[i], 1);
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler start_burn()
{
	playClientEffectObj(self, "appearance/pt_green_fire_base.prt", self, "", null, "burn");
	messageTo(self, "burn", null, 0.0f, false);
	return SCRIPT_CONTINUE;
}

messageHandler burn()
{
	obj_id[] players = trial.getValidTargetsInRadius(self, 5.0f);
	
	if (players == null || players.length == 0)
	{
		messageTo(self, "burn", null, 1.0f, false);
		return SCRIPT_CONTINUE;
	}

	for (int i=0;i<players.length;i++)
	{
		location loc = getLocation(players[i]);
		string locationData = ""+loc.x+" "+loc.y+" "+loc.z+" "+loc.cell+" "+loc.x+" "+loc.y+" "+loc.z;
		queueCommand(self, ##"axkva_warden_flame", players[i], locationData, COMMAND_PRIORITY_DEFAULT);
	
	}

	messageTo(self, "burn", null, 1.0f, false);
	
	return SCRIPT_CONTINUE;
}

messageHandler fall_down()
{
	setPosture(self, POSTURE_KNOCKED_DOWN);
	return SCRIPT_CONTINUE;
}