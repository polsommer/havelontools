include library.instance;
include library.skill;
include library.trial;
include library.utils;

messageHandler axkvaDied()
{
	obj_id[] players = trial.getPlayersInDungeon(self);
	trial.setDungeonCleanOutTimer(self, 15);
	dictionary dict = new dictionary();
	dict.put("tokenIndex", 0);
	utils.messageTo(players, "handleAwardtoken", dict, 0, false);

	//Begin CS Logging
	obj_id group = getGroupObject(players[0]);
	int calendarTime = getCalendarTime();
	string realTime = getCalendarTimeStringLocal(calendarTime);
	CustomerServiceLog("instance-heroic_axkva_min", "AxkVa Defeated in instance (" + self + ") by group_id (" + group + ") at " + realTime);
	CustomerServiceLog("instance-heroic_axkva_min", "Group (" + group + ") consists of: ");
	for(int i = 0; i < players.length; ++i)
	{
		string strProfession = skill.getProfessionName(getSkillTemplate(players[i]));
		CustomerServiceLog("instance-heroic_axkva_min", "Group (" + group + ") member " + i + " " + getFirstName(players[i]) + "'s(" + players[i] + ") profession is " + strProfession +".");
	}
	//end CS Logging
	instance.setClock(self, 300);

	return SCRIPT_CONTINUE;
}

trigger OnReceivedItem(obj_id srcContainer, obj_id transferer, obj_id item)
{
	if (!isPlayer(item))
		return SCRIPT_CONTINUE;

	obj_id[] objects = trial.getObjectsInDungeonWithObjVar(trial.getTop(self), "spawn_id");

	if (objects == null || objects.length == 0)
		return SCRIPT_CONTINUE;

	obj_id shade = null;

	for (int i=0;i<objects.length;i++)
	{
		if (!hasObjVar(objects[i], "spawn_id"))
			continue;

		if (getStringObjVar(objects[i], "spawn_id").equals("shade"))
			shade = objects[i];
	}

	addPassiveReveal(shade, item, 1);

	return SCRIPT_CONTINUE;
}