include library.combat;
include library.trial;
include library.utils;

trigger OnAttach()
{
	trial.setHp(self, trial.HP_AXKVA_LILLI_HI);
	return SCRIPT_CONTINUE;
}

messageHandler performAmbush()
{
	if (!trial.verifySession(self, params, "ambush"))
		return SCRIPT_CONTINUE;

	utils.removeScriptVar(self, combat.DEFAULT_ATTACK_OVERRIDE);	
	obj_id target = combat.getRandomHateTarget(self);
	setInvulnerable(self, false);
	setCreatureCoverVisibility(self, true);
	
	if (isIdValid(target))
	{
		setLocation(self, getLocation(target));
		queueCommand(self, ##"lelli_bleed", target, "", COMMAND_PRIORITY_DEFAULT);
	}
	
	return SCRIPT_CONTINUE;	
}

messageHandler dropMines()
{
	if (!trial.verifySession(self, params, "ambush"))
		return SCRIPT_CONTINUE;
		
	queueCommand(self, ##"lelli_mine", getTarget(self), "", COMMAND_PRIORITY_DEFAULT);
	return SCRIPT_CONTINUE;
}

trigger OnExitedCombat()
{
	trial.bumpSession(self, "ambush");
	utils.removeScriptVar(self, combat.DEFAULT_ATTACK_OVERRIDE);	
	setInvulnerable(self, false);
	setCreatureCoverVisibility(self, true);
	return SCRIPT_CONTINUE;
}

trigger OnEnteredCombat()
{
	obj_id[] players = trial.getPlayersInDungeon(trial.getTop(self));
	if (players == null || players.length == 0)
		return SCRIPT_CONTINUE;
		
	for (int i=0;i<players.length;i++)
	{
		addHate(self, players[i], 1);
	}
	
	return SCRIPT_CONTINUE;
}
