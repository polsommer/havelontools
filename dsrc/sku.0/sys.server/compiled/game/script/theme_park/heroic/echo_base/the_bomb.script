include library.trial;

trigger OnAttach()
{
	trial.setHp(self, 150000);
	return SCRIPT_CONTINUE;
}

messageHandler start_detonate()
{
	int detonate_time = hasObjVar(self, "detonate") ? getIntObjVar(self, "detonate") : 900;
	messageTo(self, "detonate", null, detonate_time, false);
	return SCRIPT_CONTINUE;
}

messageHandler detonate()
{
	dictionary dict = trial.getSessionDict(trial.getTop(self));
	dict.put("triggerType", "triggerId");
	dict.put("triggerName", "p2_rebel_command_destroy");
	messageTo(trial.getTop(self), "triggerFired", dict, 1.0f, false);

	location death = getLocation( self );
	playClientEffectObj(getClosestPlayer(death), "clienteffect/combat_explosion_lair_large.cef", self, "");
	playClientEffectLoc(getClosestPlayer(death), "clienteffect/combat_explosion_lair_large.cef", death, 0);
	messageTo(self, "cleanup", null, 3.0f, false);
	return SCRIPT_CONTINUE;
}

trigger OnObjectDisabled(obj_id killer)
{
	messageTo(self, "cleanup", null, 3.0f, false);
	return SCRIPT_CONTINUE;
}

messageHandler cleanup()
{
	trial.cleanupObject(self);
	return SCRIPT_CONTINUE;
}