include library.buff;
include library.chat;
include library.combat;
include library.healing;
include library.trial;
include library.utils;

trigger OnAttach()
{
	trial.setHp(self, 525000);
	return SCRIPT_CONTINUE;
}

trigger OnMoveMoving()
{
	setMovementPercent(self, 0.8f);
	return SCRIPT_CONTINUE;
}

trigger OnExitedCombat()
{
	trial.bumpSession(self, "zap");
	return SCRIPT_CONTINUE;
}

trigger OnEnteredCombat()
{
	buff.applyBuff(self, "kun_order_set");
	buff.applyBuff(self, "kun_twin_ranged_shield");
	buff.applyBuff(self, "mind_trick_immune");

	messageTo(self, "order_zap", trial.getSessionDict(self, "zap"), 10.0f, false);
	return SCRIPT_CONTINUE;
}

messageHandler order_zap()
{
	if (!trial.verifySession(self, params, "zap"))
		return SCRIPT_CONTINUE;
		
	if (isDead(self))
		return SCRIPT_CONTINUE;
		
	obj_id[] players = trial.getValidTargetsInCell(trial.getTop(self), "r7");
	
	if (players == null || players.length == 0)
		return SCRIPT_CONTINUE;
		
	for (int i=0;i<players.length;i++)
	{
		queueCommand(self, ##"kun_order_discipline", players[i], "", COMMAND_PRIORITY_DEFAULT);
	}
	
	messageTo(self, "order_zap", trial.getSessionDict(self, "zap"), 8.0f, false);
	return SCRIPT_CONTINUE;
}