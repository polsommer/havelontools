include library.utils;
include library.create;
include library.ai_lib;
include library.trial;
include library.restuss_event;


const boolean LOGGING					= false;


trigger OnAttach()
{
	trial.setInterest(self);
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated(obj_id killer)
{
	messageTo(self, "destroySelf", null, 5, false);
	return SCRIPT_CONTINUE;
}

messageHandler destroySelf()
{
	trial.cleanupObject(self);
	return SCRIPT_CONTINUE;
}

messageHandler pathToNextPoint()
{
	location[] patrolPoints = utils.getLocationArrayScriptVar(self, restuss_event.PATROL_POINTS);
	ai_lib.setPatrolOncePath(self, patrolPoints);
	return SCRIPT_CONTINUE;
}

void doLogging(string section, string message)
{
	if (LOGGING)
		LOG("doLogging/event_squad_member/"+section, message);
}