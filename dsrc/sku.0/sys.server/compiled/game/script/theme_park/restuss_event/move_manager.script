include library.movement;
include library.utils;
include library.ai_lib;

const int REST_IMP			= 0;
const int REST_REB			= 1;

messageHandler marchRun()
{
	int type = getIntObjVar(self, "restriction");
	
	switch (type)
	{
		case REST_IMP:
			doImperialMarch(self);
			break;
			
		case REST_REB:
			setMovementRun(self);
			movement.refresh(self);
			break;

	}
	return SCRIPT_CONTINUE;
}

messageHandler setRun()
{
	int type = getIntObjVar(self, "restriction");
	if (type == REST_REB)
	{
		setMovementRun(self);
		movement.refresh(self);
	}
	return SCRIPT_CONTINUE;
}

void doImperialMarch(obj_id self)
{
	location moveToLoc = utils.findLocInFrontOfTarget(self, 40.0f);
	ai_lib.aiPathTo(self, moveToLoc);
}
