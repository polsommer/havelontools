/***** INCLUDES ********************************************************/
include library.utils;
include library.groundquests

/***** CONSTANTS *******************************************************/

const string VOLUME_NAME				= "quest_area";

/***** TRIGGERS ********************************************************/

trigger OnAttach()
{
	createTriggerVolume(VOLUME_NAME, 10.0f, true);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	createTriggerVolume(VOLUME_NAME, 10.0f, true);
	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{
	location spawnerLocation = getLocation(self);

	if (!utils.hasScriptVar (self, "spawnedAlready") && (isPlayer(breacher)))
	{
		obj_id waveSpawner = createObject("object/tangible/theme_park/invisible_object.iff",getLocation(self));
		debugSpeakMsg(self, "I just made " + waveSpawner);
		setObjVar(waveSpawner, "wave_spawner.data_table", "datatables/spawning/restuss_event/st3_southgate_battle.iff");
		attachScript (waveSpawner, "theme_park.wave_spawner");
		utils.setScriptVar (self, "spawnedAlready", 1);
		messageTo (self, "readyToSpawn", null, 1200.0f, false);
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}

/***** MESSAGE HANDLERS ************************************************/
messageHandler test()
{
		obj_id waveSpawner = createObject("object/tangible/theme_park/invisible_object.iff",getLocation(self));
		debugSpeakMsg(self, "I just made " + waveSpawner);
		setObjVar(waveSpawner, "wave_spawner.data_table", "datatables/spawning/restuss_event/st3_southgate_battle.iff");
		attachScript (waveSpawner, "theme_park.wave_spawner");
		utils.setScriptVar (self, "spawnedAlready", 1);
		messageTo (self, "readyToSpawn", null, 900.0f, false);
		return SCRIPT_CONTINUE;

}

messageHandler readyToSpawn()
{
	utils.removeScriptVar(self, "spawnedAlready");
	return SCRIPT_CONTINUE;
}