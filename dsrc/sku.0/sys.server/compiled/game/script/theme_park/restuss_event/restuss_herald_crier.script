//RESTUSS EVENT: GENERIC HERALDS

// ********************************************************************
//					INCLUDES
// ********************************************************************

include library.chat;
include library.utils;

// ********************************************************************
//					CONSTS
// ********************************************************************

const string STF									= "restuss_event/stage_one_herald";
const string_id ST_ONE								= new string_id(STF, "stormtrooper_01");
const string_id ST_TWO								= new string_id(STF, "stormtrooper_02");
const string_id ST_THREE							= new string_id(STF, "stormtrooper_03");
const string_id REB_ONE								= new string_id(STF, "rebel_01");
const string_id REB_TWO								= new string_id(STF, "rebel_02");
const string_id REB_THREE							= new string_id(STF, "rebel_03");
const string_id GUY_ONE								= new string_id(STF, "guy_01");
const string_id GUY_TWO								= new string_id(STF, "guy_02");
const string_id GUY_THREE							= new string_id(STF, "guy_03");

// ********************************************************************
//					TRIGGERS
// ********************************************************************

trigger OnAttach()
{
	messageTo(self, "startCheck", null, 5, false);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	messageTo(self, "startCheck", null, 5, false);
	return SCRIPT_CONTINUE;
}

// ********************************************************************
//					FUNCTIONS
// ********************************************************************


// ********************************************************************
//					MESSAGE HANDLERS
// ********************************************************************

messageHandler startCheck()
{
	int npcType = getIntObjVar(self, "restussHerald");
//	int npcType = utils.stringToInt(intType);
	if (npcType == 1)
	{
		messageTo(self, "handleHeraldST", null, 60, false);
		return SCRIPT_CONTINUE;
	}
	if (npcType == 2)
	{
		messageTo(self, "handleHeraldReb", null, 60, false);
		return SCRIPT_CONTINUE;
	}
	if (npcType == 3)
	{
		messageTo(self, "handleHeraldGuy", null, 60, false);
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
}
messageHandler handleHeraldST()
{
	int chatChoice = rand (1,3);

	if (chatChoice == 1)
	{
		chat.chat(self, ST_ONE);
	}
	if (chatChoice == 2)
	{
		chat.chat(self, ST_TWO);
	}
	if (chatChoice == 3)
	{
		chat.chat(self, ST_THREE);
	}
	messageTo(self, "handleHeraldST", null, 60, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleHeraldReb()
{
	int chatChoice = rand (1,3);

	if (chatChoice == 1)
	{
		chat.chat(self, REB_ONE);
	}
	if (chatChoice == 2)
	{
		chat.chat(self, REB_TWO);
	}
	if (chatChoice == 3)
	{
		chat.chat(self, REB_THREE);
	}
	messageTo(self, "handleHeraldReb", null, 60, false);
	return SCRIPT_CONTINUE;
}

messageHandler handleHeraldGuy()
{
	int chatChoice = rand (1,3);

	if (chatChoice == 1)
	{
		chat.chat(self, GUY_ONE);
	}
	if (chatChoice == 2)
	{
		chat.chat(self, GUY_TWO);
	}
	if (chatChoice == 3)
	{
		chat.chat(self, GUY_THREE);
	}
	messageTo(self, "handleHeraldGuy", null, 60, false);
	return SCRIPT_CONTINUE;
}
