
include library.sui;
include library.utils;

trigger OnInitialize()
{
	detachScript(self, sui.SCRIPT_FILTER_OWNER);
	return SCRIPT_CONTINUE;
}

messageHandler handleFilterInput()
{
	obj_id player = sui.getPlayerId(params);
	if ( !isIdValid(player) )
		return SCRIPT_CONTINUE;
	
	string returnHandler = utils.getStringScriptVar(self, sui.VAR_FILTER_BASE + "." + player + ".handler");
	string defaultText = utils.getStringScriptVar(self, sui.VAR_FILTER_BASE + "." + player + ".defaultText");

	sui.cleanupFilteredInputbox(self, player);

	boolean doSend = true;

	int bp = sui.getIntButtonPressed(params);
	if ( bp != sui.BP_CANCEL )
	{
		string text = sui.getInputBoxText(params);
		if ( text != null && !text.equals("") )
		{
			if ( !isAppropriateText(text) )
			{
				doSend = false;
				
				string title = sui.getInputBoxTitle(params);
				string prompt = sui.getInputBoxPrompt(params);
				int maxLength = sui.getInputBoxMaxLength(params);
				
				/*
				debugConsoleMsg(player, "handleFilterInput: recycling data. params are...");
				debugConsoleMsg(player, " - title = " + title);
				debugConsoleMsg(player, " - prompt = " + prompt);
				debugConsoleMsg(player, " - maxLength = " + maxLength);

				debugConsoleMsg(player, " - returnHandler = " + returnHandler);
				debugConsoleMsg(player, " - defaultText = " + defaultText);
				*/
				
				sui.inputbox(self, player, prompt, title, returnHandler, maxLength, true, defaultText);
				sendSystemMessageTestingOnly(player, "You have entered was considered inappropriate.\nPlease enter more suitable text");
			}
		}
	}
	
	if ( returnHandler != null && !returnHandler.equals("") && doSend )
	{
		messageTo(self, returnHandler, params, 0f, false);
	}

	return SCRIPT_CONTINUE;
}