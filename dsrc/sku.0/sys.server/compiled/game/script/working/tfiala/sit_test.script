/**
 * sit_test.script
 */

// Function to split a string into multiple strings via the space character.

string[] strSplit(string strText)
{
	obj_id self = null;
	int intIndex = 0;
	int intI = 0;
	intIndex = strText.indexOf(" ");
	string strText1 = "";
	string strText2 = "";
	if(intIndex<0)
	{
		string[] strReturn = new string[1];
		strReturn[0] = strText;
		return strReturn;

	}
	else
	{
		while(intI<strText.length())
		{
			if(intI<intIndex)
			{
				strText1 = strText1+strText.charAt(intI);
				//debugServerConsoleMsg(self, "strText1 is "+strText1);

			}
			if(intI>intIndex)
			{
				strText2 = strText2+strText.charAt(intI);
				//debugServerConsoleMsg(self, "strText2 is "+strText2);


			}




			intI = intI+1;
		}

	//	debugServerConsoleMsg(self, "strText1 is"+strText1);
	//	debugServerConsoleMsg(self, "strText2 is "+strText2);
	}
	string[] strReturn = new string[2];
	strReturn[0] = strText1;
	strReturn[1] = strText2;
	return strReturn;
}


obj_id getObjectIdFromString(string objectIdAsString)
{
	//-- Conver the object id string to a Long
	Long lngId = null;

	try
	{
		lngId = new Long(objectIdAsString);
	}
	catch (NumberFormatException err)
	{
		return null;
	}

	return obj_id.getObjId(lngId.longValue());
}


void dumpStringArray(obj_id id, string[] array)
{
	if (array == null)
		debugServerConsoleMsg(id, "string array is null.");
	else
	{
		debugServerConsoleMsg(id, "string entry count: " + array.length);

		for (int i = 0; i < array.length; ++i)
		{
			debugServerConsoleMsg(id, "string [" + i + "]: [" + array[i] + "].");
		}
	}
}

trigger OnHearSpeech(obj_id objSpeaker, string strText)
{
	if (strText == "sit_version")
	{
		debugSpeakMsg(self, "sit_test: version 0.1");
	}
	else
	{
		string[] strings = strSplit(strText);
		dumpStringArray(self, strings);

		if ((strings.length == 2) && (strings[0].equals("sitOn")))
		{
			obj_id chairId = getObjectIdFromString(strings[1]);
			if (chairId != null)
			{
				debugServerConsoleMsg(self, "calling sitOnObject() C code.");
				sitOnObject(objSpeaker, chairId, 0);
			}
			else
				debugServerConsoleMsg(self, "objectId retrieval failed for object id [" + strings[1] + "].");
		}
		else
			debugServerConsoleMsg(self, "sitOn search criteria not met [" + ((strings.length == 2) ? "true" : "false") + "] [" + ((strings[0].equals("sitOn")) ? "true" : "false") + "].");
	}

    return SCRIPT_CONTINUE;
}
