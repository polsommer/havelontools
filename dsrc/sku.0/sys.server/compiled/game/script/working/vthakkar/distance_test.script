include library.create;
include library.utils;

#ifdef DEBUG

messageHandler checkDistance()
{
	if (utils.hasScriptVar(self, "vthakkar.distance.actor") && utils.hasScriptVar(self, "vthakkar.distance.time"))
	{
		float time = utils.getFloatScriptVar(self, "vthakkar.distance.time");
		obj_id actor = utils.getObjIdScriptVar(self, "vthakkar.distance.actor");
		
		float distance = getDistance(self, actor);
		if (distance < 0)
		{
			utils.removeScriptVarTree(self, "vthakkar.distance");
			return SCRIPT_CONTINUE;
		}
		
		location me = getLocation(self);
		location him = getLocation(actor);
		
		int mx = (int)me.x;
		int my = (int)me.y;
		int mz = (int)me.z;
		
		int hx = (int)him.x;
		int hy = (int)him.y;
		int hz = (int)him.z;
		
		sendSystemMessageTestingOnly(self, ("D: "+distance+" M: "+mx+" "+my+" "+mz+" "+" H: "+hx+" "+hy+" "+hz));
		
		messageTo(self, "checkDistance", null, time, false);
	}
	
	return SCRIPT_CONTINUE;
}

trigger OnSpeaking(string text)
{
	java.util.StringTokenizer st = new java.util.StringTokenizer(text);
	string arg = st.nextToken();

	if (arg.equals("startDistance") && st.countTokens() == 2)
	{
		float time = utils.stringToFloat(st.nextToken());
		obj_id actor = utils.stringToObjId(st.nextToken());
		
		utils.setScriptVar(self, "vthakkar.distance.actor", actor);
		utils.setScriptVar(self, "vthakkar.distance.time", time);
		
		messageTo(self, "checkDistance", null, time, false);
	}
	else if (arg.equals("resetDistance"))
	{
		if (st.countTokens() == 0)
		{
			utils.removeScriptVarTree(self, "vthakkar.distance");
		}
		else
		{
			obj_id actor = utils.stringToObjId(st.nextToken());
			
			utils.removeScriptVarTree(actor, "vthakkar.distance");
		}
	}
	else if (arg.equals("create"))
	{
		if (st.countTokens() == 1)
		{
			string creature = st.nextToken();
			
			obj_id actor = create.createCreature(creature, getLocation(self), true);
			utils.setScriptVar(self, "vthakkar.distance.actor", actor);
			utils.setScriptVar(self, "vthakkar.distance.time", 0.2f);
			messageTo(self, "checkDistance", null, 0.2f, false);
		}
	}
	
	return SCRIPT_CONTINUE;
}

#endif