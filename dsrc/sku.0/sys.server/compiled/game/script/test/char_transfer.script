
// ======================================================================

include library.ai_lib;
include library.create;
include library.pclib;
include library.skill;
include library.sui;
include library.utils;
include library.weapons;

inherits base.remote_object_requester;

//Character Transfer Test Harness
//This will transfer your character to the character you have targeted.

trigger OnSpeaking(String text)
{
	if(isGod(self))
	{
		debugConsoleMsg( self, "char_transfer OnSpeaking: " + text );

		java.util.StringTokenizer tok = new java.util.StringTokenizer (text);

		if (tok.hasMoreTokens ())
		{
			String command = tok.nextToken ();

			debugConsoleMsg( self, "command is: " + command);

			// ----------------------------------------------------------------------

			//character transfer to target character
			if (command.equalsIgnoreCase ("ct_totarget"))
			{
				debugConsoleMsg(self, "hit ct_totarget");
				
				obj_id target = getLookAtTarget(self);
				debugSpeakMsg(self, command + ": target=" + target);
				
				dictionary params = new dictionary();
				params.put("withItems", true);
				params.put("allowOverride", true);
								 
				Object[] triggerParams = new Object[2];
				triggerParams[0] = self;
				triggerParams[1] = params;
				
				int err = script_entry.runScripts("OnUploadCharacter", triggerParams);
				
				if(err == SCRIPT_CONTINUE)
				{
					byte[] packedData = params.pack();
					triggerParams = new Object[2];
					triggerParams[0] = target;
				        triggerParams[1] = packedData;
		
					err = script_entry.runScripts("OnDownloadCharacter", triggerParams);
					 
					removeObjVar(target, "hasTransferred");
					debugSpeakMsg(self, command + ": err=" + err);
				}
				

			}
			
		}
	}

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnAttach()
{
	debugConsoleMsg(self, "char_transfer attached!");
	
	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnDetach()
{
 	debugSpeakMsg(self, "char_transfer detached!");
	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnInitialize()
{
	debugServerConsoleMsg(self, "char_transfer initialized!");
	return SCRIPT_CONTINUE;
}

// ======================================================================
