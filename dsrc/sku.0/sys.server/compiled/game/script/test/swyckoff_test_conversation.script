// ======================================================================
//
// swyckoff_test.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/test/swyckoff_test_conversation";

// ======================================================================
// Script Conditions
// ======================================================================

boolean swyckoff_test_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean swyckoff_test_condition_false1 (obj_id player, obj_id npc)
{
	return false;
}

// ----------------------------------------------------------------------

boolean swyckoff_test_condition_false2 (obj_id player, obj_id npc)
{
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int swyckoff_test_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello %TU. This is a test script. This text should not be echoed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lets see some echo please.
	if (response == "s_4")
	{
		conversation.echoToGroup (player, player, npc, response);

		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, this should be echoed %TU, ask your group if it is.
			string_id message = new string_id (c_stringFile, "s_5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks for that.
			boolean hasResponse0 = false;
			if (swyckoff_test_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6");

				utils.setScriptVar (player, "conversation.swyckoff_test.branchId", 2);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				conversation.echoToGroup (player, npc, player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
				conversation.echoToGroup (player, npc, player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No echo for me thanks.
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: Fine, this text should not be echoed
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It wasn't thanks.
			boolean hasResponse0 = false;
			if (swyckoff_test_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.swyckoff_test.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me make sure that it all works if I don't end up with any responses.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ok, you have nothing you are allowed to say now. so the conversation should end.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This is not allowed
			boolean hasResponse0 = false;
			if (swyckoff_test_condition_false1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: This is also not allowed
			boolean hasResponse1 = false;
			if (swyckoff_test_condition_false2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.swyckoff_test.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int swyckoff_test_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, this should be echoed %TU, ask your group if it is.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks for that.
	if (response == "s_6")
	{
		conversation.echoToGroup (player, player, npc, response);

		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: No problem.
			string_id message = new string_id (c_stringFile, "s_19");
			utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

			npcEndConversationWithMessage (player, message);

			conversation.echoToGroup (player, npc, player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int swyckoff_test_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine, this text should not be echoed

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It wasn't thanks.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: I aim to please.
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int swyckoff_test_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ok, you have nothing you are allowed to say now. so the conversation should end.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is not allowed
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: Can't be reached
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is also not allowed
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			//-- NPC: Can't be reached
			string_id message = new string_id (c_stringFile, "s_16");
			utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.swyckoff_test");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.swyckoff_test");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (swyckoff_test_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello %TU. This is a test script. This text should not be echoed.
		string_id message = new string_id (c_stringFile, "s_3");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Lets see some echo please.
		boolean hasResponse0 = false;
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No echo for me thanks.
		boolean hasResponse1 = false;
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Let me make sure that it all works if I don't end up with any responses.
		boolean hasResponse2 = false;
		if (swyckoff_test_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			utils.setScriptVar (player, "conversation.swyckoff_test.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "swyckoff_test", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "swyckoff_test")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.swyckoff_test.branchId");

	if (branchId == 1 && swyckoff_test_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && swyckoff_test_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && swyckoff_test_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && swyckoff_test_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.swyckoff_test.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

