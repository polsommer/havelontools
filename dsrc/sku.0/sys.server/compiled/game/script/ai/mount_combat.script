// mount_combat.script
// a hijacked and modified copy of creature_combat.script
// intended to intercept creature combat triggers to prevent mounts from behaving in an untoward manner while the player is mounted

include ai.ai_combat;
include library.ai_lib;
include library.combat;
include library.pclib;
include library.factions;
include library.utils;
include library.pet_lib;
include library.scout;
include library.colors;
include library.xp;

inherits systems.combat.combat_base;

const int RANGE_NEAR = 0;
const int RANGE_MID_NEAR = 1;
const int RANGE_MID_FAR = 2;
const int RANGE_FAR = 3;

const int COMBATMODE_NONE = 0;
const int COMBATMODE_DEFAULT = 1;
const int COMBATMODE_EQUIPPED = 2;
const int COMBATMODE_SPECIAL = 3;

const string CREATURE_TABLE = "datatables/mob/creatures.iff";
const string ALERT_VOLUME_NAME = "alertTriggerVolume";

messageHandler aiCombatLoop()
{
		return SCRIPT_OVERRIDE;
}

trigger OnCreatureDamaged( obj_id attacker, obj_id weapon, int[] damage )
{
	return SCRIPT_OVERRIDE;
}

int defenderCombatAction( obj_id self, obj_id attacker, obj_id weapon, int combatResult )
{
	return SCRIPT_OVERRIDE;
}

//message sent from non-combat, but aggressive scripts like poison, etc.
messageHandler handleDefenderCombatAction()
{
	return SCRIPT_OVERRIDE;
}

trigger OnDefenderCombatAction( obj_id attacker, obj_id weapon, int combatResult )
{
	return SCRIPT_OVERRIDE;
}

messageHandler vocalizeEndCombat()
{
	return SCRIPT_OVERRIDE;
}

messageHandler postCombatPathHome()
{
	return SCRIPT_OVERRIDE;
}

trigger OnMovePathComplete()
{
	return SCRIPT_OVERRIDE;
}

trigger OnMoveMoving()
{
	return SCRIPT_OVERRIDE;
}

trigger OnBehaviorChange( int newBehavior, int oldBehavior, int[] changeFlags )
{
	return SCRIPT_OVERRIDE;
}

trigger OnTriggerVolumeEntered( string volumeName, obj_id breacher )
{
	return SCRIPT_OVERRIDE;
}

trigger OnIncapacitateTarget(obj_id target)
{
	return SCRIPT_OVERRIDE;
}

trigger OnAttach()
{
	setWantSawAttackTriggers( self, false );
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	setWantSawAttackTriggers( self, true );
	return SCRIPT_CONTINUE;
}
