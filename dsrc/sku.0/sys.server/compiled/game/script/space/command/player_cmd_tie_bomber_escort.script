include library.space_utils;
include library.ship_ai;
include library.space_combat;
include library.utils;



// ======================================================================

/*
trigger OnAttach()
{
	if(!setupEscort( self ))
		escape(self);
	return SCRIPT_CONTINUE;
}
*/

trigger OnDestroy()
{

	if ( hasObjVar(self, "evacuate" ))
	{
		debugServerConsoleMsg( null, "ONdESTROY - evacuating tie bomber ESCORT unit just destructed. obj_id was: "+self);
		return SCRIPT_CONTINUE;
	}


	debugServerConsoleMsg( null, "ONdESTROY - tie bomber escort");

	dictionary outparams = new dictionary();
	outparams.put( "deadFighterId", self );

	if ( hasObjVar(self, "commanderPlayer" ))
		space_utils.notifyObject( getObjIdObjVar(self, "commanderPlayer"), "bomberStrikeEscortUnitDestroyed", outparams );	//tell the player that called the strike that we got exploded

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------


trigger OnSpaceUnitMoveToComplete()		//This should primarily only trigger when the bombers get to their escape point, after they've decided to bug out
{
	debugServerConsoleMsg( null, "ONsPACEuNITmOVEtOcOMPLETE - tie bomber escort script");

	int squadId = ship_ai.unitGetSquadId(self);
	obj_id[] squaddyList = null;
	if ( ship_ai.isSquadIdValid(squadId) )
		squaddyList = ship_ai.squadGetUnitList(squadId);
	else
		return SCRIPT_CONTINUE;
	for(int i = 0; i<squaddyList.length; i++)	//hyperspace out the bombers
	{
		space_combat.destroyObjectHyperspace(squaddyList[i]);
	}
	return SCRIPT_CONTINUE;
}
