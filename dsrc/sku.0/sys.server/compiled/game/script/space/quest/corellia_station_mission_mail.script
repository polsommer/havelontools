include library.utils;
include library.space_flags;

const string_id SUBJECT_ONE	= new string_id("space/quest_mail", "corellia_station_mission_subject_one");
const string_id SUBJECT_TWO	= new string_id("space/quest_mail", "corellia_station_mission_subject_two");
const string_id BODY_ONE	= new string_id("space/quest_mail", "corellia_station_mission_body_one");
const string_id BODY_TWO	= new string_id("space/quest_mail", "corellia_station_mission_body_two");

messageHandler mailMessageOne() {

	if(space_flags.isSpaceTrack(self, space_flags.PRIVATEER_CORELLIA))
		messageTo(self, "sendMessageOne", null, 90.0f, true);

	return SCRIPT_CONTINUE;
}

messageHandler mailMessageTwo() {

	if(space_flags.isSpaceTrack(self, space_flags.PRIVATEER_CORELLIA))
		messageTo(self, "sendMessageTwo", null, 90.0f, true);

	return SCRIPT_CONTINUE;
}

messageHandler sendMessageOne() {

	utils.sendMail(SUBJECT_ONE, BODY_ONE, self, "Sender blocked: Data not available");
	space_flags.setSpaceFlag(self, "readyForCorelliaStationMission", 4);
	detachScript(self, "space.quest.corellia_station_mission_mail");

	return SCRIPT_CONTINUE;
}

messageHandler sendMessageTwo() {

	utils.sendMail(SUBJECT_TWO, BODY_TWO, self, "Sender blocked: Data not available");
	space_flags.setSpaceFlag(self, "readyForCorelliaStationMission", 6);
	detachScript(self, "space.quest.corellia_station_mission_mail");

	return SCRIPT_CONTINUE;
}