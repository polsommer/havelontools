include library.sui;
include library.space_quest;
include library.space_utils;
include library.utils;

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(item == menu_info_types.ITEM_USE)
	{
		if ( !space_utils.hasShip(player) )
		{
			if ( utils.hasScriptVar(player, "offer_a_ship.openSui") )
			{
				int oldSui = utils.getIntScriptVar(player, "offer_a_ship.openSui");
				utils.removeScriptVar(player, "offer_a_ship.openSui");
				if ( oldSui > -1 )
				{
					forceCloseSUIPage(oldSui);
				}
			}
			
			string_id title = new string_id ("new_player", "offer_a_ship_title");
			string_id textMsg = new string_id ("new_player", "offer_a_ship_msg");
			string_id okButton = new string_id ("new_player", "default_okay_button");
			string_id cancelButton = new string_id ("new_player", "default_cancel_button");
			
			string TITLE_MSG = utils.packStringId(title);
			string TEXT_MSG = utils.packStringId(textMsg);
			string OK_BUTTON = utils.packStringId(okButton);
			string CANCEL_BUTTON = utils.packStringId(cancelButton);

			// Create the dialog page.
			int pid = sui.createSUIPage(sui.SUI_MSGBOX, self, player, "handleSpaceTerminalOfferAShip");

			// Add elements text.
			setSUIProperty(pid, sui.MSGBOX_TITLE, sui.PROP_TEXT, TITLE_MSG );
			setSUIProperty(pid, sui.MSGBOX_PROMPT, sui.PROP_TEXT, TEXT_MSG);

			// Add buttons.
			sui.msgboxButtonSetup(pid, sui.YES_NO);
			setSUIProperty(pid, sui.MSGBOX_BTN_OK, sui.PROP_TEXT, OK_BUTTON);
			setSUIProperty(pid, sui.MSGBOX_BTN_CANCEL, sui.PROP_TEXT, CANCEL_BUTTON);

			// Show dialog.
			utils.setScriptVar(player, "offer_a_ship.openSui", pid);
			sui.showSUIPage( pid );
		}
	}

	return SCRIPT_CONTINUE;
}

messageHandler handleSpaceTerminalOfferAShip()
{
	if ( (params == null) || (params.isEmpty()) )
	{
		return SCRIPT_CONTINUE;
	}
	
	obj_id player = sui.getPlayerId(params);
	if ( !isIdValid(player) )
	{
		return SCRIPT_CONTINUE;
	}
	
	int bp = sui.getIntButtonPressed( params );
	switch ( bp )
	{
		case sui.BP_OK:
			space_quest.grantNewbieShip(player, "neutral");
			break;
		case sui.BP_CANCEL:
			break;
	}
	
	return SCRIPT_CONTINUE;
}
