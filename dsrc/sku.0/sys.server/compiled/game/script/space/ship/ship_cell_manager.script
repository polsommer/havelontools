include library.utils;
include library.space_crafting;
include library.dot;
include library.space_utils;
include library.space_combat;



trigger OnAttach()
{
/*
	obj_id[] objContents = getContents(objCell);
	if(objContents!=null)
	{
		
		for(int intI = 0; intI< objContents.length; intI++)
		{
			if(isPlayer(objContents[intI]))
			{
				// DOT!@!@!	
			}			
		}
	
	}

*/	
	//LOG("space", "attaching to "+self);
	return SCRIPT_CONTINUE;


}


messageHandler incrementDotDamage()
{
		
	//LOG("space", "got dot damage effect");
	int intSlot = params.getInt("intSlot");
	int intDamage = utils.getIntScriptVar(self, "intDamage");
	intDamage = intDamage + 100;
	obj_id[] objContents = getContents(self);
	utils.setScriptVar(self, "intDamage", intDamage);
	//LOG("space", "for "+self+" intDamage is "+intDamage);
	
	if(objContents!=null)
	{					
		for(int intI = 0; intI< objContents.length; intI++)
		{
			if(isPlayer(objContents[intI]))
			{
				// DOT!@!@!	
				if(dot.hasDotId(objContents[intI], "plasma_conduit"))
				{
					// get strength, remove and increment
					int intStrength = dot.getDotStrength(objContents[intI], "plasma_conduit");
					intStrength = intDamage;
					dot.applyDotEffect(objContents[intI], self, dot.DOT_FIRE, "plasma_conduit", HEALTH, -1, intDamage, 10000000, false, null);
				}
				else
				{
					string_id strSpam = new string_id("space/space_interaction", "plasma_leak_begin");
					sendSystemMessage(objContents[intI], strSpam);
					//LOG("space", "applying dot");
					dot.applyDotEffect(objContents[intI], self, dot.DOT_FIRE, "plasma_conduit", HEALTH, -1, intDamage, 10000000, true, null);


				}					
			}	
		}	
	}		
	return SCRIPT_CONTINUE;
}

messageHandler decrementDotDamage()
{
	//LOG("space", "Fixing dot damage");
	int intSlot = params.getInt("intSlot");
	int intDamage = utils.getIntScriptVar(self, "intDamage");
	//LOG("space", "for "+self+" intDamage is "+intDamage);
	intDamage = intDamage - 100;
	//LOG("space", "for "+self+" intDamage is "+intDamage);
	LOG("space", "Decredmenting damage.. new damage i s"+intDamage);
	obj_id[] objContents = getContents(self);	
	utils.setScriptVar(self, "intDamage", intDamage);
	if((objContents!=null)&&(objContents.length>0))
	{					
		//LOG("space", "Cehcking contents");
		for(int intI = 0; intI< objContents.length; intI++)
		{
			
			if(isPlayer(objContents[intI]))
			{
				//LOG("space", "checking "+objContents[intI]);
				// DOT!@!@!	
				if(intDamage>0)
				{
					if(dot.hasDotId(objContents[intI], "plasma_conduit"))
					{						
						// get strength, remove and increment
						int intStrength = dot.getDotStrength(objContents[intI], "plasma_conduit");
						intStrength = intDamage;
						dot.applyDotEffect(objContents[intI], null, dot.DOT_FIRE, "plasma_conduit", HEALTH, -1, intDamage, 10000000, false, null);


					}
					else
					{

						dot.applyDotEffect(objContents[intI], null, dot.DOT_FIRE, "plasma_conduit", HEALTH, -1, intDamage, 10000000, true, null);
					}					
				}
				else
				{
					string_id strSpam = new string_id("space/space_interaction", "plasma_leak_end");
					sendSystemMessage(objContents[intI], strSpam);
					dot.removeDotEffect(objContents[intI], "plasma_conduit", true);					
					detachScript(self, "space.ship.ship_cell_manager");
					setState(objContents[intI], STATE_ON_FIRE, false);
					LOG("space", "Detaching script");
				}
			}	
		}	
	}
	if(intDamage<=0)
	{
		detachScript(self, "space.ship.ship_cell_manager");
	}
	
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	// clear dots
	obj_id[] objContents = getContents(self);
	if(objContents!=null)
	{		
		for(int intI = 0; intI< objContents.length; intI++)
		{
			if(isPlayer(objContents[intI]))
			{
				if(dot.hasDotId(objContents[intI], "plasma_conduit"))
				{
					//LOG("space", "Player WITH DOT!@!@");	
					string_id strSpam = new string_id("space/space_interaction", "plasma_leak_end");
					sendSystemMessage(objContents[intI], strSpam);
					dot.removeDotEffect(objContents[intI], "plasma_conduit", true);

				}			
				// DOT!@!@!	
			}			
		}	
	}	
	return SCRIPT_CONTINUE;
}


trigger OnReceivedItem(obj_id objDestContainer, obj_id objTransferer, obj_id objItem)
{
	// add dot
	if(isPlayer(objItem))
	{
		int intDamage = utils.getIntScriptVar(self, "intDamage");
		if(intDamage>0)
		{
			string_id strSpam = new string_id("space/space_interaction", "plasma_leak_begin");
			sendSystemMessage(objItem, strSpam);
			//LOG("space", "APPLYING DAMAGE OF "+intDamage+" from cell "+self);
			dot.applyDotEffect(objItem, null, dot.DOT_FIRE, "plasma_conduit", HEALTH, -1, intDamage, 10000000, false, null);
		}
		else
		{
			detachScript(self, "space.ship.ship_cell_manager"); // in case
		}		
	}
 	return SCRIPT_CONTINUE;
}

trigger OnLostItem(obj_id objDestContainer, obj_id objTransferer, obj_id objItem)
{
	// remove dot
	//LOG("space", "LOST ITEMS!@!@");
	if(isPlayer(objItem))
	{
		//LOG("space", "Player");
		if(dot.hasDotId(objItem, "plasma_conduit"))
		{
			//LOG("space", "Player WITH DOT!@!@");	
			string_id strSpam = new string_id("space/space_interaction", "plasma_leak_end");
			sendSystemMessage(objItem, strSpam);
			dot.removeDotEffect(objItem, "plasma_conduit", true);
			
		}
		

	
	
	}
 	return SCRIPT_CONTINUE;
}



