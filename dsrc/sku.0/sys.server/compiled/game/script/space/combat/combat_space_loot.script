include library.space_combat;
include library.space_utils;
include library.space_content;
include library.space_transition;
include library.utils;


// CONSTANTS
const string_id SID_NO_PERMISSION_OPEN		 = new string_id("space/space_loot", "no_permission_open");

// YES IT'S LOOT!


// PILES AND PILES AND PILES OF LOOT

/// LOOT SO RICH IT VOTES REPUBLICAN!

// LOOT FOR ALL. LOOT SO COMMON THAT YOU WONT WONDER IF ITS A BUG WHEN YOU GET  LOOT.. YOU'LL WONDER IF IT'S A BUG WHEN YOU DONT! GET LOOT.




/// LOOOOOOOOOOOOOOOOOOOOOOOOOOT!



// stfu

// No you shutup

trigger OnAttach()
{
	setOwner(self, null);
	setObjVar(self, "intNoDump", 1);

	obj_id[] objContents = getContents(self);
	if(objContents==null)
	{
		destroyObject(self);
	
	}
	if(objContents.length==0)
	{
		destroyObject(self);
	}
	messageTo(self, "destroySelf", null, 300, false);
	return SCRIPT_CONTINUE;
}



// we don't do much here, we just delete ourself after 5 minutes

// i said stfu
// Nope.. you STFU! N00B!

messageHandler destroySelf()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;
}

trigger OnAboutToLoseItem(obj_id objDestination, obj_id objPlayer, obj_id objItem)
{
	if(!isIdValid(objPlayer))
	{
		// script
		return SCRIPT_CONTINUE;
	}
	obj_id[] objLooters = getObjIdArrayObjVar(self, "objLooters");
	int intIndex = utils.getElementPositionInArray(objLooters, space_transition.getContainingShip(objPlayer));
	LOG("space", "element is "+intIndex);
	if(intIndex<0)
	{
		queueCommand(objPlayer, ##"closeContainer", null, "", COMMAND_PRIORITY_IMMEDIATE);
		sendSystemMessage(self, SID_NO_PERMISSION_OPEN);
		return SCRIPT_OVERRIDE;
	}
	return SCRIPT_CONTINUE;

}
trigger OnLostItem(obj_id objDestination, obj_id objPlayer , obj_id objItem)
{	
	LOG("space", "I lost an item1");
	
	if(!isIdValid(objPlayer))
	{
		// script
		return SCRIPT_CONTINUE;
	}
	obj_id[] objContents = getContents(self);
	if(objContents==null)
	{
		queueCommand(objPlayer, ##"closeContainer", null, "", COMMAND_PRIORITY_IMMEDIATE);
		destroyObject(self);
		return SCRIPT_CONTINUE;

	}
	LOG("space", "Lost item, contents length is "+objContents.length);
	if(objContents.length==0)
	{

		queueCommand(objPlayer, ##"closeContainer", null, "", COMMAND_PRIORITY_IMMEDIATE);
		destroyObject(self);
		return SCRIPT_CONTINUE;
	}
 	return SCRIPT_CONTINUE;
}

messageHandler recheckContents()
{
	// recheck how many items i have. this is used for credit chips. We delete them before they finish executing the onLostItem trigger
	obj_id[] objContents = getContents(self);
	if(objContents==null)
	{
		destroyObject(self);
		return SCRIPT_CONTINUE;

	}
	LOG("space", "Lost item, contents 2 length is "+objContents.length);
	if(objContents.length==0)
	{

		
		destroyObject(self);		
		return SCRIPT_CONTINUE;
	}
	return SCRIPT_CONTINUE;
	


}
// ah, that's better