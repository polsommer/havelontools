include library.utils;
include library.create;
include library.space_utils;
include library.space_crafting;
include library.space_combat;



// do buildout of interior
// this script will manage all of our other crap
// security codes and teh like.



trigger OnAttach()
{
	// set up the interior cells
	// WHAT CELLS DO I CONTROL??!?@?!?@!?
	
	string strCellToLock = getStringObjVar(self, "strCellToLock");
	if(strCellToLock==null)
	{
		LOG("space", "no cell to lock?!@?!?@");
		return SCRIPT_CONTINUE; // I DO NOTHING!@	
	}
	obj_id objShip = getTopMostContainer(self);
	if(!isIdValid(objShip))
	{
		LOG("space", "Terminal not in ship");
		return SCRIPT_CONTINUE;
	}	
	permissionsMakePrivate(getCellId(objShip, strCellToLock));
	LOG("space", "made "+strCellToLock+" private");
	return SCRIPT_CONTINUE;

}
trigger OnDestroy()
{
	string strCellToLock = getStringObjVar(self, "strCellToLock");
	if(strCellToLock==null)
	{
		LOG("space", "no cell to lock?!@?!?@");
		return SCRIPT_CONTINUE; // I DO NOTHING!@	
	}
	obj_id objShip = getTopMostContainer(self);
	if(!isIdValid(objShip))
	{
		LOG("space", "Terminal not in ship");
		return SCRIPT_CONTINUE;
	}
	
	permissionsMakePublic(getCellId(objShip, strCellToLock));
	LOG("space", "made "+strCellToLock+" public");
	return SCRIPT_CONTINUE;
}



trigger OnInitialize()
{
	if ( hasObjVar( self, "lairDestroyed" ) )
		messageTo( self, "destroyDisabledLair", null, .5f, false );

	attachScript( self, "systems.npc_lair.lair_interactivity" );

	return SCRIPT_CONTINUE;
}

trigger OnObjectDisabled (obj_id killer)
{
	location death = getLocation( self );
	playClientEffectObj(killer, "clienteffect/combat_explosion_lair_large.cef", self, "");
	playClientEffectLoc(killer, "clienteffect/combat_explosion_lair_large.cef", death, 0);
	destroyObject(self);
	return SCRIPT_CONTINUE;

}

trigger OnObjectDamaged(obj_id objAttacker, obj_id objWeapon, int intDamage)
{

	return SCRIPT_CONTINUE;
}

