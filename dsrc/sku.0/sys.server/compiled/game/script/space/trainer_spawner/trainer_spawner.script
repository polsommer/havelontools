include library.utils;
include library.create;
include library.factions;

trigger OnInitialize()
{
	if ( utils.hasScriptVar( self, "msgTimeStamp" ) )
		return SCRIPT_CONTINUE;//don't do anything, you've already initialized

	messageTo( self, "handleStartSpawning", null, 30, false );
	return SCRIPT_CONTINUE;
}

messageHandler handleStartSpawning()
{
	string datatable = getStringObjVar( self, "tableName");
	if ( datatable == null || datatable == "" )
	{
		debugServerConsoleMsg( self, "GODDAMMIT:  tableName is missing from " + getName(self) + " so it doesn't know what to spawn." );
		return SCRIPT_CONTINUE;
	}

	int timeStamp = getGameTime();
	utils.setScriptVar( self, "msgTimeStamp", timeStamp );
	utils.setScriptVar( self, "indexNum", 0 );

	dictionary parms = new dictionary();
	parms.put( "msgTimeStamp", timeStamp );
	messageTo( self, "handleSpawnNext", parms, 5, false );

	return SCRIPT_CONTINUE;
}

messageHandler handleSpawnNext()
{
	int timeStamp = utils.getIntScriptVar( self, "msgTimeStamp" );
	int msgTimeStamp = params.getInt( "msgTimeStamp" );
	if ( msgTimeStamp != timeStamp )
		return SCRIPT_CONTINUE;//ignore this message, it is a dupe


	int indexNum = utils.getIntScriptVar( self, "indexNum" );
	string tableName = "datatables/space_trainer_spawner/" + getStringObjVar( self, "tableName") + ".iff";
	int maxIndex = dataTableGetNumRows( tableName );
	dictionary npcInfo = dataTableGetRow(tableName, indexNum);

	location spawnLocation = getLocation( self );
	spawnLocation.cell = getCellId( self, npcInfo.getString( "cellName" ) );
	spawnLocation.x = npcInfo.getFloat( "x" );
	spawnLocation.y = npcInfo.getFloat( "y" );
	spawnLocation.z = npcInfo.getFloat( "z" );

	obj_id newNpc = create.staticObject( "object/mobile/" + npcInfo.getString( "templateName" ), spawnLocation );
	setYaw( newNpc, npcInfo.getFloat( "yaw" ) );
	string factionName = npcInfo.getString( "faction" );
	factions.setFaction( newNpc, factionName );//null checking, etc is handled in here

	string scriptName = npcInfo.getString( "convoScript" );
	if ( scriptName != null && scriptName != "" )
		attachScript( newNpc, "conversation." + scriptName );

	string indexName = npcInfo.getString( "indexName" );
	if ( indexName != null && indexName != "" )
		utils.setScriptVar( self, "space_spawn." + indexName, newNpc );	//store all spawned NPC's obj_ids as "space_spawn.<npcName>"
																	 	// so you can use utils.getStringScriptVar( building, "space_spawn.<npcName>" )
																		// to get the obj_id of any spawned npc.

	string[] npcNameFile = split( npcInfo.getString("npcName") ,':' );
	if ( npcNameFile != null && npcNameFile.length == 2 )
	{
		string_id nameId = new string_id( npcNameFile[0], npcNameFile[1] );
		setName( newNpc, "" );
		setName( newNpc, nameId );
	}

	string animMood = npcInfo.getString( "animMood" );
	if ( animMood != null && animMood != "" )
		setAnimationMood( newNpc, animMood );

	//if there are more to spawn, increment and recurse
	indexNum++;

	if ( indexNum < maxIndex )
	{
		utils.setScriptVar( self, "indexNum", indexNum );
		messageTo( self, "handleSpawnNext", params, 5, false );
	}

	return SCRIPT_CONTINUE;
}
