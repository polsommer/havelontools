include library.space_crafting;
include library.utils;

/***** LOGGING CONSTANTS ****************************************/
const string LOGGING_CATEGORY				= "vwing";
const boolean LOGGING_ON				= false;
/***** CONSTANTS ***********************************************/

const string_id MNU_CREATE_VEHICLE 			= new string_id("sui", "create_vehicle");
const string_id SID_ALREADY_HAVE_VEHICLE		= new string_id("sui", "have_ship");

const string SHIP_PCD					= "vwing";
const float SHIP_HP					= 3000f;
const float SHIP_CURRENT_HP				= 3000f;
const float SHIP_MASS					= 100000f;


trigger OnGetAttributes(obj_id player, string[] names, string[] attribs)
{
	int idx = utils.getValidAttributeIndex(names);
	if (idx == -1)
		return SCRIPT_CONTINUE;

	//shows all the required certs for each pilot faction
	names[idx] = "reb_pilot_cert_required";
	attribs[idx] = utils.packStringId(new string_id("skl_n", "pilot_rebel_navy_starships_02"));
	idx++;
	names[idx] = "imp_pilot_cert_required";
	attribs[idx] = utils.packStringId(new string_id("skl_n", "pilot_imperial_navy_starships_02"));
	idx++;
	names[idx] = "neu_pilot_cert_required";
	attribs[idx] = utils.packStringId(new string_id("skl_n", "pilot_neutral_starships_02"));
	idx++;
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	blog("tcg_vwing_deed.OnObjectMenuRequest: init");
	if(!utils.isNestedWithin(self, player))
		return SCRIPT_CONTINUE;

	int mnuColor = mi.addRootMenu(menu_info_types.SERVER_MENU1, MNU_CREATE_VEHICLE);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	blog("tcg_vwing_deed.OnObjectMenuSelect: init");

	if(!utils.isNestedWithin(self, player))
		return SCRIPT_CONTINUE;

	if(item != menu_info_types.SERVER_MENU1)
		return SCRIPT_CONTINUE;
	
	
	blog("tcg_vwing_deed.OnObjectMenuSelect: is SERVER_MENU1");
	
	obj_id newShip = space_crafting.createChassisFromDeed(player, self, SHIP_HP, SHIP_CURRENT_HP, SHIP_MASS, SHIP_PCD);
	if(!isValidId(newShip) || !exists(newShip))
	{
		CustomerServiceLog("ship_deed", "PLAYER: "+ player + "(" + getPlayerName(player) + ") attempted and FAILED to create a ship from DEED:" + self + " which provided the PCD: " + SHIP_PCD + " MASS: " + SHIP_MASS + " MAX CHASSIS HP: "+SHIP_HP+ " and CURRENT CHASSIS HP: "+SHIP_CURRENT_HP);	
		blog("tcg_vwing_deed.OnObjectMenuSelect: SHIP IS INVALID. ABORTING");
		return SCRIPT_CONTINUE;
	}
		
	blog("tcg_vwing_deed.OnObjectMenuSelect: SHIP CREATION SUCCESS");
	CustomerServiceLog("ship_deed", "PLAYER: "+ player + "(" + getPlayerName(player) + ") created SHIP: "+newShip+" from DEED:" + self + " which provided the PCD: " + SHIP_PCD + " MASS: " + SHIP_MASS + " MAX CHASSIS HP: "+SHIP_HP+ " and CURRENT CHASSIS HP: "+SHIP_CURRENT_HP);

	return SCRIPT_CONTINUE;
}

boolean blog(string msg)
{
	if(LOGGING_ON)
		LOG(LOGGING_CATEGORY, msg);
	return true;
}