include library.ai_lib;
include library.buff;
include library.chat;
include library.group;
include library.prose;
include library.sui;
include library.utils;
include npc.converse.junk_dealer;

// Message myself to clean up in 5 minutes (300 seconds)
trigger OnAttach()
{
	messageTo(self, "timeUp", null, 300, true);
	messageTo(self, "handleGreeting", null, 2.0f, false);

	return SCRIPT_CONTINUE;
}

void buffParty(obj_id self, obj_id player)
{
	if(!isIdValid(player))
	{
		return;
	}

	string buffName = "sm_junk_dealer_1";

	int precisionBonus = (int)getSkillStatisticModifier(player, "expertise_buff_under_the_counter");
	int damageDecrease = (int)getSkillStatisticModifier(player, "expertise_buff_best_deal_ever");

	if(damageDecrease >= 6)
		buffName = "sm_junk_dealer_5";
	else if(damageDecrease >= 3)
		buffName = "sm_junk_dealer_4";
	else if(precisionBonus >= 50)
		buffName = "sm_junk_dealer_3";
	else if(precisionBonus >= 25)
		buffName = "sm_junk_dealer_2";
	else 
		buffName = "sm_junk_dealer_1";

	// Collect party members and set them on the Jedi casting this buff
	if(group.isGrouped(player))
	{
		Vector party = group.getPCMembersInRange(player, 32f);
		
		if(party != null)
		{
			for(int i = 0; i < party.size(); i++)
			{
				obj_id who = (obj_id)party.elementAt(i);

				buff.applyBuff(who, buffName);
			}
		}
	}
	else
	{
		buff.applyBuff(player, buffName);
	}
}

void totalProfits(obj_id self, obj_id player)
{
	int totalProfits = utils.getIntScriptVar(self, "totalProfits");
	
	if(totalProfits > 0)
	{
		prose_package pp = new prose_package();
		pp = prose.setStringId(pp, new string_id("spam", "junk_dealer_total_profits"));
		pp = prose.setDI(pp, totalProfits);
		sendSystemMessageProse(player, pp);
	}
}

messageHandler handleGreeting()
{
	obj_id master = getMaster(self);
	
	setMaster(self, null);
	
	utils.setScriptVar(self, "smugglerMaster", master);

	if(isIdValid(master))
	{
		string name = getFirstName(master);

		int phraseId = rand(1, 6);
		
		string greeting = "junk_dealer_greeting_" + phraseId;

		prose_package pp = new prose_package();
		pp = prose.setStringId(pp, new string_id("spam", greeting));
		pp = prose.setTU(pp, name);

		chat.chat(self, master, chat.CHAT_SAY, null, chat.ChatFlag_targetGroupOnly, pp);
	}
	else
	{
		destroyObject(self);
	}

	return SCRIPT_CONTINUE;
}

messageHandler timeUp()
{
	obj_id player = utils.getObjIdScriptVar(self, "smugglerMaster");

	if(isIdValid(player))
	{
		buffParty(self, player);
	}

	utils.setScriptVar(self, "dismissed", 1);

	messageTo(self, "handleRunAway", null, 1, false);

	totalProfits(self, player);

	return SCRIPT_CONTINUE;
}

messageHandler dismissDealer()
{
	obj_id player = params.getObjId("player");
	obj_id master = utils.getObjIdScriptVar(self, "smugglerMaster");

	// Only the Smuggler owner can dismiss the Junk Dealer
	if(isIdValid(player) && isIdValid(master) && (master != player))
	{
		return SCRIPT_CONTINUE;
	}

	buffParty(self, player);

	utils.setScriptVar(self, "dismissed", 1);

	messageTo(self, "handleRunAway", null, 1, false);

	totalProfits(self, player);

	return SCRIPT_CONTINUE;
}

messageHandler cleanUp()
{
	destroyObject(self);

	return SCRIPT_CONTINUE;
}


messageHandler handleRunAway()
{
	if(hasScript(self, "conversation.junk_dealer_smuggler"))
	{
		detachScript(self, "conversation.junk_dealer_smuggler");
	}
	
	if(hasScript(self, "npc.converse.junk_dealer"))
	{
		detachScript(self, "npc.converse.junk_dealer");
	}

	if(isDead(self))
	{
		messageTo(self, "cleanUp", null, 5.0f, false);
		return SCRIPT_CONTINUE;
	}

	if(utils.hasScriptVar(self, "runningaway"))
		return SCRIPT_CONTINUE;

	obj_id master = utils.getObjIdScriptVar(self, "smugglerMaster");

	if(isIdValid(master))
		ai_lib.pathAwayFrom(self, master);

	utils.setScriptVar(self, "runningaway", 1);

	messageTo(self, "cleanUp", null, 5.0f, false);

	return SCRIPT_CONTINUE;
}