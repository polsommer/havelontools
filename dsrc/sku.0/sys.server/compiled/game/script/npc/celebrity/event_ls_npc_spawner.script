include library.create;
include library.ai_lib;

trigger OnInitialize()
{
	if(!hasObjVar(self, "event.lost_squadron.num_rewards") )
	{
		setObjVar(self, "event.lost_squadron.num_rewards", 0);
	}

	string setting = getConfigSetting("EventTeam", "lostSquadron");

	if(setting == null || setting == "")
		return SCRIPT_CONTINUE;

	if (setting == "true" || setting == "1")
	{
		string spawn = getStringObjVar (self, "spawns");
		obj_id celeb = create.object (spawn, getLocation(self));
		setObjVar(self, "celeb", celeb);
		setObjVar(celeb, "mom", self); // Added for communication between NPC/Spawner

		if(!isIdValid(celeb) )
			return SCRIPT_CONTINUE;

		setInvulnerable(celeb, true);
		ai_lib.setDefaultCalmBehavior( celeb, ai_lib.BEHAVIOR_SENTINEL );
		setCondition(celeb, CONDITION_INTERESTING);

		if (hasObjVar (self, "quest_script"))
		{
			string script = getStringObjVar (self, "quest_script");
			attachScript (celeb, script);
		}
		if (hasObjVar (self, "quest_table"))
		{
			string table = getStringObjVar (self, "quest_table");
			setObjVar (celeb, "quest_table", table);
		}	
	
		if (hasObjVar (self, "npc_name"))
		{
			string name = getStringObjVar (self, "npc_name");
			
			if (name != null)
			{
				if (name != "")
				{
					setName (celeb, name);
				}
			}			
		}		
	}
	else
		return SCRIPT_OVERRIDE;
		
	return SCRIPT_CONTINUE;
}

messageHandler rewardGiven()
{
	int numRewards = getIntObjVar(self, "event.lost_squadron.num_rewards");
	numRewards++;
	setObjVar(self, "event.lost_squadron.num_rewards", numRewards);
	string reward = params.getString("reward");
	obj_id player = params.getObjId("player");
	string playerName = getName(player);
	int playerGuildId = getGuildId(player);
	string guildName = "NONE";
	
	if(playerGuildId != 0)
	{
		guildName = guildGetName(playerGuildId);
	}

	CustomerServiceLog("EventPerk", "[Lost Squadron Event] WINNER: Rewarding player [%TU] with "+reward+". Member of PA ("+guildName+").", player);
	
	return SCRIPT_CONTINUE;
}