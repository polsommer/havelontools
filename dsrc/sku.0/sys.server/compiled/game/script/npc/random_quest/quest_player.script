include library.locations;
include library.quests;
include library.create;

trigger OnAttach ()
{
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 1, "overall_objvar");
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	string type = dataTableGetString (datatable, questNum, "quest_type");
	string convo = dataTableGetString (datatable, questNum, "convo");
	string target = dataTableGetString (datatable, questNum, "npc_type");
	string display = type + " for a " + questID;
	string entry = "npc_1_"+questNum;
	
	location questLoc = getLocationObjVar (self, questID + ".questLoc");
	obj_id waypoint = quests.addThemeParkWaypoint( self, questID, "quest", questLoc, 15, display, convo, entry);
	if (questID != null && questID != "")
	{
		setObjVar (self, questID + ".waypoint", waypoint);
		addLocationTarget ("spawnGuy", questLoc, 100);
	}		
	return SCRIPT_CONTINUE;
}	

trigger OnArrivedAtLocation( string name )
{
	string datatable = getStringObjVar (self, "quest_table");
		
	string gatingString = dataTableGetString (datatable, 1, "overall_objar");
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	
	if (name == "quest")
	{
		obj_id waypoint = getObjIdObjVar (self, questID + ".waypoint");
		if (waypoint != null)
		{
			destroyWaypointInDatapad(waypoint, self);
		}	

		if (questID != null && questID != "")
		{			
			setObjVar (self, questID + ".arrived", 1);
		}			
		quests.clearQuestLocationTarget (self, questID, name);
		obj_id vip = getObjIdObjVar (self, questID + ".vip");
		messageTo (vip, "saySomething", null, 2, true);
	}
	
	if (name == "spawnGuy")
	{
		removeLocationTarget(name);
		location spawn = getLocationObjVar (self, questID + ".questLoc");
		string npcToSpawn = dataTableGetString (datatable, questNum, "npc_type");
		if (npcToSpawn == null)
		{
			debugSpeakMsg (self, "Can't find anyone to spawn");
			return SCRIPT_CONTINUE;
		}			
		string npcName = dataTableGetString (datatable, questNum, "npc_name");
		string npcScript = dataTableGetString (datatable, questNum, "npc_script");
		obj_id npc = create.object (npcToSpawn, spawn);
		attachScript (npc, npcScript);
		if (questID != null && questID != "")
		{
			setObjVar (npc, "player", self);
			setObjVar (self, questID + ".vip", npc);
			setObjVar (npc, "quest_table", datatable);
			setObjVar (npc, "questNum", questNum);
			attachScript (npc, npcScript);
		}			
		if (npcName != null && npcName != "")
		{
			setName (npc, npcName);
		}
	}
	
	if (name == "home")
	{
		obj_id waypoint = getObjIdObjVar (self, questID + ".waypoint");
		if (waypoint != null)
		{
			destroyWaypointInDatapad(waypoint, self);
		}	
		quests.clearQuestLocationTarget (self, questID, name);	
	}		
	return SCRIPT_CONTINUE;
}

messageHandler finishRandomQuest()
{
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 1, "overall_objar");
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 1, "temp_objvar");
	int questNum = getIntObjVar (self, questID + ".questNum");
	string type = dataTableGetString (datatable, questNum, "quest_type");
	string convo = dataTableGetString (datatable, questNum, "convo");
	
	location home = getLocationObjVar (self, questID + ".home");
	if (questID != null && questID != "")
	{
		setObjVar (self, questID + ".done", 1);
		string display = "Return to " + type;
		string entry = "return";
		obj_id waypoint = quests.addThemeParkWaypoint( self, questID, "home", home, 20, display, convo, entry);
		setObjVar (self, questID + ".waypointhome", waypoint);
	}		
	return SCRIPT_CONTINUE;
}	

messageHandler removeQuestInfo()
{
	int questNum = getIntObjVar (self, "questNum");
	string datatable = getStringObjVar (self, "quest_table");
	string questID = dataTableGetString (datatable, questNum, "temp_objvar");
	string gatingString = dataTableGetString (datatable, questNum, "overall_objar");
	string selfScript = dataTableGetString (datatable, questNum, "player_script");
	string type = dataTableGetString (datatable, questNum, "quest_type");
	
	if (hasObjVar (self, questID + ".arrived"))
	{
		return SCRIPT_CONTINUE;
	}
	else
	{
		if (type == "rescue")
		{
			obj_id vip = getObjIdObjVar (self, questID + ".vip");
			messageTo (vip, "stopFollowing", null, 2, true);
		}		

		removeObjVar (self, questID);
		removeObjVar (self, "quest_table");
		removeObjVar (self, "questNum");
		removeObjVar (self, "boss");

		if (hasScript (self, selfScript))
		{
			detachScript (self, selfScript);
		}		
		return SCRIPT_CONTINUE;
	}		
}

//void spawnExtras()