include library.create;
include library.ai_lib;

trigger OnInitialize()
{
	//createStaticMissionNpc(self);
	return SCRIPT_CONTINUE;
}

void createStaticMissionNpc( obj_id self )
{
	string type = getStringObjVar (self, "type");
	if (type == null || type == "")
	{
		type = getRandomType();
	}		
	
	type = determineSpawnType(type, self);
	setObjVar (self, "type", type);
	debugSpeakMsg (self, "Type is " + type);
	location here = getLocation (self);
	obj_id npc = create.object (type, here);
	string questScript = "npc.random_quest.quest_convo";
	attachScript (npc, questScript);
	setObjVar (npc, "quest_table", type);
	return;
}

string getRandomType ()
{
	string type = "businessman";
	int randType = rand(1,4);
	switch (randType)
	{
		case 1:
			type = "businessman";
			break;
		case 2: 
			type = "criminal";
			break;
		case 3:
			type = "noble";
			break;
		case 4:
			type = "scientist";
			break;
	}
	return type;
}	

string determineSpawnType(string type, obj_id self)
{
	string text = getTemplateName(self);

	int businessCheck = text.indexOf("businessman");
	int crimeCheck = text.indexOf("businessman");		
	int nobleCheck = text.indexOf("businessman");
	int scienceCheck = text.indexOf("businessman");		

	if (businessCheck > -1)
	{
		type = "businessman";
		return type;
	}
	
	if (crimeCheck > -1)
	{
		type = "criminal";
		return type;
	}
	
	if (nobleCheck > -1)
	{
		type = "noble";
		return type;
	}

	if (scienceCheck > -1)
	{
		type = "scientist";
		return type;
	}

	return type;
}	