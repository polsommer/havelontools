include library.create;
include library.utils;

trigger OnInitialize ()
{
	dictionary params = new dictionary ();
	params.put ("stuff", self);
	messageTo (self, "spawnThings", params, 20, true);
	return SCRIPT_CONTINUE;
}

void spawnEveryone(obj_id self)
{
	//spawnEntertainer(self);
	//spawnDancer(self);
	//spawnMusician(self);
	//spawnImageDesigner(self);
	spawnMusicMission(self);
	spawnDanceMission(self);
	
	spawnStorytellerVendor(self);

	if(utils.checkConfigFlag("Quest", "CrowdPleaser")) {

		spawnTheaterManager(self);
		//spawnChoreographer(self);
	}

	setObjVar(self,"trainer", 1);
}

void spawnStorytellerVendor(obj_id self)
{
	obj_id entrance = getCellId (self, "entrance");
	location storytellerVendorLoc = new location (6.6f, 0.6f, -3.5f, "tatooine", entrance);
	obj_id storytellerVendor = create.staticObject ("storyteller_vendor", storytellerVendorLoc);
	setYaw(storytellerVendor, -179);
	return;
}

void spawnDanceMission(obj_id self)
{
	obj_id sideStage = getCellId (self, "backstage");
	location danceMissionLoc = new location (19.26f, 2.13f, 56.13f, "tatooine", sideStage);
	int danceYaw = -94;
	obj_id danceMission = create.object ("noble", danceMissionLoc);
	string name = getName (danceMission);
	create.addDestroyMessage (danceMission, "danceMissionDied", 10f, self);
	string[] strTest = new string[1];
	strTest[0] = "mission.objDancerMission";
	setObjVar(danceMission, "mission.strMissionTypes",strTest);			// Suppress linting - We know that this array will
	setObjVar(danceMission, "mission.intMinDifficulty", 6);				// always be at least one element long
	setObjVar(danceMission, "mission.intMaxDifficulty", 20);
	attachScript(danceMission, "npc.converse.npc_convo");
	setCreatureStatic (danceMission, true);
	setInvulnerable (danceMission, true);
	setYaw(danceMission, danceYaw);
	return;
}

void spawnMusicMission(obj_id self)
{
	obj_id sideStage = getCellId (self, "side_backstage");
	location musicMissionLoc = new location (28.93f, 2.13f, 58.19f, "tatooine", sideStage);
	int musicYaw = -138;
	obj_id musicMission = create.object ("noble", musicMissionLoc);
	string name = getName (musicMission);
	create.addDestroyMessage (musicMission, "musicMissionDied", 10f, self);
	string[] strTest = new string[1];
	strTest[0] = "mission.objMusicianMission";
	setObjVar(musicMission, "mission.strMissionTypes",strTest);			// Suppress linting - We know that this array will
	setObjVar(musicMission, "mission.intMinDifficulty", 6);				// always be at least one element long
	setObjVar(musicMission, "mission.intMaxDifficulty", 20);
	attachScript(musicMission, "npc.converse.npc_convo");
	setCreatureStatic (musicMission, true);
	setInvulnerable (musicMission, true);
	setYaw(musicMission, musicYaw);
	return;
}

void spawnEntertainer(obj_id self)
{
	obj_id greenroom = getCellId (self, "backstage");
	location entertainerloc = new location (26.99f, 2.13f, 75.21f, "tatooine", greenroom);
	obj_id entertainer = create.object ("trainer_entertainer", entertainerloc);
	string name = getName (entertainer);
	create.addDestroyMessage (entertainer, "entertainerDied", 10f, self);
	setCreatureStatic (entertainer, true);
	setInvulnerable(entertainer, true);
	return;
}

void spawnDancer(obj_id self)
{
	if(utils.checkConfigFlag("ScriptFlags","noEliteTrainers"))
	{
		return;
	}

	obj_id greenroom = getCellId (self, "backstage");
	location dancerloc = new location (18.78f, 2.13f, 54.98f, "tatooine", greenroom);
	obj_id dancer = create.object ("trainer_dancer", dancerloc);
	create.addDestroyMessage (dancer, "dancerDied", 10f, self);
	string name = getName (dancer);
	setCreatureStatic (dancer, true);
	setInvulnerable(dancer, true);
	return;
}

void spawnMusician(obj_id self)
{
	if(utils.checkConfigFlag("ScriptFlags","noEliteTrainers"))
	{
		return;
	}

	obj_id greenroom = getCellId (self, "side_backstage");
	location musicianloc = new location (28.89f, 2.13f, 55.83f, "tatooine", greenroom);
	obj_id musician = create.object ("trainer_musician", musicianloc);
	create.addDestroyMessage (musician, "musicianDied", 10f, self);
	string name = getName (musician);
	setCreatureStatic (musician, true);
	setInvulnerable(musician, true);
	return;
}

void spawnImageDesigner(obj_id self)
{
	if(utils.checkConfigFlag("ScriptFlags","noEliteTrainers"))
	{
		return;
	}

	obj_id greenroom = getCellId (self, "greenroom");
	location imagedesignerloc = new location (-22, 2, 74, "tatooine", greenroom);
	obj_id imagedesigner = create.object ("trainer_imagedesigner", imagedesignerloc);
	create.addDestroyMessage (imagedesigner, "imagedesignerDied", 10f, self);
	string name = getName (imagedesigner);
	setCreatureStatic (imagedesigner, true);
	setInvulnerable(imagedesigner, true);
	return;
}

void spawnTheaterManager(obj_id self)
{
	obj_id greenroom = getCellId (self, "backstage");
	location managerloc = new location (21.99f, 2.13f, 64.05f, "tatooine", greenroom);
	obj_id manager = create.object ("quest_crowd_pleaser_theater_manager", managerloc);
	create.addDestroyMessage (manager, "managerDied", 10f, self);
	string name = getName (manager);
	setCreatureStatic (manager, true);
	setInvulnerable(manager, true);
	setYaw(manager, 4);
	return;
}

void spawnChoreographer(obj_id self)
{
	if(utils.checkConfigFlag("ScriptFlags","noEliteTrainers"))
	{
		return;
	}

	obj_id greenroom = getCellId (self, "backstage");
	location managerloc = new location (28.65f, 2.13f, 74.16f, "tatooine", greenroom);
	obj_id manager = create.object ("trainer_dancer", managerloc);
	create.addDestroyMessage (manager, "choreographerDied", 10f, self);
	detachScript(manager, "npc.skillteacher.skillteacher");
	attachScript(manager, "npc.skillteacher.dance_advancement_trainer");
	string name = getName (manager);
	setCreatureStatic (manager, true);
	setInvulnerable(manager, true);
	setYaw(manager, -145);
	return;
}

messageHandler spawnThings ()
{
	obj_id stuffs = params.getObjId ("stuff");
	spawnEveryone(stuffs);
	return SCRIPT_CONTINUE;
}

messageHandler entertainerDied()
{
	spawnEntertainer(self);
	return SCRIPT_CONTINUE;
}

messageHandler danceDied()
{
	spawnDancer(self);
	return SCRIPT_CONTINUE;
}

messageHandler musicianDied()
{
	spawnMusician(self);
	return SCRIPT_CONTINUE;
}

messageHandler imagedesignerDied()
{
	spawnImageDesigner(self);
	return SCRIPT_CONTINUE;
}

messageHandler managerDied()
{
	spawnTheaterManager(self);
	return SCRIPT_CONTINUE;
}

messageHandler choreographerDied()
{
	spawnChoreographer(self);
	return SCRIPT_CONTINUE;
}