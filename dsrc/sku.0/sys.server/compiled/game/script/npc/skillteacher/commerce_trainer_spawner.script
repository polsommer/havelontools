include library.create;
include library.utils;

trigger OnInitialize ()
{
	dictionary params = new dictionary ();
	params.put ("stuff", self);
	messageTo (self, "spawnThings", params, 20, true);
	return SCRIPT_CONTINUE;
}

void spawnEveryone(obj_id self)
{
	//spawnArtisan(self);
	spawnSurveyMission(self);
	spawnFoodStation(self);
	spawnClothingStation(self);

	if(utils.checkConfigFlag("Quest", "CraftingContract"))
		spawnCraftingContractor(self);
}


void spawnArtisan (obj_id self)
{
	obj_id room = getCellId (self, "meetingd");
	location artisanloc = new location (0.05f, 1.13f, -14.56f, "tatooine", room);
	obj_id artisan = create.object ("trainer_artisan", artisanloc);
	create.addDestroyMessage (artisan, "artisanDied", 10f, self);
	setCreatureStatic (artisan, true);
	setInvulnerable (artisan, true);
	setYaw (artisan, 5);
	return;
}

void spawnSurveyMission(obj_id self)
{
	obj_id room = getCellId (self, "meetingd");
	location surveyloc = new location (3.29f, 1.13f, -9.58f, "tatooine", room);
	obj_id surveyor = create.object ("miner", surveyloc);
	create.addDestroyMessage (surveyor, "surveyorDied", 10f, self);
	string[] strTest = new string[1];
	strTest[0] = "mission.objSurveyMission";
	setObjVar(surveyor, "mission.strMissionTypes",strTest);			// Suppress linting - We know that this array will
	setObjVar(surveyor, "mission.intMinDifficulty", 1);				// always be at least one element long
	setObjVar(surveyor, "mission.intMaxDifficulty", 10);
	setCreatureStatic (surveyor, true);
	setInvulnerable (surveyor, true);
	setYaw (surveyor, -111);
	attachScript(surveyor, "npc.converse.npc_convo");
	return;
}

void spawnFoodStation(obj_id self)
{
	obj_id room = getCellId (self, "meetinge");
	location foodStationLoc = new location (-11.04f, 1.13f, -14.49f, "tatooine", room);
	obj_id foodStation = create.object ("object/tangible/crafting/station/public_food_station.iff", foodStationLoc);
	create.addDestroyMessage (foodStation, "foodStationDied", 10f, self);
	setYaw (foodStation, 0);
	return;
}

void spawnClothingStation(obj_id self)
{
	obj_id room = getCellId (self, "meetingc");
	location clothingStationLoc = new location (11.07f, 1.13f, -14.25f, "tatooine", room);
	obj_id clothingStation = create.object ("object/tangible/crafting/station/public_clothing_station.iff", clothingStationLoc);
	create.addDestroyMessage (clothingStation, "clothingStationDied", 10f, self);
	setYaw (clothingStation, 90);
	return;
}

void spawnCraftingContractor(obj_id self)
{
	obj_id room = getCellId (self, "mainroom");
	location contractorloc = new location (-3.69f, 1.13f, -6.0f, "tatooine", room);
	obj_id contractor = create.object ("crafting_contractor", contractorloc);
	create.addDestroyMessage (contractor, "contractorDied", 10f, self);
	setCreatureStatic (contractor, true);
	setInvulnerable (contractor, true);
	setYaw (contractor, 11);
	return;
}

messageHandler spawnThings ()
{
	obj_id stuffs = params.getObjId ("stuff");
	if (stuffs == null)
	{
		return SCRIPT_CONTINUE;
	}
	spawnEveryone(stuffs);
	return SCRIPT_CONTINUE;
}

messageHandler artisanDied()
{
	spawnArtisan(self);
	return SCRIPT_CONTINUE;
}

messageHandler surveyorDied()
{
	spawnSurveyMission(self);
	return SCRIPT_CONTINUE;
}

messageHandler foodStationDied()
{
	spawnFoodStation(self);
	return SCRIPT_CONTINUE;
}

messageHandler clothingStationDied()
{
	spawnClothingStation(self);
	return SCRIPT_CONTINUE;
}

messageHandler contractorDied()
{
	spawnCraftingContractor(self);
	return SCRIPT_CONTINUE;
}