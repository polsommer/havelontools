include library.locations;
include library.quests;
include library.create;

trigger OnAttach ()
{
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 2, 1);
	string questID = dataTableGetString (datatable, 3, 1);
	int questNum = getIntObjVar (self, questID + ".questNum");
	string target = dataTableGetString (datatable, 11, questNum);

	
	location questLoc = getLocationObjVar (self, questID + ".questLoc");
	quests.addQuestLocationTarget ( self, questID, "quest", questLoc, 15);
	addLocationTarget ("spawnGuy", questLoc, 100);
	return SCRIPT_CONTINUE;
}	

trigger OnArrivedAtLocation( string name )
{

	string datatable = getStringObjVar (self, "quest_table");
		
	string gatingString = dataTableGetString (datatable, 2, 1);
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 3, 1);
	int questNum = getIntObjVar (self, questID + ".questNum");
	
	if (name == "quest")
	{
		quests.clearQuestLocationTarget (self, questID, name);
		obj_id vip = getObjIdObjVar (self, questID + ".vip");
		messageTo (vip, "saySomething", null, 0, true);
	}
	
	if (name == "spawnGuy")
	{
		removeLocationTarget(name);
		location spawn = getLocationObjVar (self, questID + ".questLoc");
		string npcToSpawn = dataTableGetString (datatable, 9, questNum);
		if (npcToSpawn == null)
		{
			debugSpeakMsg (self, "Can't find anyone to spawn");
			return SCRIPT_CONTINUE;
		}			
		string npcName = dataTableGetString (datatable, 11, questNum);
		string npcScript = dataTableGetString (datatable, 10, questNum);
		obj_id npc = create.object (npcToSpawn, spawn);
		attachScript (npc, npcScript);
		setObjVar (npc, "player", self);
		setObjVar (self, questID + ".vip", npc);
		setObjVar (npc, "quest_table", datatable);
		setObjVar (npc, "questNum", questNum);
		attachScript (npc, npcScript);
		if (npcName != null && npcName != "empty")
		{
			setName (npc, npcName);
		}			
	}
	
	if (name == "home")
	{
		quests.clearQuestLocationTarget (self, null, name);
	}		
	return SCRIPT_CONTINUE;
}

messageHandler finishStaticQuest()
{
	string datatable = getStringObjVar (self, "quest_table");
	string gatingString = dataTableGetString (datatable, 2, 1);
	int gating = getIntObjVar (self, gatingString);
	string questID = dataTableGetString (datatable, 3, 1);
	int questNum = getIntObjVar (self, questID + ".questNum");
	location home = getLocationObjVar (self, questID + ".home");
	setObjVar (self, questID + ".done", 1);
	quests.addQuestLocationTarget( self, null, "home", home, 20 );
	return SCRIPT_CONTINUE;
}	

//void spawnExtras()