/**********************************************************************
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        overdue_fines.script
 * Description:  long term fine tracking a faction loss
 * @author       $hgray$
 * @version      $0.1$
 **********************************************************************/


/***** INCLUDES ********************************************************/

include library.utils;
include library.factions;
include library.prose;

/***** CONSTANTS *******************************************************/

const string WARNING_SYS_MSG = "datatables/npc/stormtrooper_attitude/responsetext.iff";
const string PP_FILE_LOC = "stormtrooper_attitude/st_response";

const int ROW_FOR_SYS_WARNING		= 41;
const int ROW_FOR_SYS_WARNING_PASTDUE	= 42;
const int SUBJECT_WARNING_MSG		= 42;

/***** GLOBALS *********************************************************/

int WEEK_IN_SECONDS			= 60 * 60 * 24 * 7;
int DAY_IN_SECONDS			= 60 * 60 * 24;

/***** TRIGGERS ********************************************************/

trigger OnInitialize()
{

	if (isGod(self))
	{
		string delayWeekStr = getConfigSetting("GameServer", "STRespectWeekDelay");
		string delayDayStr = getConfigSetting("GameServer", "STRespectDayDelay");	    
	
		if (delayWeekStr != null && !delayWeekStr.equals(""))
		{
			WEEK_IN_SECONDS = Integer.parseInt(delayWeekStr);
		}

		if (delayDayStr != null && !delayDayStr.equals(""))
		{
			DAY_IN_SECONDS = Integer.parseInt(delayDayStr);
		}
		
	}

	if (hasObjVar(self, "overdue_fine"))
	{
		// Is fine a week old? Remove original ObjVar and Attach week old one.
		if ((getGameTime() - getIntObjVar(self, "overdue_fine") > WEEK_IN_SECONDS))
		{
			
			
			string_id body = new string_id(PP_FILE_LOC, utils.dataTableGetString(WARNING_SYS_MSG, ROW_FOR_SYS_WARNING, 1));
			string_id subject = new string_id(PP_FILE_LOC, utils.dataTableGetString(WARNING_SYS_MSG, SUBJECT_WARNING_MSG, 1));			
			
			utils.sendMail(subject, body, self, "@stormtrooper_attitude/st_response:imperial_collection_email_t");
			
			utils.removeObjVar(self, "overdue_fine");
			utils.setObjVar(self, "week_old_fine", getGameTime());
			
		}
		
	}
	else if (hasObjVar(self, "week_old_fine") && (getGameTime() - getIntObjVar(self, "week_old_fine") > DAY_IN_SECONDS))
	{
				
		string_id body = new string_id(PP_FILE_LOC, utils.dataTableGetString(WARNING_SYS_MSG, ROW_FOR_SYS_WARNING_PASTDUE, 1));
		string_id subject = new string_id(PP_FILE_LOC, utils.dataTableGetString(WARNING_SYS_MSG, SUBJECT_WARNING_MSG, 1));			
			
		utils.sendMail(subject, body, self, "@stormtrooper_attitude/st_response:imperial_collection_email_t");
		
		int fineAmt = utils.getIntObjVar(self, "trooper_fine");		
		int factionLoss = (0 - (fineAmt / 1000));
		
		if (factionLoss > -1)
		{
			factionLoss = -1;
		}
		
		factions.addFactionStanding(self, factions.FACTION_IMPERIAL, factionLoss);
		
		utils.removeObjVar(self, "week_old_fine");
		utils.setObjVar(self, "week_old_fine", getGameTime());		
		
	}
	
	return SCRIPT_CONTINUE;
	
}

/***** MESSAGEHANDLERS *************************************************/


/***** COMMANDHANDLERS *************************************************/


/***** FUNCTIONS *******************************************************/
