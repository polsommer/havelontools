include library.ai_lib;

trigger OnAttach ()
{
	setUpRecruiter(self);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	setUpRecruiter(self);
	return SCRIPT_CONTINUE;
}

void setUpRecruiter(obj_id self)
{
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setCondition (self, CONDITION_CONVERSABLE);

	string faction = getStringObjVar (self, "recruiter");
	setFactionRecruiter (self, faction);
	return;
}

boolean setFactionRecruiter(obj_id npc, string faction)
{
	// Turns any npc into a faction recruiter of the specified faction.
	// Faction must appear exactly as it does in the faction datatable.

	if (npc == null || npc == obj_id.NULL_ID)
	{
		//debugSpeakMsg (npc, "I'm null");
		return false;
	}

	if (faction == null)
	{
		//debugSpeakMsg (npc, "Faction is null");
		return false;
	}

	setObjVar(npc, "faction_recruiter.faction", faction);
	attachScript(npc, "npc.faction_recruiter.faction_recruiter");

	return true;

}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if ( !ai_lib.isAiDead(self ) )
	{
		int mnu = mi.addRootMenu (menu_info_types.CONVERSE_START, null);
		menu_info_data mdata = mi.getMenuItemById(mnu);
		mdata.setServerNotify(false);
	}
	return SCRIPT_CONTINUE;
}

