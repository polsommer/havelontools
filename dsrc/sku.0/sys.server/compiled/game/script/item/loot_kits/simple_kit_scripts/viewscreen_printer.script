include library.utils;

trigger OnInitialize()
{
	messageTo (self, "setUp", null, 2, false);
	return SCRIPT_CONTINUE;
}


messageHandler setUp ()
{
	string[] needs = new string[5];

	needs[0] = "object/tangible/loot/simple_kit/paint_cartridge.iff";
	needs[1] = "object/tangible/loot/simple_kit/paint_disperser.iff";
	needs[2] = "object/tangible/loot/simple_kit/flat_canvas.iff";
	needs[3] = "object/tangible/loot/simple_kit/viewscreen_reader.iff";
	needs[4] = "object/tangible/loot/tool/viewscreen_broken_s2.iff";

	setObjVar (self, "needs", needs);
	setObjVar (self, "overview", needs);
	string painting = pickPaintingToMake();
	setObjVar (self, "reward", painting);
	return SCRIPT_CONTINUE;
}

string pickPaintingToMake ()
{
	string painting = "object/tangible/painting/painting_tree.iff";

	int which = rand (1,3);

	switch (which)
	{
		case 1:
		painting = "object/tangible/painting/painting_cargoport.iff";
		break;

		case 2:
		painting = "object/tangible/painting/painting_skyscraper.iff";
		break;

		case 3:
		painting = "object/tangible/painting/painting_freedom.iff";
		break;

	}

	return painting;
}