include library.factions;
include library.create;
include library.trial;
include library.static_item;
include library.utils;

const int FACTION_NONE = -1;
const int FACTION_REBEL = 0;
const int FACTION_IMPERIAL = 1;

const string_id SID_ALREADY_HAVE	= new string_id("gcw", "comm_already_used");
const string_id SID_WRONG_FACTION	= new string_id("gcw", "comm_wrong_faction");
const string_id SID_TOO_LOW_LEVEL	= new string_id("gcw", "player_too_low");
const string_id SID_INDOORS		= new string_id("gcw", "player_is_indoors");
const string_id SID_NOT_DECLARED	= new string_id("gcw", "sf_restricted");

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	//mi.addRootMenu (menu_info_types.ITEM_USE, SID_USE);
	menu_info_data mid = mi.getMenuItemByType (menu_info_types.ITEM_USE);
	if (mid != null)
	{
		mid.setServerNotify (true);
	}
	return SCRIPT_CONTINUE;

}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(item == menu_info_types.ITEM_USE)
	{
		int faction = FACTION_NONE;

		if (factions.isRebel(player))
		{
			faction = FACTION_REBEL;
			string commlink = getStaticItemName (self);

			if (commlink.equals ("item_pvp_lieutenant_comm_link_imperial_reward_04_01"))
			{
				sendSystemMessage(player, SID_WRONG_FACTION);
				return SCRIPT_CONTINUE;
			}
		}

		else if (factions.isImperial(player))
		{
			faction = FACTION_IMPERIAL;
			string commlink = getStaticItemName (self);

			if (commlink.equals ("item_pvp_lieutenant_comm_link_rebel_reward_04_01"))
			{
				sendSystemMessage(player, SID_WRONG_FACTION);
				return SCRIPT_CONTINUE;
			}
		}
		else if (faction == FACTION_NONE)
		{
			
			return SCRIPT_CONTINUE;
		}
		
		if (!factions.isDeclared(player))
		{
			sendSystemMessage(player, SID_NOT_DECLARED);
			return 	SCRIPT_CONTINUE;
		}

		queueCommand(player, ##"gcw_reward_comlink", player, "", COMMAND_PRIORITY_DEFAULT);
	}

	return SCRIPT_CONTINUE;
}