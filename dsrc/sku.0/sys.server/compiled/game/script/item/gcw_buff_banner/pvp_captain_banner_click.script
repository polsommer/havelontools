include library.factions;
include library.create;
include library.trial;
include library.static_item;
include library.utils;

const int FACTION_NONE = -1;
const int FACTION_REBEL = 0;
const int FACTION_IMPERIAL = 1;

const string REBEL_BANNER = "object/tangible/gcw/pvp_rank_rewards/pvp_rebel_battle_banner.iff";
const string IMPERIAL_BANNER = "object/tangible/gcw/pvp_rank_rewards/pvp_imperial_battle_banner.iff";

const string_id SID_ALREADY_HAVE	= new string_id("gcw", "banner_already_used");
const string_id SID_WRONG_FACTION	= new string_id("gcw", "wrong_faction");

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	//mi.addRootMenu (menu_info_types.ITEM_USE, SID_USE);
	menu_info_data mid = mi.getMenuItemByType (menu_info_types.ITEM_USE);
	if (mid != null)
	{
		mid.setServerNotify (true);
	}

	return SCRIPT_CONTINUE;

}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (utils.hasScriptVar(self, "flagCoolDown"))
	{
		sendSystemMessage(player, SID_ALREADY_HAVE);
		return SCRIPT_CONTINUE;
	}

	if(item == menu_info_types.ITEM_USE)
	{
		int faction = FACTION_NONE;

		if (factions.isRebel(player))
		{
			faction = FACTION_REBEL;
			string banner = getStaticItemName (self);

			if (banner.equals ("item_pvp_captain_battle_banner_imperial_reward_04_01"))
			{
				sendSystemMessage(player, SID_WRONG_FACTION);
				return SCRIPT_CONTINUE;
			}
		}

		else if (factions.isImperial(player))
		{
			faction = FACTION_IMPERIAL;
			string banner = getStaticItemName (self);

			if (banner.equals ("item_pvp_captain_battle_banner_rebel_reward_04_01"))
			{
				sendSystemMessage(player, SID_WRONG_FACTION);
				return SCRIPT_CONTINUE;
			}
		}
		else if (faction == FACTION_NONE)
		{
			return SCRIPT_CONTINUE;
		}

		sendCooldownGroupTimingOnly(player, ##"pvp_battle_banner", 1800f);
		createBannerItem(player, faction);
		utils.setScriptVar(self, "flagCoolDown", 1);
		messageTo(self, "handleRemoveTimer", null, 1800f, false);

	}

	return SCRIPT_CONTINUE;
}

void createBannerItem(obj_id player, int faction)
{
	if (isSpaceScene())
		return;

	obj_id banner = null;
	switch (faction)
	{
		case FACTION_REBEL:
			banner = create.object(REBEL_BANNER, getLocation(player));
			setObjVar(banner, "parent.faction", 0);
			break;
		case FACTION_IMPERIAL:
			banner = create.object(IMPERIAL_BANNER, getLocation(player));
			setObjVar(banner, "parent.faction", 1);
			break;
	}

	if (!isIdValid(banner))
	{
		return;
	}
	attachScript(banner, "item.gcw_buff_banner.banner_buff_manager");
	trial.setParent(player, banner, false);
}

messageHandler handleRemoveTimer()
{
	if (utils.hasScriptVar(self, "flagCoolDown"))
	{
		utils.removeScriptVar(self, "flagCoolDown");
	}
	return SCRIPT_CONTINUE;
}