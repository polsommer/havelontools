include library.create;
include library.utils;
include library.player_structure;
include library.sui;
include library.static_item;

/***** CONSTS **********************************************************/

const string_id NOT_OWNER		= new string_id("spam", "homing_not_owner");
const string_id BEACON_ACTIVE		= new string_id("spam", "homing_activated");
const string_id BEACON_DESTROY		= new string_id("spam", "homing_destroy");
const string_id BEACON_DEACTIVE		= new string_id("spam", "homing_deactivated");

/***** TRIGGERS ********************************************************/

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	return SCRIPT_CONTINUE;
}

trigger OnAboutToBeTransferred (obj_id destContainer, obj_id transferer)
{
	if (!utils.isNestedWithinAPlayer (destContainer))
	{
		location loc = getLocation (transferer);
		obj_id cell = loc.cell;
		obj_id house = getTopMostContainer(destContainer);

		if (isIdValid(cell))
		{
			if(destContainer == cell)
			{
				if(isIdValid(house) && (player_structure.isBuilding(house)))
				{
					if (getOwner (house) == transferer)
					{
						string planet = getCurrentSceneName();
						location houseLoc = getLocation (house);

						setObjVar (transferer, "homingBeacon.planet", planet);
						setObjVar (transferer, "homingBeacon.houseLoc", houseLoc);
						setObjVar (transferer, "homingBeacon.houseId", house);
						sendSystemMessage (transferer, BEACON_ACTIVE);
					}
					else
					{
						sendSystemMessage (transferer, NOT_OWNER);
						return SCRIPT_OVERRIDE;
					}
				}
			}
		}
		else if (hasObjVar (transferer, "homingBeacon"))
		{
			removeObjVar (transferer, "homingBeacon");
			sendSystemMessage (transferer, BEACON_DEACTIVE);
		}
	}
	else if (utils.isNestedWithinAPlayer (destContainer))
	{
		if (hasObjVar (transferer, "homingBeacon"))
		{
			removeObjVar (transferer, "homingBeacon");
			sendSystemMessage (transferer, BEACON_DEACTIVE);
		}
	}
	return SCRIPT_CONTINUE;
}

trigger OnDestroy()
{
	string myTemplate = static_item.getStaticItemName(self);

	obj_id player = utils.getContainingPlayer(self);

	if(myTemplate.equals("item_vet_homing_beacon_03_01"))
	{
		if (isGod(player))
		{
				return SCRIPT_CONTINUE;
		}
		sendSystemMessage(player, BEACON_DESTROY);
		return SCRIPT_OVERRIDE;
	}

 	return SCRIPT_CONTINUE;
}