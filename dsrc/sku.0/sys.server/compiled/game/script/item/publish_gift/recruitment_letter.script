include library.factions;
include library.gcw;

const string_id USE_LETTER         	 	= new string_id ("gcw", "use_pub_gift_recruitment_letter");
const string_id SID_NOT_ALLIGNED		= new string_id ("gcw", "must_be_factionally_alligned");

const int LETTER_POINT_VALUE			= 10000;

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{	
	if (!isAlligned(player))
	{
		sendSystemMessage(player, SID_NOT_ALLIGNED);
		return SCRIPT_CONTINUE;
	}
	if ( isOwner(self, player) )
	{
		int menuOption = mi.addRootMenu ( menu_info_types.SERVER_ITEM_OPTIONS, USE_LETTER);
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.SERVER_ITEM_OPTIONS && isOwner(self, player) && isAlligned(player))
	{	
		gcw.grantUnmodifiedGcwPoints(player, LETTER_POINT_VALUE);
		destroyObject(self);
		CustomerServiceLog("GCW_points_publish_gift", "%TU has acquired "+LETTER_POINT_VALUE+" points.", player);

	}
	return SCRIPT_CONTINUE;
}

boolean isOwner(obj_id self, obj_id player)
{
	return getOwner(self) == player;
}

boolean isAlligned(obj_id player)
{
	string faction = factions.getFaction(player);
	
	if (faction.equals("Rebel") || faction.equals("Imperial"))
		return true;
	else
		return false;
}