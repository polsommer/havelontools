include library.buff;
include library.collection;
include library.utils;

const string ALREADY_SETUP 		= "itemFoodScriptRemoved";
const string ITEM_FOOD_SCRIPT 		= "item.food";
const string OWNER_OID 			= "owner";

trigger OnAttach()
{
	//We only need to run this block once
	if(!hasObjVar(self, ALREADY_SETUP))
	{
		blog("OnAttach - NO OBJVAR FOUND");
		//removes unneeded script that would otherwise compete with this script.
		messageTo(self, "removeItemFoodScript", null, 2, false);
		setObjVar(self, "ALREADY_SETUP", true);
	}
	return SCRIPT_CONTINUE;
}

trigger OnGetAttributes(obj_id player, string[] names, string[] attribs)
{
	int iceCreamCategory = collection.ICE_CREAM_ALL_PLAYERS;
	if(hasObjVar(self, collection.FRYER_BUFF_TYPE))
		iceCreamCategory = utils.getIntObjVar(self, collection.FRYER_BUFF_TYPE);
		
	int idx = utils.getValidAttributeIndex(names);
	if (idx == -1)
		return SCRIPT_CONTINUE;
	
	if(iceCreamCategory != collection.ICE_CREAM_DOMESTICS_ONLY)
	{
		//We don't want to give any info to the player. It is a secret on purpose	
		names[idx] = "proc_name";
		attribs[idx] = "<UNKNOWN>";
		idx++;
	}
	
	names[idx] = "nonspecial_ingredient";
	attribs[idx] = "Cereal Flakes, Exceptional Milk, Exceptional Egg";
	idx++;
	if(hasObjVar(self, "special_ingredient"))
	{
		string specialIngredient = getStringObjVar(self, "special_ingredient");
		string_id templateName = getNameFromTemplate(specialIngredient);
		names[idx] = "special_ingredient";
		attribs[idx] = "@"+templateName;
		idx++;
	}
	return SCRIPT_CONTINUE;
}

messageHandler removeItemFoodScript()
{
	detachScript(self, ITEM_FOOD_SCRIPT);
	return SCRIPT_CONTINUE;
}

//logging function
boolean blog(string message)
{
	//LOG("fryer_log", message);
	return true;
}