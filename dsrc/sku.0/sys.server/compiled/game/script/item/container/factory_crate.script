/**
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        factory_crate.script
 * Description:  script for containers that do not accept items
 * @author       $Author:$
 * @version      $Revision:$
 */

/***** INHERITS ********************************************************/

inherits item.container.remove_only;

/***** INCLUDES ********************************************************/


/***** CONSTANTS *******************************************************/

const string SCRIPT_FACTORY_CRATE                = "item.container.factory_crate";

const string VAR_TO_ATTACH                       = "to_attach";
const string VAR_ITEMS_LEFT                      = "items_left";

/***** TRIGGER *********************************************************/
trigger OnAboutToLoseItem(obj_id destContainer, obj_id transferer, obj_id item)
{
 	//call sui for number of items to extract
 	return SCRIPT_OVERRIDE;
}

/***** MESSAGEHANDLER **************************************************/
messageHandler handleFactoryCrate()
{
 	//extract items from params dictionary
 	
 	//create clone object(s)
	
 	obj_var_list ovl = getObjVarList(self, VAR_TO_ATTACH);
 	if ( ovl != null )
 	{
 	 	for ( int i = 0; i < ovl.getNumItems(); i++ )
 	 	{
 	 	 	obj_var ov = ovl.getObjVar(i);
 	 	 	string ovName = ov.getName();
 	 	 	java.util.StringTokenizer st = new java.util.StringTokenizer (ovName, ".");
 	 	 	st.nextToken(); //skip "to_attach"
 	 	 	string ovPath = st.nextToken();
 	 	 	while ( st.hasMoreTokens() )
 	 	 	{
 	 	 	 	ovPath += "." + st.nextToken();
 	 	 	}
 	 	 	//set the objvar on each of the clone objects
 	 	}
 	}
 
 	int itemsLeft = getIntObjVar(self, VAR_ITEMS_LEFT);
 	//decrement crate objvar for items left
 	setObjVar(self, VAR_ITEMS_LEFT, itemsLeft);
 	
 	return SCRIPT_CONTINUE;
}
