/**
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        base_container.script
 * Description:  base container script
 * @author       $Author:$
 * @version      $Revision:$
 */

/***** INCLUDES ********************************************************/

include library.utils;
include library.permissions;

/***** CONSTANTS *******************************************************/

const string SCRIPT_BASE_CONTAINER				= "item.container.base.base_container";

/***** TRIGGERS ********************************************************/
trigger OnAttach()
{
	switch(getContainerType(self))
	{
		case 0:
			detachScript(self, SCRIPT_BASE_CONTAINER);
			return SCRIPT_OVERRIDE;
			//break;	//not needed if return statement above is active
			
		default:
			break;
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	menu_info_data midOpen = mi.getMenuItemByType(menu_info_types.ITEM_OPEN);
	if ( midOpen != null )
	{
		midOpen.setServerNotify(true);
	}

	menu_info_data midLoot = mi.getMenuItemByType(menu_info_types.LOOT);
	if ( midLoot != null )
	{
		midLoot.setServerNotify(true);
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_OPEN )
	{
		if ( !hasObjVar(self, permissions.VAR_PERMISSION_BASE) )
		{
			switch(getContainerType(self))
			{
				case 0:
					detachScript(self, SCRIPT_BASE_CONTAINER);
					break;

				case 1:
					utils.requestContainerOpen(player, self);
					break;

				default:
					break;
			}
		}
	}
	
	return SCRIPT_CONTINUE;
}

/***** FUNCTIONS *******************************************************/


/***** MESSAGEHANDLERS *************************************************/
