/****** 
* Destroys an item after a time. Default 3600 seconds or a custom time set by value of objvar item.lifespan
******/
include library.utils;

const float LIFESPAN = 3600.0f;

trigger OnAttach()
{
	obj_id npcOwner = utils.getContainingNpcCreature(self);
	
	if (hasScript(npcOwner, "npc.vendor.vendor"))
	{
		detachScript(self, "item.special.temporary_item");
		removeObjVar(self, "item.lifespan");
		return SCRIPT_CONTINUE;
	}

	else
	{
		float lifeSpan = getLifeSpan(self);
		float rightNow = getGameTime();
		setObjVar(self, "item.temporary.time_stamp", rightNow);
		float dieTime = getDieTime(lifeSpan, self);

		if(dieTime < 1)
		{
			dieTime = 1.0f;
		}

		messageTo(self, "cleanUp", null, dieTime, false);
	}

	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	obj_id npcOwner = utils.getContainingNpcCreature(self);
	
	if (hasScript(npcOwner, "npc.vendor.vendor"))
	{
		detachScript(self, "item.special.temporary_item");
		removeObjVar(self, "item.lifespan");
		return SCRIPT_CONTINUE;
	}
	
	else
	{	
		float lifeSpan = getLifeSpan(self);
		float dieTime = getDieTime(lifeSpan, self);

		if(dieTime < 1)
		{
			dieTime = 1.0f;
		}

		messageTo(self, "cleanUp", null, dieTime, false);
	}

	return SCRIPT_CONTINUE;
}

float getLifeSpan(obj_id self)
{
	float lifeSpan = LIFESPAN;

	if(hasObjVar(self, "item.lifespan"))
	{
		lifeSpan = (float)getIntObjVar(self, "item.lifespan");
	}

	return lifeSpan;
}

float getDieTime(float lifeSpan, obj_id tempObject)
{
	float timeStamp = getFloatObjVar(tempObject, "item.temporary.time_stamp");
	float deathStamp = timeStamp + lifeSpan;
	float rightNow = getGameTime();
	float dieTime = deathStamp - rightNow;

	return dieTime;
}

messageHandler cleanUp()
{
	if (self.isBeingDestroyed())
		return SCRIPT_CONTINUE;
	//I am in a vendor
	obj_id containedBy = getContainedBy(self);
	if(isGameObjectTypeOf(containedBy, GOT_misc_container_public))
		return SCRIPT_CONTINUE;
	
	float lifeSpan = LIFESPAN;

	if(hasObjVar(self, "item.lifespan"))
	{
		lifeSpan = (float)getIntObjVar(self, "item.lifespan");
	}

	float dieTime = getDieTime(lifeSpan, self);

	if(dieTime < 1)
	{
		destroyObject(self);
	}
	else
	{
		messageTo(self, "cleanUp", null, dieTime, false);
	}

	return SCRIPT_CONTINUE;
}

trigger OnGetAttributes(obj_id player, string[] names, string[] attribs)
{
	obj_id npcOwner = utils.getContainingNpcCreature(self);
	
	if (hasScript(npcOwner, "npc.vendor.vendor"))
	{
		detachScript(self, "item.special.temporary_item");
		removeObjVar(self, "item.lifespan");
		return SCRIPT_CONTINUE;
	}
	else
	{
		int idx = utils.getValidAttributeIndex(names);
		if (idx == -1)
			return SCRIPT_CONTINUE;

		float lifeSpan = getLifeSpan(self);
		float dieTime = getDieTime(lifeSpan, self);
		int timeLeft = (int)dieTime;

		names[idx] = "storyteller_time_remaining";
		attribs[idx] = utils.formatTimeVerbose(timeLeft);
		idx++;
		if (idx >= names.length)
			return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}