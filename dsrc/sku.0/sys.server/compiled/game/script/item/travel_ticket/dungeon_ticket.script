/**********************************************************************
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        dungeon_ticket
 * Description:  script that attaches to dungeon tickets
 * @author       $Author:$
 * @version      $Revision:$
 **********************************************************************/


/***** INCLUDES ********************************************************/
include library.space_dungeon;
include library.utils;

/***** CONSTANTS *******************************************************/
const string_id SID_NO_COLLECTOR 		= new string_id("dungeon/space_dungeon", "no_collector");

/***** TRIGGERS ********************************************************/


/***** MESSAGEHANDLERS *************************************************/
trigger OnGetAttributes(obj_id player, string[] names, string[] attribs)
{
	// Display departure and arrival locations
	int idx = utils.getValidAttributeIndex(names);
	if (idx == -1)
		return SCRIPT_CONTINUE;

	names[idx] = "travel_departure_planet";
	string departure_planet = space_dungeon.getTicketPlanetName(self);
	if (departure_planet == null)
		return SCRIPT_CONTINUE;
	
	//departure_planet = departure_planet.substring(0,1).toUpperCase() + departure_planet.substring(1).toLowerCase();
	string_id sid_departure_planet = new string_id("planet_n", departure_planet);
	attribs[idx] = localize(sid_departure_planet);
	idx++;
	if (idx >= names.length)
		return SCRIPT_CONTINUE;
	
	
	string_id point_name = space_dungeon.getDungeonNameStringId(space_dungeon.getTicketPointName(self));
	if ( point_name != null )
	{
		names[idx] = "travel_departure_point";
		attribs[idx] = localize(point_name);
		idx++;
		if (idx >= names.length)
		{
			return SCRIPT_CONTINUE;
		}
	}
	
	string_id dungeon_name = space_dungeon.getDungeonNameStringId(space_dungeon.getTicketDungeonName(self));
	if ( dungeon_name != null )
	{
		names[idx] = "travel_arrival_dungeon";
		attribs[idx] = localize(dungeon_name);
	}

	return SCRIPT_CONTINUE;	
}

/***** COMMANDHANDLERS *************************************************/


/***** FUNCTIONS *******************************************************/
