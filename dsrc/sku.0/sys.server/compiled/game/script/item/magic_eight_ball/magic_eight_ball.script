/**
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        magic_eight_ball.script
 * DesCRiption:  when examined displays a special message randomly picked
 * 				 from 50 predefined messages
 * @author       $AutHor: Matthew Kwid$
 * @version      $Revision:$
 */

/***** INCLUDES ********************************************************/
include library.sui;
include library.utils;

/***** INCLUDES ********************************************************/

/***** CONSTANTS *******************************************************/

const string_id SID_READ_OPTION = new string_id("sui", "read_option");

/***** TRIGGERS ********************************************************/
trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	mi.addRootMenu (menu_info_types.SERVER_MENU1, SID_READ_OPTION);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(item == menu_info_types.SERVER_MENU1)
		openFortuneWindow(self, player);

 	return SCRIPT_CONTINUE;
}

void openFortuneWindow(obj_id self, obj_id player)
{
	string title = "@magic_eight_ball:title";
	string prompt = "@magic_eight_ball:prompt1";

	int pid = sui.inputbox(self, player, prompt, title, "handleQuestion", 64, false, "");
}

messageHandler handleQuestion()
{
	int bp = sui.getIntButtonPressed(params);

	if(bp == sui.BP_CANCEL)
		return SCRIPT_CONTINUE;

	string text = sui.getInputBoxText(params);
	obj_id player = sui.getPlayerId(params);

	if(!isIdValid(player))
		return SCRIPT_CONTINUE;

	if(text == null || text.equals(""))
		return SCRIPT_CONTINUE;

	int textCRC = getStringCrc(text);

	if(textCRC < 0)
		textCRC *= -1;

	int num = textCRC % 49;

	string title = "@magic_eight_ball:title";
	string prompt = "@magic_eight_ball:prompt2_1" + "\n  \\#pcontrast3 ";
	prompt += text + " \\#. ";
	prompt += "@magic_eight_ball:prompt2_2" + "\n  \\#pcontrast1 ";
	prompt += "@magic_eight_ball:message" + num;

	sui.msgbox(player, player, prompt, sui.OK_ONLY, title, "noHandler");

	return SCRIPT_CONTINUE;
}


