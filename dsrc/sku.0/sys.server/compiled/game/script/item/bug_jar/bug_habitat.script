// Author: Brandon Reinhart

//------------------------------------------------
// Includes
//------------------------------------------------

include library.player_structure;
include library.resource;
include library.utils;

//------------------------------------------------
// Constants
//------------------------------------------------

const string_id	SID_RELEASE_CREATURES		= new string_id("lair_n", "release_creatures");
const string_id	SID_RELEASE			= new string_id("lair_n", "release");
const string_id	SID_NO_ACCESS			= new string_id("lair_n", "no_access");

const string[] 	BUG_FX				= {"clienteffect/item_bugs_bats.cef",
						"clienteffect/item_bugs_bees.cef",
						"clienteffect/item_bugs_butterflies.cef",
						"clienteffect/item_bugs_flies.cef",
						"clienteffect/item_bugs_glowzees.cef",
						"clienteffect/item_bugs_moths.cef"};

//------------------------------------------------
// OnObjectMenuRequest
//------------------------------------------------

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	// Add option to release the creatures to the wild!
	mi.addRootMenu( menu_info_types.SERVER_MENU1, SID_RELEASE_CREATURES );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnObjectMenuSelect
//------------------------------------------------

trigger OnObjectMenuSelect(obj_id player, int item)
{
	// Make sure we aren't in space.
	if (isSpaceScene())
		return SCRIPT_CONTINUE;

	
	if (item == menu_info_types.SERVER_MENU1)
	{
		//Make sure this player has access before releasing (destroying) this object.
		obj_id topContainer = getTopMostContainer(self);
		string playerName = getPlayerName(player);
		
		if(topContainer == player)
		{
			//The item is in the player's inventory - allow him to release them.
			releaseCreatures(self, player);
		}
		else if(player_structure.isNameOnAdminList(topContainer, playerName))
		{
			// The player is searching the lair.
			releaseCreatures(self, player);
		}
		else
		{
			sendSystemMessage(player, SID_NO_ACCESS);	
		}

		return SCRIPT_OVERRIDE;
	}

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// releaseCreatures
//------------------------------------------------

void releaseCreatures(obj_id self, obj_id player)
{
	// Send a message.
	sendSystemMessage(player, SID_RELEASE);

	// Play an effect.
	int type = getIntObjVar(self, "bugsample");
	playClientEffectLoc(player, BUG_FX[type-1], getLocation(player), 1.5f);

	// Destroy us.
	destroyObject(self);
}
