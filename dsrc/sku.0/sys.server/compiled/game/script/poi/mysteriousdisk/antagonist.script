/**
 * Copyright (c) ©2000,2001 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        antagonist.script
 * Description:  antagonist object script: POI = mysteriousdisk
 * @author       $Author: breinhart $
 * @version      $Revision: #1 $
 */

//------------------------------------------------
// Includes
//------------------------------------------------

include library.npc;
include library.combat;
include library.poi;
include library.scenario;
include ai.ai_combat;

//-----------------------------------------------
// Inherits
//-----------------------------------------------

inherits poi.base.scenario_actor;

//------------------------------------------------
// Constants
//------------------------------------------------

const string SCRIPT_CONVERSE				= "npc.converse.npc_converse_menu";
const string LOG_NAME						= "poiMysteriousDisk Antagonist";

//------------------------------------------------
// Methods
//------------------------------------------------

//------------------------------------------------
// OnAttach
//------------------------------------------------

trigger OnAttach()
{
	// TEST: Arm weapon.
	messageTo( self, "armWeapon", null, 2, false );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// armWeapon
//------------------------------------------------

messageHandler armWeapon()
{
	aiEquipPrimaryWeapon( self );

 	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// commentOnKill
//------------------------------------------------

messageHandler commentOnKill()
{
	poi.quickSay( self, "a_lookingfordisk" );

	return SCRIPT_CONTINUE;
}

//------------------------------------------------
// OnMovePathComplete
//------------------------------------------------

trigger OnMovePathComplete()
{
	// Handle this if we are going to set a bomb.
	if ( hasObjVar( self, "lookingForDisk" ) )
	{
		removeObjVar( self, "lookingForDisk" );

		// Stop us from moving.
		stop( self );

		messageTo( self, "searchDone", null, 2, false );
	}

	return SCRIPT_CONTINUE;
}


//------------------------------------------------
// searchDone
//------------------------------------------------

messageHandler searchDone()
{
	obj_id med = poi.findObject( scenario.MEDIATOR + "_0" );
	if ( (med == null) || (med == obj_id.NULL_ID) )
		return SCRIPT_CONTINUE;

	// Does she have the disk?
	if ( hasObjVar( med, "gaveDisk" ) )
		poi.quickSay( self, "a_nodisk" );
	else
		poi.quickSay( self, "a_hasdisk" );

	return SCRIPT_CONTINUE;
}
