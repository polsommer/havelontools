// Mystic Tree POI script
// Author:  Will "Darth Platypus" Wallace

include library.utils;
include library.groundquests;

const string_id HEAL_TREE					= new string_id("ep3/mystic_tree", "heal_tree");
const string_id TRANSFORM					= new string_id("ep3/mystic_tree", "transform");

trigger OnInitialize()
{
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int menu = mi.addRootMenu(menu_info_types.ITEM_USE, HEAL_TREE);
	
	menu_info_data menuInfoData = mi.getMenuItemById (menu);
	
	if ( menuInfoData != null )
	{
 		menuInfoData.setServerNotify(true);
 	}

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{
		obj_id hasMedicine = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/quest/ep3_forest_cure.iff");

		string template = getTemplateName(self);
		
		if ( template.equals("object/tangible/item/ep3/poi_kash_mystic_tree_sickly.iff") )
		{
			if( isIdValid(hasMedicine) )
			{
				sendSystemMessage(player, TRANSFORM);
				location selfLoc = getLocation(self);
				//playClientEffectObj(player, "clienteffect/healing_tree.cef", self, null);
				playClientEffectLoc(player, "clienteffect/healing_tree.cef", selfLoc, 0.f);
				//destroyObject(self);
				destroyObject(hasMedicine);
				//obj_id newTree = createObject("object/tangible/item/ep3/poi_kash_mystic_tree_healthy.iff", selfLoc);
				messageTo(self, "spawnHealthyTree", null, 1.5f, true);
				utils.setScriptVar(self, "playerId", player);
			}
			else
			{
				sendSystemMessage(player, new string_id("ep3/mystic_tree", "cannot_heal"));
			}
		}
		else
		{
			sendSystemMessage(player, new string_id("ep3/mystic_tree", "not_sickly"));
		}
	}

	return SCRIPT_CONTINUE;
}

messageHandler respawnSickTree()
{
	location selfLoc = getLocation(self);
	obj_id newTree= createObject("object/tangible/item/ep3/poi_kash_mystic_tree_sickly.iff", selfLoc);
	setYaw(newTree, 140);
	attachScript(newTree, "poi.mystic_tree.mystic_tree");
	
	destroyObject(self);
	
	return SCRIPT_CONTINUE;
}

messageHandler spawnHealthyTree()
{
	location selfLoc = getLocation(self);

	obj_id newTree = createObject("object/tangible/item/ep3/poi_kash_mystic_tree_healthy.iff", selfLoc);
	setYaw(newTree, 140);
	attachScript(newTree, "poi.mystic_tree.mystic_tree");
	obj_id player = utils.getObjIdScriptVar(self, "playerId");
	groundquests.sendSignal(player, "curetree");
	messageTo(newTree, "respawnSickTree", null, 60, true);
	
	destroyObject(self);
	
	return SCRIPT_CONTINUE;
}