/**
 * Copyright (C)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        jawa.camp_lrg.script
 * Description:  script for creating a generic jawa camp
 * @author       $Author: rpalacio $
 * @version      $Revision: $
 */

/***** INCLUDES ********************************************************/

include library.utils;
include library.locations;
include library.theater;

/***** INCLUDES ********************************************************/

inherits poi.template.scene.camp.jawa.base;

/***** CONSTANTS *******************************************************/

const int COL_MAX							= 3;

/***** TRIGGERS ********************************************************/


/***** FUNCTIONS *******************************************************/


/***** MESSAGEHANDLERS *******************************************************/

messageHandler handleTheaterSetup()
{
	if ( dataTableOpen(TBL) )
	{
		resizeable obj_id[] children = new obj_id[0];

		for ( int n = 0; n < COL_MAX; n++ )
		{
			string[] tpfArray = dataTableGetStringColumn(TBL, n);
			resizeable string[] tpf = tpfArray;
			if ( (tpf == null) || (tpf.length == 0) )
			{
				destroyObject(self);
				return SCRIPT_CONTINUE;
			}

			if ( n == COL_MAX - 1 )
			{
				tpf = utils.removeElementAt(tpf, 0);
			}

			int cnt = rand(4, 7) - n;
			for ( int i = 0; i < cnt; i++ )
			{
				int idx = rand(0, tpf.length - 1);
				string template = tpf[idx];

				if ( (template != null) && (!template.equals("")) )
				{
					location myLoc = getLocation(self);

					float min = 6f * ( n + 1 );
					float max = 12f * ( n + 1 );

					location c = utils.getRandomLocationInRing(myLoc, min, max);

					float iSize = n * n;
					float aSize = 3 * iSize;

					location here = locations.getGoodLocationAroundLocation(c, iSize, iSize, aSize, aSize);
					if ( here == null )
					{
						here = c;
					}

					here.y = getHeightAtLocation(here.x, here.z);

					obj_id child = createObject(template, here);
					if ( (child == null) || (child == obj_id.NULL_ID) )
					{
					}
					else
					{
						setYaw(child, rand(-180,180));
						children = utils.addElement(children, child);
					}
				}
			}
		}

		if ( (children == null) || (children.length == 0) )
		{
		}
		else
		{
			setObjVar(self, theater.VAR_CHILDREN, children);
		}
	}

	return SCRIPT_CONTINUE;
}
