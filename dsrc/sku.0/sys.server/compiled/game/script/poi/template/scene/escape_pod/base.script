/**
 * Copyright (C)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        escape_pod.script
 * Description:  script for creating a generic escape pod scene
 * @author       $Author: rpalacio $
 * @version      $Revision: $
 */

/***** INCLUDES ********************************************************/

include library.locations;
include library.utils;


/***** CONSTANTS *******************************************************/

const string VAR_THEATER_BASE					= "theater";
const string VAR_CHILDREN						= VAR_THEATER_BASE + ".children";

const string VAR_BEEN_INITIALIZED				= "beenInitialized";

const string POD_DOOR		= "object/static/structure/general/escape_pod_door.iff";

const int MAX_DEBRIS		= 3;
const string[] DEBRIS		= {
								"object/static/structure/tatooine/debris_tatt_crate_1.iff",
								"object/static/structure/tatooine/debris_tatt_crate_metal_1.iff",
								"object/tangible/container/drum/tatt_drum_1.iff"
							  };

const int MAX_MISC			= 3;
const string[] MISC			= {
								"object/tangible/camp/camp_cot.iff",
								"object/tangible/camp/camp_lawn_chair.iff",
								"object/tangible/camp/camp_stool_short.iff",
								"object/tangible/camp/camp_stool_tall.iff",
								"object/tangible/camp/camp_tent_s1.iff",
							  };

/***** TRIGGERS ********************************************************/

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnAddedToWorld()
{
	randomizeDebris(self);
	setupTheater(self);
	return SCRIPT_CONTINUE;
}

trigger OnDestroy()
{
	cleanupTheater(self);
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	cleanupTheater(self);
	return SCRIPT_CONTINUE;
}

trigger OnInitialize()
{
	if ( hasObjVar(self, VAR_BEEN_INITIALIZED) )
	{
		destroyObject(self);
	}
	else
	{
		setObjVar(self, VAR_BEEN_INITIALIZED, true);
	}
	return SCRIPT_CONTINUE;
}

/***** FUNCTIONS *******************************************************/
boolean setupTheater(obj_id self)
{
	if ( (self == null) || (self == obj_id.NULL_ID) )
	{
		self = getSelf();
	}

	resizeable obj_id[] children = new obj_id[0];

	location myLoc = getLocation(self);

	location loc = locations.getGoodLocationAroundLocation(myLoc, 2f, 2f, 10f, 10f);
	if ( loc != null )
	{
		obj_id door = createObject(POD_DOOR, loc);
		if ( (door == null) || (door == obj_id.NULL_ID) )
		{

		}
		else
		{
			randomizeDebris(door);
			children = utils.addElement(children, door);
		}
	}

	int roll = rand(1, MAX_DEBRIS);
	for ( int i = 0; i < roll; i++ )
	{
		int idx = rand(0, DEBRIS.length - 1);
		loc = locations.getGoodLocationAroundLocation(myLoc, 2f, 2f, 10f, 10f);
		if ( loc != null )
		{
			loc.y = getHeightAtLocation(loc.x, loc.z);
			obj_id debrisId = createObject(DEBRIS[idx], loc);
			if ( (debrisId == null) || (debrisId == obj_id.NULL_ID) )
			{

			}
			else
			{
				randomizeDebris(debrisId);
				children = utils.addElement(children, debrisId);
			}
		}
	}

	roll = rand(1, MAX_MISC);
	for ( int i = 0; i < roll; i++ )
	{
		int idx = rand(0, MISC.length - 1);
		loc = locations.getGoodLocationAroundLocation(myLoc, 2f, 2f, 10f, 10f);
		if ( loc != null )
		{
			obj_id debrisId = createObject(MISC[idx], loc);
			if ( (debrisId == null) || (debrisId == obj_id.NULL_ID) )
			{

			}
			else
			{
				setYaw(debrisId, rand(0,359));
				children = utils.addElement(children, debrisId);
			}
		}
	}

	if ( (children == null) || (children.length == 0) )
	{
		debugSpeakMsg(self, "no children?!");
	}
	else
	{
		setObjVar(self, VAR_CHILDREN, children);
		return true;
	}

	return false;
}

boolean cleanupTheater(obj_id self)
{
	if ( (self == null) || (self == obj_id.NULL_ID) )
	{
		self = getSelf();
	}

	obj_id[] children = getObjIdArrayObjVar(self, VAR_CHILDREN);
	if ( (children == null) || (children.length == 0) )
	{
		return false;
	}
	else
	{
		for ( int i = 0; i < children.length; i++ )
		{
			obj_id child = children[i];
			if ( (child == null) || (child == obj_id.NULL_ID) )
			{

			}
			else
			{
				destroyObject(child);
			}
		}
	}

	return false;
}

boolean randomizeDebris(obj_id target)
{
	if ( (target == null) || (target == obj_id.NULL_ID) )
	{
		return false;
	}

	setYaw(target, rand(0,359));
	//setRoll(target, rand(0,180));
	//setPitch(target, rand(0, 60));

	return true;
}
