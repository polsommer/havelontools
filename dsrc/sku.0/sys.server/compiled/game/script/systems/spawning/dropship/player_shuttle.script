include library.utils;
include library.ai_lib;

inherits systems.spawning.dropship.base;

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

messageHandler landShuttle()
{
	queueCommand(self, ##"stand", self, "", COMMAND_PRIORITY_FRONT);
	setPosture(self, POSTURE_UPRIGHT);
	return SCRIPT_CONTINUE;
}

messageHandler takeOff()
{
	setPosture(self, POSTURE_PRONE);
	queueCommand(self, ##"prone", self, "", COMMAND_PRIORITY_FRONT);
	messageTo(self, "destroySelf", null, 60.0f, false);
	return SCRIPT_CONTINUE;
}

messageHandler explodeThenDestroySelf()
{
	if(params != null)
	{
	
		location locList[] = params.getLocationArray("explosionLocaitonList");
		if(locList != null && locList.length > 0)
		{
			for(int i = 0; i < locList.length; i++)
			{
				playClientEffectLoc(self, "clienteffect/combat_explosion_lair_large.cef", locList[i], 0);
			}
		}
		messageTo(self, "destroySelf", null, 0, false);
	}
	else
	{
		location death = getLocation(self);
		playClientEffectLoc(self, "clienteffect/combat_explosion_lair_large.cef", death, 0);	
		messageTo(self, "destroySelf", null, 0, false);
	}
	return SCRIPT_CONTINUE;
}

messageHandler destroySelf()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;
}
