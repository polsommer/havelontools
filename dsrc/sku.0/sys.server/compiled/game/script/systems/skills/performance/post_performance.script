/**********************************************************************
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        post_performance
 * Description:  handles the roundtime after a musical performance
 * @author       $Author:$
 * @version      $Revision:$
 **********************************************************************/


/***** INCLUDES ********************************************************/
include library.performance;

/***** CONSTANTS *******************************************************/


/***** TRIGGERS ********************************************************/
trigger OnInitialize()
{
	detachScript(self, performance.POST_PERFORMANCE);
	
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	if (hasObjVar(self, performance.VAR_PERFORM_OUTRO))
		removeObjVar(self, performance.VAR_PERFORM_OUTRO);
	
	return SCRIPT_CONTINUE;
}

/***** MESSAGEHANDLERS *************************************************/
messageHandler OnClearOutro()
{
	performance.stopPlaying(self);
	performance.performanceMessageToSelf(self, null, performance.SID_MUSIC_STOP_SELF);
	performance.performanceMessageToBand(self, null, performance.SID_MUSIC_STOP_OTHER);
	performance.performanceMessageToBandListeners(self, null, performance.SID_MUSIC_STOP_OTHER);

	detachScript(self, performance.POST_PERFORMANCE);
	
	return SCRIPT_CONTINUE;
}

messageHandler OnClearBandOutro()
{
	int leader = params.getInt("leader");

	performance.stopPlaying(self);

	if (leader == 1)
	{
		performance.performanceMessageToSelf(self, null, performance.SID_MUSIC_STOP_BAND_SELF);
		performance.performanceMessageToBand(self, null, performance.SID_MUSIC_STOP_BAND_MEMBERS);
		performance.performanceMessageToBandListeners(self, null, performance.SID_MUSIC_STOP_BAND_OTHER);
	}

	detachScript(self, performance.POST_PERFORMANCE);
	
	return SCRIPT_CONTINUE;
}

/***** COMMANDHANDLERS *************************************************/


/***** FUNCTIONS *******************************************************/
