include library.storyteller;
include library.utils;

trigger OnReceivedItem(obj_id srcContainer, obj_id transferer, obj_id item)
{
	if ( isIdValid(transferer) && isPlayer(transferer))
	{
		if ( isIdValid(item) )
		{
			utils.setScriptVar(item, "storytellerLoot", true);
		}
	}
	return SCRIPT_CONTINUE;
}

trigger OnAboutToLoseItem(obj_id destContainer, obj_id transferer, obj_id item)
{

	if ( isIdValid(transferer) && isGod(transferer) && hasObjVar(transferer, "exploitTesting") )
	{
		return SCRIPT_CONTINUE;
	}

	obj_id npc = getContainedBy(self);
	if ( isIdValid(transferer) && isPlayer(transferer) )
	{
		if ( !utils.hasScriptVar(item, "storytellerLoot") )
		{
			sendSystemMessage(transferer, new string_id("storyteller", "open_npc_cannot_take_item"));
			return SCRIPT_OVERRIDE;
		}
	}
	else if ( utils.isNestedWithinAPlayer(destContainer) && isPlayer(getContainedBy(destContainer)) )
	{
		if ( !utils.hasScriptVar(item, "storytellerLoot") )
		{
			sendSystemMessage(transferer, new string_id("storyteller", "open_npc_cannot_take_item"));
			return SCRIPT_OVERRIDE;
		}
	}
	else if ( destContainer != npc && !utils.isNestedWithin(destContainer, npc) )
	{
		sendSystemMessage(transferer, new string_id("storyteller", "open_npc_cannot_take_item"));
		return SCRIPT_OVERRIDE;
	}
	
	return SCRIPT_CONTINUE;
}
