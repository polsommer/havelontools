include library.camping;

const string VAR_CHILDREN						= "myChildren";

const string VAR_CAMP_LOGS                      = VAR_CHILDREN + ".logs";
const string VAR_CAMP_CAMPFIRE                  = VAR_CHILDREN + ".campfire";

const string TEMPLATE_LOGS_FRESH                = "object/tangible/camp/campfire_logs_fresh.iff";
const string TEMPLATE_LOGS_BURNT                = "object/tangible/camp/campfire_logs_burnt.iff";
const string TEMPLATE_LOGS_SMOLDERING           = "object/tangible/camp/campfire_logs_smoldering.iff";
const string TEMPLATE_LOGS_ASH                  = "object/tangible/camp/campfire_logs_ash.iff";

const string TEMPLATE_CAMPFIRE                  = "object/static/particle/particle_campfire_style_1.iff";
const string TEMPLATE_CAMPFIRE_SMOLDER          = "object/static/particle/particle_smoke.iff";

trigger OnUnloadedFromMemory()
{
	destroyChildren(self);
	return SCRIPT_CONTINUE;
}

messageHandler handleSetStatus()
{
	if ( (params == null) || (params.isEmpty()) )
	{
		return SCRIPT_CONTINUE;
	}

	int status = params.getInt(camping.DICT_NEW_STATUS);
	switch (status)
	{
		case camping.STATUS_NEW:
			setLogs(self, TEMPLATE_LOGS_FRESH);
			setFire(self, TEMPLATE_CAMPFIRE);
			break;

		case camping.STATUS_CREATION:
			break;

		case camping.STATUS_MAINTAIN:
			setLogs(self, TEMPLATE_LOGS_BURNT);
			setFire(self, TEMPLATE_CAMPFIRE);
			break;

		case camping.STATUS_ABANDONED:
		default:
			setLogs(self, TEMPLATE_LOGS_SMOLDERING);
			setFire(self, TEMPLATE_CAMPFIRE_SMOLDER);
			break;

	}

	return SCRIPT_CONTINUE;
}

void setLogs(obj_id self, string tpf)
{
	obj_id item = getObjIdObjVar(self, VAR_CAMP_LOGS);
	if ( (item == null) || (item == obj_id.NULL_ID) )
	{
	}
	else
	{
		string itemTemplate = getTemplateName(item);
		if ( itemTemplate.equals(tpf) )
		{
			return;
		}

		destroyObject(item);
	}

	location here = getLocation(self);
	item = createObject(tpf, here);
	setObjVar(self, VAR_CAMP_LOGS, item);
}

void setFire(obj_id self, string tpf)
{
	obj_id item = getObjIdObjVar(self, VAR_CAMP_CAMPFIRE);
	if ( (item == null) || (item == obj_id.NULL_ID) )
	{
	}
	else
	{
		string itemTemplate = getTemplateName(item);
		if ( itemTemplate.equals(tpf) )
		{
			return;
		}

		destroyObject(item);
	}

	location here = getLocation(self);
	item = createObject(tpf, here);
	setObjVar(self, VAR_CAMP_CAMPFIRE, item);
}

void destroyChildren(obj_id self)
{
	obj_id logs = getObjIdObjVar(self, VAR_CAMP_LOGS);
	if ( (logs == null) || (logs == obj_id.NULL_ID) )
	{
	}
	else
	{
		destroyObject(logs);
	}

	obj_id campfire = getObjIdObjVar(self, VAR_CAMP_CAMPFIRE);
	if ( (campfire == null) || (campfire == obj_id.NULL_ID) )
	{
	}
	else
	{
		destroyObject(campfire);
	}
}