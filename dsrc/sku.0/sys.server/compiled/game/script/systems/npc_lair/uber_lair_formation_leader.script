
include library.ai_lib;
include library.create;
inherits theme_park.poi.base;

messageHandler createFormation()
{
	LOG("uber", "GOT SPAWN COMMAND");
	obj_id objParent = getObjIdObjVar(self, "objParent");
	location[] locWaypoints = params.getLocationArray("locWaypoints");
	string[] strFormationMembers= params.getStringArray("strFormationMembers");
	int intOffset = params.getInt("intOffset");
	location locSpawnLocation = locWaypoints[intOffset];
	if (strFormationMembers == null)
	{
		LOG("uber", "NULL FORMATIONS IN LEADER");
	}
	for (int intI =0; intI<strFormationMembers.length; intI++)
	{
		// create all my buddies
		obj_id objMob = poiCreateObject(objParent, strFormationMembers[intI], locSpawnLocation);
		ai_lib.followInFormation( objMob, self, ai_lib.FORMATION_WEDGE, intI+1);

	}

	ai_lib.setPatrolPath( self, locWaypoints);
	return SCRIPT_CONTINUE;

}

location[] organizeLocations(location[] locWaypoints, int intOffset)
{
	// 4 WAYPOINTS
	// organizational command

	location[] locNewWaypoints = new location[locWaypoints.length];
	int intIndex = 0;
	int intOldIndex = intOffset;
	while(intIndex<locWaypoints.length)
	{
		locNewWaypoints[intIndex] = locWaypoints[intOffset];
		intOldIndex= intOldIndex+1;
		intIndex = intIndex +1;
		if(intOldIndex>locWaypoints.length-1)
		{
			intOldIndex = 0;
		}
	}
	return locNewWaypoints;
}

