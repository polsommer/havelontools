

trigger OnObjectDisabled (obj_id killer)
{
	location death = getLocation( self );
	playClientEffectObj(killer, "clienteffect/combat_explosion_lair_large.cef", self, "");
	playClientEffectLoc(killer, "clienteffect/combat_explosion_lair_large.cef", death, 0);
	setObjVar( self, "lairDestroyed", true );
	messageTo( self, "destroyDisabledLair", null, 2, false );
	
	obj_id objBuilding = getTopMostContainer(self);
	obj_id objTheater = getObjIdObjVar(objBuilding, "theater.parent");		
	obj_id objPoi = getObjIdObjVar(objTheater, "poi.baseObject");
	messageTo(objPoi, "handleTargetDestroyed", null, 0, true); // SUCCES	
	return SCRIPT_CONTINUE;

}

messageHandler destroyDisabledLair()
{
	destroyObject( self );
	return SCRIPT_CONTINUE;
}

trigger OnObjectDamaged(obj_id attacker, obj_id weapon, int damage)
{

	int curHP = getHitpoints (self);
	int maxHP = getMaxHitpoints( self );
	int smolder = (maxHP - (maxHP/3));
	int fire = (maxHP/ 3);

	if (!hasObjVar (self, "playingEffect"))
	{
		if (curHP < smolder)
		{
			if (curHP < fire)
			{
				location death = getLocation (self);
				// playClientEffectObj(attacker, "clienteffect/lair_hvy_damage_fire.cef" , self, "");
				// playClientEffectLoc(attacker, "clienteffect/combat_explosion_lair_large.cef", death, 0);
				setObjVar (self, "playingEffect", 1);
				messageTo (self, "effectManager", null, 15, true);
			}
			else
			{
				location death = getLocation (self);
				// playClientEffectObj(attacker, "clienteffect/lair_med_damage_smoke.cef" , self, "");
				// playClientEffectLoc(attacker, "clienteffect/combat_explosion_lair_large.cef", death, 0);
				setObjVar (self, "playingEffect", 1);
				messageTo (self, "effectManager", null, 15, true);
			}
		}
	}


	return SCRIPT_CONTINUE;
}

messageHandler effectManager ()
{
	removeObjVar (self, "playingEffect");
	return SCRIPT_CONTINUE;
}

