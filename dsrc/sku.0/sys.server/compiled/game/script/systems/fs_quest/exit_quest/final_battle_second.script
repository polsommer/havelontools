/**********************************************************************
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        final_battle_second
 * Description:  Script attaches to the lt npc within the final battle.
 * @author       $Author:$
 * @version      $Revision:$
 **********************************************************************/
include library.ai_lib;
include library.quests;
include library.theater;
include library.chat;
include library.prose;
include ai.ai_combat;

/***** INCLUDES ********************************************************/
trigger OnAttach()
{
	obj_id spawner = getObjIdObjVar(self, "quest_spawner.spawned_by");
	if (isIdValid(spawner))
	{
		obj_id theater_object = getObjIdObjVar(spawner, theater.VAR_PARENT);
		LOG("fs_quest", "!!!!!!!!!!!! theater_object ->" + theater_object);
		if (isIdValid(theater_object))
		{
			obj_id player = getObjIdObjVar(theater_object, "fs_quest.final_battle.player");
			setObjVar(self, "questOwner", player);
			setHomeLocation(self);
			ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
			setObjVar(theater_object, "fs_quest.final_battle.second", self);
		}
	}

	return SCRIPT_CONTINUE;
}

/***** CONSTANTS *******************************************************/


/***** TRIGGERS ********************************************************/


/***** MESSAGEHANDLERS *************************************************/

messageHandler msgAidGreen()
{
	obj_id spawner = getObjIdObjVar(self, "quest_spawner.spawned_by");
	obj_id questPlayer = getObjIdObjVar(self, "questOwner");
	prose_package pp;
	if (isIdValid(spawner))
	{
		obj_id theater_object = getObjIdObjVar(spawner, theater.VAR_PARENT);
		if (hasObjVar(theater_object, "lastKiller"))
		{
			obj_id killer = getObjIdObjVar(theater_object, "lastKiller");
			if (isIdValid(killer))
			{
				pp = prose.getPackage(new string_id("quest/force_sensitive/exit", "taunt1"), killer);
				chat.publicChat(self, killer, null, null, pp);
				startCombat(self, killer);
				return SCRIPT_CONTINUE;
			}
		}
	}
	
	if (isIdValid(questPlayer))
	{
		pp = prose.getPackage(new string_id("quest/force_sensitive/exit", "taunt1"), questPlayer);
		chat.publicChat(self, questPlayer, null, null, pp);
		startCombat(self, questPlayer);
	}
		
	return SCRIPT_CONTINUE;
}

messageHandler msgAidRed()
{
	
	obj_id spawner = getObjIdObjVar(self, "quest_spawner.spawned_by");
	obj_id questPlayer = getObjIdObjVar(self, "questOwner");
	prose_package pp;
	if (isIdValid(spawner))
	{
		obj_id theater_object = getObjIdObjVar(spawner, theater.VAR_PARENT);
		if (hasObjVar(theater_object, "lastKiller"))
		{
			obj_id killer = getObjIdObjVar(theater_object, "lastKiller");
			if (isIdValid(killer))
			{
				pp = prose.getPackage(new string_id("quest/force_sensitive/exit", "taunt2"), killer);
				chat.publicChat(self, killer, null, null, pp);
				startCombat(self, killer);
				return SCRIPT_CONTINUE;
			}
		}
	}
	
	if (isIdValid(questPlayer))
	{
		pp = prose.getPackage(new string_id("quest/force_sensitive/exit", "taunt2"), questPlayer);
		chat.publicChat(self, questPlayer, null, null, pp);
		startCombat(self, questPlayer);
	}
			
	return SCRIPT_CONTINUE;

}


/***** COMMANDHANDLERS *************************************************/


/***** FUNCTIONS *******************************************************/
