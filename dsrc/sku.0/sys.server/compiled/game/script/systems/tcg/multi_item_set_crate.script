
include library.static_item;
include library.utils;

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	int menu = mi.addRootMenu (menu_info_types.ITEM_USE, new string_id("npe","crate_use"));
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( item == menu_info_types.ITEM_USE )
	{
		if (canManipulate(player, self, true, true, 15, true))
		{
			if (utils.isNestedWithinAPlayer(self))
			{
				if ( hasObjVar(self, "multi_item_set_name") )
				{
					string datatable = "datatables/tcg/multi_item_set.iff";
					string multiItemSetName = getStringObjVar(self, "multi_item_set_name");
					
					string setItemsString = dataTableGetString(datatable, multiItemSetName, "set_items");
					if ( setItemsString != null && setItemsString.length() > 0 )
					{
						string[] setItems = split(setItemsString, ',');
						if ( setItems != null && setItems.length > 0 )
						{
							obj_id[] lootItems = new obj_id[setItems.length];
							
							for ( int i = 0; i < setItems.length; i++ )
							{
								obj_id lootItem = static_item.createNewItemFunction(setItems[i], player);
								if ( isIdValid(lootItem) )
								{
									lootItems[i] = lootItem;
								}
							}
							
							showLootBox(player, lootItems);
							sendSystemMessage (player, new string_id("npe","opened_crate"));
							destroyObject(self);
						}
					}
				}
			}
		}
	}
	return SCRIPT_CONTINUE;
}


