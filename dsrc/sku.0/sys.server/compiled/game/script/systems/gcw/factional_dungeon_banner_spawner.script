include library.factions;


messageHandler swapFlag()
{
	obj_id objFlag = getObjIdObjVar(self, "objFlag");
	destroyObject(objFlag);	
	string strType = getStringObjVar(self, "type");
	string strImperial = factions.FACTION_IMPERIAL;
	string strRebel = factions.FACTION_REBEL;
	
	if(strType==strImperial)
	{		
		setObjVar(self, "type", factions.FACTION_REBEL); // flip
	}
	else if(strType==strRebel)
	{
		setObjVar(self, "type", factions.FACTION_IMPERIAL); // flip	
	}
	else
	{
		
		return SCRIPT_CONTINUE;
	}
	

	makeFlag(self);
	return SCRIPT_CONTINUE;

}

void checkFactionalSpawners(obj_id self)
{
	
	obj_id objContainer = getTopMostContainer(self); // am i in a building?
	location locTest = getLocation(self);
	if(objContainer!=self)
	{
		locTest = getLocation(objContainer);	
	}
	obj_id[] objParents = getAllObjectsWithScript(locTest, 250, "systems.gcw.factional_dungeon_parent");
	if(objParents!=null)
	{
		if(objParents.length>0)
		{
			dictionary dctParams = new dictionary();
			dctParams.put("objSpawner", self);
			messageTo(objParents[0], "validateBanner", dctParams, 1, false);		
		}	
	}


}


trigger OnInitialize()
{
	setObjVar(self, "intBanner", 1);	
	makeFlag(self);
	checkFactionalSpawners(self);
	return SCRIPT_CONTINUE;
}

void makeFlag(obj_id self)
{
	if(hasObjVar(self, "objFlag"))
	{
		obj_id objTest = getObjIdObjVar(self, "objFlag");
		if(exists(objTest))
		{
			return;		
		}
	}
	
	
	string strFaction = getStringObjVar(self, "type");
	string strTemplate = "";
	LOG("gcw", "Faction si "+strFaction);
	LOG("gcw", "FACTION_REBEL is "+factions.FACTION_REBEL);	
	string strRebel = factions.FACTION_REBEL;
	string strImperial = factions.FACTION_IMPERIAL;
	if(strFaction==strRebel)
	{
		
		strTemplate = "object/static/structure/general/banner_rebel_style_01.iff";
	}
	else if(strFaction==strImperial)
	{
		strTemplate = "object/static/structure/general/banner_imperial_style_01.iff";
	
	}
	else
	{
		LOG("gcw", "object "+self+" at location "+getLocation(self)+" has a bad faction set on it");
		return;
	
	}
	LOG("gcw", "Making flag");
	obj_id objFlag = createObject( strTemplate, getLocation(self));
	setYaw(objFlag, getYaw(self));
	setObjVar(self, "objFlag", objFlag);


}