// this is the buildcluster object
// it loooks for parent objects
// if they don't exist, it does nothing
// otherwise it makes a new one, and bootstraps world state
include library.factions;



trigger OnInitialize()
{

	string strType = getStringObjVar(self, "type");
	if(strType!=null)
	{
		if((strType==factions.FACTION_REBEL)||(strType==factions.FACTION_IMPERIAL))
		{
			setObjVar(self, "strFaction", strType);
		}
		else
		{
			setObjVar(self, "strFaction", "Rebel");
		}
	}
	else
	{
		setObjVar(self, "strFaction", "Rebel");
	}

	messageTo(self, "bootStrap", null, 10, false);
	return SCRIPT_CONTINUE;

}

messageHandler bootStrap()
{

	if(!hasObjVar(self, "objParent"))
	{
		obj_id[] objParents = getAllObjectsWithTemplate(getLocation(self), 250, "object/tangible/poi/spawnegg/factional_dungeon_parent_object.iff");
		if((objParents!=null) &&(objParents.length!=0))
		{
			messageTo(objParents[0], "resetDungeon", null, 0, true);
			setObjVar(self, "objParent", objParents[0]);
			setObjVar(objParents[0], "intPoints", getIntObjVar(self, "intPoints"));
		}
		else
		{
			location locTest = getLocation(self);
			locTest.x = locTest.x +1;
			obj_id objParent = createObject("object/tangible/poi/spawnegg/factional_dungeon_parent_object.iff", locTest);
			persistObject(objParent);
			string strFaction = getStringObjVar(self, "strFaction");
			setObjVar(objParent, "strFaction", strFaction);
			setObjVar(self, "objParent", objParent);					// Suppress linting - Lint script is incorrectly
			int intPoints = getIntObjVar(self, "intPoints");			// catching this due to a similarly named array
			setObjVar(objParent, "intPoints", intPoints);
			messageTo(objParent, "resetDungeon", null, 10, true);
			factions.changeFactionPoints(strFaction, intPoints);
		}
	}
	return SCRIPT_CONTINUE;
}