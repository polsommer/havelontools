const float TIMELIMIT = 60*60*8;

trigger OnAttach()
{
	float rightNow = getGameTime();
	setObjVar(self, "event_perk.scavenger.startTime", rightNow);
	setObjVar(self, "event_perk.scavenger.my_score", 0);

	return SCRIPT_CONTINUE;
}

trigger OnLogin()
{	
	checkTimeLimit(self);	
	return SCRIPT_CONTINUE;
}

messageHandler checkForPossibleScore()
{
	int myScore = getIntObjVar(self, "event_perk.scavenger.my_score");
	int itemIndex = params.getInt("itemIndex");
	int[] itemsFound = getIntArrayObjVar(self, "event_perk.scavenger.items_found");
	obj_id droid = params.getObjId("droid");

	// Win
	if(itemsFound[itemIndex] == 0)
	{
		itemsFound[itemIndex] = 1;
		myScore++;
		setObjVar(self, "event_perk.scavenger.my_score", myScore);
		setObjVar(self, "event_perk.scavenger.items_found", itemsFound);
		params.put("player", self);
		messageTo(droid, "updateMasterScoreCard", params, 1, false);

		return SCRIPT_CONTINUE;
	}

	// Already turned this in.
	if(itemsFound[itemIndex] == 1)
	{
		sendSystemMessage(self, new string_id("event_perk", "scavenger_already_turned_in"));
	}

	return SCRIPT_CONTINUE;
}

messageHandler handleScavengerCleanup()
{
	if(hasObjVar(self, "event_perk.scavenger"))
		removeObjVar(self, "event_perk.scavenger");

	if(hasScript(self, "systems.event_perk.scavenger_player"))
		detachScript(self, "systems.event_perk.scavenger_player");

	return SCRIPT_CONTINUE;
}

void checkTimeLimit(obj_id self)
{
	float myCreationTime = getFloatObjVar(self, "event_perk.scavenger.startTime");
	float rightNow = getGameTime();
	float delta = rightNow - myCreationTime;
	string myName = getName(self);
	
	if(delta > TIMELIMIT)
	{
		messageTo(self, "handleScavengerCleanup", null, 1, false);
	}

	return;
}