include library.utils;

const string JUKBOX_SONG_OBJVAR = "storyteller.jukebox_song";
const string ROOMS_JUKEBOX_OBJVAR = "storyteller.room.myJukebox";

trigger OnInitialize()
{
	messageTo(self, "stopAndCleanUp", null, 1, false);
	return SCRIPT_CONTINUE;
}

trigger OnAboutToLoseItem (obj_id destinationCell, obj_id transferrer, obj_id item)
{
	if (isPlayer (item))
	{
		playMusic(item, "sound/music_silence.snd");
	}

	return SCRIPT_CONTINUE;
}

trigger OnAboutToReceiveItem (obj_id destinationCell, obj_id transferrer, obj_id item)
{
	string song = getMyJukeboxSong(self);

	if ( isPlayer (item) )
	{
		if ( allowedToListen(self, item) )
		{
			if( !song.equals("none") && song.length() > 0 )
			{
				playMusic(item, song);
			}
		}
	}

	return SCRIPT_CONTINUE;
}

boolean allowedToListen(obj_id self, obj_id player)
{
	// You may listen to a jukebox as if you are not in a story.
	//
	// If you are in a story, own the jukebox, or are assisting the jukebox owner,
	// you may listen to the jukeboxes that are part of that story, but not to any other jukeboxes.
	// This is intended to help prevent griefers from plopping down jukeboxes all over the place to grief other storytellers.
	obj_id storyteller = getObjIdObjVar(self, "storytellerid");
	if ( isIdValid(storyteller) )
	{
		if ( storyteller == player  )
		{
			return true;
		}
		else if ( utils.hasScriptVar(player, "storytellerAssistant") )
		{
			obj_id whoAmIAssisting = utils.getObjIdScriptVar(player, "storytellerAssistant");
			if ( isIdValid(whoAmIAssisting) && storyteller == whoAmIAssisting )
			{
				return true;
			}
		}
		else if ( utils.hasScriptVar(player, "storytellerid") )
		{
			obj_id playersStoryteller = utils.getObjIdScriptVar(player, "storytellerid");
			if ( isIdValid(playersStoryteller) && storyteller == playersStoryteller )
			{
				return true;
			}
		}
		else
		{
			return true;
		}
	}
	return false;
}

string getMyJukeboxSong(obj_id room)
{
	string song = "none";
	obj_id myJukebox = obj_id.NULL_ID;
	
	if ( hasObjVar(room, ROOMS_JUKEBOX_OBJVAR) )
	{
		myJukebox = getObjIdObjVar(room, ROOMS_JUKEBOX_OBJVAR);
		if ( isIdValid(myJukebox) && exists(myJukebox) )
		{
			song = getStringObjVar(myJukebox, JUKBOX_SONG_OBJVAR);
		}
		else
		{
			messageTo(room, "stopAndCleanUp", null, 1, false);
		}
	}
	
	return song;
}


messageHandler prepareToPlaySelectedSong()
{

	obj_id[] contents = getContents(self);
	for ( int i = 0; i < contents.length; i++ )
	{
		obj_id item = contents[i];
		if( isPlayer(item) )
		{
			if ( allowedToListen(self, item) )
			{
				playMusic(item, "sound/music_silence.snd");
			}
		}
	}

	messageTo(self, "playSelectedSong", null, 1, false);

	return SCRIPT_CONTINUE;
}

messageHandler playSelectedSong()
{
	string song = getMyJukeboxSong(self);

	if( !song.equals("none") && song.length() > 0 )
	{
		obj_id[] contents = getContents(self);
		for ( int i = 0; i < contents.length; i++ )
		{
			obj_id item = contents[i];
			if( isPlayer(item) )
			{
				if ( allowedToListen(self, item) )
				{
					playMusic(item, song);
				}
			}
		}
	}

	return SCRIPT_CONTINUE;
}

messageHandler stopSong()
{
	obj_id[] contents = getContents(self);
	for ( int i = 0; i < contents.length; i++ )
	{
		obj_id item = contents[i];
		if( isPlayer(item) )
		{
			if ( allowedToListen(self, item) )
			{
				playMusic(item, "sound/music_silence.snd");
			}
		}
	}
	
	return SCRIPT_CONTINUE;
}

messageHandler stopAndCleanUp()
{
	obj_id[] contents = getContents(self);
	for ( int i = 0; i < contents.length; i++ )
	{
		obj_id item = contents[i];
		if ( isPlayer(item) )
		{
			if ( allowedToListen(self, item) )
			{
				playMusic(item, "sound/music_silence.snd");
			}
		}
	}

	detachScript(self, "systems.event_perk.jukebox_room");
	return SCRIPT_CONTINUE;
}

trigger OnDetach()
{
	if ( hasObjVar(self, ROOMS_JUKEBOX_OBJVAR) )
	{
		removeObjVar(self, ROOMS_JUKEBOX_OBJVAR);
	}

	return SCRIPT_CONTINUE;
}