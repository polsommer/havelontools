/**
 * Copyright (c)2000-2005 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        systems/veteran_reward/antidecay_examine.script
 * Description:  Updates Examine window with information that the item has anti decay applied to it.  Also returns Anti Decay Kit back when item is destroyed
 */

include library.utils;

const string STF_VETERAN = "veteran_new";
const string_id SID_INVENTORY_FULL = new string_id(STF_VETERAN, "inventory_full");
const string_id SID_FAILED_KIT_CREATE = new string_id(STF_VETERAN, "failed_kit_create");
const string_id SID_KIT_CREATED = new string_id(STF_VETERAN, "kit_created");
const string_id SID_DETACH_KIT = new string_id(STF_VETERAN, "detach_kit");
const string ANTIDECAYKIT = "object/tangible/veteran_reward/antidecay.iff";

trigger OnInitialize()
{
	// reset item to max hitpoints
	setHitpoints(self, getMaxHitpoints(self));
	setInvulnerableHitpoints(self, getMaxHitpoints(self));
	return SCRIPT_CONTINUE;
}

trigger OnGetAttributes(obj_id playerId, string[] names, string[] attribs)
{
	int idx = getFirstFreeIndex(names);
	
	if( idx == -1 )
		return SCRIPT_CONTINUE;

	if( utils.isAntiDecay(self) )
	{

		names   [idx] = "@veteran_new:antidecay_examine_title";
		attribs [idx] = "@veteran_new:antidecay_examine_text";
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info item)
{
	// add a menu option to use the kit
	if (canManipulate(player, self, false, true, 0, true))
	{
		item.addRootMenu(menu_info_types.SERVER_MENU9, SID_DETACH_KIT);
	}

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if( item == menu_info_types.SERVER_MENU9 )
	{
		if (canManipulate(player, self, false, true, 0, true))
		{
			if (detachKit(self))
			{
				removeObjVar(self, "antidecay");
				detachScript(self, "systems.veteran_reward.antidecay_examine");
			}
		}
	}

	return SCRIPT_CONTINUE;
}

trigger OnDestroy()
{
	// make sure item is actually anti decay
	if( !utils.isAntiDecay(self) )
		return SCRIPT_CONTINUE;
	
	if (!detachKit(self))
		return SCRIPT_OVERRIDE;
	
	return SCRIPT_CONTINUE;
}

boolean detachKit(obj_id item)
{
	// only allow items with Anti Decay applied to them be destroyed if the item is in player's inventory 
	// and not equipped, so player can receive an Anti Decay Kit back
	obj_id player = utils.getContainingPlayer(item);
	if( !isIdValid(player) || getContainedBy(item) == player )
	{
		return false;
	}

	obj_id inv = utils.getInventoryContainer(player);
	if( !isIdValid(inv) )
		return false;
		
	if ( getVolumeFree(inv) < 1 )
	{
		// player has full inventory
		sendSystemMessage(player, SID_INVENTORY_FULL);
		return false;
	}

	obj_id kit = createObject( ANTIDECAYKIT, inv, "");
	if( !isIdValid(kit) )
	{
		// couldn't make an anti decay kit for this player
		sendSystemMessage(player, SID_FAILED_KIT_CREATE);
		return false;
	}

	sendSystemMessage(player, SID_KIT_CREATED);
	
	return true;
}