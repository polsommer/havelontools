/**********************************************************************
 * Copyright (c)2005 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        systems\veteran_reward\animate_object.script
 * Description:  Script to make an item animate when clicked
 * @author       $Author: Jesse Benjamin$
 * @version      $Revision: 1.0.0 $
 **********************************************************************/
include library.sui;
include library.utils;

const string LOCKOUT				= "animation_lockout";
const string LOCKOUT_TIME			= "lockout_time";
const string USE_STRING				= "use_string";
const string ANIMATION_NAME			= "animation_name";


trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if(!isIdValid(player))
		return SCRIPT_CONTINUE;

	//can only animate in the world
	if(!utils.isNestedWithinAPlayer(self))
	{
		menu_info_data mid = mi.getMenuItemByType(menu_info_types.ITEM_USE);
		string use_string = getStringObjVar(self, USE_STRING);

		mi.addRootMenu(menu_info_types.ITEM_USE, new string_id("spam", use_string));
	}
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(!isIdValid(player))
		return SCRIPT_CONTINUE;

	//some animations have lockout times
	if(utils.hasScriptVar(self, LOCKOUT))
	{
		sendSystemMessage(player, new string_id("spam", "in_use"));
		return SCRIPT_CONTINUE;
	}
	//make sure we are still in the world
	if(!utils.isNestedWithinAPlayer(self))
	{
		//play animation
		string animationName = getStringObjVar(self, ANIMATION_NAME);
		doAnimationAction(self, animationName);

		//if we have a lockout time, we need to enforce it.
		if(hasObjVar(self, LOCKOUT_TIME))
		{
			int lockoutTime = getIntObjVar(self, LOCKOUT_TIME);
			utils.setScriptVar(self, LOCKOUT, 1);
			messageTo(self, "animationLockout", null, lockoutTime, false);
		}
	}
	return SCRIPT_CONTINUE;
}

//use this to allow the animation to be played again.
messageHandler animationLockout()
{
	if(utils.hasScriptVar(self, LOCKOUT))
	{
		utils.removeScriptVar(self, LOCKOUT);
	}
	return SCRIPT_CONTINUE;
}

