include library.sui;
include library.utils;

const string_id REWARD_TRADE_IN = new string_id("veteran_new", "trade_in_reward");
const string SCRIPTVAR_REWARD_TRADE_IN_SUI_ID = "rewardTradeInSuiId";
const string SCRIPTVAR_REWARD_TRADE_IN_ITEM_ID = "rewardTradeInItemId";

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	mi.addRootMenu(menu_info_types.REWARD_TRADE_IN, REWARD_TRADE_IN);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if (item == menu_info_types.REWARD_TRADE_IN)
	{
		if (veteranCanTradeInReward(player, self))
		{
			// dismiss any existing confirmation window, and display new confirmation window
			if (utils.hasScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_SUI_ID))
			{
				int savedPageId = utils.getIntScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_SUI_ID);
				utils.removeScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_SUI_ID);
				utils.removeScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_ITEM_ID);
				forceCloseSUIPage(savedPageId);
			}

			int pid = sui.msgbox(player, player, "@veteran_new:trade_in_confirmation", sui.OK_CANCEL, "Reward Trade In Confirmation", "handleRewardTradeInConfirmation");
			sui.setSUIProperty(pid, sui.MSGBOX_BTN_CANCEL, sui.PROP_TEXT, "No");
			sui.setSUIProperty(pid, sui.MSGBOX_BTN_OK,     sui.PROP_TEXT, "Yes");
			utils.setScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_SUI_ID, pid);
			utils.setScriptVar(player, SCRIPTVAR_REWARD_TRADE_IN_ITEM_ID, self);
			showSUIPage(pid);
		}
	}

	return SCRIPT_CONTINUE;
}
