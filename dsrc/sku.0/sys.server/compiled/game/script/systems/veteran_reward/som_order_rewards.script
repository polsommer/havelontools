include library.groundquests;
include library.static_item;
include library.utils;

const string STF									= "som/som_item";
const string_id EXAMINE_MOUNT						= new string_id(STF, "generate_lava_flea");
const string_id EXAMINE_VEHICLE						= new string_id(STF, "generate_skiff");
const string_id ALREADY								= new string_id(STF, "");

trigger OnAttach()
{
	messageTo(self, "handleDeedCreate", null, 1f, false );
	return SCRIPT_CONTINUE;
}

messageHandler handleDeedCreate ()
{
	obj_id player = utils.getContainingPlayer(self);

	if (hasObjVar(self, "reward_type1"))
	{
		string object1 = getStringObjVar(self, "reward_type1");

		obj_id mustFlea = static_item.createNewItemFunction(object1, player);

		obj_id pInv = utils.getInventoryContainer( player );

		obj_id mustHouse = createObjectOverloaded("object/tangible/deed/player_house_deed/mustafar_house_lg.iff", pInv);

		CustomerServiceLog("ToOWRetailReward: ", "(" + player + ")"+ getFirstName(player) + " recieved " + "(" + mustFlea + ")" + " Lava Flea and " + "(" + mustHouse + ")" + " Mustafar Underground Bunker");

		destroyObject(self);
		return SCRIPT_CONTINUE;
	}

	if (hasObjVar(self, "reward_type"))
	{
		string object = getStringObjVar(self, "reward_type");

		obj_id TransportSkiff = static_item.createNewItemFunction(object, player);

		CustomerServiceLog("ToOWPreOrderReward: ", "(" + player + ")"+ getFirstName(player) + " recieved " + "(" + TransportSkiff + ")" + " Transport Skiff");

		destroyObject(self);
		return SCRIPT_CONTINUE;
	}

	return SCRIPT_CONTINUE;
}