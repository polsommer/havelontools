include library.create;
include library.utils;
include library.space_crafting;
include library.space_transition;

trigger OnAttach()
{
	return SCRIPT_CONTINUE;
}

trigger OnGiveItem(obj_id deed, obj_id player)
{
	obj_id playerInv = utils.getInventoryContainer(player);
	if (hasObjVar(deed, "isShipDeed"))
	{
		obj_id[] oldPcds = space_transition.findShipControlDevicesForPlayer(player);
		if (oldPcds != null && oldPcds.length > 0)
			{
				debugSpeakMsg(self, "You already have a ship.");
				return SCRIPT_CONTINUE;
			}
		obj_id datapad = utils.getDatapad(player);
		if (isIdValid(datapad))
			{
				obj_id pcd = createObjectOverloaded("object/intangible/ship/xwing_pcd.iff", datapad);
				if (!isIdValid(pcd))
					debugSpeakMsg(self, "Failed to create pcd");
				else
				{
					obj_id xwing = createObjectOverloaded("object/ship/player/player_xwing.iff", pcd);
					space_crafting.uninstallAll(/*playerInv, */xwing);
					utils.copyObjVarList(deed, xwing, "ship_comp");
					destroyObject(deed);
					debugSpeakMsg(self, "Congratulations!  You will find a new ship control device in your datapad.");
					if (isIdValid(xwing))
						setOwner(xwing, player);
					else
						debugSpeakMsg(self, "Failed to create xwing");
				}
			}


	}

	return SCRIPT_CONTINUE;
}
