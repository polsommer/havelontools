
/*************************************************************/

include library.city;
include library.collection;
include library.locations;
include library.groundquests;
include library.mustafar;
include library.sui;
include library.utils;

/************************************************************/

const string_id	RADIAL_INSPECT  		= new string_id ("quest/ground/util/quest_giver_object", "radial_inspect");
const string_id OFFER_QUEST_MSG			= new string_id	("quest/ground/util/quest_giver_object", "offer_quest");
const string_id SUI_TITLE			= new string_id ("quest/ground/util/quest_giver_object", "sui_title");
const string_id BUTTON_DECLINE  		= new string_id ("quest/ground/util/quest_giver_object", "button_decline");
const string_id BUTTON_ACCEPT			= new string_id ("quest/ground/util/quest_giver_object", "button_accept");
const string_id DECLINED_QUEST			= new string_id ("quest/ground/util/quest_giver_object", "declined_quest");
const string_id NOT_WHILE_INCAPPED		= new string_id ("quest/ground/util/quest_giver_object", "not_while_incapped");
const string_id SID_NOT_WHILE_IN_COMBAT		= new string_id("base_player", "not_while_in_combat");

const string ACTIVATION_SLOT_NAME		= "chapter_collection_activation";
const string PID_NAME 				= "chapter8_starter_quest_pid";
const string QUEST_NAME				= "chapter8_publish_gift_activation";

/*************************************************************/

//chapter8_publish_gift_activation

//checks to make sure the template of the object is in the datatable and checks the validity of the quest before changing USE to Inspect
trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{	
	int menuOption = mi.addRootMenu (menu_info_types.ITEM_USE, RADIAL_INSPECT);
	return SCRIPT_CONTINUE;
}

/************************************************************/

trigger OnObjectMenuSelect(obj_id player, int item)
{
	if(!isIdValid(player) || !exists(player))
		return SCRIPT_CONTINUE;
		
	if ( item == menu_info_types.ITEM_USE)
	{
		// checks for combat
		if(getState(player, STATE_COMBAT) > 0)
		{
			sendSystemMessage(player, SID_NOT_WHILE_IN_COMBAT);
			return SCRIPT_CONTINUE;
		}
		// you can't be dead!
		if(isDead(player) || isIncapacitated(player))
		{
			sendSystemMessage(player, NOT_WHILE_INCAPPED);
			return SCRIPT_CONTINUE;
		}
		// do you already have the quest active?
		if(!groundquests.isQuestActive(player, "chapter8_publish_gift_activation"))
		{
			//there's gotta be a different call - 
			mustafar.activateQuestAcceptSUI(player, self);
		}
	}
	return SCRIPT_CONTINUE;
}

/************************************************************/

messageHandler handleQuestOfferResponse()
{
	if ( (params == null) || (params.isEmpty()) )
	{
		return SCRIPT_CONTINUE;
	}
	
	obj_id player = sui.getPlayerId(params);

	if(!isIdValid(player) || !exists(player))
		return SCRIPT_CONTINUE;
		
	int bp = sui.getIntButtonPressed(params);
	
	// if you have any of these skills - you're a pilot already
	if(hasSkill(player, "pilot_neutral_novice") || hasSkill(player, "pilot_rebel_navy_novice")
	|| hasSkill(player, "pilot_imperial_navy_novice"))
	{
		switch ( bp )
		{
			case sui.BP_OK:	// "Accept"
				groundquests.grantQuest(player, "chapter8_publish_gift_is_pilot");
				modifyCollectionSlotValue(player, ACTIVATION_SLOT_NAME, 1);
				destroySelf(self);
				break;

			case sui.BP_CANCEL: // "Decline"
				sendSystemMessage(player, DECLINED_QUEST);
				break;
		}
		
	}
	// you don't have pilot skills - let's direct you to a pilot trainer
	else
	{
		switch ( bp )
		{		
			case sui.BP_OK:	// "Accept"
				groundquests.grantQuest(player, "chapter8_publish_gift_activation");
				modifyCollectionSlotValue(player, ACTIVATION_SLOT_NAME, 1);
				destroySelf(self);
				break;
			case sui.BP_CANCEL: // "Decline"
				sendSystemMessage(player, DECLINED_QUEST);
				break;
		}
	}
	return SCRIPT_CONTINUE;
}

/************************************************************/

// Check to see if the quest object should be destroyed or not.
void destroySelf(obj_id self)
{
	detachScript(self,"item.special.nodestroy");
	destroyObject(self);
}

//------------------------------------------------------------

