include library.hue;
include library.sui;
include library.utils;

const string_id MNU_COLOR					= new string_id("sui", "set_color");
const string SCRIPTVAR_ARMOR_PID			= "armor_rehue.pid";

trigger OnInitialize()
{

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	if ( !utils.isNestedWithin(self, player) )
		return SCRIPT_CONTINUE;

	int mnuColor = mi.addRootMenu(menu_info_types.SERVER_MENU1, MNU_COLOR);
	if ( mnuColor > -1 && (( getContainedBy(self) != getOwner(self) ) || isGod(player)) )
	{
		string template = utils.getTemplateFilenameNoPath(self);
	}

	return SCRIPT_CONTINUE;
}


trigger OnObjectMenuSelect(obj_id player, int item)
{
	if ( !utils.isNestedWithin(self, player) )
		return SCRIPT_CONTINUE;

	string template = utils.getTemplateFilenameNoPath(self);

	if ( item == menu_info_types.SERVER_MENU1 )
	{
		if ( getContainedBy(self) == getOwner(self) )
		{
			string_id sysmessage = new string_id("armor_rehue", "equipped");
			sendSystemMessage( player, sysmessage);
			return SCRIPT_CONTINUE;
		}

		if ( utils.hasScriptVar(self, SCRIPTVAR_ARMOR_PID) )
		{
			int oldpid = utils.getIntScriptVar(self, SCRIPTVAR_ARMOR_PID);
			sui.closeSUI(player, oldpid);
			utils.removeScriptVar(self, SCRIPTVAR_ARMOR_PID);
		}


		string index = hue.INDEX_1;
		if ( index != null && !index.equals("") && !index.equals("none") )
		{
			int pid_armor = sui.colorize(self, player, self, index, "handleColorize");
			if (pid_armor > -1)
				utils.setScriptVar(self, SCRIPTVAR_ARMOR_PID, pid_armor);
		}

	}



	return SCRIPT_CONTINUE;
}

messageHandler handleColorize()
{
	utils.removeScriptVar(self, SCRIPTVAR_ARMOR_PID);

	int bp = sui.getIntButtonPressed(params);
	if ( bp == sui.BP_CANCEL )
		return SCRIPT_CONTINUE;

	obj_id player = sui.getPlayerId(params);
	if ( !isIdValid(player) )
		return SCRIPT_CONTINUE;

	string template = utils.getTemplateFilenameNoPath(self);
	string index = hue.INDEX_1;
	if ( index != null && !index.equals("") && !index.equals("none") )
	{
		int idx = sui.getColorPickerIndex(params);
		if ( idx > -1 )
		{
			hue.setColor(self, index, idx);
		}
	}

	return SCRIPT_CONTINUE;
}