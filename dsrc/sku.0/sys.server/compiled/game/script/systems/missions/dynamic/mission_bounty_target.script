// -----------------------------------------------------------------------
// Copyright (c) ©2000,2001 Sony Online Entertainment Inc.
// All Rights Reserved
// -----------------------------------------------------------------------
// $File: //depot/swg/current/dsrc/sku.0/sys.server/plt.shared/loc.shared/compiled/game/script/systems.missions/dynamic/mission_escort_target.script $
// $Change: 16929 $
// $Author: drubenfield $
// $Revision: #11 $
// This is the escort mission escortee script

include library.ai_lib;
include library.missions;

// I'll need to add the oninitialized, and the onAdded to world bits here. I also need to add the secondary messageHandler
inherits systems.missions.base.mission_dynamic_base;

trigger OnAttach()
{
	obj_id objHunter = getObjIdObjVar(self, "objHunter");
	if(objHunter!=null)
	{
		pvpSetPermanentPersonalEnemyFlag(self, objHunter);	 //setup the Tef between BH and target.
	}

	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;


}



trigger OnInitialize()
{
	obj_id objHunter = getObjIdObjVar(self, "objHunter");
	if(objHunter!=null)
	{
		pvpSetPermanentPersonalEnemyFlag(self, objHunter);	 //tef doesnt persist.. so we fix it on initialize.
	}

	if (!hasScript (self, "systems.missions.base.mission_cleanup_tracker"))
	{
		attachScript (self, "systems.missions.base.mission_cleanup_tracker");
	}
	return SCRIPT_CONTINUE;
}


trigger OnRemovingFromWorld()
{
	// make sure to notify the mission object so we can reset the spawn event!
	/*
	if(!hasObjVar(self, "intKilled"))
	{
		obj_id objMission = getObjIdObjVar(self, "objMission");
		obj_id objMissionHolder = getObjIdObjVar(self, "objMissionHolder");
		setupUnloadedSpawn(objMission, objMissionHolder, getLocation(self)); // tell my master that i'm gone and the respawn event has to be reset

		debugServerConsoleMsg(self, "objMission is "+objMission.toString());
		debugServerConsoleMsg(self, "resetting Spawn");
		destroyObject(self); // HACK WILL BE REMOVED AFTER WE GET NONPERSISTANCE FLAG!
	}
	*/
	return SCRIPT_CONTINUE;




}


trigger OnAddedToWorld()
{

	return SCRIPT_CONTINUE;

}



trigger OnDeath(obj_id objKiller, obj_id objCorpse)
{
	LOG("mission", "Killed by "+objKiller);
	setObjVar(self, "intKilled", 1); // so we can trigger the success event correctly
	obj_id mission = getObjIdObjVar(self, "objMission");
	if ( isIdValid(mission) )
	{
		setObjVar(mission, "intState", missions.STATE_MISSION_COMPLETE);
		messageTo(mission, "bountySuccess", null, 0, true);
	}

	setObjVar(self, "intKilled", 1);	// ???
	return SCRIPT_CONTINUE;
}


trigger OnIncapacitated(obj_id objKiller)
{
	int intHealth = getHealth(self);
	int intAction = getAction(self);
	int intMind = getMind(self);
	if(intHealth<0)
	{
		setHealth(self, -10000);
	}
	if(intAction<0)
	{
		setAction(self, -10000);

	}
	if(intMind<0)
	{

		setMind(self, -10000);
	}
	setObjVar(self, "intKilled", 1); // so we can trigger the success event correctly


	return SCRIPT_CONTINUE;
}

trigger OnRecapacitated()
{

	return SCRIPT_OVERRIDE;

}
messageHandler destroySelf()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;

}
