@echo off
setlocal

set startDir=%_cwd

REM FIND WHERE SCRIPT_PREP.PYC IS

set preprocessor=""
set lim=%@WORDS[";", %path]
do i = 0 to %@DEC[%lim]
	set test=%@WORD[";", %i, %path]
	if exist %test\script_prep.pyc (
		set preprocessor=%test\script_prep.pyc
	)
enddo
if %preprocessor="" (
	echo can't find script_prep.pyc in your path!
	goto end
)


REM FIND THE BASE SOURCE AND DESTINATION DIRECTORIES FOR JAVA

for %j in (*.script;*.scriptlib;*.java) do (
	set k=%@FULL[%j]
	set i=%@INDEX[%k,script]
	if %i ne -1 (
		set JAVASOURCEPATH=%@LEFT[%@EVAL[%i - 1],%k]
		goto foundSourcePath
	)
)

echo can't find directory "script" in path
goto end

:foundSourcePath
set JAVACLASSPATH=%@REPLACE[dsrc,data,%JAVASOURCEPATH]


REM RECURSIVELY GO DOWN THE DIRECTORIES, COMPILING SCRIPTS INTO JAVA FILES

cd "%startDir"
for %scriptfile in (*.script;*.scriptlib) do (
	gosub compileScript
)
for /a:d /h /r %i in (*) do (
	cd %i
	for %scriptfile in (*.script;*.scriptlib) do (
		gosub compileScript
	)
)


REM NOW COMPILE ALL THE JAVA FILES WE CREATED

cd "%startDir"
for %javafile in (*.java) do (
	gosub compileJava
)
for /a:d /h /r %i in (*) do (
	cd %i
	for %javafile in (*.java) do (
		gosub compileJava
	)
)

goto end


:compileScript
echo converting %@REPLACE[%JAVASOURCEPATH\, , %@FULL[%scriptfile]] to Java
python %preprocessor -nocompile %scriptfile > NUL
return

:compileJava
set INFILE=%@FULL[%javafile]
set OUTPATH=%@REPLACE[dsrc,data,%@PATH[%INFILE]]
if not exist %OUTPATH md /s %OUTPATH
echo compiling %@REPLACE[%JAVASOURCEPATH\, , %@FULL[%javafile]]
javac -classpath "%JAVACLASSPATH" -d "%JAVACLASSPATH" -sourcepath "%JAVASOURCEPATH" -g -deprecation %javafile
return


:end
cd "%startDir"
endlocal
