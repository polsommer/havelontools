// -----------------------------------------------------------------------
// Copyright (c) ©2000,2001 Sony Online Entertainment Inc.
// All Rights Reserved
// -----------------------------------------------------------------------



inherits systems.missions.base.mission_dynamic_base;


void addListener(obj_id objListener, obj_id objTarget)
{

	dictionary dctParams = new dictionary();
	dctParams.put("objListener", objListener);
	messageTo(objTarget, "addListener", dctParams, 0, true);
	return;


}


void removeListener(obj_id objListener, obj_id objTarget)
{

	dictionary dctParams = new dictionary();
	dctParams.put("objListener", objListener);
	messageTo(objTarget, "removeListener", dctParams, 0, true);
	return;



}


void playerDestructionIncomplete(obj_id objMission)
{
	dictionary dctParams = new dictionary();
	obj_id objPlayer = getMissionHolder(objMission);
	debugSpeakMsg(objPlayer, "MISSION IS INCOMPLETE!");
	messageTo(objMission, "destructionIncomplete", dctParams, 0, true);  // spawner timer has started
	return;

}


void playerDestructionFail(obj_id objMission)
{
	dictionary dctParams = new dictionary();
	obj_id objPlayer = getMissionHolder(objMission);
	debugSpeakMsg(objPlayer, "MISSION IS FAILED!");
	messageTo(objMission, "destructionFail", dctParams, 0, true);  // spawner timer has started
	return;

}

void playerDestructionSuccess(obj_id objMission)
{
	dictionary dctParams = new dictionary();

	obj_id objPlayer = getMissionHolder(objMission);
	debugSpeakMsg(objPlayer, "MISSION IS SUCCESFUL!");
	messageTo(objMission, "destructionSuccess", dctParams, 0, true);  // spawner timer has started
	return;



}

void returnAllCredits(obj_id objMission)
{
	// sends all rewards and bonds back to where they belong
/*
	int intBond;
	int intReward;

	obj_id objMissionData = getMissionData(objMission);
	obj_id objMissionCreator = getMissionCreator(objMissionData);

	intReward = getIntObjVar(objMission, "intReward");

//	transferBankCreditsTo(objMission, objMissionCreator, intReward); // send the reward back to where it goes

	debugSpeakMsg(objMissionCreator, "I received my "+intReward+" Reward back from an incomplete mission");


	if(hasObjVar(objMission, "intBond"))
	{

		obj_id objPlayer = getMissionHolder(objMission);
		intBond = getIntObjVar(objMission, "intBond");
//		transferBankCreditsTo(objMission, objPlayer, intBond);
		debugSpeakMsg(objPlayer, "I received my "+intBond+" Bond back from an incomplete mission");
	}

	return;
	*/

}

void addBountyHunterTrackingInformation(obj_id objPlayer, obj_id objBountyHunter, obj_id objMission)
{
	debugServerConsoleMsg(objPlayer, "objPlayer is "+objPlayer.toString());
	debugServerConsoleMsg(objPlayer, "inAddBountyHunterTrackingInfo");

	if(hasObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()))
	{
		debugServerConsoleMsg(objPlayer, "Has BountyInfo ObjVar");




		int intMissionCount = getIntObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".intMissionCount");
		intMissionCount = intMissionCount+1;
		debugServerConsoleMsg(objPlayer, "intMissionCount is "+intMissionCount);

		setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".intMissionCount", intMissionCount);
		setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intMissionCount, objMission);

		debugServerConsoleMsg(objPlayer, "setObjVar's");

		// bounty hunter already has an entry, we need to add a mission to the list
		// structure is bountyInfo.objBountyHunter.index.missionId
		// bountyInfo.objBountyHunter.intMissionCount =

		// there.. We incremented the count, and can kick back

	}
	else
	{
		debugServerConsoleMsg(objPlayer, "No info ObjVar");
		/// objvar not set, set it up!
		int intBountyHunters = getIntObjVar(objPlayer, "bountyInfo.intBountyHunters"); // how many hunters do i have
		intBountyHunters = intBountyHunters+1;
		setObjVar(objPlayer, "bountyInfo.intBountyHunters", intBountyHunters);
		debugServerConsoleMsg(objPlayer, "setting "+"bountyInfo."+objBountyHunter.toString()+".1."+objMission.toString());
		setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".1",objMission); // sets the objvar for us
		setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".intMissionCount",1); // sets the objvar for us


	}

	return;


}

void removeBountyHunterTrackingInformation(obj_id objPlayer, obj_id objBountyHunter, obj_id objMission)
{
	// we need to copy all of the data into an array and recreate the objvar list completely

	if(hasObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()))
	{
		debugServerConsoleMsg(objPlayer, "hasObjVar");
		int intMissionCount = getIntObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".intMissionCount");

		debugServerConsoleMsg(objPlayer, "intMissionCount = "+intMissionCount);
		int intI = 1; //we've gotta find the element with out removal guy
		int intJ = 0; // the array copy counter
		int intMissionIndex;
		if(intMissionCount>1)
		{
			debugServerConsoleMsg(objPlayer, "intMissionCount is greater than 1");
			obj_id objBackup[] = new obj_id[intMissionCount];

			while (intI<=intMissionCount)
			{
				debugServerConsoleMsg(objPlayer, "intI is "+intI);
				if(objMission==getObjIdObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intI))
				{
					debugServerConsoleMsg(objPlayer, "found mission obj_id at position "+intI+" in removebountyhunter");
					// we've got a match

// I LEFT OFF HERE! CONTINUE ON MONDAY
				}
				else
				{
					debugServerConsoleMsg(objPlayer, "intI is "+intI);
					debugServerConsoleMsg(objPlayer, "intJ is "+intJ);
					debugServerConsoleMsg(objPlayer, "objBackup[] length is "+objBackup.length);
					debugServerConsoleMsg(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intI);
					objBackup[intJ] = getObjIdObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intI);
					intJ = intJ+1;
					// its -1 because arrays start at 0 and our count starts at 1;
				}

				intI = intI+1;



			}
			// now we've gotta recreate the objvar list
			intI = 0;// 0 since we're using the array this time
			intJ = 1; // this is for setting our objvar list
			debugServerConsoleMsg(objPlayer, "Now we need to recopy the array");
			while (intI<objBackup.length-1)
			{
				debugServerConsoleMsg(objPlayer, "intI is "+intI+" intJ is "+intJ);

				setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intJ, objBackup[intI]);

				intI = intI+1;
				intJ = intJ+1;
			}
			// last part is to remove the last entry in the list since we fixed it
			removeObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+"."+intMissionCount);
			intMissionCount = intMissionCount-1; // decrement the count so we can keep an accurate count of the total number of missions

			setObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".intMissionCount", intMissionCount); // decrement the total msision count




		}
		else if(objMission==getObjIdObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()+".1"))
		{
			debugServerConsoleMsg(objPlayer, "removing ");
			// manually remove the objvar, then return;
			removeObjVar(objPlayer, "bountyInfo."+objBountyHunter.toString()); // we remove the whole shebang
			int intBountyHunters = getIntObjVar(objPlayer, "bountyInfo.intBountyHunters");
			intBountyHunters = intBountyHunters - 1;
			if(intBountyHunters==0)
			{
				removeObjVar(objPlayer, "bountyInfo");// all clear.. remove the list

			}
			else
			{
				setObjVar(objPlayer, "bountyInfo.intBountyHunters", intBountyHunters); // reset the new count

			}




		}


	}

	return;



}
// The two functions below parse through the listing of mission object id's

void notifyBountyHunterFailure(obj_id objPlayer, obj_id objTarget) // target was killed by bountied player. Missions fail
{
	int intI;

	intI = 1;
	int intMissionCount = getIntObjVar(objPlayer, "bountyInfo."+objTarget.toString()+".intMissionCount");
	dictionary dctParams = new dictionary();

	debugServerConsoleMsg(objPlayer, "intMissionCount of bountyHunterNotification is "+intMissionCount);

	while (intI<=intMissionCount)
	{
		// count goes from 1 to X

		obj_id objMission = getObjIdObjVar(objPlayer, "bountyInfo."+objTarget.toString()+"."+intI);
		messageTo(objMission, "bountyHunterFail", dctParams, 0, true);



		intI = intI+1;
	}


	return;



}

void notifyBountyHunterSuccess(obj_id objPlayer, obj_id objTarget) // target was killed by bountied player. Missions fail
{
	int intI;

	intI = 1;
	int intMissionCount = getIntObjVar(objPlayer, "bountyInfo."+objTarget.toString()+".intMissionCount");
	dictionary dctParams = new dictionary();

	debugServerConsoleMsg(objPlayer, "intMissionCount of bountyHunterNotification is "+intMissionCount);

	while (intI<=intMissionCount)
	{
		// count goes from 1 to X

		obj_id objMission = getObjIdObjVar(objPlayer, "bountyInfo."+objTarget.toString()+"."+intI);
		debugServerConsoleMsg(objPlayer, "bountyInfo."+objTarget.toString()+"."+intI+" is "+objMission.toString());
		messageTo(objMission, "bountyHunterSuccess", dctParams, 0, true);



		intI = intI+1;
	}


	return;



}
