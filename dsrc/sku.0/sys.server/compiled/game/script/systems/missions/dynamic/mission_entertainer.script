

include library.utils;

inherits systems.missions.base.mission_dynamic_base;
trigger OnInitialize()
{


	return SCRIPT_CONTINUE;
}
trigger OnAttach()
{


	return SCRIPT_CONTINUE;


}

messageHandler abortMission()
{
	sendEntertainerIncomplete(self);
	return SCRIPT_CONTINUE;



}

messageHandler OnStartMission()
{

	debugServerConsoleMsg(self, "Setting up mission data in mission object for entertainer mission");
	obj_id objMissionData = getMissionData(self);
	location locDestination = getMissionStartLocation(objMissionData);
	updateMissionWaypoint(self, locDestination);
	
	return SCRIPT_CONTINUE;


}


messageHandler entertainerSuccess()
{
	if(!hasObjVar(self, "intCompleted"))
	{
		setObjVar(self, "intCompleted", 1);

		obj_id objPlayer = getMissionHolder(self);
		playMusic(self, "sound/music_mission_complete.snd");

		deliverReward(self);
		endMission(self);
	}
	
	return SCRIPT_CONTINUE;

}

messageHandler entertainerFail()
{

//	sendMissionPersistentMessage(self, "fail");
	endMission(self);
	return SCRIPT_CONTINUE;

}

messageHandler entertainerIncomplete()
{

	obj_id objPlayer = getMissionHolder(self);
	playMusic(objPlayer, "sound/music_mission_complete.snd");
	endMission(self);
	return SCRIPT_CONTINUE;



}


messageHandler OnEndMission()
{


	return SCRIPT_CONTINUE;


}

messageHandler entertainerEvent()
{
	return SCRIPT_CONTINUE;



}


 
