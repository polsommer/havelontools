inherits systems.missions.base.mission_dynamic_base;



trigger OnObjectMenuRequest(obj_id player, menu_info mi)
{
	
	menu_info_data mid = mi.getMenuItemByType(menu_info_types.EXAMINE);
	if ( mid != null )
	{
		mid.setServerNotify(true);
	}
	
	mid = mi.getMenuItemByType (menu_info_types.ITEM_USE);

	if (mid != null)
	{
		mid.setServerNotify (true);
	}
 	
  	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuSelect(obj_id player, int item)
{
	
	if ( item == menu_info_types.ITEM_USE)
	{
		obj_id objMission = getAssassinMission(player);
		if(objMission==null)
		{
			string_id strSpam = new string_id("mission/mission_generic", "no_assassin_mission");
			sendSystemMessage(player, strSpam);
			return SCRIPT_CONTINUE;
		
		}
		if(!hasObjVar(objMission, "objNPC"))
		{

			string_id strSpam = new string_id("mission/mission_generic", "no_assassin_target");
			sendSystemMessage(player, strSpam);
			return SCRIPT_CONTINUE;		
		}
		obj_id objTarget = getObjIdObjVar(objMission, "objNPC");
		if(objTarget==null)
		{
			return SCRIPT_CONTINUE;
		}
		if(!exists(objTarget))
		{
			string_id strSpam = new string_id("mission/mission_generic", "no_assassin_target");
			sendSystemMessage(player, strSpam);
			return SCRIPT_CONTINUE;			
		}		
		queueCommand(player, ##"findAssassinTarget", objTarget, "", COMMAND_PRIORITY_FRONT);
	}  
 	return SCRIPT_CONTINUE; 
}
