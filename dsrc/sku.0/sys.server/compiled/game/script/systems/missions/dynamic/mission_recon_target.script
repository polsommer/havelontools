// -----------------------------------------------------------------------
// Copyright (c) ©2000,2001 Sony Online Entertainment Inc.
// All Rights Reserved
// -----------------------------------------------------------------------
// $File: //depot/swg/current/dsrc/sku.0/sys.server/plt.shared/loc.shared/compiled/game/script/systems.missions/dynamic/mission_escort_target.script $
// $Change: 16929 $
// $Author: drubenfield $
// $Revision: #11 $
// This is the escort mission escortee script


// I'll need to add the oninitialized, and the onAdded to world bits here. I also need to add the secondary messageHandler
inherits systems.missions.base.mission_dynamic_base;

trigger OnInitialize ()
{
	if (!hasScript (self, "systems.missions.base.mission_cleanup_tracker"))
	{
		attachScript (self, "systems.missions.base.mission_cleanup_tracker");
	}
	return SCRIPT_CONTINUE;
}


trigger OnAttach()
{


	return SCRIPT_CONTINUE;


}

trigger OnHearSpeech(obj_id objSpeaker, string strText)
{


	return SCRIPT_CONTINUE;

}


trigger OnRemovingFromWorld()
{
	// make sure to notify the mission object so we can reset the spawn event!
	/*
	if(!hasObjVar(self, "intKilled"))
	{
		obj_id objMission = getObjIdObjVar(self, "objMission");
		obj_id objMissionHolder = getObjIdObjVar(self, "objMissionHolder");
		setupUnloadedSpawn(objMission, objMissionHolder, getLocation(self)); // tell my master that i'm gone and the respawn event has to be reset

		debugServerConsoleMsg(self, "objMission is "+objMission.toString());
		debugServerConsoleMsg(self, "resetting Spawn");
		destroyObject(self); // HACK WILL BE REMOVED AFTER WE GET NONPERSISTANCE FLAG!
	}
	*/
	return SCRIPT_CONTINUE;




}


trigger OnAddedToWorld()
{

	return SCRIPT_CONTINUE;

}

trigger OnObjectDisabled(obj_id objKiller)
{
	LOG("mission", "Killed by "+objKiller);
	setObjVar(self, "intKilled", 1); // so we can trigger the success event correctly
	obj_id objDestroyer = getObjIdObjVar(self, "objDestroyer");
	LOG("mission", "objDestroyer is  "+objDestroyer);

	sendReconSuccess(getObjIdObjVar(self, "objMission"));
/*	if (objDestroyer == objKiller)
	{

		//debugSpeakMsg(self, "You're  a mission completer! WINNER!");


	}
	else
	{
		//debugSpeakMsg(self, "INCOMPLETE");
		sendReconIncomplete(getObjIdObjVar(self, "objMission"));


	}

*/
	setObjVar(self, "intKilled", 1);
	return SCRIPT_CONTINUE;

}



messageHandler destroySelf()
{
	destroyObject(self);
	return SCRIPT_CONTINUE;

}