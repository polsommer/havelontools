/****************************************************************
 * 																*
 * DEPRECATED SCRIPLIB - DO NOT USE								*
 * 																*
 * 	 BAD BAD BAD BAD BAD BAD BAD BAD BAD BAD BAD BAD BAD BAD	*
 * 																*
 * 																*
 *   This file will be deleted SOON.  Whatever you have		 	*
 * 	 using it, make not use it!									*
 * 															 	*
 *   Use library.create.scriptlib for all your NPC spawning.	*
 * 															 	*
 ****************************************************************/

/* -----------------7/24/02 12:48PM------------------
* Copyright (c) ©2000-2002 Sony Online Entertainment Inc.
* All Rights Reserved
*
* This script is the one called by any scripts that need to
* create random NPCs.  It makes sure they have appropriate clothes
* and dresses them using datatables.  It also randomly determines gender
* and species using datatables.
* --------------------------------------------------*/

include library.slots;
include library.hue;
include library.ai_lib;
include library.factions;
include library.utils;

const string species_table 					= "datatables/npc_customization/species_choices2.iff";
const string random_type 					= "datatables/npc_customization/random_type.iff";
const string job_table 						= "datatables/npc_customization/job_table.iff";
const string skill_table 					= "datatables/npc_customization/skill_table.iff";

const string VERYEASY 						= "veryEasy";
const string EASY 							= "easy";
const string MEDIUM 						= "medium";
const string HARD 							= "hard";
const string VERYHARD 						= "veryHard";

const string TYPE_HUTT 						= "hutt";
const string TYPE_PIRATE 					= "pirate";
const string TYPE_REBEL 					= "rebel";
const string TYPE_TOWNPERSON 				= "townperson";
const string TYPE_STORMTROOPER 				= "stormtrooper";
const string TYPE_STORMTROOPER_LEADER 		= "stormtrooper_leader";
const string TYPE_JAWA 						= "jawa";
const string TYPE_TUSKEN 					= "tusken";
const string TYPE_DROID 					= "droid";

const string DATATABLE_NPC_CREATE			= "datatables/npc/create_npc.iff";
const string COL_KEY						= "KEY";
const string COL_TEMPLATE					= "TEMPLATE";

obj_id create(string type, location loc)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB create(string type, location loc)");
	return null;
}


obj_id createNpc (string type, location loc)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createNpc (string type, location loc)" );
	return null;
}


obj_id createNpc (string type, obj_id bldg, string cellName)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createNpc (string type, obj_id bldg, string cellName)" );
	return null;
}


obj_id createNpc (string type, obj_id box, float x, float z)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createNpc (string type, obj_id box, float x, float z)" );
	return null;
}


obj_id createNpc ( location here )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createNpc ( location here )" );
	return null;
}


void hueClothes( obj_id newClothes, string clothes )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB hueClothes( obj_id newClothes, string clothes )" );
	return;
}


string chooseSpecies ( string type, int number, string gender )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB TO MAKE chooseSpecies ( string type, int number, string gender )" );
	return null;
}


string chooseGender ()
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB chooseGender ()");
	return null;
}


string chooseName( int number )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB chooseName( int number )" );
	return null;
}


void dressUp (obj_id npc, string type, string gender)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB dressUp (obj_id npc, string type, string gender)" );
	return;
}


void dressHair (obj_id npc, string name, string gender)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB dressHair (obj_id npc, string name, string gender)" );
	return;
}


obj_id makeStormtrooperInside (obj_id bldg, string cellName )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB makeStormtrooperInside (obj_id bldg, string cellName )" );
	return null;
}


void scriptAttach (obj_id npc, string type)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB scriptAttach (obj_id npc, string type)" );
	return;
}


obj_id makeDroid (location loc)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB makeDroid (location loc)");
	return null;
}


obj_id createAlienNpc( string alien, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createAlienNpc( string alien, location loc )");
	return null;
}

obj_id createBothan( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB  createBothan( string type, location loc )");
	return null;
}

obj_id createHuman ( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createHuman ( string type, location loc )");
	return null;
}

obj_id createHumanMale ( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB  createHumanMale ( string type, location loc )");
	return null;
}


obj_id createMoncal ( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createMoncal ( string type, location loc )");
	return null;
}


obj_id createRodian( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB  createRodian( string type, location loc )");
	return null;
}


obj_id createTrandoshan( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createTrandoshan( string type, location loc )");
	return null;
}


obj_id createTwilek( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createTwilek( string type, location loc )");
	return null;
}


obj_id createWookiee ( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createWookiee ( string type, location loc )");
	return null;
}


obj_id createZabrak ( string type, location loc )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB createZabrak ( string type, location loc )");
	return null;
}

int findDifficulty ()
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB findDifficulty ()");
	return 0;
}

void spamErrorMsg( string text )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB spamErrorMsg( string text )");
	return;
}

string getClothingTemplateName ( string tableName, int column )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB getClothingTemplateName ( string tableName, int column )");
	return null;
}

obj_id setDifficulty (obj_id npc, string diff)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB setDifficulty (obj_id npc, string diff)");
	return null;
}

obj_id setDifficulty ( obj_id npc, int diff )
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB setDifficulty ( obj_id npc, int diff )");
	return null;
}

boolean setFactionRecruiter(obj_id npc, string faction)
{
	debugServerConsoleMsg( getSelf(), "WARNING: SOMETHING IS STILL USING NPC.SCRIPTLIB setFactionRecruiter(obj_id npc, string faction)");
	return false;
}

