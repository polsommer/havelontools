/*

This library is fucking awful.
Please do NOT USE ANY OF THESE FUNCTIONS ANYMORE.
THERE IS NO METHOD TO DETERMINE WHY SOMETHTING DOESN"T FUCKING WORK AND WHICH OF THESE GODDAMNED WRAPPERS YOUA RE CALLING











/**
 * Copyright (c)2000-2002 Sony Online Entertainment Inc.
 * All Rights Reserved
 *
 * Title:        prose.scriptlib
 * Description:  wrapper functions for prose packaging
 * @author       $Author:$
 * @version      $Revision:$
 */

/***** INCLUDES ********************************************************/



//* %TU           user
//* %TT           target
//* %TO           other object

/// real fucking wrappers go here

prose_package setStringId(prose_package pp, string_id strSpam)
{
	pp.stringId = strSpam;
	return pp;
}
prose_package setTT(prose_package pp, string strTarget)
{
	pp.target.set(strTarget);
	return pp;
}

prose_package setTT(prose_package pp, obj_id objTarget)
{
	pp.target.set(objTarget);
	return pp;
}
prose_package setTT(prose_package pp, string_id strTarget)
{
	pp.target.set(strTarget);
	return pp;
}

prose_package setTU(prose_package pp, string strTarget)
{
	pp.actor.set(strTarget);
	return pp;
}

prose_package setTU(prose_package pp, obj_id objTarget)
{
	pp.actor.set(objTarget);
	return pp;
}
prose_package setTU(prose_package pp, string_id strTarget)
{
	pp.actor.set(strTarget);
	return pp;
}

prose_package setTO(prose_package pp, string strTarget)
{
	pp.other.set(strTarget);
	return pp;
}
prose_package setTO(prose_package pp, obj_id objTarget)
{
	pp.other.set(objTarget);
	return pp;
}
prose_package setTO(prose_package pp, string_id strTarget)
{
	pp.other.set(strTarget);
	return pp;
}
prose_package setDI(prose_package pp, int intTest)
{
 	pp.digitInteger = intTest;
	return pp;
}
prose_package setDF(prose_package pp, float fltTest)
{	
	pp.digitFloat = fltTest;
	return pp;
}






////////////////FUCKED UP STUFF GOES DOWN HERE

prose_package getPackage(string_id sid)
{

	prose_package pp = new prose_package();
	pp.stringId = sid;
	return pp;

}


/***** CONSTANTS *******************************************************/





prose_package getPackage(string_id sid,
						obj_id actor,  string actorString,  string_id actorStringId,
						obj_id target, string targetString, string_id targetStringId,
						obj_id other,  string otherString,  string_id otherStringId,
						int di, float df)
{
	//-- if string is set, stringId is redundant.
	//-- strip it.

	if (actorString != null && actorString != "")
		actorStringId = null;
	if (targetString != null && targetString != "")
		targetStringId = null;

	prose_package pp = new prose_package();
	pp.stringId = sid;

	pp.actor.set  (actor,  actorStringId,  actorString);
	pp.target.set (target, targetStringId, targetString);
	pp.other.set  (other,  otherStringId,  otherString);

	pp.digitInteger = di;
	pp.digitFloat   = df;

	return pp;
}
/***** FUNCTIONS ********************************************************/
/************************************************************************
 * @brief 	creates a generic prose package
 *			- requires "complex grammar" STF entry
 *
 * @param 	string_id 	sid
 * @param 	obj_id		actor
 * @param 	obj_id		target
 * @param 	string_id 	other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, obj_id actor, obj_id target, obj_id other, int di)
{
	prose_package pp = new prose_package();
	pp.stringId = sid;

	if ( actor != null )
		pp.actor.set(actor);

	if ( target != null )
		pp.target.set(target);

	if ( other != null )
		pp.other.set(other);

	pp.digitInteger = di;

	return pp;
}

prose_package getPackage(string_id sid, obj_id actor, obj_id target, obj_id other)
{
	return getPackage(sid, actor, target, other, 0);
}

prose_package getPackage(string_id sid, obj_id actor, obj_id target, string_id other, int di)
{
	prose_package pp = new prose_package();
	pp.stringId = sid;

	if ( actor != null )
		pp.actor.set(actor);

	if ( target != null )
		pp.target.set(target);

	pp.other.set(other);

	pp.digitInteger = di;

	return pp;
}

prose_package getPackage(string_id sid, obj_id actor, obj_id target, string_id other)
{
	return getPackage(sid, actor, target, other, 0);
}

prose_package getPackage(string_id sid, obj_id target, string_id other)
{
	return getPackage(sid, null, target, other, 0);
}

/************************************************************************
 * @brief 	creates a generic prose package
 *			- requires "complex grammar" STF entry
 *
 * @param 	string_id 	sid
 * @param 	obj_id		actor
 * @param 	obj_id		target
 * @param 	string 	other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, obj_id actor, obj_id target, string other, int di)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;

		if ( actor != null )
			pp.actor.set(actor);

		if ( target != null )
			pp.target.set(target);

		pp.other.set(other);

		pp.digitInteger = di;

		return pp;
}

prose_package getPackage(string_id sid, obj_id actor, obj_id target, string other)
{
	return getPackage(sid, actor, target, other, 0);
}

prose_package getPackage(string_id sid, obj_id target, string other)
{
	return getPackage(sid, null, target, other, 0);
}

/************************************************************************
 * @brief 	creates a generic prose package
 *			- requires "complex grammar" STF entry
 *
 * @param 	string_id 	sid
 * @param 	obj_id		actor
 * @param 	obj_id		target
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, obj_id actor, obj_id target, int di)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;

		if ( actor != null )
			pp.actor.set(actor);

		if ( target != null )
			pp.target.set(target);

		pp.digitInteger = di;

		return pp;
}

prose_package getPackage(string_id sid, obj_id actor, obj_id target)
{
	return getPackage(sid, actor, target, 0);
}

prose_package getPackage(string_id sid, obj_id target)
{
	return getPackage(sid, null, target, 0);
}

prose_package getPackage(string_id sid, obj_id target, int di)
{
	return getPackage(sid, null, target, di);
}

/************************************************************************
 * @brief 	creates a generic prose package
 *
 * @param 	string_id 	sid
 * @param 	string_id 	other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, string_id other, int di, float df)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;
		pp.other.set(other);
		pp.digitInteger = di;
		pp.digitFloat = df;

		return pp;
}

prose_package getPackage(string_id sid, string_id other)
{
	return getPackage(sid, other, 0, 0f);
}

prose_package getPackage(string_id sid, string_id other, int di)
{
		return getPackage(sid, other, di, 0f);
}

prose_package getPackage(string_id sid, string_id other, float df)
{
		return getPackage(sid, other, 0, df);
}


/************************************************************************
 * @brief 	creates a generic prose package
 *
 * @param 	string_id 	sid
 * @param 	string_id 	other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, string_id target, string_id other, int di)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;
		pp.target.set(target);
		pp.other.set(other);
		pp.digitInteger = di;

		return pp;
}

prose_package getPackage(string_id sid, string_id target, string_id other)
{
	return getPackage(sid, target, other, 0);
}

/************************************************************************
 * @brief 	creates a generic prose package
 *
 * @param 	string_id 	sid
 * @param 	string_id 	other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, string_id target, string other, int di)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;
		pp.target.set(target);
		pp.other.set(other);
		pp.digitInteger = di;

		return pp;
}

prose_package getPackage(string_id sid, string_id target, string other)
{
	return getPackage(sid, target, other, 0);
}

/************************************************************************
 * @brief 	creates a generic prose package
 *
 * @param 	string_id 	sid
 * @param 	string 		other
 * @param 	int			di
 *
 * @return 	prose_package; null on error
 ***********************************************************************/
prose_package getPackage(string_id sid, string other, int di, float df)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;
		pp.other.set(other);
		pp.digitInteger = di;
		pp.digitFloat = df;

		return pp;
}

prose_package getPackage(string_id sid, string other)
{
	return getPackage(sid, other, 0, 0f);
}

prose_package getPackage(string_id sid, string other, int di)
{
	return getPackage(sid, other, di, 0f);
}

prose_package getPackage(string_id sid, string other, float df)
{
	return getPackage(sid, other, 0, df);
}

prose_package getPackage(string_id sid, int di, float df)
{
		prose_package pp = new prose_package();
		pp.stringId = sid;
		pp.digitInteger = di;
		pp.digitFloat = df;
		return pp;
}

prose_package getPackage(string_id sid, int di)
{
	return getPackage(sid, di, 0f);
}

prose_package getPackage(string_id sid, float df)
{
	return getPackage(sid, 0, df);
}

prose_package getPackage( string_id sid, string target, string other )
{
	prose_package pp = new prose_package();
	pp.stringId = sid;

	pp.target.set(target);
	pp.other.set(other);

	return pp;
}

prose_package getPackage( string_id sid, string target, string other, int di )
{
	prose_package pp = new prose_package();
	pp.stringId = sid;

	pp.target.set(target);
	pp.other.set(other);
	pp.digitInteger = di;

	return pp;
}

prose_package getPackage( string_id sid, string target, string other, string actor )
{
	prose_package pp = new prose_package();
	pp.stringId = sid;

	pp.target.set(target);
	pp.other.set(other);
	pp.actor.set(actor);

	return pp;
}
