// ======================================================================
//
// murmur_side_brother.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/murmur_side_brother";

// ======================================================================
// Script Conditions
// ======================================================================

boolean murmur_side_brother_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean murmur_side_brother_condition_notFoundRemains (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "coronet_murmurs_side_4", "murmur_side_missing_brother");
}

// ----------------------------------------------------------------------

boolean murmur_side_brother_condition_avengedJenson (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "coronet_murmurs_side_4", "murmur_side_return_jeridel");
}

// ----------------------------------------------------------------------

boolean murmur_side_brother_condition_finishedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "coronet_murmurs_side_4");
}

// ----------------------------------------------------------------------

boolean murmur_side_brother_condition_foundRemains (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "coronet_murmurs_side_4", "murmur_side_missing_brother");
}

// ======================================================================
// Script Actions
// ======================================================================

void murmur_side_brother_action_grantSideQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "coronet_murmurs_side_4");
}

// ----------------------------------------------------------------------

void murmur_side_brother_action_completeSideQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "murmur_side_return");
}

// ----------------------------------------------------------------------

void murmur_side_brother_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int murmur_side_brother_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have destroyed the monster that killed Jenson?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, it is dead. Where are my credits?
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			murmur_side_brother_action_completeSideQuest (player, npc);

			//-- NPC: Here. Take them. I hate this place. I am glad you came to destroy it.
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_brother_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, but he is dead. I did find out what killed him.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			//-- NPC: Dead! What killed him! Kill it, and you will still get your money!
			string_id message = new string_id (c_stringFile, "s_12");
			utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_brother_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find him yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I am still looking. Have patience.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am sorry, I am just worried.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_brother_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: WAIT!! Please don't hurt me!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's in it for me?
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			//-- NPC: I...I can pay you. In fact, if you find my brother as well, I will give you all I have in savings.
			string_id message = new string_id (c_stringFile, "s_28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's more like it. Where can I find this brother of yours?
			boolean hasResponse0 = false;
			if (murmur_side_brother_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_brother_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I...I can pay you. In fact, if you find my brother as well, I will give you all I have in savings.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's more like it. Where can I find this brother of yours?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't know exactly. He was promoted to lead creature handler three days ago. That was the last time I saw him. He must be stuck in the third level.
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It so happens I am going that way. I will look for him. Stay here.
			boolean hasResponse0 = false;
			if (murmur_side_brother_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_brother_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't know exactly. He was promoted to lead creature handler three days ago. That was the last time I saw him. He must be stuck in the third level.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It so happens I am going that way. I will look for him. Stay here.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			murmur_side_brother_action_grantSideQuest (player, npc);

			//-- NPC: Of course, I will start the bank transfer while you are gone.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.murmur_side_brother");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.murmur_side_brother");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (murmur_side_brother_condition_finishedQuest (player, npc))
	{
		murmur_side_brother_action_facePlayer (player, npc);

		//-- NPC: What? I payed you already, leave me to my grief.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_brother_condition_avengedJenson (player, npc))
	{
		murmur_side_brother_action_facePlayer (player, npc);

		//-- NPC: You have destroyed the monster that killed Jenson?
		string_id message = new string_id (c_stringFile, "s_13");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, it is dead. Where are my credits?
		boolean hasResponse0 = false;
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_14");

			utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 2);

			npcStartConversation (player, npc, "murmur_side_brother", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_brother_condition_foundRemains (player, npc))
	{
		murmur_side_brother_action_facePlayer (player, npc);

		//-- NPC: Did you find him?
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, but he is dead. I did find out what killed him.
		boolean hasResponse0 = false;
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 4);

			npcStartConversation (player, npc, "murmur_side_brother", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_brother_condition_notFoundRemains (player, npc))
	{
		//-- NPC: Did you find him yet?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, I am still looking. Have patience.
		boolean hasResponse0 = false;
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 6);

			npcStartConversation (player, npc, "murmur_side_brother", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_brother_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "implore");

		murmur_side_brother_action_facePlayer (player, npc);

		//-- NPC: WAIT!! Please don't hurt me!
		string_id message = new string_id (c_stringFile, "s_24");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What's in it for me?
		boolean hasResponse0 = false;
		if (murmur_side_brother_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			utils.setScriptVar (player, "conversation.murmur_side_brother.branchId", 8);

			npcStartConversation (player, npc, "murmur_side_brother", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "murmur_side_brother")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.murmur_side_brother.branchId");

	if (branchId == 2 && murmur_side_brother_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && murmur_side_brother_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && murmur_side_brother_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && murmur_side_brother_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && murmur_side_brother_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && murmur_side_brother_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.murmur_side_brother.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

