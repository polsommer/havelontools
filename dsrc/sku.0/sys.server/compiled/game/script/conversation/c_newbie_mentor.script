// ======================================================================
//
// c_newbie_mentor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.money;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_newbie_mentor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_newbie_mentor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_questActiveOrComplete (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	
	return questIsQuestActive(questId1, player) || questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnBankStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int bankstep = groundquests.getTaskId(questId1, "bankstep"); 
	int bankbox1 = groundquests.getTaskId(questId1, "bankbox1"); 
	int bankbox2 = groundquests.getTaskId(questId1, "bankbox2"); 	
	
	return 	questIsTaskActive(questId1, bankstep, player)||
			questIsTaskActive(questId1, bankbox1, player)||
			questIsTaskActive(questId1, bankbox2, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerDidNewTutorial (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_hall_jedi");

	return questIsQuestComplete(questId1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnBankReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int bankreturn = groundquests.getTaskId(questId1, "bankreturn"); 
	
	return questIsTaskActive(questId1, bankreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnBazaarStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int bazaarstep = groundquests.getTaskId(questId1, "bazaarstep"); 
	int bazaarbox1 = groundquests.getTaskId(questId1, "bazaarbox1");
	int bazaarbox2 = groundquests.getTaskId(questId1, "bazaarbox2");
	
	return 	questIsTaskActive(questId1, bazaarstep, player)||
			questIsTaskActive(questId1, bazaarbox1, player)||
			questIsTaskActive(questId1, bazaarbox2, player);
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnBazaarReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int bazaarreturn = groundquests.getTaskId(questId1, "bazaarreturn"); 
	
	return questIsTaskActive(questId1, bazaarreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCloneStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int clonestep = groundquests.getTaskId(questId1, "clonestep"); 
	int clonebox1 = groundquests.getTaskId(questId1, "clonebox1");  	
	
	return 	questIsTaskActive(questId1, clonestep, player)||
			questIsTaskActive(questId1, clonebox1, player);
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCloneReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest1");
	int clonereturn = groundquests.getTaskId(questId1, "clonereturn"); 
	
	return questIsTaskActive(questId1, clonereturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnHealingLearned (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int healinglearned = groundquests.getTaskId(questId1, "healinglearned"); 
	
	return questIsTaskActive(questId1, healinglearned, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerLearnDroid (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int groupbox1 = groundquests.getTaskId(questId1, "groupbox1"); 
	int droidbox1 = groundquests.getTaskId(questId1, "droidbox1"); 
	
	return 	questIsTaskActive(questId1, groupbox1, player)||
			questIsTaskActive(questId1, droidbox1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnKill (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int kill = groundquests.getTaskId(questId1, "kill"); 
	int killstep = groundquests.getTaskId(questId1, "killstep"); 
	int combatbox1 = groundquests.getTaskId(questId1, "combatbox1"); 
	int combatbox2 = groundquests.getTaskId(questId1, "combatbox2"); 
	int combatbox3 = groundquests.getTaskId(questId1, "combatbox3"); 
	
	return 	questIsTaskActive(questId1, kill, player)||
			questIsTaskActive(questId1, killstep, player)||
			questIsTaskActive(questId1, combatbox1, player)||
			questIsTaskActive(questId1, combatbox2, player)||
			questIsTaskActive(questId1, combatbox3, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnKillReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int killreturn = groundquests.getTaskId(questId1, "killreturn"); 
	
	return questIsTaskActive(questId1, killreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnHarvestStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int harveststep1 = groundquests.getTaskId(questId1, "harveststep1"); 
	int harveststep2 = groundquests.getTaskId(questId1, "harveststep2"); 
	int harveststep3 = groundquests.getTaskId(questId1, "harveststep3"); 
								
	return 	questIsTaskActive(questId1, harveststep1, player)||
			questIsTaskActive(questId1, harveststep2, player)||
			questIsTaskActive(questId1, harveststep3, player);
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnHarvestReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int harvestreturn = groundquests.getTaskId(questId1, "harvestreturn"); 
	
	return questIsTaskActive(questId1, harvestreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnProfessionStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int professionstep = groundquests.getTaskId(questId1, "professionstep"); 
	int professionbox1 = groundquests.getTaskId(questId1, "professionbox1");
	int professionbox2 = groundquests.getTaskId(questId1, "professionbox2");
	int professionbox3 = groundquests.getTaskId(questId1, "professionbox3");
	
	return 	questIsTaskActive(questId1, professionstep, player)||
			questIsTaskActive(questId1, professionbox1, player)||
			questIsTaskActive(questId1, professionbox2, player)||
			questIsTaskActive(questId1, professionbox3, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnProfessionReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int professionreturn = groundquests.getTaskId(questId1, "professionreturn"); 
	
	return questIsTaskActive(questId1, professionreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCantinaStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int cantinastep = groundquests.getTaskId(questId1, "cantinastep"); 
	int cantinabox1 = groundquests.getTaskId(questId1, "cantinabox1"); 
	
	return questIsTaskActive(questId1, cantinastep, player)||questIsTaskActive(questId1, cantinabox1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnVehicleInfo (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int vehiclebox1 = groundquests.getTaskId(questId1, "vehiclebox1"); 
	
	return questIsTaskActive(questId1, vehiclebox1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCantinaPerform (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int cantinaperform = groundquests.getTaskId(questId1, "cantinaperform"); 
	
	return questIsTaskActive(questId1, cantinaperform, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnMedCenterStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int medcenterstep = groundquests.getTaskId(questId1, "medcenterstep"); 
	int medbox1 = groundquests.getTaskId(questId1, "medbox1");
	
	return questIsTaskActive(questId1, medcenterstep, player)||questIsTaskActive(questId1, medbox1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnMedCenterReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int medcenterreturn = groundquests.getTaskId(questId1, "medcenterreturn"); 
	
	return questIsTaskActive(questId1, medcenterreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnJunkStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int junkstep = groundquests.getTaskId(questId1, "junkstep"); 
	int junkbox1 = groundquests.getTaskId(questId1, "junkbox1"); 
		
	return questIsTaskActive(questId1, junkstep, player)||questIsTaskActive(questId1, junkbox1, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnJunkReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int junkreturn = groundquests.getTaskId(questId1, "junkreturn"); 
	
	return questIsTaskActive(questId1, junkreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnSurveyStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int surveystep = groundquests.getTaskId(questId1, "surveystep"); 
	int surveybox1 = groundquests.getTaskId(questId1, "surveybox1"); 
	int surveybox2 = groundquests.getTaskId(questId1, "surveybox2"); 
			
	return 	questIsTaskActive(questId1, surveystep, player)||
			questIsTaskActive(questId1, surveybox1, player)||
			questIsTaskActive(questId1, surveybox2, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnSurveyReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int surveyreturn = groundquests.getTaskId(questId1, "surveyreturn"); 
	
	return questIsTaskActive(questId1, surveyreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCraftStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int craftstep = groundquests.getTaskId(questId1, "craftstep"); 
	int craftreturn = groundquests.getTaskId(questId1, "craftreturn");
		
	return (questIsTaskActive(questId1, craftstep, player)||questIsTaskActive(questId1, craftreturn, player));
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnLearnGroup (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int learngroup = groundquests.getTaskId(questId1, "learngroup"); 
	
	return questIsTaskActive(questId1, learngroup, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnShuttleStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest5");
	int shuttlestep1 = groundquests.getTaskId(questId1, "shuttlestep1"); 
	int shuttlestep2 = groundquests.getTaskId(questId1, "shuttlestep2");
	int shuttlestep3 = groundquests.getTaskId(questId1, "shuttlestep3");
	int shuttlestep4 = groundquests.getTaskId(questId1, "shuttlestep4");
	
	return 	questIsTaskActive(questId1, shuttlestep1, player)||
			questIsTaskActive(questId1, shuttlestep2, player)||
			questIsTaskActive(questId1, shuttlestep3, player)||
			questIsTaskActive(questId1, shuttlestep4, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnAssociateStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest5");
	int associatestep = groundquests.getTaskId(questId1, "associatestep"); 
	
	return questIsTaskActive(questId1, associatestep, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnLastStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest5");
	int laststep = groundquests.getTaskId(questId1, "laststep"); 
	
	return questIsTaskActive(questId1, laststep, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCantinaReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int cantinareturn = groundquests.getTaskId(questId1, "cantinareturn"); 
	
	return questIsTaskActive(questId1, cantinareturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnVehicleAcquired (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int vehicleacquired = groundquests.getTaskId(questId1, "vehicleacquired"); 
	
	return questIsTaskActive(questId1, vehicleacquired, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnCraftReturn (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest4");
	int craftreturn = groundquests.getTaskId(questId1, "craftreturn"); 
	
	return questIsTaskActive(questId1, craftreturn, player);
	
}

// ----------------------------------------------------------------------

boolean c_newbie_mentor_condition_playerOnHealingBox1 (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest2");
	int healingbox1 = groundquests.getTaskId(questId1, "healingbox1"); 
	
	return questIsTaskActive(questId1, healingbox1, player);
	
}

// ======================================================================
// Script Actions
// ======================================================================

void c_newbie_mentor_action_giveQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest1");
	
	groundquests.grantQuest(questId, player, npc, true);
	detachScript (player, "theme_park.newbie_tutorial.new_player_ribbon");
	destroyClientPath(player);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_faceplayer (obj_id player, obj_id npc)
{
		faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalBankReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_bankreturn");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalBazaarReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_bazaarreturn");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalCloneReturn (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest2");

	groundquests.sendSignal(player, "c_newbie_clonereturn");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalHealingLearned (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_healinglearned");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalKillReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_killreturn");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalProfessionReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_professionreturn");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalHarvestReturn (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest3");
	
	groundquests.sendSignal(player, "c_newbie_harvestreturn");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalCantinaReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_cantinareturn");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/loot/simple_kit/viewscreen_reader.iff";
	createObject( templateName, playerInventory, "" );

}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalJunkReturn (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest4");
	
	groundquests.sendSignal(player, "c_newbie_junkreturn");
	
	groundquests.grantQuest(questId, player, npc, true);

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/deed/vehicle_deed/landspeeder_x31_deed.iff";
	createObject( templateName, playerInventory, "" );	
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalMedCenterReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_medcenterreturn");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/loot/tool/datapad_broken.iff";
	createObject( templateName, playerInventory, "" );
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalVehicleAcquired (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_vehicleacquired");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalCraftDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_craftdone");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalLearnGroup (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest5");
	
	groundquests.sendSignal(player, "c_newbie_learngroup");

	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalSurveyReturn (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_surveyreturn");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_signalLastStep (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_laststep");
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointImpTat (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -1119;
	loc.y = 0;
	loc.z = -3526;
	loc.area = "tatooine";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Lt. Akal Colzet (Imperial Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointImpNab (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = 5182;
	loc.y = -192;
	loc.z = 6750;
	loc.area = "naboo";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Lt. Barn Sinkko (Imperial Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointImpTalus (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -2184;
	loc.y = 0;
	loc.z = 2273;
	loc.area = "talus";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Hakasha Sireen (Imperial Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointRebTat (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -2991;
	loc.y = 5;
	loc.z = 2123;
	loc.area = "tatooine";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Commander Da'la Socuna (Rebel Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointRebNab (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = 4767;
	loc.y = 4;
	loc.z = -4812;
	loc.area = "naboo";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "V3-FX (Rebel Pilot Training Droid)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointRebCore (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -5170;
	loc.y = 21;
	loc.z = -2295;
	loc.area = "corellia";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Captain Kreezo (Rebel Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointNeuTat (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = 3381;
	loc.y = 5;
	loc.z = -4799;
	loc.area = "tatooine";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Dravis (Privateer Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointNeuNab (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -5495;
	loc.y = 14;
	loc.z = 4476;
	loc.area = "naboo";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Captain Dinge (RSF Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveWaypointNeuCore (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -275;
	loc.y = 28;
	loc.z = -4695;
	loc.area = "corellia";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Sergeant Rhea (CorSec Pilot Trainer)");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_newbie_mentor_action_giveMayorQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_quest6");
	
	groundquests.grantQuest(questId, player, npc, true);

}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_newbie_mentor_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome to Mos Eisley. Watch your back here.  There has never been a more wretched hive of scum and villainy, as you may have heard. You and I have some business to attend to.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Business? I don't even know you!
	if (response == "s_305")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			//-- NPC: But I know YOU, %TU. You ran into a certain smuggler on a space station recently, no?
			string_id message = new string_id (c_stringFile, "s_307");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I did not. I believe you have the wrong person.
			boolean hasResponse0 = false;
			if (!c_newbie_mentor_condition_playerDidNewTutorial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Han's in trouble! Some bounty hunter is after him
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition_playerDidNewTutorial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_309");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_317");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 2);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But I know YOU, %TU. You ran into a certain smuggler on a space station recently, no?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did not. I believe you have the wrong person.
	if (response == "s_309")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Perhaps your past is not what I believed, but your future is what interests me. I see something in you that I have not seen since...
			string_id message = new string_id (c_stringFile, "s_311");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Since what?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_313");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Han's in trouble! Some bounty hunter is after him
	if (response == "s_317")
	{
		doAnimationAction (player, "helpme");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: You need not worry about him. He is quite capable of taking care of himself. He helped you because he, like I, see something in you. You may not see it within yourself yet, but you will, if you choose to. I see a spark of greatness within you.
			string_id message = new string_id (c_stringFile, "s_319");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I'm nobody special.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm glad you understand my importance.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_321");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_325");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps your past is not what I believed, but your future is what interests me. I see something in you that I have not seen since...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Since what?
	if (response == "s_313")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: That isn't important right now. What is important is what I see in you. I see a spark of greatness, the weight that shifts the scales.
			string_id message = new string_id (c_stringFile, "s_315");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I'm nobody special.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm glad you understand my importance.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_321");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_325");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That isn't important right now. What is important is what I see in you. I see a spark of greatness, the weight that shifts the scales.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I'm nobody special.  
	if (response == "s_321")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: You think you are not extraordinary because that is what you have been taught. Others will profit if you do not reach your potential. You must decide what you wish to do.
			string_id message = new string_id (c_stringFile, "s_323");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would you have me do?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_329");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm glad you understand my importance.
	if (response == "s_325")
	{
		doAnimationAction (player, "pose_proudly");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Unrealized greatness. You have much to learn still, but as the fledgling's wings grow strong, it may fly far and wide...and so may you, if you choose to.
			string_id message = new string_id (c_stringFile, "s_327");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would you have me do?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_329");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You need not worry about him. He is quite capable of taking care of himself. He helped you because he, like I, see something in you. You may not see it within yourself yet, but you will, if you choose to. I see a spark of greatness within you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I'm nobody special.  
	if (response == "s_321")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: You think you are not extraordinary because that is what you have been taught. Others will profit if you do not reach your potential. You must decide what you wish to do.
			string_id message = new string_id (c_stringFile, "s_323");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would you have me do?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_329");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm glad you understand my importance.
	if (response == "s_325")
	{
		doAnimationAction (player, "pose_proudly");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Unrealized greatness. You have much to learn still, but as the fledgling's wings grow strong, it may fly far and wide...and so may you, if you choose to.
			string_id message = new string_id (c_stringFile, "s_327");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would you have me do?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_329");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You think you are not extraordinary because that is what you have been taught. Others will profit if you do not reach your potential. You must decide what you wish to do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would you have me do?
	if (response == "s_329")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I would have you learn all that you can about independence and survival. I will teach you these things, if you wish to learn.
			string_id message = new string_id (c_stringFile, "s_331");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will follow your instructions.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I know how to survive. I'll be fine on my own.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_333");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_345");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Unrealized greatness. You have much to learn still, but as the fledgling's wings grow strong, it may fly far and wide...and so may you, if you choose to.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would you have me do?
	if (response == "s_329")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I would have you learn all that you can about independence and survival. I will teach you these things, if you wish to learn.
			string_id message = new string_id (c_stringFile, "s_331");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will follow your instructions.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I know how to survive. I'll be fine on my own.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_333");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_345");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I would have you learn all that you can about independence and survival. I will teach you these things, if you wish to learn.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will follow your instructions.
	if (response == "s_333")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: What I say may be basic, but there is much to learn before you  fly, fledgling. Take these credits and go to a bank terminal. A wise fledgling would tuck this away for future need, but I make no decisions for you.  
			string_id message = new string_id (c_stringFile, "s_335");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will go to the bank, if that is what you wish.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Well, I like credits, so I might as well go to the bank.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_337");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_341");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I know how to survive. I'll be fine on my own.
	if (response == "s_345")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: We must all walk our own path. Come back to me if you lose your way.
			string_id message = new string_id (c_stringFile, "s_347");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What I say may be basic, but there is much to learn before you  fly, fledgling. Take these credits and go to a bank terminal. A wise fledgling would tuck this away for future need, but I make no decisions for you.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will go to the bank, if that is what you wish.
	if (response == "s_337")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_giveQuest (player, npc);

			//-- NPC: Good.  I will wait for your return.
			string_id message = new string_id (c_stringFile, "s_339");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I like credits, so I might as well go to the bank.
	if (response == "s_341")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			c_newbie_mentor_action_giveQuest (player, npc);

			//-- NPC: While I am glad that you are doing as I ask, your attitude could do with some work.
			string_id message = new string_id (c_stringFile, "s_343");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. Did you make a successful transaction?  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did indeed.
	if (response == "s_353")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Good, good. I am sure that you will find the bank to be a useful tool. Now that you have learned where to save money, I will teach you where to start spending it.
			string_id message = new string_id (c_stringFile, "s_355");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And where is that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_361");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I decided not to deposit my money.
	if (response == "s_357")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: I am here only to guide you, not compel you.  Decisions that you make are yours alone. But, now that you have learned where to save money, I will teach you where to start spending it.
			string_id message = new string_id (c_stringFile, "s_359");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And where is that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_361");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, good. I am sure that you will find the bank to be a useful tool. Now that you have learned where to save money, I will teach you where to start spending it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And where is that?
	if (response == "s_361")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalBankReturn (player, npc);

			//-- NPC: Go to the bazaar terminals. More information will be given to you once you are there. While you are there, please place this Paint Dispersal Unit up for sale. You may keep the proceeds. I do not need it anymore.
			string_id message = new string_id (c_stringFile, "s_363");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you want me to buy anything?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_365");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am here only to guide you, not compel you.  Decisions that you make are yours alone. But, now that you have learned where to save money, I will teach you where to start spending it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And where is that?
	if (response == "s_361")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalBankReturn (player, npc);

			//-- NPC: Go to the bazaar terminals. More information will be given to you once you are there. While you are there, please place this Paint Dispersal Unit up for sale. You may keep the proceeds. I do not need it anymore.
			string_id message = new string_id (c_stringFile, "s_363");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you want me to buy anything?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_365");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go to the bazaar terminals. More information will be given to you once you are there. While you are there, please place this Paint Dispersal Unit up for sale. You may keep the proceeds. I do not need it anymore.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you want me to buy anything?
	if (response == "s_365")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Only if you find something that catches your eye.  It is not necessary.
			string_id message = new string_id (c_stringFile, "s_367");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find anything that caught your eye?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did, but nothing that I could afford.
	if (response == "s_373")
	{
		doAnimationAction (player, "shake_head_disgust");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will be able to soon enough. 
			string_id message = new string_id (c_stringFile, "s_375");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So now that I know about bazaar terminals, what's next?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_385");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I did.
	if (response == "s_377")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Good. You will often find things you need at the bazaar. It's also a good place to sell those items you do not wish to keep.
			string_id message = new string_id (c_stringFile, "s_379");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So now that I know about bazaar terminals, what's next?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_385");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not really.
	if (response == "s_381")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, you will. Check the bazaar often as you never know when you will find a diamond among the coal. 
			string_id message = new string_id (c_stringFile, "s_383");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So now that I know about bazaar terminals, what's next?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_385");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will be able to soon enough. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So now that I know about bazaar terminals, what's next?
	if (response == "s_385")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Next, ah next. It's a rough world out there, as I mentioned. At some point, something will get the better of you and you should be prepared. You can have your DNA registered at a cloning facility so your spirit may return to inhabit a comfortable body again.
			string_id message = new string_id (c_stringFile, "s_387");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You are talking about WHEN, not IF, something kills me!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_389");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Good. You will often find things you need at the bazaar. It's also a good place to sell those items you do not wish to keep.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So now that I know about bazaar terminals, what's next?
	if (response == "s_385")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Next, ah next. It's a rough world out there, as I mentioned. At some point, something will get the better of you and you should be prepared. You can have your DNA registered at a cloning facility so your spirit may return to inhabit a comfortable body again.
			string_id message = new string_id (c_stringFile, "s_387");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You are talking about WHEN, not IF, something kills me!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_389");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, you will. Check the bazaar often as you never know when you will find a diamond among the coal. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So now that I know about bazaar terminals, what's next?
	if (response == "s_385")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Next, ah next. It's a rough world out there, as I mentioned. At some point, something will get the better of you and you should be prepared. You can have your DNA registered at a cloning facility so your spirit may return to inhabit a comfortable body again.
			string_id message = new string_id (c_stringFile, "s_387");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You are talking about WHEN, not IF, something kills me!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_389");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Next, ah next. It's a rough world out there, as I mentioned. At some point, something will get the better of you and you should be prepared. You can have your DNA registered at a cloning facility so your spirit may return to inhabit a comfortable body again.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You are talking about WHEN, not IF, something kills me!
	if (response == "s_389")
	{
		doAnimationAction (player, "taken_aback");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cough_polite");

			//-- NPC: Ahem...well, to be so blunt, yes. I prefer to think of it as merely a physical condition that is beyond your ability to repair, but yes. Do not worry though you will really only have a few moments of darkness and disorientation. You may wish to take that time to contemplate your role in the galaxy.
			string_id message = new string_id (c_stringFile, "s_391");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let's contemplate something else then.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_393");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ahem...well, to be so blunt, yes. I prefer to think of it as merely a physical condition that is beyond your ability to repair, but yes. Do not worry though you will really only have a few moments of darkness and disorientation. You may wish to take that time to contemplate your role in the galaxy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let's contemplate something else then.
	if (response == "s_393")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: No, no. I want you to learn this. Go to the cloning facility nearby. Come back after you tour the facility. I'll give you 1000 credits for the cloning expense.
			string_id message = new string_id (c_stringFile, "s_395");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If you insist.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_397");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, no. I want you to learn this. Go to the cloning facility nearby. Come back after you tour the facility. I'll give you 1000 credits for the cloning expense.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If you insist.
	if (response == "s_397")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalBazaarReturn (player, npc);

			//-- NPC: I do.
			string_id message = new string_id (c_stringFile, "s_399");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I hope that was enlightening.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It was rather disturbing, preparing for my own death.
	if (response == "s_405")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: It always is. But do not dwell on thoughts of darkness or despair. 
			string_id message = new string_id (c_stringFile, "s_407");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No, I won't dwell at all.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_413");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely!  Now I know what happens to the people who get in my way!
	if (response == "s_409")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: A somewhat disturbing view of mortality, to be certain. Be careful of dwelling on dark thoughts such as that.
			string_id message = new string_id (c_stringFile, "s_411");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No, I won't dwell at all.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_413");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It always is. But do not dwell on thoughts of darkness or despair. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I won't dwell at all.
	if (response == "s_413")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Now that I have shown you what happens if you fall, let me show you how to avoid it in the first place. The best way to do that is to heal. I want you to experiment a bit with healing yourself and others.  
			string_id message = new string_id (c_stringFile, "s_415");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good.  I want to learn how to heal.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_417");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A somewhat disturbing view of mortality, to be certain. Be careful of dwelling on dark thoughts such as that.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I won't dwell at all.
	if (response == "s_413")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Now that I have shown you what happens if you fall, let me show you how to avoid it in the first place. The best way to do that is to heal. I want you to experiment a bit with healing yourself and others.  
			string_id message = new string_id (c_stringFile, "s_415");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good.  I want to learn how to heal.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_417");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Now that I have shown you what happens if you fall, let me show you how to avoid it in the first place. The best way to do that is to heal. I want you to experiment a bit with healing yourself and others.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good.  I want to learn how to heal.
	if (response == "s_417")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalCloneReturn (player, npc);

			//-- NPC: It is useful indeed.
			string_id message = new string_id (c_stringFile, "s_419");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very good! I am impressed with how quickly you are learning. Now that I know that you can heal yourself, let's see how well you can fight.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would you have me do?
	if (response == "s_425")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Outside of town is a gathering of dwellings where poor folks live. Recently, a number of Tuskens have been preying on them. They must be stopped. Hopefully a show of force will deter them.  Go kill 10 Tuskens and return to me. 
			string_id message = new string_id (c_stringFile, "s_427");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Any additional advice?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_429");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can learn faster if you hurry this up.
	if (response == "s_435")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "taken_aback");

			//-- NPC: Then allow me to feed your ambition. Outside of town is a gathering of dwellings where poor folks live. Recently, a number of Tuskens have been preying on them. They must be stopped. Hopefully a show of force will deter them. Go kill 10 Tuskens and return to me.
			string_id message = new string_id (c_stringFile, "s_437");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All right! I was hoping for a little combat.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_440");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Outside of town is a gathering of dwellings where poor folks live. Recently, a number of Tuskens have been preying on them. They must be stopped. Hopefully a show of force will deter them.  Go kill 10 Tuskens and return to me. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any additional advice?
	if (response == "s_429")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalHealingLearned (player, npc);

			//-- NPC: Sitting helps you recover faster, so sit down between battles.
			string_id message = new string_id (c_stringFile, "s_432");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Then allow me to feed your ambition. Outside of town is a gathering of dwellings where poor folks live. Recently, a number of Tuskens have been preying on them. They must be stopped. Hopefully a show of force will deter them. Go kill 10 Tuskens and return to me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right! I was hoping for a little combat.
	if (response == "s_440")
	{
		doAnimationAction (player, "pound_fist_palm");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			c_newbie_mentor_action_signalHealingLearned (player, npc);

			//-- NPC: Remember that sitting helps you recover faster, so sit down between battles.
			string_id message = new string_id (c_stringFile, "s_443");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now that you know how to fight, I want you to be able to survive in the wilderness.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do as you ask.
	if (response == "s_451")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalKillReturn (player, npc);

			//-- NPC: Head out of town. I will give you a place to start looking. I want you to harvest ten dwarf nunas. Feel free to harvest anything else that you want, but I want to see dwarf nuna resources.
			string_id message = new string_id (c_stringFile, "s_453");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_456");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But there are perfectly good cities everywhere!
	if (response == "s_461")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			c_newbie_mentor_action_signalKillReturn (player, npc);

			//-- NPC: Not all of the planets in this galaxy are densely populated. You may find yourself in the middle of the desert and in need of supplies. If you did not know how to harvest from the creatures you killed, you would be in trouble. Go to where I ask, kill ten dwarf nunas, and harvest their resources.
			string_id message = new string_id (c_stringFile, "s_464");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_467");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Head out of town. I will give you a place to start looking. I want you to harvest ten dwarf nunas. Feel free to harvest anything else that you want, but I want to see dwarf nuna resources.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well.
	if (response == "s_456")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_459");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not all of the planets in this galaxy are densely populated. You may find yourself in the middle of the desert and in need of supplies. If you did not know how to harvest from the creatures you killed, you would be in trouble. Go to where I ask, kill ten dwarf nunas, and harvest their resources.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine.  
	if (response == "s_467")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.  Trust me.  You will find it useful in the future.
			string_id message = new string_id (c_stringFile, "s_469");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Limbs intact, I see. It is good to know that my faith in you is well-placed. There is hope for the future after all.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean?
	if (response == "s_477")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: You will understand your role in the galaxy soon enough. To help that along, you will need to choose your path; your profession. Go around the corner and find the trainer for the professions you have chosen and talk to them.
			string_id message = new string_id (c_stringFile, "s_480");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Off I go!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_483");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Your hope for the future rests on me? You are gambling a lot, old woman.
	if (response == "s_488")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Perhaps. You could disappoint me, but I do not think so. You will understand your role in the galaxy soon enough. To help that along, you will need to choose your path; your profession. Go around the corner and find the trainer for the professions you have chosen and talk to them.
			string_id message = new string_id (c_stringFile, "s_491");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Eventually, I'm going to have to have some kind of training.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_493");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will understand your role in the galaxy soon enough. To help that along, you will need to choose your path; your profession. Go around the corner and find the trainer for the professions you have chosen and talk to them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Off I go!
	if (response == "s_483")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalHarvestReturn (player, npc);

			//-- NPC: I will see you soon, I'm sure.
			string_id message = new string_id (c_stringFile, "s_485");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps. You could disappoint me, but I do not think so. You will understand your role in the galaxy soon enough. To help that along, you will need to choose your path; your profession. Go around the corner and find the trainer for the professions you have chosen and talk to them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Eventually, I'm going to have to have some kind of training.
	if (response == "s_493")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalHarvestReturn (player, npc);

			//-- NPC: Exactly.
			string_id message = new string_id (c_stringFile, "s_496");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Back again, both richer and poorer. I will be willing to bet that you need some time at the cantina.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A break so soon? But we just started! 
	if (response == "s_504")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: You assume that this is a break, eh? I want you to talk to a friend of mine who works at the cantina. Her name is Allura and she can teach you some of her skills. You need to learn what entertainers are capable of.
			string_id message = new string_id (c_stringFile, "s_507");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds interesting.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_510");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right! Party Time!
	if (response == "s_518")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Be calm. My friend Allura works there and I wish you to talk to her. Learn from her, for she is as wise in her craft as I am in mine. 
			string_id message = new string_id (c_stringFile, "s_522");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And your craft is?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's comforting.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_526");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_532");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 56);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You assume that this is a break, eh? I want you to talk to a friend of mine who works at the cantina. Her name is Allura and she can teach you some of her skills. You need to learn what entertainers are capable of.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds interesting.
	if (response == "s_510")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalProfessionReturn (player, npc);

			//-- NPC: It can be and Allura will help you.
			string_id message = new string_id (c_stringFile, "s_514");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Be calm. My friend Allura works there and I wish you to talk to her. Learn from her, for she is as wise in her craft as I am in mine. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And your craft is?
	if (response == "s_526")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			c_newbie_mentor_action_signalProfessionReturn (player, npc);

			//-- NPC: You do not know? I am a teacher, young student. Now hurry off to the cantina.
			string_id message = new string_id (c_stringFile, "s_529");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's comforting.
	if (response == "s_532")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			c_newbie_mentor_action_signalProfessionReturn (player, npc);

			//-- NPC: Go talk to Allura. I'm sure she will appreciate your...wit.
			string_id message = new string_id (c_stringFile, "s_535");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you enjoy your lesson?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I didn't realize that entertainment helped so much!
	if (response == "s_545")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Music uplifts the spirit. It is more powerful than it would appear. 
			string_id message = new string_id (c_stringFile, "s_548");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you have another task for me?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I suppose there's something else you want me to do.  
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_551");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_561");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch62 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Music uplifts the spirit. It is more powerful than it would appear. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have another task for me?
	if (response == "s_551")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. I want you to go take this viewscreen reader to the medical center. My friend Kazen Harn loaned it to me a few days ago. I would like you to return it to him. Anyway, he said that he wants to meet you. Follow my waypoint to the medical center.
			string_id message = new string_id (c_stringFile, "s_553");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I hope it isn't far.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_556");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose there's something else you want me to do.  
	if (response == "s_561")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. I want you to go take this viewscreen reader to the medical center. My friend Kazen Harn loaned it to me a few days ago. I would like you to return it to him. Anyway, he said that he wants to meet you. Follow my waypoint to the medical center.
			string_id message = new string_id (c_stringFile, "s_553");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I hope it isn't far.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_556");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. I want you to go take this viewscreen reader to the medical center. My friend Kazen Harn loaned it to me a few days ago. I would like you to return it to him. Anyway, he said that he wants to meet you. Follow my waypoint to the medical center.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hope it isn't far.
	if (response == "s_556")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalCantinaReturn (player, npc);

			//-- NPC: It isn't.  You should be back soon.
			string_id message = new string_id (c_stringFile, "s_559");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. Thank you for talking to Kazen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're welcome. Do you have anything else that needs to be done?
	if (response == "s_569")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, now that you mention it, there is. One of my old datapads has broken beyond my ability to repair. Would you take it to the local junk dealer and sell it to him?  
			string_id message = new string_id (c_stringFile, "s_572");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm happy to help.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_575");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 67);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah. Have another errand that I can run for you, master? 
	if (response == "s_585")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Because you so-kindly offered, there is something that I have been putting off. One of my old datapads has broken beyond my ability to repair. Take it to the local junk dealer and sell it to him.  
			string_id message = new string_id (c_stringFile, "s_588");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: One of these days I'll learn to shut my mouth.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_591");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 70);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch67 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, now that you mention it, there is. One of my old datapads has broken beyond my ability to repair. Would you take it to the local junk dealer and sell it to him?  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm happy to help.
	if (response == "s_575")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalMedCenterReturn (player, npc);

			//-- NPC: It isn't worth much, but at least the junk dealer will recycle the parts. Keep whatever he gives you for it. At least I'll be rid of the thing. I'll give you a waypoint.
			string_id message = new string_id (c_stringFile, "s_577");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.  I can always use the extra cash.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_580");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It isn't worth much, but at least the junk dealer will recycle the parts. Keep whatever he gives you for it. At least I'll be rid of the thing. I'll give you a waypoint.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.  I can always use the extra cash.
	if (response == "s_580")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			//-- NPC: Thank YOU.  I was getting tired of carrying it around.
			string_id message = new string_id (c_stringFile, "s_583");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Because you so-kindly offered, there is something that I have been putting off. One of my old datapads has broken beyond my ability to repair. Take it to the local junk dealer and sell it to him.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: One of these days I'll learn to shut my mouth.
	if (response == "s_591")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalMedCenterReturn (player, npc);

			//-- NPC: It isn't worth much, but at least the junk dealer will recycle the parts. Keep whatever he gives you for it. At least I'll be rid of the thing. I'll give you a waypoint.
			string_id message = new string_id (c_stringFile, "s_593");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If you insist.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_596");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It isn't worth much, but at least the junk dealer will recycle the parts. Keep whatever he gives you for it. At least I'll be rid of the thing. I'll give you a waypoint.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If you insist.
	if (response == "s_596")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Well, at least it's a few credits for less than a moment's work. 
			string_id message = new string_id (c_stringFile, "s_599");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch74 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So now you know how to sell things to the junk dealers. When you are out hunting, you will occasionally come across things you don't want. Junk dealers will usually buy it from you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking forward to it.
	if (response == "s_606")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am glad to hear it. As you have been helping me, I have a gift for you. Look in your inventory for your new landspeeder deed. Talk to me again after you call the vehicle. 
			string_id message = new string_id (c_stringFile, "s_608");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow!  Thank you!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_611");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: At least I won't be sending someone else to do my errands.
	if (response == "s_616")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must learn patience and humility. Both virtues will serve you well in the future. I have something that should lift your spirit though.  
			string_id message = new string_id (c_stringFile, "s_619");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm sure you do.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_621");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 77);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am glad to hear it. As you have been helping me, I have a gift for you. Look in your inventory for your new landspeeder deed. Talk to me again after you call the vehicle. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow!  Thank you!
	if (response == "s_611")
	{
		doAnimationAction (player, "taken_aback");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalJunkReturn (player, npc);

			//-- NPC: You are welcome.  I believe in rewarding good students.
			string_id message = new string_id (c_stringFile, "s_613");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch77 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must learn patience and humility. Both virtues will serve you well in the future. I have something that should lift your spirit though.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sure you do.
	if (response == "s_621")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you have been helping me, I have a gift for you. Look in your inventory for your new landspeeder deed. Talk to me again after you call the vehicle. 
			string_id message = new string_id (c_stringFile, "s_624");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow!  Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_627");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 78);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch78 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As you have been helping me, I have a gift for you. Look in your inventory for your new landspeeder deed. Talk to me again after you call the vehicle. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow!  Thanks!
	if (response == "s_627")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_newbie_mentor_action_signalJunkReturn (player, npc);

			//-- NPC: You are welcome.  Just be careful with it.
			string_id message = new string_id (c_stringFile, "s_629");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch81 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now that you have a vehicle, I have another lesson for you.  I want you to learn about crafting goods for people.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok! What do I need to do?
	if (response == "s_637")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalVehicleAcquired (player, npc);

			//-- NPC: Your hunger for learning will serve you well. Now, I want you go out to a spot in the nearby hills and get at least 30 units of metal. Follow my waypoint to the general vicinity and start your search from there.    
			string_id message = new string_id (c_stringFile, "s_640");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Find metal, got it.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_643");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course, another lesson.
	if (response == "s_648")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalVehicleAcquired (player, npc);

			//-- NPC: Yes, well... better learned than ignorant. I want you go out to a spot in the nearby hills and get 30 units of metal. Follow my waypoint to the general vicinity and start your search from there.
			string_id message = new string_id (c_stringFile, "s_651");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Whatever.  I'll go.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_653");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 84);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch82 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your hunger for learning will serve you well. Now, I want you go out to a spot in the nearby hills and get at least 30 units of metal. Follow my waypoint to the general vicinity and start your search from there.    

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Find metal, got it.
	if (response == "s_643")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The area should be safe, but keep your eyes open.
			string_id message = new string_id (c_stringFile, "s_645");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch84 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, well... better learned than ignorant. I want you go out to a spot in the nearby hills and get 30 units of metal. Follow my waypoint to the general vicinity and start your search from there.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Whatever.  I'll go.
	if (response == "s_653")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.  Be back as soon as you can.
			string_id message = new string_id (c_stringFile, "s_656");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. Now you must learn how to make something out of that. You will use your generic crafting tool. In the future, you can go experiment, but for now, just make the item.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean, experiment?
	if (response == "s_664")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: When you get better crafting equipment, you can go to a crafting station to make your goods. As you create them, you can experiment to increase the abilities of the item. You may not do this with the generic crafting tool.
			string_id message = new string_id (c_stringFile, "s_667");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I understand. What do you need me to make?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_669");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch88 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: When you get better crafting equipment, you can go to a crafting station to make your goods. As you create them, you can experiment to increase the abilities of the item. You may not do this with the generic crafting tool.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand. What do you need me to make?
	if (response == "s_669")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I want you to make a water survey device. On a planet as dry as this...well, you can see how useful cool drinks can be.
			string_id message = new string_id (c_stringFile, "s_672");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A cool drink sounds like a great idea.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_675");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch89 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I want you to make a water survey device. On a planet as dry as this...well, you can see how useful cool drinks can be.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A cool drink sounds like a great idea.
	if (response == "s_675")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalSurveyReturn (player, npc);

			//-- NPC: It does, doesn't it?
			string_id message = new string_id (c_stringFile, "s_677");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch91 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you finished yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here it is! Bright and shiny!
	if (response == "s_683")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Very good craftsmanship for a first effort. You have talent for crafting, if you wish to pursue it. Now, my fledgling, I think you are ready to learn how to work as a team. For that, I'm going to give you a droid to practice on.
			string_id message = new string_id (c_stringFile, "s_685");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A droid? I have always wanted one of those!  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What in the world would I want with a droid?  I can't even bring it into bars!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_699");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not done yet.
	if (response == "s_709")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Finish it at your leisure. There is no rush.
			string_id message = new string_id (c_stringFile, "s_712");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch92 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very good craftsmanship for a first effort. You have talent for crafting, if you wish to pursue it. Now, my fledgling, I think you are ready to learn how to work as a team. For that, I'm going to give you a droid to practice on.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A droid? I have always wanted one of those!  
	if (response == "s_688")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalCraftDone (player, npc);

			//-- NPC: Here is the droid. You will have to call it the way you called your vehicle. You can also team up with your droid. I'll put some information into your datapad about that now.
			string_id message = new string_id (c_stringFile, "s_691");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_693");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 93);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What in the world would I want with a droid?  I can't even bring it into bars!
	if (response == "s_699")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalCraftDone (player, npc);

			//-- NPC: It's a pet that you don't have to clean up after. You can also team up with your droid. I'll put some information into your datapad about that now.
			string_id message = new string_id (c_stringFile, "s_701");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine. 
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_704");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 95);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch93 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is the droid. You will have to call it the way you called your vehicle. You can also team up with your droid. I'll put some information into your datapad about that now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_693")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Take good care of him.
			string_id message = new string_id (c_stringFile, "s_696");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch95 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's a pet that you don't have to clean up after. You can also team up with your droid. I'll put some information into your datapad about that now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine. 
	if (response == "s_704")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Take good care of it.
			string_id message = new string_id (c_stringFile, "s_707");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch99 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have one more task that I need you to accomplish for me.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this task?
	if (response == "s_721")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: An associate of mine in Mos Espa needs to know what is going on here. I believe that sometime soon, these minor raids will escalate and the last thing that we need here is more war.
			string_id message = new string_id (c_stringFile, "s_724");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do as you ask.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_727");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 100);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch100 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: An associate of mine in Mos Espa needs to know what is going on here. I believe that sometime soon, these minor raids will escalate and the last thing that we need here is more war.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do as you ask.
	if (response == "s_727")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_signalLearnGroup (player, npc);

			//-- NPC: Thank you. Tell Trace Lyson in Mos Espa about the Tusken raids so close to Mos Eisley. Tell him that there's a change in the political climate that bodes ill for us. 
			string_id message = new string_id (c_stringFile, "s_731");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Got it.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_734");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 101);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch101 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you. Tell Trace Lyson in Mos Espa about the Tusken raids so close to Mos Eisley. Tell him that there's a change in the political climate that bodes ill for us. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Got it.
	if (response == "s_734")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll see you when you get back.
			string_id message = new string_id (c_stringFile, "s_737");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch105 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you give him the information?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did.    
	if (response == "s_749")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. He will know what I need done. It appears that you are ready to fly on your own, fledgling. My last bit of advice is this: learn all you can about both sides of this civil war before choosing a side. Let your conscience guide you. You are more important than you believe and could be the factor that tips the scales. Is there anything you would like to know?
			string_id message = new string_id (c_stringFile, "s_751");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch106 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. He will know what I need done. It appears that you are ready to fly on your own, fledgling. My last bit of advice is this: learn all you can about both sides of this civil war before choosing a side. Let your conscience guide you. You are more important than you believe and could be the factor that tips the scales. Is there anything you would like to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch107 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to join the Imperial Navy!
	if (response == "s_759")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. I have a few contacts for you. Each of them has their own specialties. Which planet would you like to fly from?
			string_id message = new string_id (c_stringFile, "s_762");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine! I like it here.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Talus. Someone has to keep watch on Corellia.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_787");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_819");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 108);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to fly for the Rebellion!
	if (response == "s_851")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I know three pilots that will suit your needs. Which planet would you like to go to?
			string_id message = new string_id (c_stringFile, "s_855");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine. There's just something about this planet that draws me.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Corellia suits me best.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_891");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't want to take sides. I'd rather freelance.
	if (response == "s_955")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. I am familiar with a few groups. There's a Smuggler's Alliance here on Tatooine, the Royal Security Forces of Naboo, and CorSec on Corellia. Which would you like to know about?
			string_id message = new string_id (c_stringFile, "s_959");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Smuggler's Alliance sounds interesting!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know more about the RSF.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to fly for CorSec!
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_995");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1027");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 134);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch108 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right. I have a few contacts for you. Each of them has their own specialties. Which planet would you like to fly from?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine! I like it here.
	if (response == "s_764")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right, the person that you want to speak with is Lt. Akal Colzet of Storm Squadron. He's a stickler for protocol, so be on your best behavior. He resides in Bestine. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_766");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_768");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_772");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_779");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 109);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
	if (response == "s_787")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, there is certainly an Imperial presence, although I don't think that the officers on duty would consider it a vacation. The pilot trainer that I know there is Lt. Barn Sinkko. He is part of the Imperial Inquisition, which requires a lot from their pilots. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_791");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Inquisition? Maybe not. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: May I start over? Perhaps the Imperial Navy isn't what I want to do.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_795");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_803");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_811");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 113);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Talus. Someone has to keep watch on Corellia.
	if (response == "s_819")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. I have the pilot for you. Go to the Imperial Outpost on Talus and speak with Hakasha Sireen of Black Epsilon. I don't know much about her, but will she suit your needs?
			string_id message = new string_id (c_stringFile, "s_823");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would rather be more upfront. Let me choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I think I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_843");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 117);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch109 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right, the person that you want to speak with is Lt. Akal Colzet of Storm Squadron. He's a stickler for protocol, so be on your best behavior. He resides in Bestine. Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  
	if (response == "s_768")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointImpTat (player, npc);

			//-- NPC: Very good. I'll put a waypoint in your datapad. Is there anything else you would like to know?
			string_id message = new string_id (c_stringFile, "s_770");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. I'd like to choose someone else.
	if (response == "s_772")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. Which planet interests you?
			string_id message = new string_id (c_stringFile, "s_775");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine! I like it here.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Talus. Someone has to keep watch on Corellia.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_787");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_819");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 108);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I'd like to start over.
	if (response == "s_779")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Careful consideration is important. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_783");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch110 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very good. I'll put a waypoint in your datapad. Is there anything else you would like to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch111 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right. Which planet interests you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine! I like it here.
	if (response == "s_764")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right, the person that you want to speak with is Lt. Akal Colzet of Storm Squadron. He's a stickler for protocol, so be on your best behavior. He resides in Bestine. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_766");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_768");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_772");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_779");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 109);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
	if (response == "s_787")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, there is certainly an Imperial presence, although I don't think that the officers on duty would consider it a vacation. The pilot trainer that I know there is Lt. Barn Sinkko. He is part of the Imperial Inquisition, which requires a lot from their pilots. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_791");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Inquisition? Maybe not. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: May I start over? Perhaps the Imperial Navy isn't what I want to do.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_795");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_803");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_811");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 113);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Talus. Someone has to keep watch on Corellia.
	if (response == "s_819")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. I have the pilot for you. Go to the Imperial Outpost on Talus and speak with Hakasha Sireen of Black Epsilon. I don't know much about her, but will she suit your needs?
			string_id message = new string_id (c_stringFile, "s_823");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would rather be more upfront. Let me choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I think I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_843");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 117);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch112 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Careful consideration is important. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch113 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, there is certainly an Imperial presence, although I don't think that the officers on duty would consider it a vacation. The pilot trainer that I know there is Lt. Barn Sinkko. He is part of the Imperial Inquisition, which requires a lot from their pilots. Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, absolutely!
	if (response == "s_795")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointImpNab (player, npc);

			//-- NPC: He is headquartered in Kaadara. I will put a waypoint onto your datapad. Good luck with that! Is there anything else I can help you with?
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Inquisition? Maybe not. I'd like to choose someone else.
	if (response == "s_803")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Which planet would you like?
			string_id message = new string_id (c_stringFile, "s_807");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine! I like it here.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Talus. Someone has to keep watch on Corellia.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_787");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_819");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 108);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: May I start over? Perhaps the Imperial Navy isn't what I want to do.
	if (response == "s_811")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course! What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_815");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch114 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He is headquartered in Kaadara. I will put a waypoint onto your datapad. Good luck with that! Is there anything else I can help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch115 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Which planet would you like?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine! I like it here.
	if (response == "s_764")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right, the person that you want to speak with is Lt. Akal Colzet of Storm Squadron. He's a stickler for protocol, so be on your best behavior. He resides in Bestine. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_766");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_768");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_772");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_779");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 109);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
	if (response == "s_787")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, there is certainly an Imperial presence, although I don't think that the officers on duty would consider it a vacation. The pilot trainer that I know there is Lt. Barn Sinkko. He is part of the Imperial Inquisition, which requires a lot from their pilots. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_791");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Inquisition? Maybe not. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: May I start over? Perhaps the Imperial Navy isn't what I want to do.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_795");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_803");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_811");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 113);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Talus. Someone has to keep watch on Corellia.
	if (response == "s_819")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. I have the pilot for you. Go to the Imperial Outpost on Talus and speak with Hakasha Sireen of Black Epsilon. I don't know much about her, but will she suit your needs?
			string_id message = new string_id (c_stringFile, "s_823");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would rather be more upfront. Let me choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I think I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_843");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 117);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch116 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course! What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch117 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting. I have the pilot for you. Go to the Imperial Outpost on Talus and speak with Hakasha Sireen of Black Epsilon. I don't know much about her, but will she suit your needs?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes!
	if (response == "s_827")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointImpTalus (player, npc);

			//-- NPC: I'll put a waypoint into your datapad. Is there anything else you would like to know about?
			string_id message = new string_id (c_stringFile, "s_831");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would rather be more upfront. Let me choose another planet.
	if (response == "s_835")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Which planet would you like to go to next?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine! I like it here.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Talus. Someone has to keep watch on Corellia.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_764");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_787");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_819");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 108);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I'd like to start over.
	if (response == "s_843")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. What information may I provide for you?
			string_id message = new string_id (c_stringFile, "s_847");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch118 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll put a waypoint into your datapad. Is there anything else you would like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch119 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Which planet would you like to go to next?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine! I like it here.
	if (response == "s_764")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right, the person that you want to speak with is Lt. Akal Colzet of Storm Squadron. He's a stickler for protocol, so be on your best behavior. He resides in Bestine. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_766");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_768");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_772");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_779");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 109);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. Isn't that where top Imperial officers go on vacation?
	if (response == "s_787")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, there is certainly an Imperial presence, although I don't think that the officers on duty would consider it a vacation. The pilot trainer that I know there is Lt. Barn Sinkko. He is part of the Imperial Inquisition, which requires a lot from their pilots. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_791");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The Inquisition? Maybe not. I'd like to choose someone else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: May I start over? Perhaps the Imperial Navy isn't what I want to do.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_795");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_803");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_811");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 113);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Talus. Someone has to keep watch on Corellia.
	if (response == "s_819")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Interesting. I have the pilot for you. Go to the Imperial Outpost on Talus and speak with Hakasha Sireen of Black Epsilon. I don't know much about her, but will she suit your needs?
			string_id message = new string_id (c_stringFile, "s_823");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would rather be more upfront. Let me choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I think I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_843");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 117);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch120 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Indeed. What information may I provide for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch121 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know three pilots that will suit your needs. Which planet would you like to go to?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine. There's just something about this planet that draws me.
	if (response == "s_859")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does it really? Interesting. The pilot that I know here is Commander Da'la Scuna in Mos Espa of Crimson Phoenix. Would you be interested?
			string_id message = new string_id (c_stringFile, "s_863");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. I think I'd rather choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_867");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_875");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_883");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
	if (response == "s_891")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I believe that you are right. The Rebels have a training droid in Moenia named V3-FX that will train you for Vortex Squadron. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_895");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!  It will be very novel, being trained by a droid.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think so. I'd like to choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Honestly, I think I should start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Corellia suits me best.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Captain Kreezo trains pilots for Havoc Squadron from his safehouse in Tyrena. Would you like to go to him?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that sounds good.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I think I want another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: On second thought, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_931");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_939");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_947");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch122 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Does it really? Interesting. The pilot that I know here is Commander Da'la Scuna in Mos Espa of Crimson Phoenix. Would you be interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_867")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointRebTat (player, npc);

			//-- NPC: Commander Scuna is holed up in the back room of Mos Espa's cantina. I'll put a waypoint into your datapad. Is there something else I can help you with?
			string_id message = new string_id (c_stringFile, "s_871");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you. I think I'd rather choose another planet.
	if (response == "s_875")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Which planet would you like to go to?
			string_id message = new string_id (c_stringFile, "s_879");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine. There's just something about this planet that draws me.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Corellia suits me best.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_891");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I'd like to start over.
	if (response == "s_883")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: As I have been trying to show you, what happens to you is your decision. What may I help you with?
			string_id message = new string_id (c_stringFile, "s_887");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch123 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Commander Scuna is holed up in the back room of Mos Espa's cantina. I'll put a waypoint into your datapad. Is there something else I can help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch124 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Which planet would you like to go to?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine. There's just something about this planet that draws me.
	if (response == "s_859")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does it really? Interesting. The pilot that I know here is Commander Da'la Scuna in Mos Espa of Crimson Phoenix. Would you be interested?
			string_id message = new string_id (c_stringFile, "s_863");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. I think I'd rather choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_867");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_875");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_883");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
	if (response == "s_891")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I believe that you are right. The Rebels have a training droid in Moenia named V3-FX that will train you for Vortex Squadron. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_895");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!  It will be very novel, being trained by a droid.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think so. I'd like to choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Honestly, I think I should start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Corellia suits me best.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Captain Kreezo trains pilots for Havoc Squadron from his safehouse in Tyrena. Would you like to go to him?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that sounds good.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I think I want another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: On second thought, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_931");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_939");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_947");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch125 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As I have been trying to show you, what happens to you is your decision. What may I help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch126 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I believe that you are right. The Rebels have a training droid in Moenia named V3-FX that will train you for Vortex Squadron. Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes!  It will be very novel, being trained by a droid.
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointRebNab (player, npc);

			//-- NPC: I will give you a waypoint to V3-FX. Is there something else you would like to know?
			string_id message = new string_id (c_stringFile, "s_903");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think so. I'd like to choose another planet.
	if (response == "s_907")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which planet would you like then?
			string_id message = new string_id (c_stringFile, "s_911");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine. There's just something about this planet that draws me.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Corellia suits me best.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_891");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Honestly, I think I should start over.
	if (response == "s_915")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Whatever you think is best for you. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch127 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I will give you a waypoint to V3-FX. Is there something else you would like to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch128 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which planet would you like then?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine. There's just something about this planet that draws me.
	if (response == "s_859")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does it really? Interesting. The pilot that I know here is Commander Da'la Scuna in Mos Espa of Crimson Phoenix. Would you be interested?
			string_id message = new string_id (c_stringFile, "s_863");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. I think I'd rather choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_867");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_875");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_883");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
	if (response == "s_891")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I believe that you are right. The Rebels have a training droid in Moenia named V3-FX that will train you for Vortex Squadron. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_895");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!  It will be very novel, being trained by a droid.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think so. I'd like to choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Honestly, I think I should start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Corellia suits me best.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Captain Kreezo trains pilots for Havoc Squadron from his safehouse in Tyrena. Would you like to go to him?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that sounds good.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I think I want another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: On second thought, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_931");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_939");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_947");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch129 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Whatever you think is best for you. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch130 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. Captain Kreezo trains pilots for Havoc Squadron from his safehouse in Tyrena. Would you like to go to him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, that sounds good.
	if (response == "s_931")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointRebCore (player, npc);

			//-- NPC: All right. I'll transfer a waypoint to your datapad for Captain Kreezo. Is there something else you need?
			string_id message = new string_id (c_stringFile, "s_935");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. I think I want another planet.
	if (response == "s_939")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Which planet would you like?
			string_id message = new string_id (c_stringFile, "s_943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tatooine. There's just something about this planet that draws me.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Corellia suits me best.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_891");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, I want to start over.
	if (response == "s_947")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: So be it. What can I help you with?
			string_id message = new string_id (c_stringFile, "s_951");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch131 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right. I'll transfer a waypoint to your datapad for Captain Kreezo. Is there something else you need?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch132 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Which planet would you like?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tatooine. There's just something about this planet that draws me.
	if (response == "s_859")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does it really? Interesting. The pilot that I know here is Commander Da'la Scuna in Mos Espa of Crimson Phoenix. Would you be interested?
			string_id message = new string_id (c_stringFile, "s_863");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. I think I'd rather choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_867");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_875");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_883");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naboo. I'm sure there's a lot I can do there.
	if (response == "s_891")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I believe that you are right. The Rebels have a training droid in Moenia named V3-FX that will train you for Vortex Squadron. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_895");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!  It will be very novel, being trained by a droid.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think so. I'd like to choose another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Honestly, I think I should start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Corellia suits me best.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Captain Kreezo trains pilots for Havoc Squadron from his safehouse in Tyrena. Would you like to go to him?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that sounds good.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No. I think I want another planet.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: On second thought, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_931");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_939");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_947");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch133 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So be it. What can I help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch134 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting. I am familiar with a few groups. There's a Smuggler's Alliance here on Tatooine, the Royal Security Forces of Naboo, and CorSec on Corellia. Which would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Smuggler's Alliance sounds interesting!
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, the contact that you need for the Smuggler's Alliance is in town, actually. His name is Dravis and he started the Smuggler's Alliance with Talon Kardde. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_967");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that will do nicely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hmm...maybe I should look at more legitimate avenues.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_979");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_987");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 135);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know more about the RSF.
	if (response == "s_995")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Royal Security Forces protect the Royalty of Naboo and the sector from pirates and Rebels. Their headquarters is in the capital city of Theed. Is this what you would like to join?
			string_id message = new string_id (c_stringFile, "s_999");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds great! Where do I sign up?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, sounds rather boring. I want something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to start over. I'm not sure this is for me.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1003");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1011");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1019");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to fly for CorSec!
	if (response == "s_1027")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: CorSec defends their sector from pirates, mostly. They try to stay neutral in the Galactic Civil War. Is this something that interests you?
			string_id message = new string_id (c_stringFile, "s_1031");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Perhaps not. I want to choose something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1035");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1043");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1051");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 143);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch135 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. Well, the contact that you need for the Smuggler's Alliance is in town, actually. His name is Dravis and he started the Smuggler's Alliance with Talon Kardde. Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, that will do nicely!
	if (response == "s_971")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointNeuTat (player, npc);

			//-- NPC: Very well. Talk to Dravis in the back of the Mos Eisley Cantina. I know that you have been there, but here is a waypoint for you. Is there something else I can help you with?
			string_id message = new string_id (c_stringFile, "s_975");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hmm...maybe I should look at more legitimate avenues.
	if (response == "s_979")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: What would you like to know more about?
			string_id message = new string_id (c_stringFile, "s_983");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Smuggler's Alliance sounds interesting!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know more about the RSF.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to fly for CorSec!
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_995");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1027");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 134);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I'd like to start over.
	if (response == "s_987")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_991");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch136 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Talk to Dravis in the back of the Mos Eisley Cantina. I know that you have been there, but here is a waypoint for you. Is there something else I can help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch137 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What would you like to know more about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Smuggler's Alliance sounds interesting!
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, the contact that you need for the Smuggler's Alliance is in town, actually. His name is Dravis and he started the Smuggler's Alliance with Talon Kardde. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_967");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that will do nicely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hmm...maybe I should look at more legitimate avenues.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_979");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_987");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 135);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know more about the RSF.
	if (response == "s_995")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Royal Security Forces protect the Royalty of Naboo and the sector from pirates and Rebels. Their headquarters is in the capital city of Theed. Is this what you would like to join?
			string_id message = new string_id (c_stringFile, "s_999");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds great! Where do I sign up?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, sounds rather boring. I want something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to start over. I'm not sure this is for me.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1003");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1011");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1019");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to fly for CorSec!
	if (response == "s_1027")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: CorSec defends their sector from pirates, mostly. They try to stay neutral in the Galactic Civil War. Is this something that interests you?
			string_id message = new string_id (c_stringFile, "s_1031");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Perhaps not. I want to choose something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1035");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1043");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1051");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 143);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch138 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch139 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Royal Security Forces protect the Royalty of Naboo and the sector from pirates and Rebels. Their headquarters is in the capital city of Theed. Is this what you would like to join?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That sounds great! Where do I sign up?
	if (response == "s_1003")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointNeuNab (player, npc);

			//-- NPC: You need to speak to Captain Dinge. I'll give you a waypoint. I believe he's in the palace in Theed. Is there something else I can help you with?
			string_id message = new string_id (c_stringFile, "s_1007");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, sounds rather boring. I want something else.
	if (response == "s_1011")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_1015");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Smuggler's Alliance sounds interesting!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know more about the RSF.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to fly for CorSec!
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_995");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1027");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 134);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to start over. I'm not sure this is for me.
	if (response == "s_1019")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you wish. What do you want to know about?
			string_id message = new string_id (c_stringFile, "s_1023");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch140 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You need to speak to Captain Dinge. I'll give you a waypoint. I believe he's in the palace in Theed. Is there something else I can help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch141 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Smuggler's Alliance sounds interesting!
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, the contact that you need for the Smuggler's Alliance is in town, actually. His name is Dravis and he started the Smuggler's Alliance with Talon Kardde. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_967");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that will do nicely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hmm...maybe I should look at more legitimate avenues.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_979");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_987");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 135);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know more about the RSF.
	if (response == "s_995")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Royal Security Forces protect the Royalty of Naboo and the sector from pirates and Rebels. Their headquarters is in the capital city of Theed. Is this what you would like to join?
			string_id message = new string_id (c_stringFile, "s_999");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds great! Where do I sign up?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, sounds rather boring. I want something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to start over. I'm not sure this is for me.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1003");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1011");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1019");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to fly for CorSec!
	if (response == "s_1027")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: CorSec defends their sector from pirates, mostly. They try to stay neutral in the Galactic Civil War. Is this something that interests you?
			string_id message = new string_id (c_stringFile, "s_1031");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Perhaps not. I want to choose something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1035");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1043");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1051");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 143);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch142 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you wish. What do you want to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch143 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: CorSec defends their sector from pirates, mostly. They try to stay neutral in the Galactic Civil War. Is this something that interests you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely!
	if (response == "s_1035")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveWaypointNeuCore (player, npc);

			//-- NPC: You will need to speak to Sergeant Rhea in Coronet City. I'll transfer a waypoint to your datapad.
			string_id message = new string_id (c_stringFile, "s_1039");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps not. I want to choose something else.
	if (response == "s_1043")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: A little knowledge never hurt. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_1047");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Smuggler's Alliance sounds interesting!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know more about the RSF.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to fly for CorSec!
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_995");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1027");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 134);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I want to start over.
	if (response == "s_1051")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll never argue with someone who wishes to make a well-thought-out choice about their future. What would you like to know about?
			string_id message = new string_id (c_stringFile, "s_1055");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch144 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will need to speak to Sergeant Rhea in Coronet City. I'll transfer a waypoint to your datapad.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch145 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A little knowledge never hurt. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Smuggler's Alliance sounds interesting!
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, the contact that you need for the Smuggler's Alliance is in town, actually. His name is Dravis and he started the Smuggler's Alliance with Talon Kardde. Is this what you want?
			string_id message = new string_id (c_stringFile, "s_967");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, that will do nicely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hmm...maybe I should look at more legitimate avenues.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_979");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_987");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 135);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know more about the RSF.
	if (response == "s_995")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Royal Security Forces protect the Royalty of Naboo and the sector from pirates and Rebels. Their headquarters is in the capital city of Theed. Is this what you would like to join?
			string_id message = new string_id (c_stringFile, "s_999");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That sounds great! Where do I sign up?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, sounds rather boring. I want something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want to start over. I'm not sure this is for me.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1003");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1011");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1019");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 139);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to fly for CorSec!
	if (response == "s_1027")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: CorSec defends their sector from pirates, mostly. They try to stay neutral in the Galactic Civil War. Is this something that interests you?
			string_id message = new string_id (c_stringFile, "s_1031");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Perhaps not. I want to choose something else.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I want to start over.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1035");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1043");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1051");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 143);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch146 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll never argue with someone who wishes to make a well-thought-out choice about their future. What would you like to know about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch147 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting, please go on.
	if (response == "s_1067")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: At one point, I would have said that they were invincible, but that no longer appears to be true. While ruthless, their methods are also effective.
			string_id message = new string_id (c_stringFile, "s_1071");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch148 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: At one point, I would have said that they were invincible, but that no longer appears to be true. While ruthless, their methods are also effective.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch149 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What changed that?
	if (response == "s_1083")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: A farm boy managed to destroy the Emperor's 'Ultimate Weapon' and restore hope to the Rebel Alliance. They are not especially organized or well-funded, but they fight with heart.
			string_id message = new string_id (c_stringFile, "s_1087");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch150 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A farm boy managed to destroy the Emperor's 'Ultimate Weapon' and restore hope to the Rebel Alliance. They are not especially organized or well-funded, but they fight with heart.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch151 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are they specifically?
	if (response == "s_1099")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lady Valerian has set herself up as Jabba the Hutt's rival, though I'm not sure he cares much as he is the main power here. Nym has a base up on Lok, and the Black Sun have been recently seen. Each planet has their criminal element, but many of those would rather rob you rather than talk to you.
			string_id message = new string_id (c_stringFile, "s_1103");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to know where I can learn to be a pilot.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like to know about the Imperials.
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'd like to know about the Rebels.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to know about the criminals
			boolean hasResponse3 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm set.  Now I just need to earn credits.
			boolean hasResponse4 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1059");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1075");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1107");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch152 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lady Valerian has set herself up as Jabba the Hutt's rival, though I'm not sure he cares much as he is the main power here. Nym has a base up on Lok, and the Black Sun have been recently seen. Each planet has their criminal element, but many of those would rather rob you rather than talk to you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know where I can learn to be a pilot.
	if (response == "s_754")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Imperials.
	if (response == "s_1059")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the Rebels.
	if (response == "s_1075")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about the criminals
	if (response == "s_1091")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm set.  Now I just need to earn credits.
	if (response == "s_1107")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			c_newbie_mentor_action_signalLastStep (player, npc);

			//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_1111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May the... wait!  Is there something that I should know about you?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1115");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch153 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You should probably take a few jobs and go meet other people. There is strength in numbers and having someone trustworthy to watch your back strengthens both of you. Fly well and may the Force be with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: May the... wait!  Is there something that I should know about you?
	if (response == "s_1115")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not at all!  Oh, one final thing.  Several people are looking for someone to go work for them.  Mayor Guh'rantt has the details.  I'll show you where to find him, if you like.
			string_id message = new string_id (c_stringFile, "s_1119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1123");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 154);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch154 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not at all!  Oh, one final thing.  Several people are looking for someone to go work for them.  Mayor Guh'rantt has the details.  I'll show you where to find him, if you like.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure!
	if (response == "s_1123")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			c_newbie_mentor_action_giveMayorQuest (player, npc);

			//-- NPC: I'll put the information in your journal.  Fare well and be safe.
			string_id message = new string_id (c_stringFile, "s_1127");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_mentor_handleBranch156 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello again, %TU. Do you need anything?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to know about being a pilot.
	if (response == "s_1135")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, spaceflight. While I'm not very adept with a starship, I can point you to someone that will help you. Who would you like to fly for?
			string_id message = new string_id (c_stringFile, "s_757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to join the Imperial Navy!
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want to fly for the Rebellion!
			boolean hasResponse1 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't want to take sides. I'd rather freelance.
			boolean hasResponse2 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_759");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_851");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_955");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 107);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to know about the Imperials.
	if (response == "s_1139")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Led by Emperor Palpatine and his army, the Empire stands for law and order. They are powerful and organized, and very little escapes their notice.  
			string_id message = new string_id (c_stringFile, "s_1063");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting, please go on.
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1067");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to know about the Rebels.
	if (response == "s_1143")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: They are idealists who believe that the Empire's rule-by-might and strongly human-centric views are evil and wrong. Until recently, their efforts were like sand in the Emperor's shoe. 
			string_id message = new string_id (c_stringFile, "s_1079");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What changed that?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1083");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to know about the Criminals.
	if (response == "s_1147")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: The criminal influence can be felt everywhere. Hutts have their slimy hands in every despicable trade imaginable. They do not play well together and often work in direct opposition to each other.
			string_id message = new string_id (c_stringFile, "s_1095");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are they specifically?
			boolean hasResponse0 = false;
			if (c_newbie_mentor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1099");

				utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to go talk to the mayor.
	if (response == "s_1150")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			c_newbie_mentor_action_giveMayorQuest (player, npc);

			//-- NPC: Very well.  I will put the information into your journal.  Fare well and be safe.
			string_id message = new string_id (c_stringFile, "s_1152");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm all set. Thank you.
	if (response == "s_1154")
	{
		//-- [NOTE] 
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			//-- NPC: You are welcome.  Safe journeys.
			string_id message = new string_id (c_stringFile, "s_1156");
			utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_newbie_mentor");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Trehla Keelo");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Trehla Keelo");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_newbie_mentor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!c_newbie_mentor_condition_questActiveOrComplete (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Welcome to Mos Eisley. Watch your back here.  There has never been a more wretched hive of scum and villainy, as you may have heard. You and I have some business to attend to.
		string_id message = new string_id (c_stringFile, "s_303");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Business? I don't even know you!
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_305");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 1);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnBankStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: You didn't go to the bank terminal yet, did you?  Please go there now.  
		string_id message = new string_id (c_stringFile, "s_349");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnBankReturn (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Welcome back. Did you make a successful transaction?  
		string_id message = new string_id (c_stringFile, "s_351");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I did indeed.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I decided not to deposit my money.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_353");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_357");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 14);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnBazaarStep (player, npc))
	{
		doAnimationAction (npc, "wave_finger_warning");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: You are trying to put one over on me, are you not? Please do as I ask and go to the bazaar terminal.
		string_id message = new string_id (c_stringFile, "s_369");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnBazaarReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Did you find anything that caught your eye?
		string_id message = new string_id (c_stringFile, "s_371");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I did, but nothing that I could afford.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes, I did.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Not really.
		boolean hasResponse2 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_373");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_377");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_381");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 20);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCloneStep (player, npc))
	{
		doAnimationAction (npc, "sigh_deeply");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: I know that contemplating death is difficult, but you must learn what is available to restore you.
		string_id message = new string_id (c_stringFile, "s_401");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCloneReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: I hope that was enlightening.
		string_id message = new string_id (c_stringFile, "s_403");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It was rather disturbing, preparing for my own death.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Absolutely!  Now I know what happens to the people who get in my way!
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_405");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_409");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 29);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnHealingBox1 (player, npc))
	{
		//-- NPC: Be certain you understand how healing works.
		string_id message = new string_id (c_stringFile, "s_421");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnHealingLearned (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Very good! I am impressed with how quickly you are learning. Now that I know that you can heal yourself, let's see how well you can fight.
		string_id message = new string_id (c_stringFile, "s_423");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What would you have me do?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I can learn faster if you hurry this up.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_425");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_435");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 35);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnKill (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Go and kill 10 Tusken Zealots. I do not think that I can be clearer than that.
		string_id message = new string_id (c_stringFile, "s_445");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnKillReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Now that you know how to fight, I want you to be able to survive in the wilderness.
		string_id message = new string_id (c_stringFile, "s_448");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do as you ask.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: But there are perfectly good cities everywhere!
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_451");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_461");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 41);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnHarvestStep (player, npc))
	{
		doAnimationAction (npc, "point_away");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Please go to the location that I specified and harvest dwarf nunas there.
		string_id message = new string_id (c_stringFile, "s_472");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnHarvestReturn (player, npc))
	{
		doAnimationAction (npc, "nod");

		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Limbs intact, I see. It is good to know that my faith in you is well-placed. There is hope for the future after all.
		string_id message = new string_id (c_stringFile, "s_475");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you mean?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Your hope for the future rests on me? You are gambling a lot, old woman.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_477");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_488");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 47);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnProfessionStep (player, npc))
	{
		//-- NPC: Seriously. Go to the plaza with the profession trainers.
		string_id message = new string_id (c_stringFile, "s_499");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnProfessionReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Back again, both richer and poorer. I will be willing to bet that you need some time at the cantina.
		string_id message = new string_id (c_stringFile, "s_501");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: A break so soon? But we just started! 
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: All right! Party Time!
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_504");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_518");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 53);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCantinaStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: You haven't spoken to Allura yet, have you?
		string_id message = new string_id (c_stringFile, "s_537");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCantinaPerform (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Allura mentioned that she wanted you to try your skills with entertaining. I suggest you go do that now.
		string_id message = new string_id (c_stringFile, "s_540");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCantinaReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Did you enjoy your lesson?
		string_id message = new string_id (c_stringFile, "s_543");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. I didn't realize that entertainment helped so much!
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_545");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 61);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnMedCenterStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: You haven't returned my item, have you?
		string_id message = new string_id (c_stringFile, "s_564");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnMedCenterReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Welcome back. Thank you for talking to Kazen.
		string_id message = new string_id (c_stringFile, "s_567");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You're welcome. Do you have anything else that needs to be done?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yeah. Have another errand that I can run for you, master? 
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_569");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_585");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 66);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnJunkStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Please go to the junk dealer.
		string_id message = new string_id (c_stringFile, "s_601");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnJunkReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: So now you know how to sell things to the junk dealers. When you are out hunting, you will occasionally come across things you don't want. Junk dealers will usually buy it from you.
		string_id message = new string_id (c_stringFile, "s_604");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm looking forward to it.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: At least I won't be sending someone else to do my errands.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_606");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_616");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 74);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnVehicleInfo (player, npc))
	{
		//-- NPC: Read a bit about your vehicle, call it, and then talk to me.
		string_id message = new string_id (c_stringFile, "s_632");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnVehicleAcquired (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Now that you have a vehicle, I have another lesson for you.  I want you to learn about crafting goods for people.
		string_id message = new string_id (c_stringFile, "s_635");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Ok! What do I need to do?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Of course, another lesson.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_637");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_648");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 81);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnSurveyStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Go out to the location on your datapad and survey for metal. Sample until you get at least 30 units. There really is a method to my madness.
		string_id message = new string_id (c_stringFile, "s_659");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnSurveyReturn (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Welcome back. Now you must learn how to make something out of that. You will use your generic crafting tool. In the future, you can go experiment, but for now, just make the item.  
		string_id message = new string_id (c_stringFile, "s_661");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you mean, experiment?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_664");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 87);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnCraftStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Have you finished yet?
		string_id message = new string_id (c_stringFile, "s_680");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Here it is! Bright and shiny!
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition_playerOnCraftReturn (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not done yet.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_683");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_709");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 91);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerLearnDroid (player, npc))
	{
		//-- NPC: Learn how to use your droid and how to join up with him. The knowledge will serve you in the future.
		string_id message = new string_id (c_stringFile, "s_715");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnLearnGroup (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: I have one more task that I need you to accomplish for me.  
		string_id message = new string_id (c_stringFile, "s_718");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is this task?
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_721");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 99);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnShuttleStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: You will definitely need to learn how the shuttles work if you want to get around in the world. I suggest you go to the Shuttleport.
		string_id message = new string_id (c_stringFile, "s_740");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnAssociateStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Please go talk to Trace in Mos Espa.
		string_id message = new string_id (c_stringFile, "s_743");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition_playerOnLastStep (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Did you give him the information?
		string_id message = new string_id (c_stringFile, "s_746");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I did.    
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_749");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 105);

			npcStartConversation (player, npc, "c_newbie_mentor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_mentor_condition__defaultCondition (player, npc))
	{
		c_newbie_mentor_action_faceplayer (player, npc);

		//-- NPC: Hello again, %TU. Do you need anything?
		string_id message = new string_id (c_stringFile, "s_1131");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'd like to know about being a pilot.
		boolean hasResponse0 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I want to know about the Imperials.
		boolean hasResponse1 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I would like to know about the Rebels.
		boolean hasResponse2 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I want to know about the Criminals.
		boolean hasResponse3 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I want to go talk to the mayor.
		boolean hasResponse4 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: I'm all set. Thank you.
		boolean hasResponse5 = false;
		if (c_newbie_mentor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1135");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1139");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1143");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1147");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1150");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1154");

			utils.setScriptVar (player, "conversation.c_newbie_mentor.branchId", 156);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "c_newbie_mentor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_newbie_mentor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_newbie_mentor.branchId");

	if (branchId == 1 && c_newbie_mentor_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_newbie_mentor_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_newbie_mentor_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_newbie_mentor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_newbie_mentor_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_newbie_mentor_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_newbie_mentor_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && c_newbie_mentor_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_newbie_mentor_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && c_newbie_mentor_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && c_newbie_mentor_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && c_newbie_mentor_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && c_newbie_mentor_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && c_newbie_mentor_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && c_newbie_mentor_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && c_newbie_mentor_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && c_newbie_mentor_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && c_newbie_mentor_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && c_newbie_mentor_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && c_newbie_mentor_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && c_newbie_mentor_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && c_newbie_mentor_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && c_newbie_mentor_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && c_newbie_mentor_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && c_newbie_mentor_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && c_newbie_mentor_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && c_newbie_mentor_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && c_newbie_mentor_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && c_newbie_mentor_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && c_newbie_mentor_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && c_newbie_mentor_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && c_newbie_mentor_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && c_newbie_mentor_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && c_newbie_mentor_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && c_newbie_mentor_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && c_newbie_mentor_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && c_newbie_mentor_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 62 && c_newbie_mentor_handleBranch62 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && c_newbie_mentor_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && c_newbie_mentor_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 67 && c_newbie_mentor_handleBranch67 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && c_newbie_mentor_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && c_newbie_mentor_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && c_newbie_mentor_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 74 && c_newbie_mentor_handleBranch74 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && c_newbie_mentor_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 77 && c_newbie_mentor_handleBranch77 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 78 && c_newbie_mentor_handleBranch78 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 81 && c_newbie_mentor_handleBranch81 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 82 && c_newbie_mentor_handleBranch82 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 84 && c_newbie_mentor_handleBranch84 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && c_newbie_mentor_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 88 && c_newbie_mentor_handleBranch88 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 89 && c_newbie_mentor_handleBranch89 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 91 && c_newbie_mentor_handleBranch91 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 92 && c_newbie_mentor_handleBranch92 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 93 && c_newbie_mentor_handleBranch93 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 95 && c_newbie_mentor_handleBranch95 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 99 && c_newbie_mentor_handleBranch99 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 100 && c_newbie_mentor_handleBranch100 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 101 && c_newbie_mentor_handleBranch101 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 105 && c_newbie_mentor_handleBranch105 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 106 && c_newbie_mentor_handleBranch106 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 107 && c_newbie_mentor_handleBranch107 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 108 && c_newbie_mentor_handleBranch108 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 109 && c_newbie_mentor_handleBranch109 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 110 && c_newbie_mentor_handleBranch110 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 111 && c_newbie_mentor_handleBranch111 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 112 && c_newbie_mentor_handleBranch112 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 113 && c_newbie_mentor_handleBranch113 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 114 && c_newbie_mentor_handleBranch114 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 115 && c_newbie_mentor_handleBranch115 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 116 && c_newbie_mentor_handleBranch116 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 117 && c_newbie_mentor_handleBranch117 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 118 && c_newbie_mentor_handleBranch118 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 119 && c_newbie_mentor_handleBranch119 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 120 && c_newbie_mentor_handleBranch120 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 121 && c_newbie_mentor_handleBranch121 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 122 && c_newbie_mentor_handleBranch122 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 123 && c_newbie_mentor_handleBranch123 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 124 && c_newbie_mentor_handleBranch124 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 125 && c_newbie_mentor_handleBranch125 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 126 && c_newbie_mentor_handleBranch126 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 127 && c_newbie_mentor_handleBranch127 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 128 && c_newbie_mentor_handleBranch128 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 129 && c_newbie_mentor_handleBranch129 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 130 && c_newbie_mentor_handleBranch130 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 131 && c_newbie_mentor_handleBranch131 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 132 && c_newbie_mentor_handleBranch132 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 133 && c_newbie_mentor_handleBranch133 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 134 && c_newbie_mentor_handleBranch134 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 135 && c_newbie_mentor_handleBranch135 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 136 && c_newbie_mentor_handleBranch136 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 137 && c_newbie_mentor_handleBranch137 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 138 && c_newbie_mentor_handleBranch138 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 139 && c_newbie_mentor_handleBranch139 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 140 && c_newbie_mentor_handleBranch140 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 141 && c_newbie_mentor_handleBranch141 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 142 && c_newbie_mentor_handleBranch142 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 143 && c_newbie_mentor_handleBranch143 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 144 && c_newbie_mentor_handleBranch144 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 145 && c_newbie_mentor_handleBranch145 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 146 && c_newbie_mentor_handleBranch146 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 147 && c_newbie_mentor_handleBranch147 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 148 && c_newbie_mentor_handleBranch148 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 149 && c_newbie_mentor_handleBranch149 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 150 && c_newbie_mentor_handleBranch150 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 151 && c_newbie_mentor_handleBranch151 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 152 && c_newbie_mentor_handleBranch152 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 153 && c_newbie_mentor_handleBranch153 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 154 && c_newbie_mentor_handleBranch154 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 156 && c_newbie_mentor_handleBranch156 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_newbie_mentor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

