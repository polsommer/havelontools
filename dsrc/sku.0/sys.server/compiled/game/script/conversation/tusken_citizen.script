// ======================================================================
//
// tusken_citizen.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/tusken_citizen";

// ======================================================================
// Script Conditions
// ======================================================================

boolean tusken_citizen_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean tusken_citizen_condition_staffed (obj_id player, obj_id npc)
{
	return getIntObjVar(npc, "phase") == 1;
}

// ======================================================================
// Script Actions
// ======================================================================

void tusken_citizen_action_goToHotel (obj_id player, obj_id npc)
{
	dictionary dict = new dictionary();
	dict.put("pathAction", "patrol_path");
	dict.put("pathName", "toHotel");
	messageTo(npc, "doPathAction", dict, 0.0f, false);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.tusken_citizen");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setTriggerVolume(self);
	
	dictionary dict = new dictionary();
	dict.put("pathAction", "patrol_path");
	dict.put("pathName", "toHotel");
	messageTo(self, "doPathAction", dict, 10.0f, false);

	return SCRIPT_CONTINUE;
}

trigger OnTriggerVolumeEntered(string volumeName, obj_id breacher)
{
	if (volumeName.equals("tusken_citizen"))
	{
		if (factions.getFaction(breacher).equals("heroic_tusken"))
		{
			addHate(breacher, self, 1000.0f);
		}
	}
	return SCRIPT_CONTINUE;
}

void setTriggerVolume(obj_id self)
{
	createTriggerVolume("tusken_citizen", 6.0f, true);
}
trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.tusken_citizen");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (tusken_citizen_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "pose_proudly");

		//-- NPC: I am going straight to the Hotel, Kav told me I would be safe there.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "tusken_citizen")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.tusken_citizen.branchId");

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.tusken_citizen.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

