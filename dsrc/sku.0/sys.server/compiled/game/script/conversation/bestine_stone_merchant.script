// ======================================================================
//
// bestine_stone_merchant.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.utils;
include library.weapons;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/bestine_stone_merchant";

// ======================================================================
// Script Conditions
// ======================================================================

boolean bestine_stone_merchant_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean bestine_stone_merchant_condition_SearchForStones (obj_id player, obj_id npc)
{
	if ( utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/carved_stone.iff") )
		return true;
		
	if ( utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/smooth_stone.iff") )
		return true;
		
	return false; 
}

// ----------------------------------------------------------------------

boolean bestine_stone_merchant_condition_SearchforSmooth (obj_id player, obj_id npc)
{
	if ( utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/smooth_stone.iff") )
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean bestine_stone_merchant_condition_SearchforCarved (obj_id player, obj_id npc)
{
	if ( utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/carved_stone.iff") )
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean bestine_stone_merchant_condition_SearchforStoneObjs (obj_id player, obj_id npc)
{
	if (hasObjVar(player, "bestine.carvedstonereward"))
		return true;
		
	if (hasObjVar(player, "bestine.smoothstonereward"))
		return true;
		
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void bestine_stone_merchant_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void bestine_stone_merchant_action_GiveCarvedStoneReward (obj_id player, obj_id npc)
{
	string REWARD = "object/tangible/wearables/armor/marauder/armor_marauder_s02_chest_plate_quest.iff";
	if (isIdValid(player))
	{
	 	obj_id objInventory = utils.getInventoryContainer(player);
		if(isIdValid(objInventory)) 
		{
			obj_id[] objContents = utils.getContents(objInventory);
	
			if( objContents != null )
			{					
			//obj_id item = createObject( REWARD, playerInv, "" );
			//if(isIdValid(item))
			//{
				for( int intI = 0; intI<objContents.length; intI++ )
				{
					if ( isIdValid(objContents[intI]) )
					{
						string strItemTemplate = getTemplateName(objContents[intI]);
						if( strItemTemplate=="object/tangible/loot/quest/carved_stone.iff" )
						{
							destroyObject( objContents[intI] );
							
							obj_id item = createObject( REWARD, objInventory, "" );
							//if ( hasObjVar(player, "bestine.tuskenquest") )
								//removeObjVar( player, "bestine.tuskenquest");
								
							//if ( hasObjVar(player, "bestine.tuskenquestdone") )
								//removeObjVar(player, "bestine.tuskenquestdone");
								
							//int currentQuestNum = 0;
							//if ( hasObjVar(npc, "bestine.electionStarted") )
								//currentQuestNum = getIntObjVar(npc, "bestine.electionStarted") - 1;
							//else if ( hasObjVar(npc, "bestine.electionEnded") )
								//currentQuestNum = getIntObjVar(npc, "bestine.electionEnded");
							
							setObjVar(player, "bestine.carvedstonereward", true);
										
							return;
						}
					}
	 			}
	 		}
		}
	}
	return;
}

// ----------------------------------------------------------------------

void bestine_stone_merchant_action_GiveSmoothStoneReward (obj_id player, obj_id npc)
{
	string REWARD = "object/weapon/ranged/carbine/carbine_e11_victor_quest.iff";
	if (isIdValid(player))
	{
	 	obj_id objInventory = utils.getInventoryContainer(player);
		if(isIdValid(objInventory)) 
		{
			obj_id[] objContents = utils.getContents(objInventory);
	
			if( objContents != null )
			{					
			//obj_id item = createObject( REWARD, playerInv, "" );
			//if(isIdValid(item))
			//{
				for( int intI = 0; intI<objContents.length; intI++ )
				{
					if ( isIdValid(objContents[intI]) )
					{
						string strItemTemplate = getTemplateName(objContents[intI]);
						if( strItemTemplate=="object/tangible/loot/quest/smooth_stone.iff" )
						{
							destroyObject( objContents[intI] );
							
							obj_id item = weapons.createWeapon(REWARD, objInventory, rand(0.8f, 1.1f));
							//if ( hasObjVar(player, "bestine.tuskenquest") )
								//removeObjVar( player, "bestine.tuskenquest");
								
							//if ( hasObjVar(player, "bestine.tuskenquestdone") )
								//removeObjVar(player, "bestine.tuskenquestdone");
								
							//int currentQuestNum = 0;
							//if ( hasObjVar(npc, "bestine.electionStarted") )
								//currentQuestNum = getIntObjVar(npc, "bestine.electionStarted") - 1;
							//else if ( hasObjVar(npc, "bestine.electionEnded") )
								//currentQuestNum = getIntObjVar(npc, "bestine.electionEnded");
							
							setObjVar(player, "bestine.carvedstonereward", true);
										
							return;
						}
					}
	 			}
	 		}
		}
	}
	return;
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.bestine_stone_merchant");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.bestine_stone_merchant");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (bestine_stone_merchant_condition_SearchforStoneObjs (player, self))
	{
		//-- NPC: Do you have more stones for me?
		string_id message = new string_id (c_stringFile, "s_f56c7c9f");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I do. I have a carved stone.
		boolean hasResponse0 = false;
		if (bestine_stone_merchant_condition_SearchforCarved (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes, I do. I have a smooth stone.
		boolean hasResponse1 = false;
		if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: No, just looking around. See ya later!
		boolean hasResponse2 = false;
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b6e7bea1");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_af25c425");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_eaee4954");

			setObjVar (player, "conversation.bestine_stone_merchant.branchId", 1);

			npcStartConversation (player, self, "bestine_stone_merchant", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bestine_stone_merchant_condition__defaultCondition (player, self))
	{
		//-- NPC: I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.
		string_id message = new string_id (c_stringFile, "s_8762f9f");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I may have the stones you are looking for.
		boolean hasResponse0 = false;
		if (bestine_stone_merchant_condition_SearchForStones (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I guess so. I'll look for some.
		boolean hasResponse1 = false;
		if (!bestine_stone_merchant_condition_SearchForStones (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Probably. Bye!
		boolean hasResponse2 = false;
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_98e55c89");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2b5e768f");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4242e25b");

			setObjVar (player, "conversation.bestine_stone_merchant.branchId", 3);

			npcStartConversation (player, self, "bestine_stone_merchant", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "bestine_stone_merchant")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.bestine_stone_merchant.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Do you have more stones for me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I do. I have a carved stone.
	if (branchId == 1 && response == "s_b6e7bea1")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
			string_id message = new string_id (c_stringFile, "s_cc49587f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll give you the carved stone.
			boolean hasResponse0 = false;
			if (bestine_stone_merchant_condition_SearchforCarved (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll give you the smooth stone.
			boolean hasResponse1 = false;
			if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm going to keep it.
			boolean hasResponse2 = false;
			if (bestine_stone_merchant_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_211ab5b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38d8cf30");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c741032");

				setObjVar (player, "conversation.bestine_stone_merchant.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Do you have more stones for me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Do you have more stones for me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I do. I have a smooth stone.
	if (branchId == 1 && response == "s_af25c425")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
			string_id message = new string_id (c_stringFile, "s_cc49587f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll give you the carved stone.
			boolean hasResponse0 = false;
			if (bestine_stone_merchant_condition_SearchforCarved (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll give you the smooth stone.
			boolean hasResponse1 = false;
			if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm going to keep it.
			boolean hasResponse2 = false;
			if (bestine_stone_merchant_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_211ab5b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38d8cf30");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c741032");

				setObjVar (player, "conversation.bestine_stone_merchant.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Do you have more stones for me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Do you have more stones for me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, just looking around. See ya later!
	if (branchId == 1 && response == "s_eaee4954")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright. If you have any stones, be sure to come back!
			string_id message = new string_id (c_stringFile, "s_b04b4ef5");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Do you have more stones for me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I may have the stones you are looking for.
	if (branchId == 3 && response == "s_98e55c89")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: You do?! What kind of stones?
			string_id message = new string_id (c_stringFile, "s_e21cea57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have a carved stone.
			boolean hasResponse0 = false;
			if (bestine_stone_merchant_condition_SearchforCarved (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I have a smooth stone.
			boolean hasResponse1 = false;
			if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b6f71f8a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_af35650e");

				setObjVar (player, "conversation.bestine_stone_merchant.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess so. I'll look for some.
	if (branchId == 3 && response == "s_2b5e768f")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: You will? Too bad I don't know where they are. I heard a rumor that Victor Visalis may know. He's over at the capitol. He doesn't usually talk about things other than the election. Maybe if he won the election... oh well. If you ever find any, I'm here.
			string_id message = new string_id (c_stringFile, "s_9e6e06eb");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Probably. Bye!
	if (branchId == 3 && response == "s_4242e25b")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: I'll keep searching!
			string_id message = new string_id (c_stringFile, "s_1cb401b5");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I'm in the business of collecting rare stones. Unfortunately, I haven't had much business lately. I guess I should find another business.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You do?! What kind of stones?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have a carved stone.
	if (branchId == 4 && response == "s_b6f71f8a")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
			string_id message = new string_id (c_stringFile, "s_cc49587f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll give you the carved stone.
			boolean hasResponse0 = false;
			if (bestine_stone_merchant_condition_SearchforCarved (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll give you the smooth stone.
			boolean hasResponse1 = false;
			if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm going to keep it.
			boolean hasResponse2 = false;
			if (bestine_stone_merchant_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_211ab5b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38d8cf30");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c741032");

				setObjVar (player, "conversation.bestine_stone_merchant.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You do?! What kind of stones?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You do?! What kind of stones?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have a smooth stone.
	if (branchId == 4 && response == "s_af35650e")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
			string_id message = new string_id (c_stringFile, "s_cc49587f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll give you the carved stone.
			boolean hasResponse0 = false;
			if (bestine_stone_merchant_condition_SearchforCarved (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll give you the smooth stone.
			boolean hasResponse1 = false;
			if (bestine_stone_merchant_condition_SearchforSmooth (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm going to keep it.
			boolean hasResponse2 = false;
			if (bestine_stone_merchant_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_211ab5b4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38d8cf30");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c741032");

				setObjVar (player, "conversation.bestine_stone_merchant.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You do?! What kind of stones?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll give you the carved stone.
	if (branchId == 5 && response == "s_211ab5b4")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			bestine_stone_merchant_action_GiveCarvedStoneReward (player, self);

			//-- NPC: Thank you! Here, I'll give you this. We'll say you bought it from me by giving me the stone. It's rare so guard it closely.
			string_id message = new string_id (c_stringFile, "s_bb2c2468");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll give you the smooth stone.
	if (branchId == 5 && response == "s_38d8cf30")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			bestine_stone_merchant_action_GiveSmoothStoneReward (player, self);

			//-- NPC: Thank you! Here, I'll give you this. We'll say you bought it from me by giving me the stone. It's rare so guard it closely.
			string_id message = new string_id (c_stringFile, "s_bb2c2468");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm going to keep it.
	if (branchId == 5 && response == "s_8c741032")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Oh... okay. Well, if you decide you'd rather get it off your hands, feel free to seek me out! I'll surely buy them off you.
			string_id message = new string_id (c_stringFile, "s_d7a9bace");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll give you the carved stone.
	if (branchId == 9 && response == "s_211ab5b4")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			bestine_stone_merchant_action_GiveCarvedStoneReward (player, self);

			//-- NPC: Thank you! Here, I'll give you this. We'll say you bought it from me by giving me the stone. It's rare so guard it closely.
			string_id message = new string_id (c_stringFile, "s_bb2c2468");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll give you the smooth stone.
	if (branchId == 9 && response == "s_38d8cf30")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			bestine_stone_merchant_action_GiveSmoothStoneReward (player, self);

			//-- NPC: Thank you! Here, I'll give you this. We'll say you bought it from me by giving me the stone. It's rare so guard it closely.
			string_id message = new string_id (c_stringFile, "s_bb2c2468");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm going to keep it.
	if (branchId == 9 && response == "s_8c741032")
	{
		//-- [NOTE] 
		if (bestine_stone_merchant_condition__defaultCondition (player, self))
		{
			//-- NPC: Oh... okay. Well, if you decide you'd rather get it off your hands, feel free to seek me out! I'll surely buy them off you.
			string_id message = new string_id (c_stringFile, "s_d7a9bace");
			removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Wow! That's just what I'm looking for! I can take it off your hands if you want. I need to test every one very carefully. So what do you say? Which one do you want to give me?' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.bestine_stone_merchant.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

