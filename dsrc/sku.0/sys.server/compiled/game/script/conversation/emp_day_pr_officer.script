// ======================================================================
//
// emp_day_pr_officer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/emp_day_pr_officer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean emp_day_pr_officer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean emp_day_pr_officer_condition_isRebel (obj_id player, obj_id npc)
{
	int factionHashCode = factions.pvpGetAlignedFaction(player);
	string whichFaction = factions.getFactionNameByHashCode(factionHashCode);

	if (whichFaction==null)
		return false;

	if (whichFaction == "Rebel")
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean emp_day_pr_officer_condition_onMyTask (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task1 = groundquests.getTaskId(questId, "converseHistorian");
	return questIsTaskActive(questId, task1, player);
}

// ----------------------------------------------------------------------

boolean emp_day_pr_officer_condition_pastMyTask (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task1 = groundquests.getTaskId(questId, "converseHistorian");

	return questIsQuestComplete(questId, player) ||
	(!questIsTaskActive(questId, task1, player) && questIsQuestActive(questId, player) );

}

// ======================================================================
// Script Actions
// ======================================================================

void emp_day_pr_officer_action_giveQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	groundquests.grantQuest(questId, player, npc, true);

	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-5186, 81, -2443, "rori");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Garrison Historian");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_pr_officer_action_giveWaypoint (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-5186, 81, -2443, "rori");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Garrison Historian");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int emp_day_pr_officer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're back already? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not sure where I'm supposed to go.
	if (response == "s_530")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			emp_day_pr_officer_action_giveWaypoint (player, npc);

			//-- NPC: Go see the garrison historian at this location on Rori.
			string_id message = new string_id (c_stringFile, "s_532");
			utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, Citizen. Happy Empire Day to you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Empire Day? What is that?
	if (response == "s_538")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Empire Day is the day we celebrate the official formation of the Empire and, of course, the order to remove the traitorous Jedi from the galaxy.
			string_id message = new string_id (c_stringFile, "s_540");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I didn't know that. 
			boolean hasResponse0 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, I remember that. 
			boolean hasResponse1 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_542");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_554");

				utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Happy Empire Day to you as well!
	if (response == "s_562")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: The formation of the Empire is definitely a date worth noting. We should always remember our glorious past.
			string_id message = new string_id (c_stringFile, "s_564");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I agree. History is important.
			boolean hasResponse0 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_566");

				utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Empire Day is the day we celebrate the official formation of the Empire and, of course, the order to remove the traitorous Jedi from the galaxy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I didn't know that. 
	if (response == "s_542")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: You didn't? Well, there's someone you should meet then.
			string_id message = new string_id (c_stringFile, "s_544");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. Who?
			boolean hasResponse0 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Oh, I don't have time for that now.
			boolean hasResponse1 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_546");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_550");

				utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I remember that. 
	if (response == "s_554")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: The day the Jedi were outlawed. Ahhhh. Good times. Say, you like history. Would you be interested in helping out a bit?
			string_id message = new string_id (c_stringFile, "s_556");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. What can I do?
			boolean hasResponse0 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_558");

				utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You didn't? Well, there's someone you should meet then.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. Who?
	if (response == "s_546")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			emp_day_pr_officer_action_giveQuest (player, npc);

			//-- NPC: Our garrison historian. He's an expert on pre-Imperial history. He will educate you. You can find him at this location on Rori.
			string_id message = new string_id (c_stringFile, "s_548");
			utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, I don't have time for that now.
	if (response == "s_550")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm sorry to hear that. Well, I'll be here if you want to know more.
			string_id message = new string_id (c_stringFile, "s_552");
			utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The day the Jedi were outlawed. Ahhhh. Good times. Say, you like history. Would you be interested in helping out a bit?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. What can I do?
	if (response == "s_558")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			emp_day_pr_officer_action_giveQuest (player, npc);

			//-- NPC: Go see our garrison historian. He needs some help collecting data for a report he's writing. You can find him at this location on Rori.
			string_id message = new string_id (c_stringFile, "s_560");
			utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The formation of the Empire is definitely a date worth noting. We should always remember our glorious past.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I agree. History is important.
	if (response == "s_566")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: The day the Jedi were outlawed. Ahhhh. Good times. Say, you like history. Would you be interested in helping out a bit?
			string_id message = new string_id (c_stringFile, "s_568");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. What can I do?
			boolean hasResponse0 = false;
			if (emp_day_pr_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_570");

				utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_pr_officer_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The day the Jedi were outlawed. Ahhhh. Good times. Say, you like history. Would you be interested in helping out a bit?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. What can I do?
	if (response == "s_570")
	{
		//-- [NOTE] 
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			emp_day_pr_officer_action_giveQuest (player, npc);

			//-- NPC: Go see our garrison historian. He needs some help collecting data for a report he's writing. You can find him at this location on Rori.
			string_id message = new string_id (c_stringFile, "s_572");
			utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.emp_day_pr_officer");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.emp_day_pr_officer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (emp_day_pr_officer_condition_isRebel (player, npc))
	{
		//-- NPC: Why don't you crawl back under your rock, traitor. If I had backup, I'd take you in myself.
		string_id message = new string_id (c_stringFile, "s_526");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_pr_officer_condition_onMyTask (player, npc))
	{
		//-- NPC: You're back already? 
		string_id message = new string_id (c_stringFile, "s_528");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm not sure where I'm supposed to go.
		boolean hasResponse0 = false;
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_530");

			utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 2);

			npcStartConversation (player, npc, "emp_day_pr_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_pr_officer_condition_pastMyTask (player, npc))
	{
		//-- NPC: Good to see you again. I hope you had as good an Empire Day as I did.
		string_id message = new string_id (c_stringFile, "s_534");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_pr_officer_condition__defaultCondition (player, npc))
	{
		//-- NPC: Greetings, Citizen. Happy Empire Day to you.
		string_id message = new string_id (c_stringFile, "s_536");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Empire Day? What is that?
		boolean hasResponse0 = false;
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Happy Empire Day to you as well!
		boolean hasResponse1 = false;
		if (emp_day_pr_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_538");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_562");

			utils.setScriptVar (player, "conversation.emp_day_pr_officer.branchId", 5);

			npcStartConversation (player, npc, "emp_day_pr_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "emp_day_pr_officer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.emp_day_pr_officer.branchId");

	if (branchId == 2 && emp_day_pr_officer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && emp_day_pr_officer_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && emp_day_pr_officer_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && emp_day_pr_officer_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && emp_day_pr_officer_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && emp_day_pr_officer_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && emp_day_pr_officer_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.emp_day_pr_officer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

