// ======================================================================
//
// greeter_dantooine_old_pilot.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/greeter_dantooine_old_pilot";

// ======================================================================
// Script Conditions
// ======================================================================

boolean greeter_dantooine_old_pilot_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_remembersPlayer (obj_id player, obj_id npc)
{
	return ( utils.hasScriptVar( player, "metNewbiePilot" ));
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_isAnImperialPilot (obj_id player, obj_id npc)
{
	return space_flags.isImperialPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_isARebelPilot (obj_id player, obj_id npc)
{
	return space_flags.isRebelPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_isPrivateerPilot (obj_id player, obj_id npc)
{
	return space_flags.isNeutralPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_hasSpaceExpansion (obj_id player, obj_id npc)
{
	return ( features.isSpaceEdition( player ) );
}

// ----------------------------------------------------------------------

boolean greeter_dantooine_old_pilot_condition_hasSpaceShip (obj_id player, obj_id npc)
{
	return ( space_quest.hasShip( player ) );
}

// ======================================================================
// Script Actions
// ======================================================================

void greeter_dantooine_old_pilot_action_rememberPlayer (obj_id player, obj_id npc)
{
	utils.setScriptVar( player, "metNewbiePilot", true );
}

// ----------------------------------------------------------------------

void greeter_dantooine_old_pilot_action_grantQuestOne (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "delivery", "tatooine_newbie_1");
	space_quest.grantNewbieShip( player, "rebel");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int greeter_dantooine_old_pilot_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey, what's a young whippersnapper like yourself doing on Dantooine? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's an old mule like yourself doing here?
	if (response == "s_6c0fd0e6")
	{
		//-- [NOTE] 
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Ah spirited, are you? Last time someone showed that kind of spirit, we buried him the next day. Or what was left of him anyway. But don't let that stop you... this planet isn't kind to anyone, spirited or not.
			string_id message = new string_id (c_stringFile, "s_c4d3634f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You didn't answer my question, old man?
			boolean hasResponse0 = false;
			if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a93a834e");

				utils.setScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing sir. Just passing through.
	if (response == "s_c74b4365")
	{
		//-- [NOTE] 
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			//-- NPC: Meek as a Naboo winter. You're not gonna last a day here, youngster. Best add some backbone.
			string_id message = new string_id (c_stringFile, "s_c8012fa1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: May I ask what you do around here, sir?
			boolean hasResponse0 = false;
			if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961d42dc");

				utils.setScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int greeter_dantooine_old_pilot_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah spirited, are you? Last time someone showed that kind of spirit, we buried him the next day. Or what was left of him anyway. But don't let that stop you... this planet isn't kind to anyone, spirited or not.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You didn't answer my question, old man?
	if (response == "s_a93a834e")
	{
		//-- [NOTE] 
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			//-- NPC: Fair enough. I fly various jobs for people in these parts. Not that far back, I reconditioned an old starfighter and use it for my work. Can't stand being grounded, so I had to do something. My old bird won't stand for atmospheric flight, but she's more than enough for flying low altitude jobs.
			string_id message = new string_id (c_stringFile, "s_64cda856");
			utils.removeScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int greeter_dantooine_old_pilot_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Meek as a Naboo winter. You're not gonna last a day here, youngster. Best add some backbone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: May I ask what you do around here, sir?
	if (response == "s_961d42dc")
	{
		//-- [NOTE] 
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			//-- NPC: Enough with the 'sir' alright? Just call me Yras, if you're gonna call me anything.
			string_id message = new string_id (c_stringFile, "s_88a2ef9d");
			utils.removeScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.greeter_dantooine_old_pilot");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "Yras Shen-jen (a self-employed pilot)");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "Yras Shen-jen (a self-employed pilot)");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable(self, true);
	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	setCondition( self, CONDITION_SPACE_INTERESTING );
	
	detachScript (self, "conversation.greeter_dantooine_old_pilot");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "beckon");

		//-- NPC: Hey, what's a young whippersnapper like yourself doing on Dantooine? 
		string_id message = new string_id (c_stringFile, "s_7c2b99a8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What's an old mule like yourself doing here?
		boolean hasResponse0 = false;
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Nothing sir. Just passing through.
		boolean hasResponse1 = false;
		if (greeter_dantooine_old_pilot_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6c0fd0e6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c74b4365");

			utils.setScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId", 1);

			npcStartConversation (player, npc, "greeter_dantooine_old_pilot", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "greeter_dantooine_old_pilot")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

	if (branchId == 1 && greeter_dantooine_old_pilot_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && greeter_dantooine_old_pilot_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && greeter_dantooine_old_pilot_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.greeter_dantooine_old_pilot.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

