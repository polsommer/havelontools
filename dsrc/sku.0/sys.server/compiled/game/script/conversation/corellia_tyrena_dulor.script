// ======================================================================
//
// corellia_tyrena_dulor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_tyrena_dulor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_tyrena_dulor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_dulor_condition_onTalkDulor (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_ask_akers");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_dulor_condition_afterTalkDulor (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "corellia_tyrena_petty_resolve", "petty_ask_akers");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_tyrena_dulor_action_signalDulor (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "petty_ask_akers");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_tyrena_dulor_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here? You're going to get someone killed!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for a man named Akers.
	if (response == "s_7")
	{
		//-- [NOTE] 
		if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Why are you looking for Akers?
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Vermon said I needed to talk to him.
			boolean hasResponse0 = false;
			if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11");

				utils.setScriptVar (player, "conversation.corellia_tyrena_dulor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_dulor_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why are you looking for Akers?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vermon said I needed to talk to him.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Ah, yes. Vermon would want to get to Akers. Look, I don't know where Akers is now. He got moved, but I know those datapads the technicians carry have all the latest information on slave locations.
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I get one of those datapads?
			boolean hasResponse0 = false;
			if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.corellia_tyrena_dulor.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_dulor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, yes. Vermon would want to get to Akers. Look, I don't know where Akers is now. He got moved, but I know those datapads the technicians carry have all the latest information on slave locations.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get one of those datapads?
	if (response == "s_16")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Only way I know for sure, is to lift it off one of the technicians.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Right. I can do that.
			boolean hasResponse0 = false;
			if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.corellia_tyrena_dulor.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_dulor_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Only way I know for sure, is to lift it off one of the technicians.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Right. I can do that.
	if (response == "s_20")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cough_polite");

			corellia_tyrena_dulor_action_signalDulor (player, npc);

			//-- NPC: Good luck, friend. Don't forget to let us out of here, eh?
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_tyrena_dulor");

    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

    faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_tyrena_dulor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_tyrena_dulor_condition_afterTalkDulor (player, npc))
	{
		doAnimationAction (npc, "point_accusingly");

		//-- NPC: I hope you find Akers, he deserves what he gets.
		string_id message = new string_id (c_stringFile, "s_13");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_dulor_condition_onTalkDulor (player, npc))
	{
		doAnimationAction (npc, "gesticulate_wildly");

		//-- NPC: What are you doing here? You're going to get someone killed!
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am looking for a man named Akers.
		boolean hasResponse0 = false;
		if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7");

			utils.setScriptVar (player, "conversation.corellia_tyrena_dulor.branchId", 2);

			npcStartConversation (player, npc, "corellia_tyrena_dulor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_dulor_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "nervous");

		//-- NPC: Who are you? You shouldn't be here.
		string_id message = new string_id (c_stringFile, "s_24");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_tyrena_dulor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

	if (branchId == 2 && corellia_tyrena_dulor_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && corellia_tyrena_dulor_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_tyrena_dulor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && corellia_tyrena_dulor_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_tyrena_dulor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

