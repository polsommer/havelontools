// ======================================================================
//
// murmur_side_corporate.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/murmur_side_corporate";

// ======================================================================
// Script Conditions
// ======================================================================

boolean murmur_side_corporate_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean murmur_side_corporate_condition_onQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "coronet_murmurs_side_3");
}

// ----------------------------------------------------------------------

boolean murmur_side_corporate_condition_completedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "coronet_murmurs_side_3");
}

// ----------------------------------------------------------------------

boolean murmur_side_corporate_condition_onMurmursMainQuest (obj_id player, obj_id npc)
{
	return ( groundquests.isQuestActiveOrComplete(player, "coronet_murmurs_1_smuggler")&&
			!groundquests.hasCompletedQuest(player, "coronet_murmurs_7_reward") );
}

// ======================================================================
// Script Actions
// ======================================================================

void murmur_side_corporate_action_grantSideQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "coronet_murmurs_side_3");
}

// ----------------------------------------------------------------------

void murmur_side_corporate_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int murmur_side_corporate_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My lab is already working to reproduce and enhance the work that the other lab had done. I will recommend you to others, in case anyone else needs your type of assistance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. Like I said before, I am always ready to earn a few creds.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			//-- NPC: And earn them you did.
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_corporate_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, you are going into that laboratory, right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If I am?
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have a job for you--if you are interested, that is...
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am always willing to make a few more creds. What do you need?
			boolean hasResponse0 = false;
			if (murmur_side_corporate_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.murmur_side_corporate.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_corporate_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have a job for you--if you are interested, that is...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am always willing to make a few more creds. What do you need?
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			murmur_side_corporate_action_grantSideQuest (player, npc);

			//-- NPC: You see, I represent a competing lab. I want samples of what they have done. I need you to go in there and collect the blood from some creatures. You can send me the chemical compositions electronically.
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_corporate_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Need some work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure!  I can always use the credits.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			murmur_side_corporate_action_grantSideQuest (player, npc);

			//-- NPC: I represent a lab. One of our competitors has created something interesting and I want samples of their discoveries. I need you to go and collect the blood from some creatures. You can send me the chemical compositions electronically.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back if you need work.
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.murmur_side_corporate");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.murmur_side_corporate");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (murmur_side_corporate_condition_completedQuest (player, npc))
	{
		murmur_side_corporate_action_facePlayer (player, npc);

		//-- NPC: My lab is already working to reproduce and enhance the work that the other lab had done. I will recommend you to others, in case anyone else needs your type of assistance.
		string_id message = new string_id (c_stringFile, "s_9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you. Like I said before, I am always ready to earn a few creds.
		boolean hasResponse0 = false;
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			utils.setScriptVar (player, "conversation.murmur_side_corporate.branchId", 1);

			npcStartConversation (player, npc, "murmur_side_corporate", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_corporate_condition_onQuest (player, npc))
	{
		murmur_side_corporate_action_facePlayer (player, npc);

		//-- NPC: What are you doing back? You still need to send me those blood samples.
		string_id message = new string_id (c_stringFile, "s_8");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_corporate_condition_onMurmursMainQuest (player, npc))
	{
		murmur_side_corporate_action_facePlayer (player, npc);

		//-- NPC: Ah, you are going into that laboratory, right?
		string_id message = new string_id (c_stringFile, "s_12");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: If I am?
		boolean hasResponse0 = false;
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_14");

			utils.setScriptVar (player, "conversation.murmur_side_corporate.branchId", 4);

			npcStartConversation (player, npc, "murmur_side_corporate", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_corporate_condition__defaultCondition (player, npc))
	{
		//-- NPC: Need some work?
		string_id message = new string_id (c_stringFile, "s_21");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure!  I can always use the credits.
		boolean hasResponse0 = false;
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not right now.
		boolean hasResponse1 = false;
		if (murmur_side_corporate_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.murmur_side_corporate.branchId", 7);

			npcStartConversation (player, npc, "murmur_side_corporate", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "murmur_side_corporate")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.murmur_side_corporate.branchId");

	if (branchId == 1 && murmur_side_corporate_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && murmur_side_corporate_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && murmur_side_corporate_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && murmur_side_corporate_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.murmur_side_corporate.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

