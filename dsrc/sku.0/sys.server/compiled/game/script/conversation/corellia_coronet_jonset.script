// ======================================================================
//
// corellia_coronet_jonset.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_coronet_jonset";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_coronet_jonset_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_coronet_jonset_condition_theMeetingBegins (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_the_meeting", "the_meeting_1");
}

// ----------------------------------------------------------------------

boolean corellia_coronet_jonset_condition_theMeetingMovesOn (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "corellia_coronet_capitol_problems_the_meeting", "the_meeting_1");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_coronet_jonset_action_theMeetingContinues (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "the_meeting_1");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_coronet_jonset_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What? Hello? Yes, what do you want exactly, my friend?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to find out what you know about the rogue CorSec.
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do you? And I need to know if I can suck down more Corellian ale than a bantha. Problem is, I haven't yet found a bantha that drinks. Does that mean I win by default?
			string_id message = new string_id (c_stringFile, "s_10");
			utils.removeScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lt. Jasper sent me.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lt. Jasper? How's that one doing? Good man, that Lt. Jasper. What does he want to know?
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: We need to know what the rogue CorSec are up to.
			boolean hasResponse0 = false;
			if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.corellia_coronet_jonset.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing. I'll let you get back to your drinking.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Drinking? What a good idea. I think I shall.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_coronet_jonset_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lt. Jasper? How's that one doing? Good man, that Lt. Jasper. What does he want to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We need to know what the rogue CorSec are up to.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			corellia_coronet_jonset_action_theMeetingContinues (player, npc);

			//-- NPC: Ah. Yes, I've heard a few things here and there. Those RogueSecs have been active of late. I do know that there is a meeting upcoming between the RogueSecs and the Ragtags. It'll be outside of the city a ways. Bust into that meeting, and I'd wager you'll find out a thing or two.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_coronet_jonset");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_coronet_jonset");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_coronet_jonset_condition_theMeetingMovesOn (player, npc))
	{
		//-- NPC: Give Lt. Jasper my love, will ya? And tell him to come down and have a drink with his favorite man of information.
		string_id message = new string_id (c_stringFile, "s_4");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_jonset_condition_theMeetingBegins (player, npc))
	{
		//-- NPC: What? Hello? Yes, what do you want exactly, my friend?
		string_id message = new string_id (c_stringFile, "s_6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need to find out what you know about the rogue CorSec.
		boolean hasResponse0 = false;
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Lt. Jasper sent me.
		boolean hasResponse1 = false;
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Nothing. I'll let you get back to your drinking.
		boolean hasResponse2 = false;
		if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.corellia_coronet_jonset.branchId", 2);

			npcStartConversation (player, npc, "corellia_coronet_jonset", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_jonset_condition__defaultCondition (player, npc))
	{
		//-- NPC: You buying the next round? If not, then please excuse me while I find someone who is.
		string_id message = new string_id (c_stringFile, "s_24");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_coronet_jonset")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

	if (branchId == 2 && corellia_coronet_jonset_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_coronet_jonset_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_coronet_jonset.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

