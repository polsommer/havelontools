// ======================================================================
//
// emp_day_reb_technician.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/emp_day_reb_technician";

// ======================================================================
// Script Conditions
// ======================================================================

boolean emp_day_reb_technician_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean emp_day_reb_technician_condition_isRebel (obj_id player, obj_id npc)
{
	int factionHashCode = factions.pvpGetAlignedFaction(player);
	string whichFaction = factions.getFactionNameByHashCode(factionHashCode);

	if (whichFaction==null)
		return false;

	if (whichFaction == "Rebel")
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean emp_day_reb_technician_condition_notReadyForYou (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task1 = groundquests.getTaskId(questId, "converseContact");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");
	int task4 = groundquests.getTaskId(questId, "disksToContact");
	
	return (questIsTaskActive(questId, task1, player) ||
	questIsTaskActive(questId, task2, player) ||
	questIsTaskActive(questId, task3, player) || 
	questIsTaskActive(questId, task4, player) ||
	!questIsQuestActive(questId, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_reb_technician_condition_hasTask5 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task5 = groundquests.getTaskId(questId, "toRebelSpy");
	return questIsTaskActive(questId, task5, player);
}

// ----------------------------------------------------------------------

boolean emp_day_reb_technician_condition_hasTask6 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task6 = groundquests.getTaskId(questId, "toRebelColonel");
	return questIsTaskActive(questId, task6, player);
}

// ----------------------------------------------------------------------

boolean emp_day_reb_technician_condition_pastMyTasks (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task6 = groundquests.getTaskId(questId, "toRebelColonel");

	return (questIsTaskComplete(questId, task6, player) || questIsQuestComplete(questId, player) );
}

// ======================================================================
// Script Actions
// ======================================================================

void emp_day_reb_technician_action_wpToCommander (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-4295, 65, 5593, "yavin4");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Colonel Verks");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_reb_technician_action_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "to_rebel_spy");
}

// ----------------------------------------------------------------------

void emp_day_reb_technician_action_allowConvert (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "event.emp_day.converted_officer") )
	{
		setObjVar(player, "event.emp_day.converted_officer", 2);
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int emp_day_reb_technician_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What's the problem?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I need to go again?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			emp_day_reb_technician_action_wpToCommander (player, npc);

			//-- NPC: Here, I've uploaded the information to you again.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's your friend?
	if (response == "s_35")
	{
		emp_day_reb_technician_action_allowConvert (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			//-- NPC: A co-worker. I'm trying to convince him to help the cause, but he's scared to commit. You can try to talk some sense into him if you want.
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_technician_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've got the data I'm supposed to upload? Good job. This broadcast should help our cause greatly. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything else I can do for you?
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need you to let my Colonel know everything is going according to plan. It's too dangerous for me to send an electronic message.
			string_id message = new string_id (c_stringFile, "s_43");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You can count on me.
			boolean hasResponse0 = false;
			if (emp_day_reb_technician_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Who's your friend?
			boolean hasResponse1 = false;
			if (emp_day_reb_technician_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_53");

				utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_technician_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need you to let my Colonel know everything is going according to plan. It's too dangerous for me to send an electronic message.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can count on me.
	if (response == "s_45")
	{
		emp_day_reb_technician_action_signal (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			emp_day_reb_technician_action_wpToCommander (player, npc);

			//-- NPC: Thank you. I'll upload the waypoint to your datapad. This will be one Empire Day the Empire won't forget.
			string_id message = new string_id (c_stringFile, "s_47");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who's your friend?
			boolean hasResponse0 = false;
			if (emp_day_reb_technician_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's your friend?
	if (response == "s_53")
	{
		emp_day_reb_technician_action_allowConvert (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			//-- NPC: A co-worker. I'm trying to convince him to help the cause, but he's scared to commit. You can try to talk some sense into him if you want.
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there anything else I can do for you?
			boolean hasResponse0 = false;
			if (emp_day_reb_technician_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_technician_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you. I'll upload the waypoint to your datapad. This will be one Empire Day the Empire won't forget.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who's your friend?
	if (response == "s_49")
	{
		emp_day_reb_technician_action_allowConvert (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			//-- NPC: A co-worker. I'm trying to convince him to help the cause, but he's scared to commit. You can try to talk some sense into him if you want.
			string_id message = new string_id (c_stringFile, "s_51");
			utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_technician_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A co-worker. I'm trying to convince him to help the cause, but he's scared to commit. You can try to talk some sense into him if you want.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything else I can do for you?
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need you to let my Colonel know everything is going according to plan. It's too dangerous for me to send an electronic message.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You can count on me.
			boolean hasResponse0 = false;
			if (emp_day_reb_technician_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_technician_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need you to let my Colonel know everything is going according to plan. It's too dangerous for me to send an electronic message.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can count on me.
	if (response == "s_61")
	{
		emp_day_reb_technician_action_signal (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			emp_day_reb_technician_action_wpToCommander (player, npc);

			//-- NPC: Thank you. I'll upload the waypoint to your datapad. This will be one Empire Day the Empire won't forget.
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.emp_day_reb_technician");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.emp_day_reb_technician");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (emp_day_reb_technician_condition_pastMyTasks (player, npc))
	{
		//-- NPC: I can't talk now. It's too dangerous.
		string_id message = new string_id (c_stringFile, "s_25");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_technician_condition_notReadyForYou (player, npc))
	{
		//-- NPC: I'm too busy to talk right now.
		string_id message = new string_id (c_stringFile, "s_27");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_technician_condition_hasTask6 (player, npc))
	{
		//-- NPC: What's the problem?
		string_id message = new string_id (c_stringFile, "s_29");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Where do I need to go again?
		boolean hasResponse0 = false;
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Who's your friend?
		boolean hasResponse1 = false;
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 3);

			npcStartConversation (player, npc, "emp_day_reb_technician", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_technician_condition_hasTask5 (player, npc))
	{
		//-- NPC: You've got the data I'm supposed to upload? Good job. This broadcast should help our cause greatly. 
		string_id message = new string_id (c_stringFile, "s_39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Is there anything else I can do for you?
		boolean hasResponse0 = false;
		if (emp_day_reb_technician_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.emp_day_reb_technician.branchId", 6);

			npcStartConversation (player, npc, "emp_day_reb_technician", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "emp_day_reb_technician")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.emp_day_reb_technician.branchId");

	if (branchId == 3 && emp_day_reb_technician_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && emp_day_reb_technician_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && emp_day_reb_technician_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && emp_day_reb_technician_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && emp_day_reb_technician_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && emp_day_reb_technician_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.emp_day_reb_technician.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

