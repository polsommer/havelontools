// ======================================================================
//
// c_tutorial_rm7.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_tutorial_rm7";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_tutorial_rm7_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm7_condition_playerOnQuest (obj_id player, obj_id npc)
{	
	int questId = questGetQuestId("quest/c_newbie_hall_03");
	int killPirate = groundquests.getTaskId(questId, "killPirate");
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, killPirate, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm7_condition_taskComplete (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_03");
	int killPirate = groundquests.getTaskId(questId, "killPirate"); 
	
	boolean onTask = questIsTaskComplete(questId, killPirate, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean c_tutorial_rm7_condition_playerOnQuestStep0602 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_02");
	int explainWaypoint = groundquests.getTaskId(questId, "explainWaypoint");
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainWaypoint, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm7_condition_playerOnQuestStep0603 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainRadar = groundquests.getTaskId(questId, "explainRadar"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainRadar, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm7_condition_playerOnQuestStep06 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_range01");
	int explainWeapons = groundquests.getTaskId(questId, "explainWeapons"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainWeapons, player);
	
	return onTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_tutorial_rm7_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_tutorial_rm7_action_actionSendSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "explainFight");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_tutorial_rm7_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The pirates have infiltrated! They've taken a prisoner and they want to exchange him for YOU! You have to do something!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Me? No way! I'm not a fighter!
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: No? Why in the world is the Empire so interested in you, then? If you don't get in there and help them, the prisoner won't stand a chance! Now get in there and DO something!
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Like what?
			boolean hasResponse0 = false;
			if (c_tutorial_rm7_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where are they? Let me at 'em!
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pose_proudly");

			//-- NPC: Thank you! I knew the Empire's interest in you wasn't unfounded!
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's right!
			boolean hasResponse0 = false;
			if (c_tutorial_rm7_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm7_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No? Why in the world is the Empire so interested in you, then? If you don't get in there and help them, the prisoner won't stand a chance! Now get in there and DO something!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Like what?
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			c_tutorial_rm7_action_actionSendSignal (player, npc);

			//-- NPC: Like fight! Kill the pirate, rescue the hostage!
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm7_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you! I knew the Empire's interest in you wasn't unfounded!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's right!
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			c_tutorial_rm7_action_actionSendSignal (player, npc);

			//-- NPC: Now go get him!
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm7_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Empire's interest in you is well placed.  You will be a great help in our war!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have no interest in helping the Empire.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Well, I'm sure you'll change your mind once you've had a chance to speak to the Commander. He's waiting for you now in the next room.
			string_id message = new string_id (c_stringFile, "s_23");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Commander?
			boolean hasResponse0 = false;
			if (c_tutorial_rm7_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I look forward to doing my part for the Empire.  It's the least I can do.
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pose_proudly");

			//-- NPC: Excellent!  The Commander is anxious to meet you and is waiting in the next room.  You don't want to keep him waiting!
			string_id message = new string_id (c_stringFile, "s_15");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Commander?
			boolean hasResponse0 = false;
			if (c_tutorial_rm7_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm7_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I'm sure you'll change your mind once you've had a chance to speak to the Commander. He's waiting for you now in the next room.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Commander?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: Please don't keep him waiting!
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm7_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent!  The Commander is anxious to meet you and is waiting in the next room.  You don't want to keep him waiting!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Commander?
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "tap_foot");

			//-- NPC: Please don't keep him waiting!
			string_id message = new string_id (c_stringFile, "s_35");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_tutorial_rm7");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Colonel Sheray");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Colonel Sheray");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_tutorial_rm7");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_tutorial_rm7_condition_playerOnQuest (player, npc))
	{
		doAnimationAction (npc, "poke");

		c_tutorial_rm7_action_facePlayer (player, npc);

		//-- NPC: The pirates have infiltrated! They've taken a prisoner and they want to exchange him for YOU! You have to do something!
		string_id message = new string_id (c_stringFile, "s_7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Me? No way! I'm not a fighter!
		boolean hasResponse0 = false;
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Where are they? Let me at 'em!
		boolean hasResponse1 = false;
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_18");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 1);

			npcStartConversation (player, npc, "c_tutorial_rm7", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm7_condition_taskComplete (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		c_tutorial_rm7_action_facePlayer (player, npc);

		//-- NPC: Empire's interest in you is well placed.  You will be a great help in our war!
		string_id message = new string_id (c_stringFile, "s_53");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have no interest in helping the Empire.
		boolean hasResponse0 = false;
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I look forward to doing my part for the Empire.  It's the least I can do.
		boolean hasResponse1 = false;
		if (c_tutorial_rm7_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			utils.setScriptVar (player, "conversation.c_tutorial_rm7.branchId", 6);

			npcStartConversation (player, npc, "c_tutorial_rm7", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm7_condition_playerOnQuestStep06 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm7_action_facePlayer (player, npc);

		//-- NPC: You need to meet with Warrant Officer Snopell at the combat practice range.
		string_id message = new string_id (c_stringFile, "s_33");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm7_condition_playerOnQuestStep0602 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm7_action_facePlayer (player, npc);

		//-- NPC: You need to see Warrant Officer Snopell at the combat practice range.
		string_id message = new string_id (c_stringFile, "s_24");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm7_condition_playerOnQuestStep0603 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm7_action_facePlayer (player, npc);

		//-- NPC: You need to speak with Warrant Officer Snopell at the combat practice range.
		string_id message = new string_id (c_stringFile, "s_26");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_tutorial_rm7")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_tutorial_rm7.branchId");

	if (branchId == 1 && c_tutorial_rm7_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_tutorial_rm7_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_tutorial_rm7_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_tutorial_rm7_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_tutorial_rm7_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_tutorial_rm7_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_tutorial_rm7.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

