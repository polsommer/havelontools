// ======================================================================
//
// ep3_etyyy_kint_zsam.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.chat;
include library.groundquests;
include library.group;
include library.space_dungeon;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_etyyy_kint_zsam";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_etyyy_kint_zsam_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_hasHraccaTicket (obj_id player, obj_id npc)
{
	obj_id[] tickets = space_dungeon.findValidDungeonTickets(player, npc);
	if ( tickets != null && tickets.length > 0)
	{
		return true;
	}
		
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_knowsKint (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "ep3_hunt_johnson_seek_kint"));
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_canEnterHracca (obj_id player, obj_id npc)
{
	if ( groundquests.isTaskActive(player, "ep3_hunt_hracca_kkorrwrot_hunt", "hracca_huntKkorrwrot") )
	{
		if ( ep3_etyyy_kint_zsam_condition_hasHraccaTicket(player, npc) )
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_sentBySmith (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "ep3_hunt_johnson_seek_kint"));
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_hasKilledKkorrwrot (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "ep3_hunt_hracca_kkorrwrot_hunt", "hracca_kkorrwrotKilled");
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_needsATicket (obj_id player, obj_id npc)
{
	if ( groundquests.isTaskActive(player, "ep3_hunt_hracca_kkorrwrot_hunt", "hracca_huntKkorrwrot") )
	{
		if ( !ep3_etyyy_kint_zsam_condition_hasHraccaTicket(player, npc) )
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_canRepeatHunt (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "ep3_hunt_hracca_kkorrwrot_hunt"));
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_tooManyInGroup (obj_id player, obj_id npc)
{
	if ( group.isGrouped(player) )
	{
		obj_id groupObj = getGroupObject(player);
		if ( isIdValid(groupObj) )
		{
			int numGroupMembers = getGroupSize(groupObj);
			if ( numGroupMembers > 8 )
				return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_isInGodMode (obj_id player, obj_id npc)
{
	return isGod(player);
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_kint_zsam_condition_killedKkorrwrotNoBadge (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_hunt_hracca_kkorrwrot_hunt") &&
		!badge.hasBadge(player, "bdg_kash_kkorrwrot");
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_etyyy_kint_zsam_action_giveHraccaGatePass (obj_id player, obj_id npc)
{
	if ( !ep3_etyyy_kint_zsam_condition_hasHraccaTicket(player, npc) )
	{
		string ticketTemplate = "object/tangible/travel/travel_ticket/hracca_glade_ticket.iff";
		
		obj_id ticket = space_dungeon.createTicket(player, "kashyyyk_hunting", "kashyyyk_hunting", space_dungeon.KASH_MONSTER_ISLAND, ticketTemplate);
		if ( isIdValid(ticket) )
		{
			setObjVar(ticket, "space_dungeon.ticket.quest_type", "ep3_hunt_hracca_kkorrwrot_hunt");
			setObjVar(ticket, "kashyyyk.ticket_owner", player);
		}
	}
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_endSuccessfulHunt (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hracca_kkorrwrotKilled");
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_sendToHracca (obj_id player, obj_id npc)
{
	space_dungeon.selectDungeonTicket(npc, player);
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_giveKkorrwrotQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "johnson_talkToKint");
	
	groundquests.grantQuest(player, "ep3_hunt_hracca_kkorrwrot_hunt");
	
	ep3_etyyy_kint_zsam_action_giveHraccaGatePass(player, npc);
	
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_godModeEntry (obj_id player, obj_id npc)
{
	if ( isGod(player) )
	{
		string ticketTemplate = "object/tangible/travel/travel_ticket/hracca_glade_ticket.iff";
		
		obj_id ticket = space_dungeon.createTicket(player, "kashyyyk_hunting", "kashyyyk_hunting", space_dungeon.KASH_MONSTER_ISLAND, ticketTemplate);
		if ( isIdValid(ticket) )
		{
			setObjVar(ticket, "space_dungeon.ticket.quest_type", "none");
			setObjVar(ticket, "kashyyyk.ticket_owner", player);
			
			space_dungeon.selectDungeonTicket(npc, player);
		}
	}
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_giveKkorrwrotBadge (obj_id player, obj_id npc)
{
	if ( !badge.hasBadge(player, "bdg_kash_kkorrwrot") )
	{
		badge.grantBadge(player, "bdg_kash_kkorrwrot");
	}
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_kint_zsam_action_revokeKkorrwrotBadge (obj_id player, obj_id npc)
{
	if ( badge.hasBadge(player, "bdg_kash_kkorrwrot") )
	{
		badge.revokeBadge(player, "bdg_kash_kkorrwrot", true);
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string ep3_etyyy_kint_zsam_tokenTO_getNameOfPlayer (obj_id player, obj_id npc)
{
	return getFirstName(player);
	//return getName(player);
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_etyyy_kint_zsam_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes, I remember you. %TO wasn't it? What can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready to enter the Hracca Glade.
	if (response == "s_185")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition_tooManyInGroup (player, npc))
		{
			//-- NPC: Okay, just... wait. I mentioned this before, but it looks like you didn't understand. You can only have up to 8 hunters in your party. Remove some of the hunters from your party and then speak with me again.
			string_id message = new string_id (c_stringFile, "s_187");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Remember, you'll have to rid the glade of Chiss poachers before the kkorrwrot will return. I'll monitor the scanning array that Sordaan has set up in the glade. Using it, I can determine how many Chiss poachers are in the glade and report to you on your progress. I'll only be able to use the array every so often without being detected by Sordaan's hunters, so don't expect constant updates from me. But I'll help as much as I'm able.
			string_id message = new string_id (c_stringFile, "s_189");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you. Let's get started.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I killed a kkorrwrot in Hracca Glade, but didn't receive a badge.
	if (response == "s_379")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_kint_zsam_action_giveKkorrwrotBadge (player, npc);

			//-- NPC: Ah yes. Sordaan was being stubborn about awarding those. Seems he was reluctant to acknowledge that other hunters have killed a kkorrwrot when he himself has yet to do so. Ziven finally talked some sense into him. Or more accurately, pointed out to Sordaan that denying this to these skilled hunters is a good way to become the target of their next hunt. Sordaan quickly agreed. Here's your badge.
			string_id message = new string_id (c_stringFile, "s_380");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: It's about time.
			boolean hasResponse1 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_381");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_383");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I killed a kkorrwrot.
	if (response == "s_191")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_kint_zsam_action_endSuccessfulHunt (player, npc);

			//-- NPC: I'm impressed. Seriously. You're a much better hunter than I thought you were. Well done.
			string_id message = new string_id (c_stringFile, "s_193");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to go back into the Hracca Glade for another attempt.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_kint_zsam_action_giveHraccaGatePass (player, npc);

			//-- NPC: Okay, here's another gate pass. Talk to me again when you're ready to enter.
			string_id message = new string_id (c_stringFile, "s_197");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh nothing. Just wandering by.
	if (response == "s_199")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, good. Don't let me stop you from continuing to wander.
			string_id message = new string_id (c_stringFile, "s_201");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Remember, you'll have to rid the glade of Chiss poachers before the kkorrwrot will return. I'll monitor the scanning array that Sordaan has set up in the glade. Using it, I can determine how many Chiss poachers are in the glade and report to you on your progress. I'll only be able to use the array every so often without being detected by Sordaan's hunters, so don't expect constant updates from me. But I'll help as much as I'm able.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. Let's get started.
	if (response == "s_257")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_kint_zsam_action_sendToHracca (player, npc);

			//-- NPC: Right. Away you go. Oh, and good hunting to you.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes. Sordaan was being stubborn about awarding those. Seems he was reluctant to acknowledge that other hunters have killed a kkorrwrot when he himself has yet to do so. Ziven finally talked some sense into him. Or more accurately, pointed out to Sordaan that denying this to these skilled hunters is a good way to become the target of their next hunt. Sordaan quickly agreed. Here's your badge.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_381")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: You're welcome.
			string_id message = new string_id (c_stringFile, "s_382");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's about time.
	if (response == "s_383")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's about... Oh, look at that. Your badge fell off. What a shame.
			string_id message = new string_id (c_stringFile, "s_384");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is the gate into the Hracca Glade. No one is allowed entrance without Sordaan's permission. And he gives permission to no one.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm here to hunt the kkorrwrot.
	if (response == "s_205")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck with that, because you can't enter the glade.
			string_id message = new string_id (c_stringFile, "s_208");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Johnson Smith sent me to hunt the kkorrwrot.
	if (response == "s_210")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Johnson Smith sent you?
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's right.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_215");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You'll let me in, though, right?
	if (response == "s_282")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: No. Go away.
			string_id message = new string_id (c_stringFile, "s_284");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I didn't want to enter the glade anyway.
	if (response == "s_287")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good, because you can't.
			string_id message = new string_id (c_stringFile, "s_290");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good. I didn't want to.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, I didn't realize. I'll be on my way.
	if (response == "s_301")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thank you for understanding. Farewell.
			string_id message = new string_id (c_stringFile, "s_303");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Johnson Smith sent you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's right.
	if (response == "s_215")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Where were the two of you when you spoke with him?
			string_id message = new string_id (c_stringFile, "s_217");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: We were in Kachirho.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: We were at the Arcona compound.
			boolean hasResponse1 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: We were in Sordaan's cabin.
			boolean hasResponse2 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: We were in a cantina on Corellia.
			boolean hasResponse3 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I... we... drat, I don't remember.
			boolean hasResponse4 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_223");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_268");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_273");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_277");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Where were the two of you when you spoke with him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We were in Kachirho.
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Nice try, but I know for a fact that he's avoiding Kachirho because of his... wait. Almost said too much. Never mind. You're just wrong and, sadly, out of luck.
			string_id message = new string_id (c_stringFile, "s_221");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We were at the Arcona compound.
	if (response == "s_223")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmmm. Fair enough. And what did he have you doing for the Chiss poacher, Lara Corlon?
			string_id message = new string_id (c_stringFile, "s_225");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: He had me kill her. She knew too much.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: He had me helping her with some deliveries, but she was Lara Korlon.
			boolean hasResponse1 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: He had me help her with some deliveries, but she was Kara Corlon.
			boolean hasResponse2 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_227");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_231");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_235");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We were in Sordaan's cabin.
	if (response == "s_268")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "belly_laugh");

			//-- NPC: Oh yeah, Sordaan and Smith are old friends. I'll bet they were talking about the good old days and just laughing. That would happen. Next you'll tell me that Wookiees are kidnapping Trandoshans as slaves and selling them to the Rebel Alliance. Good one.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We were in a cantina on Corellia.
	if (response == "s_273")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: You should go back and finish your drink.
			string_id message = new string_id (c_stringFile, "s_275");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I... we... drat, I don't remember.
	if (response == "s_277")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: That's funny, because I don't remember how to help you. Imagine.
			string_id message = new string_id (c_stringFile, "s_279");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmmm. Fair enough. And what did he have you doing for the Chiss poacher, Lara Corlon?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He had me kill her. She knew too much.
	if (response == "s_227")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Whoa! I hope not. Er, oops. What I mean is what do I care what happens to a poacher. Good riddance.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He had me helping her with some deliveries, but she was Lara Korlon.
	if (response == "s_231")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: How nice. Never heard of her personally, but I'm sure you two will have a nice future working together. Now go away.
			string_id message = new string_id (c_stringFile, "s_233");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He had me help her with some deliveries, but she was Kara Corlon.
	if (response == "s_235")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah, okay. Good enough. I can help you enter the Hracca Glade and hunt a kkorrwrot. But you should know that the kkorrwrot has been driven out of the glade. It's in hiding somewhere. The only way it will return is if you get rid of all the Chiss poachers in the glade. They use an enhancement fog that sprays out of those packs they wear. Those chemicals have contaminated the glade and driven off most of the creatures.
			string_id message = new string_id (c_stringFile, "s_237");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So first clear the Hracca Glade of all Chiss poachers?
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_239");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah, okay. Good enough. I can help you enter the Hracca Glade and hunt a kkorrwrot. But you should know that the kkorrwrot has been driven out of the glade. It's in hiding somewhere. The only way it will return is if you get rid of all the Chiss poachers in the glade. They use an enhancement fog that sprays out of those packs they wear. Those chemicals have contaminated the glade and driven off most of the creatures.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So first clear the Hracca Glade of all Chiss poachers?
	if (response == "s_239")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Correct. After you do that, the contaminated air should dissipate, and it shouldn't take long for a kkorrwrot to return to the glade. You'll know when one returns. Trust me, you'll know.
			string_id message = new string_id (c_stringFile, "s_241");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. I know what I need to do.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_243");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Correct. After you do that, the contaminated air should dissipate, and it shouldn't take long for a kkorrwrot to return to the glade. You'll know when one returns. Trust me, you'll know.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good. I know what I need to do.
	if (response == "s_243")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. There are two other things you'll need to know. First of all, you can only have up to 8 hunters in your group. More than that and it quickly becomes impossible to conceal your presence in the glade. Which leads to the second thing: even with the smaller hunting party, you will eventually be noticed by Sordaan's hunters. When that happens, you'll be ejected from the glade. I estimate you'll have about 30 minutes in the glade.
			string_id message = new string_id (c_stringFile, "s_246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood. Anything else?
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think I'm interested in this right now.
			boolean hasResponse1 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_250");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. There are two other things you'll need to know. First of all, you can only have up to 8 hunters in your group. More than that and it quickly becomes impossible to conceal your presence in the glade. Which leads to the second thing: even with the smaller hunting party, you will eventually be noticed by Sordaan's hunters. When that happens, you'll be ejected from the glade. I estimate you'll have about 30 minutes in the glade.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. Anything else?
	if (response == "s_250")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition_hasHraccaTicket (player, npc))
		{
			ep3_etyyy_kint_zsam_action_giveKkorrwrotQuest (player, npc);

			//-- NPC: You'll need to give your gate pass to me when you're ready to enter the glade. It's a forged pass, but it's necessary. Otherwise I have nothing to cover the fact that I let you into the glade. This way I can point to the pass and claim I didn't know it was a fake. I'll help you, but I'm not putting my neck on the chopping block. Talk to me again when you're ready to enter. And remember, you can only have up to 8 hunters in your group.
			string_id message = new string_id (c_stringFile, "s_254");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_kint_zsam_action_giveKkorrwrotQuest (player, npc);

			//-- NPC: Just one. Here's a gate pass. You'll need to give this to me when you're ready to enter the glade. It's a forged pass, but it's necessary. Otherwise I have nothing to cover the fact that I let you into the glade. This way I can point to the pass and claim I didn't know it was a fake. I'll help you, but I'm not putting my neck on the chopping block. Talk to me again when you're ready to enter. And remember, you can only have up to 8 hunters in your group.
			string_id message = new string_id (c_stringFile, "s_258");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think I'm interested in this right now.
	if (response == "s_262")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah. Sure. Whatever.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, because you can't.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good. I didn't want to.
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_295");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good.
			boolean hasResponse0 = false;
			if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_etyyy_kint_zsam_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good.
	if (response == "s_297")
	{
		//-- [NOTE] 
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stop. Now.
			string_id message = new string_id (c_stringFile, "s_299");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_etyyy_kint_zsam");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_etyyy_kint_zsam");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_etyyy_kint_zsam_condition_knowsKint (player, npc))
	{
		//-- NPC: Ah yes, I remember you. %TO wasn't it? What can I do for you?
		string_id message = new string_id (c_stringFile, "s_183");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready to enter the Hracca Glade.
		boolean hasResponse0 = false;
		if (ep3_etyyy_kint_zsam_condition_canEnterHracca (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I killed a kkorrwrot in Hracca Glade, but didn't receive a badge.
		boolean hasResponse1 = false;
		if (ep3_etyyy_kint_zsam_condition_killedKkorrwrotNoBadge (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I killed a kkorrwrot.
		boolean hasResponse2 = false;
		if (ep3_etyyy_kint_zsam_condition_hasKilledKkorrwrot (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I need to go back into the Hracca Glade for another attempt.
		boolean hasResponse3 = false;
		if (ep3_etyyy_kint_zsam_condition_needsATicket (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: Oh nothing. Just wandering by.
		boolean hasResponse4 = false;
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_185");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_379");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_191");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_195");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_199");

			utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (ep3_etyyy_kint_zsam_tokenTO_getNameOfPlayer (player, npc));

			npcStartConversation (player, npc, "ep3_etyyy_kint_zsam", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (ep3_etyyy_kint_zsam_tokenTO_getNameOfPlayer (player, npc));

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
	{
		//-- NPC: This is the gate into the Hracca Glade. No one is allowed entrance without Sordaan's permission. And he gives permission to no one.
		string_id message = new string_id (c_stringFile, "s_203");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm here to hunt the kkorrwrot.
		boolean hasResponse0 = false;
		if (ep3_etyyy_kint_zsam_condition_sentBySmith (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Johnson Smith sent me to hunt the kkorrwrot.
		boolean hasResponse1 = false;
		if (ep3_etyyy_kint_zsam_condition_sentBySmith (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: You'll let me in, though, right?
		boolean hasResponse2 = false;
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I didn't want to enter the glade anyway.
		boolean hasResponse3 = false;
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: Oh, I didn't realize. I'll be on my way.
		boolean hasResponse4 = false;
		if (ep3_etyyy_kint_zsam_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_205");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_210");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_282");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_287");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_301");

			utils.setScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId", 11);

			npcStartConversation (player, npc, "ep3_etyyy_kint_zsam", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_etyyy_kint_zsam")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

	if (branchId == 1 && ep3_etyyy_kint_zsam_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && ep3_etyyy_kint_zsam_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_etyyy_kint_zsam_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && ep3_etyyy_kint_zsam_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && ep3_etyyy_kint_zsam_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && ep3_etyyy_kint_zsam_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && ep3_etyyy_kint_zsam_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && ep3_etyyy_kint_zsam_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && ep3_etyyy_kint_zsam_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && ep3_etyyy_kint_zsam_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && ep3_etyyy_kint_zsam_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && ep3_etyyy_kint_zsam_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_etyyy_kint_zsam.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

