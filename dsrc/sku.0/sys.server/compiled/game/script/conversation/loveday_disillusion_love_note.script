// ======================================================================
//
// loveday_disillusion_love_note.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/loveday_disillusion_love_note";

// ======================================================================
// Script Conditions
// ======================================================================

boolean loveday_disillusion_love_note_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean loveday_disillusion_love_note_condition_speakWithHim (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "loveday_disillusion_love_note_v2", "loveday_disillusion_love_note_02");
}

// ----------------------------------------------------------------------

boolean loveday_disillusion_love_note_condition_loveNoteUnderway (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "loveday_disillusion_love_note_v2", "loveday_disillusion_love_note_03");
}

// ----------------------------------------------------------------------

boolean loveday_disillusion_love_note_condition_loveNoteComplete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "loveday_disillusion_love_note_v2", "loveday_disillusion_love_note_03");
}

// ======================================================================
// Script Actions
// ======================================================================

void loveday_disillusion_love_note_action_spokeWithHimSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "loveday_disillusion_love_note_02");
}

// ----------------------------------------------------------------------

void loveday_disillusion_love_note_action_startLoveNote (obj_id player, obj_id npc)
{
	dictionary webster = new dictionary();
	webster.put("player", player);
	messageTo(npc, "msgLoveNoteSuggestionStart", webster, 0.25f, false);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int loveday_disillusion_love_note_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you ready to help me with my love letter?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			loveday_disillusion_love_note_action_startLoveNote (player, npc);

			//-- NPC: Okay, I'll show you the phrase on which I'm stuck one at a time. Help me complete them.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak with me again when you're ready.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int loveday_disillusion_love_note_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, Mr. Love told me to expect you. I appreciate your help. You see, I am trying to find a way to let the woman I love know how much she means to me. I haven't been able to. I'm so close, but not quite there. Can you help me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do what I can.
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			loveday_disillusion_love_note_action_spokeWithHimSignal (player, npc);

			//-- NPC: Thank you! I've been trying to write her a love letter, but I'm stuck. I can't complete some of the phrases. I need you to help me find the words to complete what I'm trying to say. Are you ready to help me?
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not yet.
			boolean hasResponse1 = false;
			if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.loveday_disillusion_love_note.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int loveday_disillusion_love_note_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you! I've been trying to write her a love letter, but I'm stuck. I can't complete some of the phrases. I need you to help me find the words to complete what I'm trying to say. Are you ready to help me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			loveday_disillusion_love_note_action_startLoveNote (player, npc);

			//-- NPC: Okay, I'll show you the phrase on which I'm stuck one at a time. Help me complete them.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not yet.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak with me again when you're ready.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.loveday_disillusion_love_note");

	setCondition (self, CONDITION_CONVERSABLE);
	
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	
	ai_lib.setDefaultCalmBehavior (self, ai_lib.BEHAVIOR_SENTINEL);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.loveday_disillusion_love_note");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (loveday_disillusion_love_note_condition_loveNoteComplete (player, npc))
	{
		//-- NPC: This is amazing! You have such a way with words. I'd never have been able to complete this without you! Thank you!!
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (loveday_disillusion_love_note_condition_loveNoteUnderway (player, npc))
	{
		//-- NPC: Are you ready to help me with my love letter?
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No.
		boolean hasResponse1 = false;
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.loveday_disillusion_love_note.branchId", 2);

			npcStartConversation (player, npc, "loveday_disillusion_love_note", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (loveday_disillusion_love_note_condition_speakWithHim (player, npc))
	{
		//-- NPC: Greetings, Mr. Love told me to expect you. I appreciate your help. You see, I am trying to find a way to let the woman I love know how much she means to me. I haven't been able to. I'm so close, but not quite there. Can you help me?
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll do what I can.
		boolean hasResponse0 = false;
		if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_17");

			utils.setScriptVar (player, "conversation.loveday_disillusion_love_note.branchId", 4);

			npcStartConversation (player, npc, "loveday_disillusion_love_note", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (loveday_disillusion_love_note_condition__defaultCondition (player, npc))
	{
		//-- NPC: I just can't find the words to express my love to my beloved.
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "loveday_disillusion_love_note")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

	if (branchId == 2 && loveday_disillusion_love_note_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && loveday_disillusion_love_note_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && loveday_disillusion_love_note_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.loveday_disillusion_love_note.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

