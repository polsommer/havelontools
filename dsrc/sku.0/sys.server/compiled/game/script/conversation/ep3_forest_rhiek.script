// ======================================================================
//
// ep3_forest_rhiek.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_forest_rhiek";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_forest_rhiek_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_isGoodGuy (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_3", 0) ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_3") ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_kerritamba_epic_7"));

}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_isBadGuy (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_2", 0) ||
		    groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedInitial (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_aveso_quest_2");
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_isTaskActiveOne (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_rhiek_quest_1", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_1", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedTaskOne (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_1", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_1");
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_isTaskActiveTwo (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_rhiek_quest_2", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_2", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedTaskTwo (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_2", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_2"));
		   
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedQuestTwo (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_2");
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_isTaskActiveThree (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_rhiek_quest_3", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_3", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedTaskThree (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_rhiek_quest_3", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_3"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_rhiek_condition_hasCompletedQuestThree (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_rhiek_quest_3");
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_forest_rhiek_action_giveQuestOne (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_rhiek_quest_1");
}

// ----------------------------------------------------------------------

void ep3_forest_rhiek_action_giveSignalOne (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "poison");
}

// ----------------------------------------------------------------------

void ep3_forest_rhiek_action_giveQuestTwo (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_rhiek_quest_2");
}

// ----------------------------------------------------------------------

void ep3_forest_rhiek_action_giveQuestThree (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_rhiek_quest_3");
}

// ----------------------------------------------------------------------

void ep3_forest_rhiek_action_giveSignalTwo (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "bones");
}

// ----------------------------------------------------------------------

void ep3_forest_rhiek_action_giveSignalThree (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "queen");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_forest_rhiek_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek arches a brow, looking at you intently.] It is done, then...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You are correct.
	if (response == "s_3896")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveSignalThree (player, npc);

			//-- NPC: It is my hope that Mother Ves'ad did not suffer. [Rhiek raises a silencing hand as you try to speak.] I would rather not know. You have completed your task with effortless grace and efficiency. You are ready to move on from my teachings.
			string_id message = new string_id (c_stringFile, "s_3898");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you. [You bow.]
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3900");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is my hope that Mother Ves'ad did not suffer. [Rhiek raises a silencing hand as you try to speak.] I would rather not know. You have completed your task with effortless grace and efficiency. You are ready to move on from my teachings.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. [You bow.]
	if (response == "s_3900")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have nothing more to say, but I will impart my last few words of wisdom to you; only trust yourself. You are the only tool...
			string_id message = new string_id (c_stringFile, "s_3902");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: ... that I can completely control.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3904");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have nothing more to say, but I will impart my last few words of wisdom to you; only trust yourself. You are the only tool...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: ... that I can completely control.
	if (response == "s_3904")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Rhiek nods.] Go then. Find those among the brethren of the Society that need your assistance. However, if you have already helped the Society to the fullest extent, I suggest finding the Lady Reverend, Dahlia Damask.
			string_id message = new string_id (c_stringFile, "s_3906");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you. [You nod.]
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1722");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek nods.] Go then. Find those among the brethren of the Society that need your assistance. However, if you have already helped the Society to the fullest extent, I suggest finding the Lady Reverend, Dahlia Damask.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. [You nod.]
	if (response == "s_1722")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Be safe. [Rhiek returns to his work.]
			string_id message = new string_id (c_stringFile, "s_1724");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek looks at you expectantly.] Mercenary..

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have not yet completed my task.
	if (response == "s_3910")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then you should not be here. Return to the caves, mercenary, and only return when you have helped Mother Ves'ad.
			string_id message = new string_id (c_stringFile, "s_3912");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Every decade or so, there comes a time when a new Queen is created. The prior becomes old, withered and unproductive. Soon, her own children turn on her, destroying her savagely, and the new Queen steps up to assume the proverbial throne. It is our duty to see that the old mother is not destroyed, instead preserved and used to help the Society... by getting to her before her children do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quite a big feast, I take it.
	if (response == "s_3916")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: You assume correctly. It is a graceful end for such a magnificent creature and less painful than what her children would do to her. We have done this for the past three decades. Now, it is time to do it again. Mother Ves'ad grows old and soon her children will turn on her. You will prevent that from happening. Therefore, you must find her and destroy her. As a token, you must bring back her venom gland.
			string_id message = new string_id (c_stringFile, "s_3918");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I assume her venom makes powerful poisons.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3920");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You assume correctly. It is a graceful end for such a magnificent creature and less painful than what her children would do to her. We have done this for the past three decades. Now, it is time to do it again. Mother Ves'ad grows old and soon her children will turn on her. You will prevent that from happening. Therefore, you must find her and destroy her. As a token, you must bring back her venom gland.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I assume her venom makes powerful poisons.
	if (response == "s_3920")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Only the best. We call it 'Virulent Blackbane', or known as its common name, 'the Baron'. But with that aside, do you feel up to the important task of releasing Mother Ves'ad from this life?
			string_id message = new string_id (c_stringFile, "s_3922");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Mercy killing is my specialty.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Perhaps another time.
			boolean hasResponse1 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3924");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3928");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Only the best. We call it 'Virulent Blackbane', or known as its common name, 'the Baron'. But with that aside, do you feel up to the important task of releasing Mother Ves'ad from this life?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Mercy killing is my specialty.
	if (response == "s_3924")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveQuestThree (player, npc);

			//-- NPC: [Rhiek smirks.] Either way, I expect you to follow through with quick efficiency and return as soon as possible.
			string_id message = new string_id (c_stringFile, "s_3926");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps another time.
	if (response == "s_3928")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Your lethargic attitude concerns me. In whatever terms, you should always be willing to help a brother.
			string_id message = new string_id (c_stringFile, "s_3930");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mercenary... [Rhiek nods.]

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have returned with the Tombsinger Bones.
	if (response == "s_3934")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveSignalTwo (player, npc);

			//-- NPC: Ahh. You are undoubtedly an asset to us, my friend. Please wait here for a moment. It is necessary that I prepare your Vorid Bloodstone. It protects us in many different ways from the harsh realities of life. The protection is different for each of us.
			string_id message = new string_id (c_stringFile, "s_3936");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you, Rhiek. [You bow.]
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3938");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ahh. You are undoubtedly an asset to us, my friend. Please wait here for a moment. It is necessary that I prepare your Vorid Bloodstone. It protects us in many different ways from the harsh realities of life. The protection is different for each of us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, Rhiek. [You bow.]
	if (response == "s_3938")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is another matter of which we must speak, my friend. I expect you to return soon.
			string_id message = new string_id (c_stringFile, "s_3940");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek nods.] You have returned...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Empty-handed, unfortunately.
	if (response == "s_3944")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do not be discouraged. The Tombsingers are a challenging sort. I have no doubt you will return triumphant. Look within yourself for you are the only tool you can completely control.
			string_id message = new string_id (c_stringFile, "s_3946");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will take your wise words with me.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3948");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do not be discouraged. The Tombsingers are a challenging sort. I have no doubt you will return triumphant. Look within yourself for you are the only tool you can completely control.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will take your wise words with me.
	if (response == "s_3948")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Rhiek nods before returning to his work.]
			string_id message = new string_id (c_stringFile, "s_3950");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: With your valuable assistance, we were able to make our poisons. Now, we must request a different sort of task from you. As suggested, we revere the Webweaver as brethren to our arts. Therefore, none of the creature will go to waste when we harvest the gifts they give to us. The Society prepares the meat, we harvest the venom glands, and we make weapons and jewelry out of the bones.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Most bugs don't have bones.
	if (response == "s_3954")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: I do not appreciate the term 'bug', mercenary. [Rhiek frowns, but continues.] Various parts of the Webweaver's frame contain small bits of undeveloped bone. They provide an excellent base for weapons and jewelry. Particularly, we use the jewelry as charms to ward off poisons, among other important uses. I need for you to collect the bones from 7 Webweaver Tombsingers. We find that the Tombsinger works best for our needs.
			string_id message = new string_id (c_stringFile, "s_3956");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You will have your bones.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm sure I can find better things to do.
			boolean hasResponse1 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3958");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3962");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I do not appreciate the term 'bug', mercenary. [Rhiek frowns, but continues.] Various parts of the Webweaver's frame contain small bits of undeveloped bone. They provide an excellent base for weapons and jewelry. Particularly, we use the jewelry as charms to ward off poisons, among other important uses. I need for you to collect the bones from 7 Webweaver Tombsingers. We find that the Tombsinger works best for our needs.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You will have your bones.
	if (response == "s_3958")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveQuestTwo (player, npc);

			//-- NPC: [Rhiek smiles.] Go then. We will watch over you.
			string_id message = new string_id (c_stringFile, "s_3960");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sure I can find better things to do.
	if (response == "s_3962")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will dismiss your poor attitude as mere ignorance.
			string_id message = new string_id (c_stringFile, "s_3964");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your stance, your expression.. [Rhiek looks you over.] .. connotes that you were successful in your task.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [You arch a brow]. In fact, I was successful.
	if (response == "s_3968")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveSignalOne (player, npc);

			//-- NPC: This news pleases me. [Rhiek takes the glands from you.] Good quality too. I will put these aside in specialized containers. Wait here while I prepare them for the Sect. Talk with me in a moment.
			string_id message = new string_id (c_stringFile, "s_3970");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [You nod.]
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3972");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This news pleases me. [Rhiek takes the glands from you.] Good quality too. I will put these aside in specialized containers. Wait here while I prepare them for the Sect. Talk with me in a moment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [You nod.]
	if (response == "s_3972")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Aveso said I could count on you. I am glad she was right.
			string_id message = new string_id (c_stringFile, "s_3974");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mercenary. [Rhiek nods.] Have you returned with what I seek?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm still working on it.
	if (response == "s_3978")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. You must hurry with your task. I have much for you to do when you return.
			string_id message = new string_id (c_stringFile, "s_3980");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ahh, the newest mercenary. I have heard promising reports about you from Aveso.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [You smirk.] Mercenary now?
	if (response == "s_3984")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Rhiek nods simply.] We do have ranks within the Society. You have finished your grunt work. However, that isn't to say you will not be completing small jobs for us. We have plenty of those to go around, you see.
			string_id message = new string_id (c_stringFile, "s_3986");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well, then. Let's get started.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3988");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek nods simply.] We do have ranks within the Society. You have finished your grunt work. However, that isn't to say you will not be completing small jobs for us. We have plenty of those to go around, you see.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, then. Let's get started.
	if (response == "s_3988")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course. Aveso said you were quite sure of yourself. We will see how that trait progresses. Now, onto business. [Rhiek bows.] I am Rhiek Okina, the current leader of the Quietus Sect.. to put it simply, the assassins of the Society. The Sect primarily uses poisons to get the job done. I am sure you can guess where we get the poisons from.
			string_id message = new string_id (c_stringFile, "s_3990");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Webweavers, of course.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3992");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course. Aveso said you were quite sure of yourself. We will see how that trait progresses. Now, onto business. [Rhiek bows.] I am Rhiek Okina, the current leader of the Quietus Sect.. to put it simply, the assassins of the Society. The Sect primarily uses poisons to get the job done. I am sure you can guess where we get the poisons from.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Webweavers, of course.
	if (response == "s_3992")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Rhiek nods.] Exactly. You must learn how to properly use the Webweaver poisons by first learning how to extract them. Only then can you truly appreciate the power it has to offer. To continue, your first job would be to collect the venom glands from 10 Webweaver Gravespinners. We use the venom from the Gravespinners to make 'Blight's Sorrow', a potent venom we use against our enemies.
			string_id message = new string_id (c_stringFile, "s_3994");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am compelled by your thoughts. I'll try my best.
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't play with bugs.
			boolean hasResponse1 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3996");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4004");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Rhiek nods.] Exactly. You must learn how to properly use the Webweaver poisons by first learning how to extract them. Only then can you truly appreciate the power it has to offer. To continue, your first job would be to collect the venom glands from 10 Webweaver Gravespinners. We use the venom from the Gravespinners to make 'Blight's Sorrow', a potent venom we use against our enemies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am compelled by your thoughts. I'll try my best.
	if (response == "s_3996")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			ep3_forest_rhiek_action_giveQuestOne (player, npc);

			//-- NPC: That is all I can expect. As a mercenary, you must learn the art of the kill. May it be as swift and painless as possible. Even though we are soulless killers, we must respect our enemies. Complete your task and return.
			string_id message = new string_id (c_stringFile, "s_3998");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you. [You bow.]
			boolean hasResponse0 = false;
			if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4000");

				utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't play with bugs.
	if (response == "s_4004")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Rhiek sneers.] How disrespectful. Like us, they are assassins. They should be revered as deadly tools. I see that you cannot appreciate such beauty.
			string_id message = new string_id (c_stringFile, "s_4006");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_rhiek_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is all I can expect. As a mercenary, you must learn the art of the kill. May it be as swift and painless as possible. Even though we are soulless killers, we must respect our enemies. Complete your task and return.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. [You bow.]
	if (response == "s_4000")
	{
		//-- [NOTE] 
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			//-- NPC: I await your return, mercenary.
			string_id message = new string_id (c_stringFile, "s_4002");
			utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_forest_rhiek");

	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "rhiek" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "rhiek" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_forest_rhiek");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedQuestThree (player, npc))
	{
		//-- NPC: Mercenary.. [Rhiek nods in acknowledgement before returning to his work]
		string_id message = new string_id (c_stringFile, "s_3892");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedTaskThree (player, npc))
	{
		//-- NPC: [Rhiek arches a brow, looking at you intently.] It is done, then...
		string_id message = new string_id (c_stringFile, "s_3894");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You are correct.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3896");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 2);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_isTaskActiveThree (player, npc))
	{
		//-- NPC: [Rhiek looks at you expectantly.] Mercenary..
		string_id message = new string_id (c_stringFile, "s_3908");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have not yet completed my task.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3910");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 7);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedQuestTwo (player, npc))
	{
		//-- NPC: Every decade or so, there comes a time when a new Queen is created. The prior becomes old, withered and unproductive. Soon, her own children turn on her, destroying her savagely, and the new Queen steps up to assume the proverbial throne. It is our duty to see that the old mother is not destroyed, instead preserved and used to help the Society... by getting to her before her children do.
		string_id message = new string_id (c_stringFile, "s_3914");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Quite a big feast, I take it.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3916");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 9);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedTaskTwo (player, npc))
	{
		//-- NPC: Mercenary... [Rhiek nods.]
		string_id message = new string_id (c_stringFile, "s_3932");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have returned with the Tombsinger Bones.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3934");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 14);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_isTaskActiveTwo (player, npc))
	{
		//-- NPC: [Rhiek nods.] You have returned...
		string_id message = new string_id (c_stringFile, "s_3942");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Empty-handed, unfortunately.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3944");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 17);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: With your valuable assistance, we were able to make our poisons. Now, we must request a different sort of task from you. As suggested, we revere the Webweaver as brethren to our arts. Therefore, none of the creature will go to waste when we harvest the gifts they give to us. The Society prepares the meat, we harvest the venom glands, and we make weapons and jewelry out of the bones.
		string_id message = new string_id (c_stringFile, "s_3952");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Most bugs don't have bones.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3954");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 20);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedTaskOne (player, npc))
	{
		//-- NPC: Your stance, your expression.. [Rhiek looks you over.] .. connotes that you were successful in your task.
		string_id message = new string_id (c_stringFile, "s_3966");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: [You arch a brow]. In fact, I was successful.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3968");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 24);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_isTaskActiveOne (player, npc))
	{
		//-- NPC: Mercenary. [Rhiek nods.] Have you returned with what I seek?
		string_id message = new string_id (c_stringFile, "s_3976");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm still working on it.
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3978");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 27);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_hasCompletedInitial (player, npc))
	{
		//-- NPC: Ahh, the newest mercenary. I have heard promising reports about you from Aveso.
		string_id message = new string_id (c_stringFile, "s_3982");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: [You smirk.] Mercenary now?
		boolean hasResponse0 = false;
		if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3984");

			utils.setScriptVar (player, "conversation.ep3_forest_rhiek.branchId", 29);

			npcStartConversation (player, npc, "ep3_forest_rhiek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_isBadGuy (player, npc))
	{
		//-- NPC: Ahh. [Rhiek nods.] You are not yet one of us. Seek out Zhadran in the Kerritamba village. He is our contact and should be able to direct you onto the correct path. 
		string_id message = new string_id (c_stringFile, "s_4008");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition_isGoodGuy (player, npc))
	{
		//-- NPC: [Rhiek frowns deeply.] You are not a part of the Society. I do not wish you harm, but others will seek to destroy you should they come across you. You should leave... and quickly.
		string_id message = new string_id (c_stringFile, "s_4010");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_rhiek_condition__defaultCondition (player, npc))
	{
		//-- NPC: [Rhiek looks at you strangely.] You should not be here. It would be best if you left us in peace.
		string_id message = new string_id (c_stringFile, "s_4012");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_forest_rhiek")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

	if (branchId == 2 && ep3_forest_rhiek_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && ep3_forest_rhiek_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_forest_rhiek_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_forest_rhiek_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && ep3_forest_rhiek_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && ep3_forest_rhiek_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && ep3_forest_rhiek_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && ep3_forest_rhiek_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && ep3_forest_rhiek_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && ep3_forest_rhiek_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && ep3_forest_rhiek_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && ep3_forest_rhiek_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && ep3_forest_rhiek_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && ep3_forest_rhiek_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && ep3_forest_rhiek_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && ep3_forest_rhiek_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && ep3_forest_rhiek_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && ep3_forest_rhiek_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && ep3_forest_rhiek_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && ep3_forest_rhiek_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && ep3_forest_rhiek_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && ep3_forest_rhiek_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_forest_rhiek.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

