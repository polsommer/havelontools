// ======================================================================
//
// c_story1_1_doc.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_story1_1_doc";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_story1_1_doc_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_story1_1_doc_condition_atDocStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_1_reb");
	int questId2 = questGetQuestId("quest/c_story1_1_neu");
	int questId3 = questGetQuestId("quest/c_story1_1_imp");

	int doctor1 = groundquests.getTaskId(questId1, "doctor"); 
	int doctor2 = groundquests.getTaskId(questId2, "doctor"); 
	int doctor3 = groundquests.getTaskId(questId3, "doctor"); 

	boolean onQuest = false;
	onQuest = questIsTaskActive(questId1, doctor1, player)||questIsTaskActive(questId2, doctor2, player)
				||questIsTaskActive(questId3, doctor3, player);

	return onQuest;
}

// ----------------------------------------------------------------------

boolean c_story1_1_doc_condition_afterDoctorStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_1_reb");
	int questId2 = questGetQuestId("quest/c_story1_1_neu");
	int questId3 = questGetQuestId("quest/c_story1_1_imp");

	int doctor1 = groundquests.getTaskId(questId1, "doctor"); 
	int doctor2 = groundquests.getTaskId(questId2, "doctor"); 
	int doctor3 = groundquests.getTaskId(questId3, "doctor"); 
	
	boolean onQuest = false;
	onQuest = questIsTaskComplete(questId1, doctor1, player)||questIsTaskComplete(questId2, doctor2, player)
				||questIsTaskComplete(questId3, doctor3, player);

	return onQuest;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_story1_1_doc_action_forwardquest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_1_reb_doctorinfo");
	groundquests.sendSignal(player, "c_story1_1_neu_doctorinfo");
	groundquests.sendSignal(player, "c_story1_1_imp_doctorinfo");
	
	int questId1 = questGetQuestId("quest/c_story1_1_reb");
	int questId2 = questGetQuestId("quest/c_story1_1_neu");
	int questId3 = questGetQuestId("quest/c_story1_1_imp");

	obj_id remwaypoint = getObjIdObjVar(player, "quest.general.quest/c_story1_1_reb.doctor");
	if (remwaypoint != null)
    {
       destroyWaypointInDatapad(remwaypoint, player);
    }
	removeObjVar(player, "quest.general.quest/c_story1_1_reb.doctor");
	
	obj_id remwaypoint1 = getObjIdObjVar(player, "quest.general.quest/c_story1_1_neu.doctor");
	if (remwaypoint1 != null)
    {
       destroyWaypointInDatapad(remwaypoint1, player);
    }
	removeObjVar(player, "quest.general.quest/c_story1_1_neu.doctor");
	
	obj_id remwaypoint2 = getObjIdObjVar(player, "quest.general.quest/c_story1_1_imp.doctor");
	if (remwaypoint2 != null)
    {
       destroyWaypointInDatapad(remwaypoint2, player);
    }
	removeObjVar(player, "quest.general.quest/c_story1_1_imp.doctor");
	
//	obj_id top=getTopMostContainer(player);
//	location loc = getLocation(top);
//	loc.x = 3306;
//	loc.y = 0;
//	loc.z = -4547;
//	loc.area = "tatooine";
//	obj_id waypoint = createWaypointInDatapad(player, loc);
//	if (questIsQuestActive(questId1, player))
//		setObjVar(player, "quest.general.quest/c_story1_1_reb.corpse", waypoint);
//	else if	(questIsQuestActive(questId2, player))
//		setObjVar(player, "quest.general.quest/c_story1_1_neu.corpse", waypoint);
//	else if	(questIsQuestActive(questId3, player))
//		setObjVar(player, "quest.general.quest/c_story1_1_imp.corpse", waypoint);
//	setWaypointName(waypoint, "Moxxar Krieg");
//	setWaypointActive(waypoint, true);		
}

// ----------------------------------------------------------------------

void c_story1_1_doc_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_story1_1_doc_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello, may I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have this spice sample that I need analyzed.
	if (response == "s_720")
	{
		//-- [NOTE] 
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, let me see it.  Find it in your kid's room? I keep hearing more and more stories about that, kids these days...wait a minute.  Where did you get this?!
			string_id message = new string_id (c_stringFile, "s_722");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found it on a ship that crashed.
			boolean hasResponse0 = false;
			if (c_story1_1_doc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Never mind where I found it, what is it?
			boolean hasResponse1 = false;
			if (c_story1_1_doc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_724");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_732");

				utils.setScriptVar (player, "conversation.c_story1_1_doc.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_1_doc_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, let me see it.  Find it in your kid's room? I keep hearing more and more stories about that, kids these days...wait a minute.  Where did you get this?!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found it on a ship that crashed.
	if (response == "s_724")
	{
		//-- [NOTE] 
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Why did you bring this to me?  This is far too hot for me to touch.  Do you realize how much danger this will bring me?  Get out!  Get out of here now!
			string_id message = new string_id (c_stringFile, "s_726");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is this illegal?  Is it dangerous?
			boolean hasResponse0 = false;
			if (c_story1_1_doc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_728");

				utils.setScriptVar (player, "conversation.c_story1_1_doc.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind where I found it, what is it?
	if (response == "s_732")
	{
		//-- [NOTE] 
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's ... what the? I haven't seen anything like this since... do you realize what this represents?
			string_id message = new string_id (c_stringFile, "s_734");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is this illegal?  Is it dangerous?
			boolean hasResponse0 = false;
			if (c_story1_1_doc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_736");

				utils.setScriptVar (player, "conversation.c_story1_1_doc.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_1_doc_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why did you bring this to me?  This is far too hot for me to touch.  Do you realize how much danger this will bring me?  Get out!  Get out of here now!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is this illegal?  Is it dangerous?
	if (response == "s_728")
	{
		//-- [NOTE] 
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			c_story1_1_doc_action_forwardquest (player, npc);

			//-- NPC:  It's dangerous to me! Out!  If you really must find out what that stuff is, go talk to a friend of mine.  He would know more about it than I do anyway.  Take this data and get out!
			string_id message = new string_id (c_stringFile, "s_730");
			utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_1_doc_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's ... what the? I haven't seen anything like this since... do you realize what this represents?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is this illegal?  Is it dangerous?
	if (response == "s_736")
	{
		//-- [NOTE] 
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			c_story1_1_doc_action_forwardquest (player, npc);

			//-- NPC: It's dangerous to me! Out!  If you really must find out what that stuff is, go talk to a friend of mine.  He would know more about it than I do anyway.  Take this data and get out!
			string_id message = new string_id (c_stringFile, "s_738");
			utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_story1_1_doc");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Edvar Vang");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Edvar Vang");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_story1_1_doc");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_story1_1_doc_condition_atDocStep (player, npc))
	{
		c_story1_1_doc_action_faceplayer (player, npc);

		//-- NPC: Hello, may I help you?
		string_id message = new string_id (c_stringFile, "s_718");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have this spice sample that I need analyzed.
		boolean hasResponse0 = false;
		if (c_story1_1_doc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_720");

			utils.setScriptVar (player, "conversation.c_story1_1_doc.branchId", 1);

			npcStartConversation (player, npc, "c_story1_1_doc", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_1_doc_condition_afterDoctorStep (player, npc))
	{
		doAnimationAction (npc, "point_away");

		c_story1_1_doc_action_faceplayer (player, npc);

		//-- NPC: I don't think you should talk to me anymore.
		string_id message = new string_id (c_stringFile, "s_740");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_1_doc_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_story1_1_doc_action_faceplayer (player, npc);

		//-- NPC: How is your health today?
		string_id message = new string_id (c_stringFile, "s_742");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_story1_1_doc")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_story1_1_doc.branchId");

	if (branchId == 1 && c_story1_1_doc_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_story1_1_doc_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_story1_1_doc_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_story1_1_doc_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_story1_1_doc.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

