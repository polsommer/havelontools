// ======================================================================
//
// prof_medic_11_first.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/prof_medic_11_first";

// ======================================================================
// Script Conditions
// ======================================================================

boolean prof_medic_11_first_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean prof_medic_11_first_condition_playerOnCorrectStep (obj_id player, obj_id npc)
{
	faceTo(npc,player);
	return groundquests.isTaskActive(player, "profession_medic_11", "talktofirst");
}

// ----------------------------------------------------------------------

boolean prof_medic_11_first_condition_playercompletedTask (obj_id player, obj_id npc)
{
	faceTo(npc,player);
	return groundquests.hasCompletedTask(player, "profession_medic_11", "talktofirst");
}

// ======================================================================
// Script Actions
// ======================================================================

void prof_medic_11_first_action_givePassSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "profession_medic_11_first_victim");
}

// ----------------------------------------------------------------------

void prof_medic_11_first_action_healnpc (obj_id player, obj_id npc)
{
	playClientEffectObj(player, "clienteffect/prof_medic_21_heal2.cef", npc, "");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int prof_medic_11_first_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ow!  Can you help me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. Tell me what happened.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (prof_medic_11_first_condition__defaultCondition (player, npc))
		{
			//-- NPC: I was walking home and one of Lady Valarian's guards (if you can call that scum 'guards') called out to some Hutt hirelings something about how Lady Valarian was going to be the top power in Mos Eisley and opened fire on them. One or more of the shots hit me.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let me look. That must hurt a lot, but it's not too bad.
			boolean hasResponse0 = false;
			if (prof_medic_11_first_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.prof_medic_11_first.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_11_first.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_11_first_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I was walking home and one of Lady Valarian's guards (if you can call that scum 'guards') called out to some Hutt hirelings something about how Lady Valarian was going to be the top power in Mos Eisley and opened fire on them. One or more of the shots hit me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me look. That must hurt a lot, but it's not too bad.
	if (response == "s_10")
	{
		doAnimationAction (player, "manipulate_medium");

		//-- [NOTE] 
		if (prof_medic_11_first_condition__defaultCondition (player, npc))
		{
			//-- NPC: Try it from this side.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Give me a moment and I'll fix you right up.
			boolean hasResponse0 = false;
			if (prof_medic_11_first_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.prof_medic_11_first.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_11_first.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_11_first_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Try it from this side.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me a moment and I'll fix you right up.
	if (response == "s_14")
	{
		doAnimationAction (player, "manipulate_medium");

		prof_medic_11_first_action_healnpc (player, npc);

		//-- [NOTE] 
		if (prof_medic_11_first_condition__defaultCondition (player, npc))
		{
			prof_medic_11_first_action_givePassSignal (player, npc);

			//-- NPC: Ah, thank you. That feels much better! Listen, if you are interested in some work for the Empire my friend Captain Jasha in Bestine may have something for you. Look for him if you are ever in Bestine.
			string_id message = new string_id (c_stringFile, "s_16");
			utils.removeScriptVar (player, "conversation.prof_medic_11_first.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.prof_medic_11_first");

	setCondition (self, CONDITION_CONVERSABLE);
//	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Escara Frei");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
//	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Escara Frei");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.prof_medic_11_first");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (prof_medic_11_first_condition_playercompletedTask (player, npc))
	{
		//-- NPC: Thank you so much. I'm going to stay here until this silly war is over.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_11_first_condition_playerOnCorrectStep (player, npc))
	{
		//-- NPC: Ow!  Can you help me?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. Tell me what happened.
		boolean hasResponse0 = false;
		if (prof_medic_11_first_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.prof_medic_11_first.branchId", 2);

			npcStartConversation (player, npc, "prof_medic_11_first", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_11_first_condition__defaultCondition (player, npc))
	{
		//-- NPC: Has the fighting stopped yet?
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "prof_medic_11_first")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.prof_medic_11_first.branchId");

	if (branchId == 2 && prof_medic_11_first_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && prof_medic_11_first_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && prof_medic_11_first_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.prof_medic_11_first.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

