// ======================================================================
//
// corellia_tyrena_noro.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_tyrena_noro";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_tyrena_noro_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_talkNoro (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "talk_to_slave_2");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_completeSlaverAccess (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "corellia_tyrena_slaver_access");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_onSpike (obj_id player, obj_id npc)
{
	return 	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_2b");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_onAdminComp (obj_id player, obj_id npc)
{
	return 	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_2a");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_onAdminComp2 (obj_id player, obj_id npc)
{
	return 	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_2c");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_noro_condition_onSlaverAccess (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "pw_confirmation_2d") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "talk_to_akkus_3a") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_3b") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "pw_confirmation_3c") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_4") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "hack_term_4a") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "kill_detention_guard_5") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "finale_hack_5a") ||
	groundquests.isTaskActive(player, "corellia_tyrena_slaver_access", "finale_msgbox_5b"));	
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_tyrena_noro_action_signalNoro (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talk_to_slave_2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_tyrena_noro_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have got to stop talking to me. You're going to get me sent to the detention cells.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was able to spike the administrator's computer.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Great, now go get the elevator password!
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Right.
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great, now go get the elevator password!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Right.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bye.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why are you back here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to spike the administrator's computer somehow.
	if (response == "s_16")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Spike it? Well I suppose you could send an electrical pulse down the line to it, but where you could do that from, I have no idea.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: An electrical pulse?
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Spike it? Well I suppose you could send an electrical pulse down the line to it, but where you could do that from, I have no idea.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: An electrical pulse?
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Yes, just find some machinery near the administrator's office and see if you can program any of the terminals to send a pulse to that terminal. It should spike the terminal for several minutes.
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go look.
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, just find some machinery near the administrator's office and see if you can program any of the terminals to send a pulse to that terminal. It should spike the terminal for several minutes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll go look.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Who are you? You're not one of the slavers.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Kyran sent me, I'm here to help you.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Kyran made it out?
			string_id message = new string_id (c_stringFile, "s_37");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. He sent me in to get everyone else out.
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_39");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Kyran made it out?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. He sent me in to get everyone else out.
	if (response == "s_39")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: So what do you want from me?
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Kyran said you know how to get to the lower levels.
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So what do you want from me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Kyran said you know how to get to the lower levels.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			//-- NPC: Kyran puts too much faith in me. I'm not exactly sure, but some of the privileged slaves use the elevator on the other side of the fence there. They have to get a pass from the administrator's office. You might check there for a terminal or something.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where is the administrator's office?
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Kyran puts too much faith in me. I'm not exactly sure, but some of the privileged slaves use the elevator on the other side of the fence there. They have to get a pass from the administrator's office. You might check there for a terminal or something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is the administrator's office?
	if (response == "s_47")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: I don't know exactly. I've never left this pen. I've only heard about it. It's supposed to be on this level in the office area. I suppose if you get to some rooms that look like offices you'll be in the right area. Try the hall to the south. The slaves with the special permission passes usually come from that direction.
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_noro_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't know exactly. I've never left this pen. I've only heard about it. It's supposed to be on this level in the office area. I suppose if you get to some rooms that look like offices you'll be in the right area. Try the hall to the south. The slaves with the special permission passes usually come from that direction.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_51")
	{
		doAnimationAction (player, "thank");

		//-- [NOTE] 
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			corellia_tyrena_noro_action_signalNoro (player, npc);

			//-- NPC: You're welcome. If you get to the lower levels find a slave named Akkus. He's been bragging that he knows how to get access to the security areas. Tell him I sent you and find out if he's telling the truth. Sorry, but that's all I know that could be of help.
			string_id message = new string_id (c_stringFile, "s_53");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_tyrena_noro");

    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

    faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_tyrena_noro");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_completeSlaverAccess (player, npc))
	{
		doAnimationAction (npc, "thank");

		//-- NPC: Thanks for all you have done. We can make our own way out here.
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_onSlaverAccess (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: Finish what you started. Find a slave named Akkus on the lower levels. He's been bragging that he knows how to get access to the security areas. Tell him I sent you and find out if he's telling the truth.
		string_id message = new string_id (c_stringFile, "s_27");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_onAdminComp2 (player, npc))
	{
		doAnimationAction (npc, "nervous");

		//-- NPC: You have got to stop talking to me. You're going to get me sent to the detention cells.
		string_id message = new string_id (c_stringFile, "s_22");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was able to spike the administrator's computer.
		boolean hasResponse0 = false;
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 3);

			npcStartConversation (player, npc, "corellia_tyrena_noro", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_onSpike (player, npc))
	{
		doAnimationAction (npc, "shrug_hands");

		//-- NPC: Why are you back here?
		string_id message = new string_id (c_stringFile, "s_15");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need to spike the administrator's computer somehow.
		boolean hasResponse0 = false;
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 6);

			npcStartConversation (player, npc, "corellia_tyrena_noro", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_onAdminComp (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: You must slice the administrator's computer. Go look for some offices on this level.
		string_id message = new string_id (c_stringFile, "s_55");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition_talkNoro (player, npc))
	{
		doAnimationAction (npc, "nervous");

		//-- NPC: Who are you? You're not one of the slavers.
		string_id message = new string_id (c_stringFile, "s_33");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Kyran sent me, I'm here to help you.
		boolean hasResponse0 = false;
		if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.corellia_tyrena_noro.branchId", 11);

			npcStartConversation (player, npc, "corellia_tyrena_noro", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_noro_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "implore");

		//-- NPC: I can't talk now, come back later!
		string_id message = new string_id (c_stringFile, "s_56");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_tyrena_noro")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

	if (branchId == 3 && corellia_tyrena_noro_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_tyrena_noro_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && corellia_tyrena_noro_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_tyrena_noro_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && corellia_tyrena_noro_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && corellia_tyrena_noro_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && corellia_tyrena_noro_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && corellia_tyrena_noro_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && corellia_tyrena_noro_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && corellia_tyrena_noro_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_tyrena_noro.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

