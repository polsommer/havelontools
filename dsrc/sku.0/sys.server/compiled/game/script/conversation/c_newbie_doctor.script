// ======================================================================
//
// c_newbie_doctor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_newbie_doctor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_newbie_doctor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_newbie_doctor_condition_onMedCenterStep (obj_id player, obj_id npc)
{
	faceTo(npc,player);
	int questId1 = questGetQuestId("quest/c_newbie_quest3");
	int cantinastep = groundquests.getTaskId(questId1, "medcenterstep"); 
	
	return questIsTaskActive(questId1, cantinastep, player);
}

// ----------------------------------------------------------------------

boolean c_newbie_doctor_condition_hasScreen (obj_id player, obj_id npc)
{
	faceTo(npc,player);
	obj_id viewscreen = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/simple_kit/viewscreen_reader.iff");
    
    if (viewscreen != null)
		return true;
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_newbie_doctor_action_forwardQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_medcenterstep");

    obj_id viewscreen = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/simple_kit/viewscreen_reader.iff");
    
    if (viewscreen != null)
	{
	    destroyObject (viewscreen);
	}

	obj_id pInv = utils.getInventoryContainer(player);
	obj_id stima = createObject("object/tangible/medicine/instant_stimpack/stimpack_a.iff", pInv, "");
	
	if(isIdValid(stima))
	{
		setCount(stima, 25);
		setObjVar(stima, "healing.power", 150);
	}
}

// ----------------------------------------------------------------------

void c_newbie_doctor_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_newbie_doctor_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you for coming to see me, %TU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're welcome.  I have this viewscreen reader for you. 
	if (response == "s_411")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, thank you.  I suppose you want to know why I asked to see you.
			string_id message = new string_id (c_stringFile, "s_413");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The thought did cross my mind.
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Normally, yes, but now I'm coming to expect it.
			boolean hasResponse1 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_415");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_423");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Trehla gave me something for you, but I seem to have lost it.
	if (response == "s_310")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			//-- NPC: That's all right.  I will get another one.  I suppose it seems strange that I would call on a stranger and then not be upset if that same stranger lost something of mine.
			string_id message = new string_id (c_stringFile, "s_312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The thought did cross my mind.
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Normally, yes, but now I'm coming to expect it.
			boolean hasResponse1 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_415");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_423");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_doctor_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, thank you.  I suppose you want to know why I asked to see you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The thought did cross my mind.
	if (response == "s_415")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wish to explain about damage.  I assume that you already know that you can heal your damage with a bacta shot.  You may also use stimpacks for a quick shot of healing, even without medical training.  Allow me to supply you with a stimpack to help you along the way until you buy or make your own. 
			string_id message = new string_id (c_stringFile, "s_417");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_419");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Normally, yes, but now I'm coming to expect it.
	if (response == "s_423")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wish to explain about damage.  I assume that you already know that you can heal your damage with a bacta shot.  You may also use stimpacks for a quick shot of healing, even without medical training.  Allow me to supply you with a stimpack to help you along the way until you buy or make your own. 
			string_id message = new string_id (c_stringFile, "s_417");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_419");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_doctor_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I wish to explain about damage.  I assume that you already know that you can heal your damage with a bacta shot.  You may also use stimpacks for a quick shot of healing, even without medical training.  Allow me to supply you with a stimpack to help you along the way until you buy or make your own. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks!
	if (response == "s_419")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			c_newbie_doctor_action_forwardQuest (player, npc);

			//-- NPC: Lastly, I want to talk to you about wounds. More serious damage can result in wounds.  Only time in a medical center or a doctor can remedy that.  A few wounds will not seriously impair your ability to function, but a great number of them will.  Before you go out to hunt, get familiar with how to heal yourself.
			string_id message = new string_id (c_stringFile, "s_421");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you for the warning.
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_305");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_doctor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lastly, I want to talk to you about wounds. More serious damage can result in wounds.  Only time in a medical center or a doctor can remedy that.  A few wounds will not seriously impair your ability to function, but a great number of them will.  Before you go out to hunt, get familiar with how to heal yourself.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you for the warning.
	if (response == "s_305")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Be well.
			string_id message = new string_id (c_stringFile, "s_307");
			utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_doctor_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's all right.  I will get another one.  I suppose it seems strange that I would call on a stranger and then not be upset if that same stranger lost something of mine.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The thought did cross my mind.
	if (response == "s_415")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wish to explain about damage.  I assume that you already know that you can heal your damage with a bacta shot.  You may also use stimpacks for a quick shot of healing, even without medical training.  Allow me to supply you with a stimpack to help you along the way until you buy or make your own. 
			string_id message = new string_id (c_stringFile, "s_417");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_419");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Normally, yes, but now I'm coming to expect it.
	if (response == "s_423")
	{
		//-- [NOTE] 
		if (c_newbie_doctor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wish to explain about damage.  I assume that you already know that you can heal your damage with a bacta shot.  You may also use stimpacks for a quick shot of healing, even without medical training.  Allow me to supply you with a stimpack to help you along the way until you buy or make your own. 
			string_id message = new string_id (c_stringFile, "s_417");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_doctor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_419");

				utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_newbie_doctor");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Kazen Harn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Kazen Harn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_newbie_doctor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_newbie_doctor_condition_onMedCenterStep (player, npc))
	{
		c_newbie_doctor_action_faceplayer (player, npc);

		//-- NPC: Thank you for coming to see me, %TU.
		string_id message = new string_id (c_stringFile, "s_409");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You're welcome.  I have this viewscreen reader for you. 
		boolean hasResponse0 = false;
		if (c_newbie_doctor_condition_hasScreen (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Trehla gave me something for you, but I seem to have lost it.
		boolean hasResponse1 = false;
		if (!c_newbie_doctor_condition_hasScreen (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_411");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_310");

			utils.setScriptVar (player, "conversation.c_newbie_doctor.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "c_newbie_doctor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_doctor_condition__defaultCondition (player, npc))
	{
		//-- NPC: Please take care of yourself.
		string_id message = new string_id (c_stringFile, "s_314");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_newbie_doctor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_newbie_doctor.branchId");

	if (branchId == 1 && c_newbie_doctor_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_newbie_doctor_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_newbie_doctor_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_newbie_doctor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_newbie_doctor_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_newbie_doctor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

