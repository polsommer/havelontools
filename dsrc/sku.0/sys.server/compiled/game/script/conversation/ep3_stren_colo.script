// ======================================================================
//
// ep3_stren_colo.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_stren_colo";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_stren_colo_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_hasCompleted10WookieeQuest (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_sera_10_wookiee_teeth", "isReadyForReward"));
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_bountyCollect (obj_id player, obj_id npc)
{
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_bountyOffer (obj_id player, obj_id npc)
{
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_hasJesskBounty (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "ep3_stren_jessk_bounty") ||
			groundquests.hasCompletedQuest(player, "ep3_stren_jessk_bounty"));
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_isReadyForJesskReward (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "ep3_stren_jessk_bounty", "hasKilledJessk");
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_hasDornBounty (obj_id player, obj_id npc)
{
	return (space_quest.hasQuest(player) ||
			space_quest.hasWonQuestRecursive(player, "assassinate", "ep3_stren_dorn_lackey"));

}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_isReadyForDornReward (obj_id player, obj_id npc)
{
	return (space_quest.hasWonQuest(player, "destroy_surpriseattack", "ep3_stren_dorn_bounty") &&
			!space_quest.hasReceivedReward(player, "destroy_surpriseattack", "ep3_stren_dorn_bounty"));
}

// ----------------------------------------------------------------------

boolean ep3_stren_colo_condition_isClinetRebel (obj_id player, obj_id npc)
{
	if (factions.isRebel(player))
	{
		if (factions.isOnLeave(player))
			return false;
			
		return true;
	}

	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_stren_colo_action_giveReward10Wookieequest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "give10TeethReward");
}

// ----------------------------------------------------------------------

void ep3_stren_colo_action_giveJesskBounty (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_stren_jessk_bounty");
}

// ----------------------------------------------------------------------

void ep3_stren_colo_action_giveJesskReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "collectJeskReward");
}

// ----------------------------------------------------------------------

void ep3_stren_colo_action_giveJesskTien (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_stren_jessk_bounty_tien");
}

// ----------------------------------------------------------------------

void ep3_stren_colo_action_giveDornBelga (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_stren_dorn_bounty_belga");
}

// ----------------------------------------------------------------------

void ep3_stren_colo_action_giveDornReward (obj_id player, obj_id npc)
{
	space_quest.giveReward(player, "destroy_surpriseattack", "ep3_stren_dorn_bounty", 10000);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_stren_colo_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bounty Collect

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am here to collect on a bounty.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, which is it then?
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am here to collect the Jessk Bounty.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition_isReadyForJesskReward (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn is space dust.
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition_isReadyForDornReward (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Oh, well maybe I don't have any of your postings ready yet.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, which is it then?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am here to collect the Jessk Bounty.
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			ep3_stren_colo_action_giveJesskReward (player, npc);

			//-- NPC: Oh, so the lizard is dead is he.  Good, good.  12,000 credits, as was agreed.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dorn is space dust.
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			ep3_stren_colo_action_giveDornReward (player, npc);

			//-- NPC: I received confirmation from Belga before you arrived. Here is your bounty.
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, well maybe I don't have any of your postings ready yet.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get on then and stop wasting the Empire's time.
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bounty Offer

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What jobs do you have available?
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Check the board.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Jessk the Trandoshan: 12,000 credits.
			boolean hasResponse0 = false;
			if (!ep3_stren_colo_condition_hasJesskBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn Nareusu the Human: 10,000 credits.
			boolean hasResponse1 = false;
			if (!ep3_stren_colo_condition_hasDornBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I guess nothing for now then.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Check the board.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Jessk the Trandoshan: 12,000 credits.
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Card cheat.  Sabacc I think.  
			string_id message = new string_id (c_stringFile, "s_77");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about him.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dorn Nareusu the Human: 10,000 credits.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wanted for space piracy. There is a space port official on the first floor of the tree in Kachirho, Belga Daeri; she placed the bounty. Go get information from her.
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I may do just that.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not my style.
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess nothing for now then.
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back when you can be useful.
			string_id message = new string_id (c_stringFile, "s_101");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Card cheat.  Sabacc I think.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about him.
	if (response == "s_79")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bounty was put in second party by Tien Wallub, which is not uncommon.  Tien works at the cantina and makes these second party posts all the time, he is listed as the contact.
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I guess I'll go speak with him then.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What else do you have?
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bounty was put in second party by Tien Wallub, which is not uncommon.  Tien works at the cantina and makes these second party posts all the time, he is listed as the contact.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess I'll go speak with him then.
	if (response == "s_83")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			ep3_stren_colo_action_giveJesskTien (player, npc);

			//-- NPC: Suit yourself.
			string_id message = new string_id (c_stringFile, "s_85");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What else do you have?
	if (response == "s_87")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Check the board.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Jessk the Trandoshan: 12,000 credits.
			boolean hasResponse0 = false;
			if (!ep3_stren_colo_condition_hasJesskBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn Nareusu the Human: 10,000 credits.
			boolean hasResponse1 = false;
			if (!ep3_stren_colo_condition_hasDornBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I guess nothing for now then.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wanted for space piracy. There is a space port official on the first floor of the tree in Kachirho, Belga Daeri; she placed the bounty. Go get information from her.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I may do just that.
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			ep3_stren_colo_action_giveDornBelga (player, npc);

			//-- NPC: Good riddance. I never liked pirates.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not my style.
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Check the board.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Jessk the Trandoshan: 12,000 credits.
			boolean hasResponse0 = false;
			if (!ep3_stren_colo_condition_hasJesskBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn Nareusu the Human: 10,000 credits.
			boolean hasResponse1 = false;
			if (!ep3_stren_colo_condition_hasDornBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I guess nothing for now then.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes what is it, I don't have all day.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was told I could collect a bounty here.
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bounty is it.  What one, we have a number of them out there.
			string_id message = new string_id (c_stringFile, "s_107");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: For the mad wookiee wandering the countryside, I have some teeth.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ah, nothing. I must have the wrong guy.
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: Well be off with you then, I have things to do.
			string_id message = new string_id (c_stringFile, "s_129");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bounty is it.  What one, we have a number of them out there.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: For the mad wookiee wandering the countryside, I have some teeth.
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes, those disgusting creatures.
			string_id message = new string_id (c_stringFile, "s_111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Look, do you have my credits or not.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_113");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes, those disgusting creatures.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Look, do you have my credits or not.
	if (response == "s_113")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			ep3_stren_colo_action_giveReward10Wookieequest (player, npc);

			//-- NPC: Ok, 10000 credits. I don't know why we can just get a stormtrooper company down here to take care of these things for us.
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So what do you do here?
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ok, 10000 credits. I don't know why we can just get a stormtrooper company down here to take care of these things for us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what do you do here?
	if (response == "s_117")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: I give away money because I enjoy making people happy. What do you think I would do? I am a bounty officer. I post and redeem bounties.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I'm not licensed.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I give away money because I enjoy making people happy. What do you think I would do? I am a bounty officer. I post and redeem bounties.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I'm not licensed.
	if (response == "s_121")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Since when have regulations mattered to your kind? Listen, these are local bounties, the small stuff. Some work crews want pesky creature killed or somebody is cheated at sabacc and wants a discount hit... they come here. For a real bounty, go find a Galaxy BH terminal.
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Since when have regulations mattered to your kind? Listen, these are local bounties, the small stuff. Some work crews want pesky creature killed or somebody is cheated at sabacc and wants a discount hit... they come here. For a real bounty, go find a Galaxy BH terminal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see.
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition_isClinetRebel (player, npc))
		{
			//-- NPC: We don't deal with filth like you.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_stren_colo_condition_bountyCollect (player, npc))
		{
			//-- NPC: Bounty Collect
			string_id message = new string_id (c_stringFile, "s_51");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am here to collect on a bounty.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_stren_colo_condition_bountyOffer (player, npc))
		{
			//-- NPC: Bounty Offer
			string_id message = new string_id (c_stringFile, "s_69");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What jobs do you have available?
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_stren_colo_condition_hasCompleted10WookieeQuest (player, npc))
		{
			doAnimationAction (npc, "adjust");

			//-- NPC: Yes what is it, I don't have all day.
			string_id message = new string_id (c_stringFile, "s_103");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I was told I could collect a bounty here.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ah, nothing. I must have the wrong guy.
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do you have official business to discuss?
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I have a bounty to collect.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What jobs do you have available?
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What do you do here?
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, I just enjoy your witty conversation.
			boolean hasResponse3 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_135");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_137");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_139");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_stren_colo_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you have official business to discuss?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I have a bounty to collect.
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, which is it then?
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am here to collect the Jessk Bounty.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition_isReadyForJesskReward (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn is space dust.
			boolean hasResponse1 = false;
			if (ep3_stren_colo_condition_isReadyForDornReward (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Oh, well maybe I don't have any of your postings ready yet.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What jobs do you have available?
	if (response == "s_135")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Check the board.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Jessk the Trandoshan: 12,000 credits.
			boolean hasResponse0 = false;
			if (!ep3_stren_colo_condition_hasJesskBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dorn Nareusu the Human: 10,000 credits.
			boolean hasResponse1 = false;
			if (!ep3_stren_colo_condition_hasDornBounty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I guess nothing for now then.
			boolean hasResponse2 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you do here?
	if (response == "s_137")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: I give away money because I enjoy making people happy. What do you think I would do? I am a bounty officer. I post and redeem bounties.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I'm not licensed.
			boolean hasResponse0 = false;
			if (ep3_stren_colo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I just enjoy your witty conversation.
	if (response == "s_139")
	{
		//-- [NOTE] 
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Watch yourself, or you just might wind up here on these boards yourself.
			string_id message = new string_id (c_stringFile, "s_141");
			utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_stren_colo");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_stren_colo");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_stren_colo_condition_isClinetRebel (player, npc))
	{
		//-- NPC: We don't deal with filth like you.
		string_id message = new string_id (c_stringFile, "s_64");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_stren_colo_condition_bountyCollect (player, npc))
	{
		//-- NPC: Bounty Collect
		string_id message = new string_id (c_stringFile, "s_51");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am here to collect on a bounty.
		boolean hasResponse0 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 2);

			npcStartConversation (player, npc, "ep3_stren_colo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_stren_colo_condition_bountyOffer (player, npc))
	{
		//-- NPC: Bounty Offer
		string_id message = new string_id (c_stringFile, "s_69");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What jobs do you have available?
		boolean hasResponse0 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 7);

			npcStartConversation (player, npc, "ep3_stren_colo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_stren_colo_condition_hasCompleted10WookieeQuest (player, npc))
	{
		doAnimationAction (npc, "adjust");

		//-- NPC: Yes what is it, I don't have all day.
		string_id message = new string_id (c_stringFile, "s_103");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was told I could collect a bounty here.
		boolean hasResponse0 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Ah, nothing. I must have the wrong guy.
		boolean hasResponse1 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_105");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_127");

			utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 15);

			npcStartConversation (player, npc, "ep3_stren_colo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_stren_colo_condition__defaultCondition (player, npc))
	{
		//-- NPC: Do you have official business to discuss?
		string_id message = new string_id (c_stringFile, "s_131");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I have a bounty to collect.
		boolean hasResponse0 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What jobs do you have available?
		boolean hasResponse1 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: What do you do here?
		boolean hasResponse2 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No, I just enjoy your witty conversation.
		boolean hasResponse3 = false;
		if (ep3_stren_colo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_133");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_135");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_137");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_139");

			utils.setScriptVar (player, "conversation.ep3_stren_colo.branchId", 22);

			npcStartConversation (player, npc, "ep3_stren_colo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_stren_colo")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_stren_colo.branchId");

	if (branchId == 2 && ep3_stren_colo_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && ep3_stren_colo_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && ep3_stren_colo_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && ep3_stren_colo_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && ep3_stren_colo_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && ep3_stren_colo_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && ep3_stren_colo_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && ep3_stren_colo_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && ep3_stren_colo_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && ep3_stren_colo_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && ep3_stren_colo_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && ep3_stren_colo_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && ep3_stren_colo_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && ep3_stren_colo_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_stren_colo.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

