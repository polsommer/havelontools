// ======================================================================
//
// c_newbie_associate.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_newbie_associate";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_newbie_associate_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_newbie_associate_condition_onAssociateStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_newbie_quest5");
	int surveystep = groundquests.getTaskId(questId1, "associatestep"); 
	
	return questIsTaskActive(questId1, surveystep, player);
}

// ======================================================================
// Script Actions
// ======================================================================

void c_newbie_associate_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_newbie_associate_action_forwardquest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_newbie_associatestep");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_newbie_associate_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you looking for someone?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I am. I am looking for you, actually.
	if (response == "s_764")
	{
		//-- [NOTE] 
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you now?  What can I do for you?
			string_id message = new string_id (c_stringFile, "s_765");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trehla sent me to you.  She is concerned about Tuskens attacking near Mos Eisley.
			boolean hasResponse0 = false;
			if (c_newbie_associate_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_766");

				utils.setScriptVar (player, "conversation.c_newbie_associate.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_associate_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you now?  What can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Trehla sent me to you.  She is concerned about Tuskens attacking near Mos Eisley.
	if (response == "s_766")
	{
		//-- [NOTE] 
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			//-- NPC: That's odd.  They don't like being that close to cities in general. Where are they attacking?
			string_id message = new string_id (c_stringFile, "s_767");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: They have been attacking poor areas outside of town. 
			boolean hasResponse0 = false;
			if (c_newbie_associate_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_768");

				utils.setScriptVar (player, "conversation.c_newbie_associate.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_associate_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's odd.  They don't like being that close to cities in general. Where are they attacking?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They have been attacking poor areas outside of town. 
	if (response == "s_768")
	{
		//-- [NOTE] 
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			c_newbie_associate_action_forwardquest (player, npc);

			//-- NPC: Interesting.  I'll have to look into this.  If my hunch is right, there's a storm brewing.  Here are 500 credits for the story.  
			string_id message = new string_id (c_stringFile, "s_769");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (c_newbie_associate_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Credits for a story?  I don't understand.
			boolean hasResponse1 = false;
			if (c_newbie_associate_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_770");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_771");

				utils.setScriptVar (player, "conversation.c_newbie_associate.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_associate_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting.  I'll have to look into this.  If my hunch is right, there's a storm brewing.  Here are 500 credits for the story.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks!
	if (response == "s_770")
	{
		//-- [NOTE] 
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			c_newbie_associate_action_forwardquest (player, npc);

			//-- NPC: You're welcome.  Please give Trehla my best.
			string_id message = new string_id (c_stringFile, "s_773");
			utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Credits for a story?  I don't understand.
	if (response == "s_771")
	{
		//-- [NOTE] 
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			c_newbie_associate_action_forwardquest (player, npc);

			//-- NPC: I'm a journalist for the holonews, among other things.  I'm happy to pay for stories like this.
			string_id message = new string_id (c_stringFile, "s_772");
			utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_newbie_associate");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Trace Lyson");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Trace Lyson");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_newbie_associate");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_newbie_associate_condition_onAssociateStep (player, npc))
	{
		c_newbie_associate_action_faceplayer (player, npc);

		//-- NPC: Are you looking for someone?
		string_id message = new string_id (c_stringFile, "s_427");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes I am. I am looking for you, actually.
		boolean hasResponse0 = false;
		if (c_newbie_associate_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_764");

			utils.setScriptVar (player, "conversation.c_newbie_associate.branchId", 1);

			npcStartConversation (player, npc, "c_newbie_associate", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_associate_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm sorry, but I can't talk right now.  Big things brewing!
		string_id message = new string_id (c_stringFile, "s_201");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_newbie_associate")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_newbie_associate.branchId");

	if (branchId == 1 && c_newbie_associate_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_newbie_associate_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_newbie_associate_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_newbie_associate_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_newbie_associate.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

