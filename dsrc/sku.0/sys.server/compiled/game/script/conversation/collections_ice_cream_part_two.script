// ======================================================================
//
// collections_ice_cream_part_two.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/collections_ice_cream_part_two";

// ======================================================================
// Script Conditions
// ======================================================================

boolean collections_ice_cream_part_two_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean collections_ice_cream_part_two_condition_hasActiveTask (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, "chapter9_ice_cream"))
	{	
		return groundquests.isTaskActive(player, "chapter9_ice_cream", "meet_amyva_vanew");
	}	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void collections_ice_cream_part_two_action_signalNextTask (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "col_fried_icecream_part_02", 1);
	groundquests.sendSignal(player, "meet_amyva_vanew"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int collections_ice_cream_part_two_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sorry but I am busy right now. Place your order with the order droid.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh.  Are you off soon? I was sent here by Hunde Decan...it is regarding this fryer.
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hah...that must be an antique.  Try selling it to the local junk dealer.  I bet you'll get a decent price.
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Actually, I was hoping to fix it.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_two.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_two_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hah...that must be an antique.  Try selling it to the local junk dealer.  I bet you'll get a decent price.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I was hoping to fix it.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			//-- NPC: I doubt that would be the best way to approach getting a working fryer.  Take my advice and reverse engineer it and have a new one crafted.
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Any idea how I might do that?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_two.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_two_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I doubt that would be the best way to approach getting a working fryer.  Take my advice and reverse engineer it and have a new one crafted.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any idea how I might do that?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sure.  I see you have much of the broken fryer intact.  All you have to do is get a bit of detailed information for all the pieces and store it in your datapad.  Once you have enough data you can create a schematic and give it to a trader to craft.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Hmmmm. Which piece should I start with?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_two.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_two_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sure.  I see you have much of the broken fryer intact.  All you have to do is get a bit of detailed information for all the pieces and store it in your datapad.  Once you have enough data you can create a schematic and give it to a trader to craft.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hmmmm. Which piece should I start with?
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			//-- NPC: See those tongs in there?  Those are the fryer tongs and are used to lift food out of the fryer.  You are basically looking at a piece of bent metal with a handle.  Pretty simple.
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh.  I see.  But what about the other pieces?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_two.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_two_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: See those tongs in there?  Those are the fryer tongs and are used to lift food out of the fryer.  You are basically looking at a piece of bent metal with a handle.  Pretty simple.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh.  I see.  But what about the other pieces?
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			collections_ice_cream_part_two_action_signalNextTask (player, npc);

			//-- NPC: You might want to speak with Mikfa Faaus for other parts.  I will give you his current location.  I am much too busy to help you any further.
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.collections_ice_cream_part_two");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.collections_ice_cream_part_two");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (collections_ice_cream_part_two_condition_hasActiveTask (player, npc))
	{
		//-- NPC: I'm sorry but I am busy right now. Place your order with the order droid.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Oh.  Are you off soon? I was sent here by Hunde Decan...it is regarding this fryer.
		boolean hasResponse0 = false;
		if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			utils.setScriptVar (player, "conversation.collections_ice_cream_part_two.branchId", 1);

			npcStartConversation (player, npc, "collections_ice_cream_part_two", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (collections_ice_cream_part_two_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm sorry but I am busy right now. If you can place your order with the order droid I will get to you as soon as possible.
		string_id message = new string_id (c_stringFile, "s_26");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "collections_ice_cream_part_two")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

	if (branchId == 1 && collections_ice_cream_part_two_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && collections_ice_cream_part_two_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && collections_ice_cream_part_two_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && collections_ice_cream_part_two_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && collections_ice_cream_part_two_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.collections_ice_cream_part_two.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

