// ======================================================================
//
// itp_emperor_main.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/itp_emperor_main";

// ======================================================================
// Script Conditions
// ======================================================================

boolean itp_emperor_main_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_01_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "itp_emperor_01");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_01_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "itp_emperor_01", "itp_emperor_01_05") ||
	groundquests.hasCompletedQuest(player, "itp_emperor_01");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_02_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "itp_emperor_02");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_03_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "itp_emperor_03", "itp_emperor_03_04") ||
	groundquests.hasCompletedQuest(player, "itp_emperor_03");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_03_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "itp_emperor_03");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_itp_emp_02_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "itp_emperor_02", "itp_emperor_02_03") ||
	groundquests.hasCompletedQuest(player, "itp_emperor_02");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_completedVeers (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "itp_veers_02");
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_notImperial (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if ( playerFaction == null || !playerFaction.equals("Imperial") )
	{
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean itp_emperor_main_condition_imperial_isOnLeave (obj_id player, obj_id npc)
{
	return factions.isOnLeave(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void itp_emperor_main_action_itp_emp_01_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "itp_emperor_01");
}

// ----------------------------------------------------------------------

void itp_emperor_main_action_itp_emp_01_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "itp_emperor_01_05");
}

// ----------------------------------------------------------------------

void itp_emperor_main_action_itp_emp_03_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "itp_emperor_03_04");
}

// ----------------------------------------------------------------------

void itp_emperor_main_action_itp_emp_02_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "itp_emperor_02_03");
}

// ----------------------------------------------------------------------

void itp_emperor_main_action_itp_emp_02_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "itp_emperor_02");
}

// ----------------------------------------------------------------------

void itp_emperor_main_action_itp_emp_03_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "itp_emperor_03");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int itp_emperor_main_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is now time to prove to the Queen that the Rebels are behind her recent difficulties.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you need me to do?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			itp_emperor_main_action_itp_emp_03_granted (player, npc);

			//-- NPC: You will eliminate Vurrha Jantsk and thus any possible connection to the Empire. And you will provide proof that the Rebel Alliance was behind the attack on the Queen.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int itp_emperor_main_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Jantsk mercenaries are going to intimidate Queen Kylantha and demand military and financial aid.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are my orders?
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			itp_emperor_main_action_itp_emp_02_granted (player, npc);

			//-- NPC: You are to clear the way for the mercenaries by ridding the Queen of her security. There is little enough of it, as she believes herself to be quite safe. We are going to convince her otherwise.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int itp_emperor_main_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Queen Kylantha is dangerously close to betraying her Emperor. But in my overly magnanimous mood, I would like to show her that the Empire is her friend. Failing in this is not an option. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, my lord..
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			itp_emperor_main_action_itp_emp_01_granted (player, npc);

			//-- NPC: There is a little known group of mercenaries on Endor known as the Jantsk mercenaries. You will approach their leader on my behalf. He is expecting you, but those in his employ must not know that the Empire is hiring them. Leave at once and deliver to Vurrha Jantsk my instructions.
			string_id message = new string_id (c_stringFile, "s_39");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_45");
			utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.itp_emperor_main");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.itp_emperor_main");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (itp_emperor_main_condition_notImperial (player, npc))
	{
		//-- NPC: The function of this base is not of your concern. I would suggest you make yourself scarce.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!itp_emperor_main_condition_completedVeers (player, npc))
	{
		//-- NPC: Why do you waste my time? Begone. Perhaps Colonel Veers could make use of a miscreant such as yourself.
		string_id message = new string_id (c_stringFile, "s_46");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_imperial_isOnLeave (player, npc))
	{
		//-- NPC: I'm afraid I only have orders I have are for those on active duty.
		string_id message = new string_id (c_stringFile, "s_43");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_03_complete (player, npc))
	{
		itp_emperor_main_action_itp_emp_03_signal (player, npc);

		//-- NPC: Queen Kylantha is now completely devoted to me, which is as it should be. You may go. Perhaps Lord Vader can make use of you.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_03_active (player, npc))
	{
		//-- NPC: You have important duties that you cannot complete in my presence. See to them.
		string_id message = new string_id (c_stringFile, "s_29");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_02_complete (player, npc))
	{
		itp_emperor_main_action_itp_emp_02_signal (player, npc);

		//-- NPC: It is now time to prove to the Queen that the Rebels are behind her recent difficulties.
		string_id message = new string_id (c_stringFile, "s_28");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you need me to do?
		boolean hasResponse0 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.itp_emperor_main.branchId", 6);

			npcStartConversation (player, npc, "itp_emperor_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_02_active (player, npc))
	{
		//-- NPC: Your orders cannot be fulfilled from my chambers. On your way, soldier.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_01_complete (player, npc))
	{
		itp_emperor_main_action_itp_emp_01_signal (player, npc);

		//-- NPC: The Jantsk mercenaries are going to intimidate Queen Kylantha and demand military and financial aid.
		string_id message = new string_id (c_stringFile, "s_20");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What are my orders?
		boolean hasResponse0 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			utils.setScriptVar (player, "conversation.itp_emperor_main.branchId", 10);

			npcStartConversation (player, npc, "itp_emperor_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition_itp_emp_01_active (player, npc))
	{
		//-- NPC: Why do you remain? You have your mission.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (itp_emperor_main_condition__defaultCondition (player, npc))
	{
		//-- NPC: Queen Kylantha is dangerously close to betraying her Emperor. But in my overly magnanimous mood, I would like to show her that the Empire is her friend. Failing in this is not an option. 
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, my lord..
		boolean hasResponse0 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (itp_emperor_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.itp_emperor_main.branchId", 14);

			npcStartConversation (player, npc, "itp_emperor_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "itp_emperor_main")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.itp_emperor_main.branchId");

	if (branchId == 6 && itp_emperor_main_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && itp_emperor_main_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && itp_emperor_main_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.itp_emperor_main.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

