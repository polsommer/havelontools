// ======================================================================
//
// mtp_hideout_access_crate_breaker.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_hideout_access_crate_breaker";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_hideout_access_crate_breaker_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_access_crate_breaker_condition_mtpHideout01_06 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "mtp_hideout_access_01", "mtp_hideout_access_01_06") ||
	groundquests.isTaskActive(player, "mtp_hideout_access_high_01", "mtp_hideout_access_01_06");
}

// ======================================================================
// Script Actions
// ======================================================================

void mtp_hideout_access_crate_breaker_action_attack (obj_id player, obj_id npc)
{
		setInvulnerable(npc, false);
		startCombat(npc, player);
		addHate(npc, player, 1000.0f);
		
		dictionary webster = new dictionary();
		webster.put("player", player);
		messageTo(player, "handleEndConversation", webster, 2, false);
		
		clearCondition (npc, CONDITION_CONVERSABLE);
		detachScript (npc, "conversation.mtp_hideout_access_crate_breaker");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_hideout_access_crate_breaker_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are you?
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			//-- NPC: I was once an accomplished adventurer. I scoured the galaxy looking for fame and fortune. But it all came crashing down.
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What happened?
			boolean hasResponse0 = false;
			if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are your feelings about crates?
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Crates?!!? I hate 'em! Worse thing that ever happened to the universe. And did you know that there are people mass producing them! I could not believe it. When I found out, I knew that I had to take action. These crate makers must be stopped!!
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you made the bombs?
			boolean hasResponse0 = false;
			if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_access_crate_breaker_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I was once an accomplished adventurer. I scoured the galaxy looking for fame and fortune. But it all came crashing down.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happened?
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			//-- NPC: I was looking for a fabled artifact. The Force crystal of Naga Sadow or the Journals of Ood Bnar or maybe just a really well-made bantha burger. I forget what it was. But after searching crate after crate after crate for hours and days and weeks, I found nothing. Nothing!! I finally gave up and retired.
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like you don't like crates much...
			boolean hasResponse0 = false;
			if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_access_crate_breaker_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I was looking for a fabled artifact. The Force crystal of Naga Sadow or the Journals of Ood Bnar or maybe just a really well-made bantha burger. I forget what it was. But after searching crate after crate after crate for hours and days and weeks, I found nothing. Nothing!! I finally gave up and retired.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like you don't like crates much...
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Crates?!!? I hate 'em! Worse thing that ever happened to the universe. And did you know that there are people mass producing them! I could not believe it. When I found out, I knew that I had to take action. These crate makers must be stopped!!
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you made the bombs?
			boolean hasResponse0 = false;
			if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_access_crate_breaker_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Crates?!!? I hate 'em! Worse thing that ever happened to the universe. And did you know that there are people mass producing them! I could not believe it. When I found out, I knew that I had to take action. These crate makers must be stopped!!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So you made the bombs?
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_cackle");

			//-- NPC: Yes, that's right. I used some crates and made them into bombs. People must learn to fear crates and thus banish them from existence!! Wait a second...you...you're an adventurer. You must think you can stop me, but it's too late! You'll never find my bombs in time!
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Actually, I already found and disarmed them.
			boolean hasResponse0 = false;
			if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_access_crate_breaker_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, that's right. I used some crates and made them into bombs. People must learn to fear crates and thus banish them from existence!! Wait a second...you...you're an adventurer. You must think you can stop me, but it's too late! You'll never find my bombs in time!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I already found and disarmed them.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			mtp_hideout_access_crate_breaker_action_attack (player, npc);

			//-- NPC: What!??! Noooooo!
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_hideout_access_crate_breaker");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

messageHandler handleEndConversation()
{
	obj_id player = params.getObjId("player");
	npcEndConversation(player);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_hideout_access_crate_breaker");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (mtp_hideout_access_crate_breaker_condition_mtpHideout01_06 (player, npc))
	{
		//-- NPC: What do you want?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Who are you?
		boolean hasResponse0 = false;
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What are your feelings about crates?
		boolean hasResponse1 = false;
		if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_18");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			utils.setScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId", 1);

			npcStartConversation (player, npc, "mtp_hideout_access_crate_breaker", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_access_crate_breaker_condition__defaultCondition (player, npc))
	{
		//-- NPC: Lousy, manipulative crates!
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_hideout_access_crate_breaker")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

	if (branchId == 1 && mtp_hideout_access_crate_breaker_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && mtp_hideout_access_crate_breaker_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && mtp_hideout_access_crate_breaker_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && mtp_hideout_access_crate_breaker_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && mtp_hideout_access_crate_breaker_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_hideout_access_crate_breaker.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

