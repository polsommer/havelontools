// ======================================================================
//
// c_rebdefector_jaek.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_rebdefector_jaek";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_rebdefector_jaek_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_rebdefector_jaek_condition_isEnemyFaction (obj_id player, obj_id npc)
{
	if (!factions.isRebel(player))
		return false;
	return true;
}

// ----------------------------------------------------------------------

boolean c_rebdefector_jaek_condition_isFriendlyFaction (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_rebdefector");
	
	boolean onQuest = questIsQuestActive(questId1, player) || questIsQuestComplete(questId1, player);
	
	if (!factions.isImperial(player)&&(!onQuest))
		return false;
	return true;
}

// ----------------------------------------------------------------------

boolean c_rebdefector_jaek_condition_isNeutralFaction (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_rebdefector");
	
	boolean  onQuest = questIsQuestActive(questId1, player) || questIsQuestComplete(questId1, player);
	
	if (factions.isImperial(player)||factions.isRebel(player)||(onQuest))
		return false;
	
	return true;
}

// ----------------------------------------------------------------------

boolean c_rebdefector_jaek_condition_questIsComplete (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_rebdefector");
	
	boolean doneQuest = questIsQuestComplete(questId1, player);
	
	return doneQuest;
}

// ----------------------------------------------------------------------

boolean c_rebdefector_jaek_condition_questIsActive (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_rebdefector");
	
	boolean onQuest = questIsQuestActive(questId1, player);
	
	return onQuest;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_rebdefector_jaek_action_givequest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_rebdefector");

	groundquests.grantQuest(questId, player, npc, true);
	
	obj_id waypoint2 = getObjIdObjVar(player, "quest.general.quest/c_rebdefector.hiding");
	if (waypoint2 != null)
    {
       destroyWaypointInDatapad(waypoint2, player);
    }
	removeObjVar(player, "quest.general.quest/c_rebdefector.hiding");
	
	obj_id waypoint3 = getObjIdObjVar(player, "quest.general.quest/c_rebdefector.ibase");
	if (waypoint3 != null)
    {
       destroyWaypointInDatapad(waypoint3, player);
    }
	removeObjVar(player, "quest.general.quest/c_rebdefector.ibase");
	

//	location loc1 = getLocation(top);
//	loc1.x = 2415;
//	loc1.y = 0;
//	loc1.z = -3948;
//	obj_id waypoint1 = createWaypointInDatapad(player, loc1);
//	setObjVar(player, "quest.general.quest/c_rebdefector.ibase", waypoint1);	
//	setWaypointName(waypoint1, "Lt. Allard Lissara");
//	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_rebdefector_jaek_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_rebdefector_jaek_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello!  I have an important mission for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_498")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Every so often, one of these rebel insurgents realizes that the Rebels are misguided.  In this case, this former rebel held some power in their poor excuse for a military.  His knowledge will help us crush the scum. 
			string_id message = new string_id (c_stringFile, "s_500");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am honored to accept this assignment.
			boolean hasResponse0 = false;
			if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't have time, actually.
			boolean hasResponse1 = false;
			if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_502");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_506");

				utils.setScriptVar (player, "conversation.c_rebdefector_jaek.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am always interested in a good mission.
	if (response == "s_510")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			c_rebdefector_jaek_action_givequest (player, npc);

			//-- NPC: Excellent!  There's a Rebel defector hiding nearby.  I'll give you the location in your datapad.  Take him to the Emperor's Retreat to the West.  When you get there, talk to Lt. Allard Lissara.
			string_id message = new string_id (c_stringFile, "s_512");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (response == "s_514")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you are in the middle of something then get to it.  Talk to me when you have time.
			string_id message = new string_id (c_stringFile, "s_516");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_rebdefector_jaek_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Every so often, one of these rebel insurgents realizes that the Rebels are misguided.  In this case, this former rebel held some power in their poor excuse for a military.  His knowledge will help us crush the scum. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am honored to accept this assignment.
	if (response == "s_502")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			c_rebdefector_jaek_action_givequest (player, npc);

			//-- NPC: Good.  The defector is holed up in a safe place.  His former compatriots may have discovered that he is joining the right side.  I will give you coordinates to his location.  Escort him to the Emperor's Retreat and speak to Lt. Allard Lissara.  He will take it from there.
			string_id message = new string_id (c_stringFile, "s_504");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time, actually.
	if (response == "s_506")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you are in the middle of something then get to it.  Talk to me when you have time.
			string_id message = new string_id (c_stringFile, "s_508");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_rebdefector_jaek_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello.  How would you like the opportunity to do something special for the Empire?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How special?
	if (response == "s_522")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			//-- NPC: Special enough that you will be gaining significant favor with the Imperial Military.
			string_id message = new string_id (c_stringFile, "s_524");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've always wanted an Imperial career.  I would be honored to help.
			boolean hasResponse0 = false;
			if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: If it's all the same to you, I'd rather not get involved.
			boolean hasResponse1 = false;
			if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_526");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_530");

				utils.setScriptVar (player, "conversation.c_rebdefector_jaek.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_rebdefector_jaek_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Special enough that you will be gaining significant favor with the Imperial Military.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've always wanted an Imperial career.  I would be honored to help.
	if (response == "s_526")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_rebdefector_jaek_action_givequest (player, npc);

			//-- NPC: Very good. I have a former rebel that wants the opportunity to make up for his rabble rousing.  The Emperor's retreat is fairly nearby and this guy needs an escort there.  When you get to the retreat, speak to Lt. Allard Lissara. 
			string_id message = new string_id (c_stringFile, "s_528");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If it's all the same to you, I'd rather not get involved.
	if (response == "s_530")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's your loss.  Not everyone is given a chance to show his loyalty to the senior officers.  If you change your mind, come back and talk to me.  Maybe I will have something for you then.
			string_id message = new string_id (c_stringFile, "s_532");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_rebdefector_jaek_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.  I have another informant that could use an experienced escort .  Would you be willing to take him to Lt. Lissara?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Certainly.  I am always willing to help.
	if (response == "s_538")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			c_rebdefector_jaek_action_givequest (player, npc);

			//-- NPC: Excellent.  Same situation as before then.  Pick up the defector west of Moenia. Take him to the Emperor's Retreat and talk to Lt. Allard Lissara. 
			string_id message = new string_id (c_stringFile, "s_540");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not this time, I'm afraid.
	if (response == "s_542")
	{
		//-- [NOTE] 
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			//-- NPC: When you wish to help the Empire, come back and talk to me.
			string_id message = new string_id (c_stringFile, "s_544");
			utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_rebdefector_jaek");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName (self, "Jaek Vercet");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Jaek Vercet");	
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_rebdefector_jaek");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition_questIsActive (player, npc))
	{
		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: Good luck with your mission.  Remember, he's hiding west of Moenia.
		string_id message = new string_id (c_stringFile, "s_534");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition_isFriendlyFaction (player, npc))
	{
		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: Hello!  I have an important mission for you.
		string_id message = new string_id (c_stringFile, "s_496");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What must I do?
		boolean hasResponse0 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I am always interested in a good mission.
		boolean hasResponse1 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse2 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_498");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_510");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_514");

			utils.setScriptVar (player, "conversation.c_rebdefector_jaek.branchId", 2);

			npcStartConversation (player, npc, "c_rebdefector_jaek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition_isEnemyFaction (player, npc))
	{
		doAnimationAction (npc, "shoo");

		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: Go away, scum.  I don't talk to your kind.  
		string_id message = new string_id (c_stringFile, "s_518");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition_isNeutralFaction (player, npc))
	{
		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: Hello.  How would you like the opportunity to do something special for the Empire?
		string_id message = new string_id (c_stringFile, "s_520");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How special?
		boolean hasResponse0 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_522");

			utils.setScriptVar (player, "conversation.c_rebdefector_jaek.branchId", 9);

			npcStartConversation (player, npc, "c_rebdefector_jaek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition_questIsComplete (player, npc))
	{
		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: Welcome back.  I have another informant that could use an experienced escort .  Would you be willing to take him to Lt. Lissara?
		string_id message = new string_id (c_stringFile, "s_536");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Certainly.  I am always willing to help.
		boolean hasResponse0 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not this time, I'm afraid.
		boolean hasResponse1 = false;
		if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_538");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_542");

			utils.setScriptVar (player, "conversation.c_rebdefector_jaek.branchId", 13);

			npcStartConversation (player, npc, "c_rebdefector_jaek", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_rebdefector_jaek_condition__defaultCondition (player, npc))
	{
		c_rebdefector_jaek_action_faceplayer (player, npc);

		//-- NPC: What a nice day today.
		string_id message = new string_id (c_stringFile, "s_546");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_rebdefector_jaek")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

	if (branchId == 2 && c_rebdefector_jaek_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_rebdefector_jaek_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_rebdefector_jaek_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && c_rebdefector_jaek_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && c_rebdefector_jaek_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_rebdefector_jaek.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

