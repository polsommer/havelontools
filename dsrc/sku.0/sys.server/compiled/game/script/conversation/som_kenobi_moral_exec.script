// ======================================================================
//
// som_kenobi_moral_exec.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_kenobi_moral_exec";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_kenobi_moral_exec_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_exec_condition_defected (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "som_kenobi_moral_choice_1", "switchedSides");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_exec_condition_haveCore (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "som_kenobi_moral_choice_1", "gotCore");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_exec_condition_done (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "som_kenobi_moral_choice_1");
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_exec_condition_levelTooLow (obj_id player, obj_id npc)
{
	int playerLevel = getLevel(player);
	if (playerLevel > 60)
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean som_kenobi_moral_exec_condition_onQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "som_kenobi_moral_choice_1");
}

// ======================================================================
// Script Actions
// ======================================================================

void som_kenobi_moral_exec_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_kenobi_moral_choice_1");
}

// ----------------------------------------------------------------------

void som_kenobi_moral_exec_action_reward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "givenCore");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_kenobi_moral_exec_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There you are! Do you have the core?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, I got it. I hope this will get a peaceful ending now.
	if (response == "s_142")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "belly_laugh");

			//-- NPC: Haha, don't you worry about that. This is most excellent. Those fools won't have any choice but to come crawling back now.
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That is...great, I guess.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course I do. They didn't know what hit them.
	if (response == "s_144")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "belly_laugh");

			//-- NPC: Haha. Excellent! I like your style, my friend. This is splendid indeed. Those fools won't have any choice but to come crawling back now.
			string_id message = new string_id (c_stringFile, "s_156");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This is all very interesting, but there was talk of a reward?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Haha, don't you worry about that. This is most excellent. Those fools won't have any choice but to come crawling back now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That is...great, I guess.
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			som_kenobi_moral_exec_action_reward (player, npc);

			//-- NPC: It sure is! Very well, friend, you deserve your reward. Not only will I pay you the sum of 20,000 credits, but you will also receive this beautiful hologram of yours truly!
			string_id message = new string_id (c_stringFile, "s_148");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would I do with that?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_150");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It sure is! Very well, friend, you deserve your reward. Not only will I pay you the sum of 20,000 credits, but you will also receive this beautiful hologram of yours truly!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would I do with that?
	if (response == "s_150")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: You should put it in your home to commemorate this fantastic day, of course! Now if you'll excuse me, I have to prepare for those maggots to come crawling back.
			string_id message = new string_id (c_stringFile, "s_152");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Haha. Excellent! I like your style, my friend. This is splendid indeed. Those fools won't have any choice but to come crawling back now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is all very interesting, but there was talk of a reward?
	if (response == "s_160")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			som_kenobi_moral_exec_action_reward (player, npc);

			//-- NPC: Of course, of course. You are in for a treat, my friend. Not only will I pay you the sum of 20,000 credits, but you will also receive this beautiful hologram of yours truly!
			string_id message = new string_id (c_stringFile, "s_162");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What the heck would I do with a hologram of you?!
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course, of course. You are in for a treat, my friend. Not only will I pay you the sum of 20,000 credits, but you will also receive this beautiful hologram of yours truly!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What the heck would I do with a hologram of you?!
	if (response == "s_165")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: Now now, settle down there, buddy. You should put it in your home to commemorate this fantastic day, of course! Now if you'll excuse me, I have to prepare for those maggots to come crawling back.
			string_id message = new string_id (c_stringFile, "s_169");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You there. The corporation could use your assistance. Are you available at the moment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure am. What did you have in mind?
	if (response == "s_111")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have a bit of a problem with some miners that are on strike. We've tried reasoning with them, but they won't budge...claiming all sorts of preposterous things. It's time to end this nonsense and I've come up with a plan.
			string_id message = new string_id (c_stringFile, "s_95");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, what have you come up with?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That depends on what you need assistance with.
	if (response == "s_112")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course it does. We have a bit of a problem with some miners that are on strike. We've tried reasoning with them, but they won't budge...claiming all sorts of preposterous things. It's time to end this nonsense and I've come up with a plan.
			string_id message = new string_id (c_stringFile, "s_63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This should be good...
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, sorry, not right now.
	if (response == "s_113")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			//-- NPC: I trust that you'll come back when you are.
			string_id message = new string_id (c_stringFile, "s_62");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_114")
	{
		doAnimationAction (player, "dismiss");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: You shouldn't be so quick to dismiss people of importance...
			string_id message = new string_id (c_stringFile, "s_61");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have a bit of a problem with some miners that are on strike. We've tried reasoning with them, but they won't budge...claiming all sorts of preposterous things. It's time to end this nonsense and I've come up with a plan.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, what have you come up with?
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: We need you to go into their facility and destroy the power generator. If you rip out the cables around the core and then steal the core itself, they won't have any way to repair it. They will have to come begging us to help them, in exchange for them going back to work, of course.
			string_id message = new string_id (c_stringFile, "s_103");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there really no other way to solve the conflict?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need you to go into their facility and destroy the power generator. If you rip out the cables around the core and then steal the core itself, they won't have any way to repair it. They will have to come begging us to help them, in exchange for them going back to work, of course.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there really no other way to solve the conflict?
	if (response == "s_116")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh believe me, friend, we've tried everything, but I don't think they are interested in a peaceful outcome at all. I believe their leader has convinced them to try and take over the corporation with violence!
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, if there's no other way, I'll help you.
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: This whole thing sounds fishy. I don't want to do it.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh believe me, friend, we've tried everything, but I don't think they are interested in a peaceful outcome at all. I believe their leader has convinced them to try and take over the corporation with violence!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, if there's no other way, I'll help you.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			som_kenobi_moral_exec_action_giveQuest (player, npc);

			//-- NPC: Excellent. Their facility is up in the northwest part of the continent. Here, let me mark it down in your datapad. Your reward will be here waiting for you when you return with the core from their power generator.
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And they will just let me walk in there?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This whole thing sounds fishy. I don't want to do it.
	if (response == "s_136")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Bah! I will find someone else then. Now move along!
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent. Their facility is up in the northwest part of the continent. Here, let me mark it down in your datapad. Your reward will be here waiting for you when you return with the core from their power generator.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And they will just let me walk in there?
	if (response == "s_132")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Yeah, they are only hostile towards us, it seems like. The leader of the strike is fairly clever, though. You may want to sweet-talk him a little to make sure he doesn't interfere.
			string_id message = new string_id (c_stringFile, "s_134");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course it does. We have a bit of a problem with some miners that are on strike. We've tried reasoning with them, but they won't budge...claiming all sorts of preposterous things. It's time to end this nonsense and I've come up with a plan.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This should be good...
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Oh, it will be. I need you to go in to their facility and destroy the power generator. If you rip out the cables around the core and then steal the core itself, they won't have any way to repair it. They will have to come begging us to help them, in exchange for them going back to work, of course.
			string_id message = new string_id (c_stringFile, "s_65");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Not bad, that might work. Where is their camp?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Might work but not something I'd do. Find someone else.
			boolean hasResponse1 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, it will be. I need you to go in to their facility and destroy the power generator. If you rip out the cables around the core and then steal the core itself, they won't have any way to repair it. They will have to come begging us to help them, in exchange for them going back to work, of course.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not bad, that might work. Where is their camp?
	if (response == "s_66")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			som_kenobi_moral_exec_action_giveQuest (player, npc);

			//-- NPC: I knew you'd be the right one for the job. The facility is up in the northwest part of the continent. Here, let me mark it down in your datapad. Your reward will be here waiting for you when you return with the core from their power generator.
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. What kind of resistance can I expect?
			boolean hasResponse0 = false;
			if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Might work but not something I'd do. Find someone else.
	if (response == "s_68")
	{
		doAnimationAction (player, "dismiss");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			//-- NPC: Fine, I will! And don't you go talking about this to anyone, if you want to ever leave this planet in one piece!
			string_id message = new string_id (c_stringFile, "s_69");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_kenobi_moral_exec_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew you'd be the right one for the job. The facility is up in the northwest part of the continent. Here, let me mark it down in your datapad. Your reward will be here waiting for you when you return with the core from their power generator.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good. What kind of resistance can I expect?
	if (response == "s_71")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: They are just miners. Shouldn't pose a problem for you at all. The leader of the strike is fairly clever though. You may want to sweet talk him a little to make sure he doesn't interfere.
			string_id message = new string_id (c_stringFile, "s_91");
			utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_kenobi_moral_exec");

	setCondition (self, CONDITION_INTERESTING);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_INTERESTING);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_kenobi_moral_exec");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition_done (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: I don't believe we have anything more to say to each other now, do we?
		string_id message = new string_id (c_stringFile, "s_171");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition_haveCore (player, npc))
	{
		doAnimationAction (player, "greet");

		//-- NPC: There you are! Do you have the core?
		string_id message = new string_id (c_stringFile, "s_140");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah, I got it. I hope this will get a peaceful ending now.
		boolean hasResponse0 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Of course I do. They didn't know what hit them.
		boolean hasResponse1 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_142");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_144");

			utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 2);

			npcStartConversation (player, npc, "som_kenobi_moral_exec", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition_defected (player, npc))
	{
		doAnimationAction (npc, "stamp_feet");

		//-- NPC: You have ruined me! I thought I could trust you, you rotting mynock!
		string_id message = new string_id (c_stringFile, "s_45");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition_onQuest (player, npc))
	{
		doAnimationAction (npc, "point_accusingly");

		//-- NPC: What are you doing back here already? Get out there and finish the job!
		string_id message = new string_id (c_stringFile, "s_139");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition_levelTooLow (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		doAnimationAction (player, "greet");

		//-- NPC: You there. The corporation could use your assistance. Are you available at the moment?
		string_id message = new string_id (c_stringFile, "s_110");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure am. What did you have in mind?
		boolean hasResponse0 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: That depends on what you need assistance with.
		boolean hasResponse1 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: No, sorry, not right now.
		boolean hasResponse2 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No.
		boolean hasResponse3 = false;
		if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_111");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_112");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_113");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_114");

			utils.setScriptVar (player, "conversation.som_kenobi_moral_exec.branchId", 11);

			npcStartConversation (player, npc, "som_kenobi_moral_exec", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_kenobi_moral_exec_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: I'm busy and you're too wet behind the ears. Come back when you've gained some experience and I may have a job for you.
		string_id message = new string_id (c_stringFile, "s_47");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_kenobi_moral_exec")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

	if (branchId == 2 && som_kenobi_moral_exec_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && som_kenobi_moral_exec_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && som_kenobi_moral_exec_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_kenobi_moral_exec_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && som_kenobi_moral_exec_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && som_kenobi_moral_exec_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_kenobi_moral_exec_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && som_kenobi_moral_exec_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && som_kenobi_moral_exec_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && som_kenobi_moral_exec_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && som_kenobi_moral_exec_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && som_kenobi_moral_exec_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && som_kenobi_moral_exec_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_kenobi_moral_exec.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

