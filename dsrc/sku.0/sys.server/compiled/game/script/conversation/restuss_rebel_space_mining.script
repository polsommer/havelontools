// ======================================================================
//
// restuss_rebel_space_mining.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.group;
include library.resource;
include library.restuss_event;
include library.space_quest;
include library.trial;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_rebel_space_mining";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_rebel_space_mining_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_completedSpaceMine1 (obj_id player, obj_id npc)
{
    obj_id[] boxes = utils.getAllItemsPlayerHasByTemplate(player, "object/resource_container/space/metal.iff");
	LOG("RESTUSS_SPACE_MINING", "Box obj_id is " + boxes);
    
    if(boxes == null || boxes.length < 1)
    {
    	LOG("RESTUSS_SPACE_MINING", "Box is null");
		return false;
	}

    obj_id currentBox = null;
    obj_id currentBoxResource = null;
    string currentBoxResourceName = "";
    int currentBoxCount = 0;

    for(int i = 0 ; i < boxes.length; i++)
    {                                   
		currentBox = boxes[i];
		currentBoxResource = getResourceContainerResourceType(currentBox); 
		LOG("RESTUSS_SPACE_MINING", "Resource Type is " + currentBoxResource);              
		currentBoxResourceName = getResourceName(currentBoxResource);
		LOG("RESTUSS_SPACE_MINING", "Resource Name is " + currentBoxResourceName);
		
		if(currentBoxResourceName.indexOf("space_metal_obsidian") > -1 || currentBoxResourceName.indexOf("Obsidian Asteroid") > -1)
        {
			currentBoxCount = getResourceContainerQuantity(currentBox);
			LOG("RESTUSS_SPACE_MINING", "Current box count is " + currentBoxCount);
			
			if(currentBoxCount >= 500)
			{
				if(groundquests.isTaskActive(player, "restuss_rebel_space_mining_1", "returnRomer"))
                {
                	LOG("RESTUSS_SPACE_MINING", "Everything worked correctly");
					return true;
				}
				LOG("RESTUSS_SPACE_MINING", "Quest task is not active");
            }
            LOG("RESTUSS_SPACE_MINING", "Current box count < 500");
		}
		LOG("RESTUSS_SPACE_MINING", "Resource Name !end with space_metal_obsidian");                       
    }
    LOG("RESTUSS_SPACE_MINING", "I fell all the way through");
	return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_spaceMineActive1 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_rebel_space_mining_1");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_completedSpaceMine2 (obj_id player, obj_id npc)
{
    obj_id[] boxes = utils.getAllItemsPlayerHasByTemplate(player, "object/resource_container/space/gas.iff");

    if(boxes == null || boxes.length < 1)
    {
		return false;
	}

    obj_id currentBox = null;
    obj_id currentBoxResource = null;
    string currentBoxResourceName = "";
    int currentBoxCount = 0;

    for(int i = 0 ; i < boxes.length; i++)
    {                                   
		currentBox = boxes[i];
		currentBoxResource = getResourceContainerResourceType(currentBox);               
		currentBoxResourceName = getResourceName(currentBoxResource);
		LOG("RESTUSS_SPACE_MINING", "Resource Name is " + currentBoxResourceName);
		
		if(currentBoxResourceName.indexOf("space_gas_organometallic") > -1 || currentBoxResourceName.indexOf("Organometallic Asteroid") > -1 )
        {
			currentBoxCount = getResourceContainerQuantity(currentBox);
			
			if(currentBoxCount >= 250)
			{
				if(groundquests.isTaskActive(player, "restuss_rebel_space_mining_2", "returnRomer2"))
                {
					return true;
				}
            }
		}                       
    }
	return false;
} 

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_spaceMineActive2 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_rebel_space_mining_2");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_inPhase2 (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isRebel(player)&&
		(restuss_event.getPhase(object) == 2))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_inPhase1 (obj_id player, obj_id npc)
{
	if (factions.isRebel(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_enoughOre (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isRebel(player)&&
		(restuss_event.getPhase(object) == 3))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_mining_condition_isImperialPlayer (obj_id player, obj_id npc)
{
	return factions.isImperial(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_rebel_space_mining_action_giveSpaceMine1 (obj_id player, obj_id npc)
{
	obj_id mobj = space_quest._getQuest(player, "space_mining_destroy", "restuss_rebel_mining_1");
	space_quest.setSilentQuestAborted(player, mobj);

	groundquests.clearQuest (player, "restuss_rebel_space_mining_1");
	groundquests.grantQuest (player, "restuss_rebel_space_mining_1");
}

// ----------------------------------------------------------------------

void restuss_rebel_space_mining_action_signalDone (obj_id player, obj_id npc)
{
    obj_id[] boxes = utils.getAllItemsPlayerHasByTemplate(player, "object/resource_container/space/metal.iff");
    obj_id currentBox = null;
    obj_id currentBoxResource = null;
    string currentBoxResourceName = "";
    int currentBoxCount = 0;

    for(int i = 0 ; i < boxes.length; i++)
    {                                   
		currentBox = boxes[i];
		currentBoxResource = getResourceContainerResourceType(currentBox);
		currentBoxResourceName = getResourceName(currentBoxResource);
		
		if(currentBoxResourceName.indexOf("space_metal_obsidian") > -1 || currentBoxResourceName.indexOf("Obsidian Asteroid") > -1)
        {
			currentBoxCount = getResourceContainerQuantity(currentBox);
			
			if(currentBoxCount >= 500)
			{
				removeResourceFromContainer (currentBox, currentBoxResource, 500);
				break;
            }
		}                       
    }
	groundquests.sendSignal(player, "returnedRomer");
	
	if(group.isGrouped(player))
	{
		resizeable obj_id[] members = group.getPCMembersInRange(player, 35f);
		if ( members != null && members.length > 0 )
		{
			int numInGroup = members.length;
			for (int i = 0; i < numInGroup; i++)
			{
				obj_id thisMember = members[i];
				groundquests.sendSignal(thisMember, "returnedRomer");
			}
		}
	}

	restuss_event.incrimentCompletedQuestCount(npc, "restuss_rebel_space_mining_1");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 0)
	{
		float ratio = restuss_event.getCompletedQuestRatio(npc, "restuss_rebel_space_mining_1");
		if (ratio > .5)
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
	if (phase == 1)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_rebel_space_mining_1"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_rebel_space_mining_action_giveSpaceMine2 (obj_id player, obj_id npc)
{
	obj_id mobj = space_quest._getQuest(player, "space_mining_destroy", "restuss_rebel_mining_2");
	space_quest.setSilentQuestAborted(player, mobj);
	
	groundquests.clearQuest (player, "restuss_rebel_space_mining_2");
	groundquests.grantQuest (player, "restuss_rebel_space_mining_2");
}

// ----------------------------------------------------------------------

void restuss_rebel_space_mining_action_signalDone2 (obj_id player, obj_id npc)
{
    obj_id[] boxes = utils.getAllItemsPlayerHasByTemplate(player, "object/resource_container/space/gas.iff");
    obj_id currentBox = null;
    obj_id currentBoxResource = null;
    string currentBoxResourceName = "";
    int currentBoxCount = 0;

    for(int i = 0 ; i < boxes.length; i++)
    {                                   
		currentBox = boxes[i];
		currentBoxResource = getResourceContainerResourceType(currentBox);
		currentBoxResourceName = getResourceName(currentBoxResource);
		
		if(currentBoxResourceName.indexOf("space_gas_organometallic") > -1 || currentBoxResourceName.indexOf("Organometallic Asteroid") > -1)
        {
			currentBoxCount = getResourceContainerQuantity(currentBox);
			
			if(currentBoxCount >= 250)
			{
				removeResourceFromContainer (currentBox, currentBoxResource, 250);
				break;
            }
		}                       
    }
	groundquests.sendSignal(player, "returnedRomer2");
	
	if(group.isGrouped(player))
	{
		resizeable obj_id[] members = group.getPCMembersInRange(player, 35f);
		if ( members != null && members.length > 0 )
		{
			int numInGroup = members.length;
			for (int i = 0; i < numInGroup; i++)
			{
				obj_id thisMember = members[i];
				groundquests.sendSignal(thisMember, "returnedRomer2");
			}
		}
	}

	restuss_event.incrimentCompletedQuestCount(npc, "restuss_rebel_space_mining_2");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 2)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_rebel_space_mining_2"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_rebel_space_mining_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_rebel_space_mining_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, soldier! The base is completed, thanks to the hard work of all space miners. We are under constant attack though and could still use more organometallic gas from Deep Space. You willing to assist?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir. I can do that.
	if (response == "s_38")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			restuss_rebel_space_mining_action_giveSpaceMine2 (player, npc);

			//-- NPC: Excellent, soldier! Return to me when you have collected 250 units of organometallic gas. Good luck!
			string_id message = new string_id (c_stringFile, "s_40");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I wish I could help but I'm not a space miner.
	if (response == "s_42")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: Very well. Check with one of the other officers here and see if there's something else you can assist with.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_mining_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, soldier! If you have any skill in space mining, I could use your assistance. We need to quickly finish the base for the inevitable conflict here and need raw materials. Specifically we need organometallic gas from Deep Space. That something you can help with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir. I can do that.
	if (response == "s_20")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			restuss_rebel_space_mining_action_giveSpaceMine2 (player, npc);

			//-- NPC: Excellent, soldier! Return to me when you have collected 250 units of organometallic gas. Good luck!
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I wish I could help but I'm not a space miner.
	if (response == "s_24")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: Very well. Check with one of the other officers here and see if there's something else you can assist with.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_mining_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, soldier! If you have any skill in space mining, I could use your assistance. We need to quickly finish the base for the inevitable conflict here and need raw materials. Specifically we need obsidian ore from the Kessel system. That something you can help with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir. I can do that.
	if (response == "s_29")
	{
		doAnimationAction (player, "nod");

		restuss_rebel_space_mining_action_giveSpaceMine1 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: Excellent, soldier! Return to me when you have collected 500 units of obsidian ore. Good luck!
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I wish I could help but I'm not a space miner.
	if (response == "s_33")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: Very well. Check with one of the other officers here and see if there's something else you can assist with.
			string_id message = new string_id (c_stringFile, "s_35");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_rebel_space_mining");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_rebel_space_mining");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_isImperialPlayer (player, npc))
	{
		restuss_rebel_space_mining_action_eject (player, npc);

		//-- NPC: We need nothing from you Imperial.
		string_id message = new string_id (c_stringFile, "s_41");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_completedSpaceMine2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_space_mining_action_signalDone2 (player, npc);

		//-- NPC: You have returned with the gas, soldier! Most excellent, these will be put to good use immediately. We need more though so if you're willing to assist again, please let me know.
		string_id message = new string_id (c_stringFile, "s_13");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_completedSpaceMine1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_space_mining_action_signalDone (player, npc);

		//-- NPC: You have returned with the ore, soldier! Most excellent, these will be put to good use immediately. We still need more though so if you're willing to assist again, please let me know.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_spaceMineActive2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: You still need to collect more organometallic gas in Deep Space, soldier. Please hurry, we desperately need the resources.
		string_id message = new string_id (c_stringFile, "s_11");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_spaceMineActive1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: You still need to collect more obsidian ore in the Kessel system, soldier. Please hurry, we desperately need the resources.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_enoughOre (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Greetings, soldier! The base is completed, thanks to the hard work of all space miners. We are under constant attack though and could still use more organometallic gas from Deep Space. You willing to assist?
		string_id message = new string_id (c_stringFile, "s_36");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, sir. I can do that.
		boolean hasResponse0 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I wish I could help but I'm not a space miner.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_mining.branchId", 6);

			npcStartConversation (player, npc, "restuss_rebel_space_mining", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_inPhase2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Greetings, soldier! If you have any skill in space mining, I could use your assistance. We need to quickly finish the base for the inevitable conflict here and need raw materials. Specifically we need organometallic gas from Deep Space. That something you can help with?
		string_id message = new string_id (c_stringFile, "s_17");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, sir. I can do that.
		boolean hasResponse0 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I wish I could help but I'm not a space miner.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_mining.branchId", 9);

			npcStartConversation (player, npc, "restuss_rebel_space_mining", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition_inPhase1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Greetings, soldier! If you have any skill in space mining, I could use your assistance. We need to quickly finish the base for the inevitable conflict here and need raw materials. Specifically we need obsidian ore from the Kessel system. That something you can help with?
		string_id message = new string_id (c_stringFile, "s_27");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, sir. I can do that.
		boolean hasResponse0 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I wish I could help but I'm not a space miner.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_mining.branchId", 12);

			npcStartConversation (player, npc, "restuss_rebel_space_mining", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_mining_condition__defaultCondition (player, npc))
	{
		//-- NPC: You should leave Restuss immediately. It's not safe for a civilian.
		string_id message = new string_id (c_stringFile, "s_39");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_rebel_space_mining")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

	if (branchId == 6 && restuss_rebel_space_mining_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && restuss_rebel_space_mining_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && restuss_rebel_space_mining_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_rebel_space_mining.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

