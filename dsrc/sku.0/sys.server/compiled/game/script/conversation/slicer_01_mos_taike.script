// ======================================================================
//
// slicer_01_mos_taike.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.groundquests;
include library.prose;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/slicer_01_mos_taike";

// ======================================================================
// Script Conditions
// ======================================================================

boolean slicer_01_mos_taike_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_shouldBeOnLok (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "quest_06_conspire_cale")
	&& groundquests.isTaskActive(player, "quest_06_conspire_cale", "TravelToLokOutpost");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_hasInitialQuest (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "quest_04_meet_cale_herron"); 
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_shouldBeLadyValerian (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isTaskActive(player, "quest_05_frame_valarians", "gotoLuckyDespot"); 
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_hasCompletedInitQuest (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isTaskActive(player, "quest_04_meet_cale_herron","speakCaleCompleteQuest");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_hasCompletedValarian (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (slicer_01_mos_taike_condition_failedToDefeatAssassin(player, npc) 
	|| slicer_01_mos_taike_condition_successDefeatAssassin(player, npc)) 
	&& !groundquests.isQuestActiveOrComplete(player, "quest_07_descend_into_labratory"); 
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_failedToDefeatAssassin (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "quest_05_frame_valarians_failed_assassin")
	&& groundquests.isTaskActive(player, "quest_06_conspire_cale", "visitCaleHerron");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_successDefeatAssassin (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "quest_05_frame_valarians_success_assassin")
	&& groundquests.isTaskActive(player, "quest_06_conspire_cale", "visitCaleHerron");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_hasCompletedDathomir (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isTaskActive(player, "quest_08_dathomir_outpost_final", "finishUpProlog")
	|| groundquests.isTaskActive(player, "quest_08_dathomir_outpost", "finishUpProlog");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_isRebelCheck (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (factions.isRebel(player));
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_isNeutralCheck (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!factions.isImperial(player) && !factions.isRebel(player));
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_isImperialCheck (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (factions.isImperial(player));
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_isRebelOrNeutral (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return slicer_01_mos_taike_condition_isNeutralCheck(player, npc) || slicer_01_mos_taike_condition_isRebelCheck(player, npc);
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_hasCompletedProlog (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest_08_dathomir_outpost_final");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_canceledQuest06 (obj_id player, obj_id npc)
{
	return !groundquests.isQuestActiveOrComplete(player, "quest_06_conspire_cale")
	&& (groundquests.hasCompletedQuest(player, "quest_05_frame_valarians_failed_assassin")
	|| groundquests.hasCompletedQuest(player, "quest_05_frame_valarians_success_assassin"));
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_isCheckingWithBib (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isTaskActive(player, "quest_04_meet_cale_herron", "invisTimer")
	|| groundquests.isTaskActive(player, "quest_04_meet_cale_herron", "bibCommCheckin");
}

// ----------------------------------------------------------------------

boolean slicer_01_mos_taike_condition_completedQuest04Deleted05 (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "quest_04_meet_cale_herron")
	&& !groundquests.isQuestActiveOrComplete(player, "quest_05_frame_valarians") ;

}

// ======================================================================
// Script Actions
// ======================================================================

void slicer_01_mos_taike_action_sendSignalSpokeCale (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "playerSpokeToCaleHerron"); 
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_startCommunication (obj_id player, obj_id npc)
{
	prose_package pp = new prose_package();
	prose.setStringId(pp, new string_id("theme_park/outbreak/outbreak", "derg_pratis"));
	commPlayers(player, "object/mobile/dressed_biologist_04.iff", "", 10f, player, pp);
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_grantFrameValarainQuest (obj_id player, obj_id npc)
{ 
	groundquests.grantQuest(player, "quest_05_frame_valarians"); 
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_sendSignalGoLok (obj_id player, obj_id npc)
{
		groundquests.sendSignal(player, "metWithCaleHerron"); 
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_finishPrologGetRewards (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "PlayerFinishedUp");
	slicer_01_mos_taike_action_grantOutbreakQuest(player,npc);
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_grantQuest06 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest_06_conspire_cale"); 
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_sendSignalCompleteQuest04 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokenCale");
}

// ----------------------------------------------------------------------

void slicer_01_mos_taike_action_grantOutbreakQuest (obj_id player, obj_id npc)
{
	if(factions.isRebel(player))
	{
		groundquests.grantQuest(player, "outbreak_live_conversion_rebel");
		return;
	}
	else if(factions.isImperial(player))
	{
		groundquests.grantQuest(player, "outbreak_live_conversion_imperial");
		return;		
	}

	groundquests.grantQuest(player, "outbreak_live_conversion_neutral");
	return;

}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int slicer_01_mos_taike_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Look. I don't know about you, but I'm done 'doing the right thing' for now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why?
	if (response == "s_129")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: I sent you to Dathomir because I knew the missing biologists were probably there. Turns out they had been secretly employed by the Empire to experiment with this super soldier virus. Now there has been an accident and it sounds like people are dying. Why would you want to have anything more to do with this?
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're right. I've had enough with the planet hopping.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_135");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I sent you to Dathomir because I knew the missing biologists were probably there. Turns out they had been secretly employed by the Empire to experiment with this super soldier virus. Now there has been an accident and it sounds like people are dying. Why would you want to have anything more to do with this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're right. I've had enough with the planet hopping.
	if (response == "s_135")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition_isRebelOrNeutral (player, npc))
		{
			//-- NPC: I'm glad you agree, %TU. I've taken the liberty to notify the Alliance. Yes, I know you have dealings with them. Don't worry; your secret is safe with me. Maybe the Alliance can help, maybe not, I don't care. What scares me is that I...we, are somewhat connected to this fiasco. Keep eyes in the back of your head, %TU. I'm not ready to die for something silly like this.
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I guess you can keep those credits you promised. I don't want them.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_141");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 4);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm glad you agree, %TU. You know as much as I do that poking your nose into Imperial business can lead to problems. What scares me is that I...we, are somewhat connected to this fiasco. Keep eyes in the back of your head, %TU. I'm not ready to die for something silly like this.
			string_id message = new string_id (c_stringFile, "s_140");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I guess you can keep those credits you promised. I don't want them.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_143");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 6);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm glad you agree, %TU. I've taken the liberty to notify the Alliance. Yes, I know you have dealings with them. Don't worry; your secret is safe with me. Maybe the Alliance can help, maybe not, I don't care. What scares me is that I...we, are somewhat connected to this fiasco. Keep eyes in the back of your head, %TU. I'm not ready to die for something silly like this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess you can keep those credits you promised. I don't want them.
	if (response == "s_141")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_finishPrologGetRewards (player, npc);

			//-- NPC: I intended on paying you regardless. It's been fun. But do me a favor...take this Science Datapad and bury it somewhere. I don't want it and  I've already made a copy of everything anyway.  We'll be in contact, %TU, see you around.
			string_id message = new string_id (c_stringFile, "s_142");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm glad you agree, %TU. You know as much as I do that poking your nose into Imperial business can lead to problems. What scares me is that I...we, are somewhat connected to this fiasco. Keep eyes in the back of your head, %TU. I'm not ready to die for something silly like this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I guess you can keep those credits you promised. I don't want them.
	if (response == "s_143")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_finishPrologGetRewards (player, npc);

			//-- NPC: I intended on paying you regardless. It's been fun. But do me a favor...take this Science Datapad and bury it somewhere. I don't want it and  I've already made a copy of everything anyway.  We'll be in contact, %TU, see you around.
			string_id message = new string_id (c_stringFile, "s_142");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're back!  I heard about the Lucky Despot.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You mean your great idea that cost me a trip to the cloning facility?
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Don't worry about that. We have our own problems.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You mean your problem. I'm getting out of this while I'm ahead.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You mean your great idea that almost got me killed?
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: You won didn't you?  %TU, you're my kind of problem solver!  Anyway, that is all behind us now. We got our own problems.
			string_id message = new string_id (c_stringFile, "s_73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You mean your problem. I'm getting out of this while I'm ahead.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't worry about that. We have our own problems.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You mean your problem. I'm getting out of this while I'm ahead.
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "apologize");

			//-- NPC: Wait! You can't. I can't do this alone. The HoloNet has reported the disappearance of yet another biologist. We need to stop this.
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Or die trying?  No thanks.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You won didn't you?  %TU, you're my kind of problem solver!  Anyway, that is all behind us now. We got our own problems.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You mean your problem. I'm getting out of this while I'm ahead.
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "apologize");

			//-- NPC: Wait! You can't. I can't do this alone. The HoloNet has reported the disappearance of yet another biologist. We need to stop this.
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Or die trying?  No thanks.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wait! You can't. I can't do this alone. The HoloNet has reported the disappearance of yet another biologist. We need to stop this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Or die trying?  No thanks.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: There's probably a lot of credits involved.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How many credits?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not interested.
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There's probably a lot of credits involved.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many credits?
	if (response == "s_79")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: 2,000?
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What?  Don't insult me.
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not interested.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you stop the killer, you'll be a hero.
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Right. Being a hero gets you killed. No one that seeks justice survives long.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: 2,000?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay.
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_sendSignalGoLok (player, npc);

			//-- NPC: Great. Meet me on Lok. I happen to have a place not too far from this secret laboratory. Should be great for a staging area.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?  Don't insult me.
	if (response == "s_83")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay 5,000 credits.That is my entire savings. A small price to pay for your help.
			string_id message = new string_id (c_stringFile, "s_85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Deal.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay 5,000 credits.That is my entire savings. A small price to pay for your help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Deal.
	if (response == "s_91")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_sendSignalGoLok (player, npc);

			//-- NPC: Great. Meet me on Lok. I happen to have a place not too far from this secret laboratory. Should be great for a staging area.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you stop the killer, you'll be a hero.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Right. Being a hero gets you killed. No one that seeks justice survives long.
	if (response == "s_87")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition_isRebelOrNeutral (player, npc))
		{
			//-- NPC: Uh...have you ever heard the one about the Tatooine moisture farmer that blew up that big Imperial Space Station? What was it called again?
			string_id message = new string_id (c_stringFile, "s_88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You mean the Death Star?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How many credits did you say again?
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition_isImperialCheck (player, npc))
		{
			//-- NPC: Darth Vader took on Rebel Pilots that destroyed the Death Star.  He survived.
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh, I guess.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How many credits did you say again?
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_139");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh...have you ever heard the one about the Tatooine moisture farmer that blew up that big Imperial Space Station? What was it called again?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You mean the Death Star?
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah, the Death Star. You know what that guy, Skywalker said before he attacked the Death Star? 
			string_id message = new string_id (c_stringFile, "s_93");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'I've lost R2'?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_94");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many credits did you say again?
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: 2,000?
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What?  Don't insult me.
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah, the Death Star. You know what that guy, Skywalker said before he attacked the Death Star? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'I've lost R2'?
	if (response == "s_94")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: No...well maybe. But anyway, what I heard he said was 'heroes are made when they answer the call.' All I'm saying is you need to answer the call.
			string_id message = new string_id (c_stringFile, "s_95");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm pretty sure he didn't say that.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No...well maybe. But anyway, what I heard he said was 'heroes are made when they answer the call.' All I'm saying is you need to answer the call.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm pretty sure he didn't say that.
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: I knew you'd be the hero.
			string_id message = new string_id (c_stringFile, "s_97");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But...wait, what?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew you'd be the hero.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But...wait, what?
	if (response == "s_98")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_sendSignalGoLok (player, npc);

			//-- NPC: Great. Meet me on Lok. I happen to have a place not too far from this secret laboratory. Should be great for a staging area.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Darth Vader took on Rebel Pilots that destroyed the Death Star.  He survived.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh, I guess.
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_sendSignalGoLok (player, npc);

			//-- NPC: Great. Meet me on Lok. I happen to have a place not too far from this secret laboratory. Should be great for a staging area.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many credits did you say again?
	if (response == "s_139")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: 2,000?
			string_id message = new string_id (c_stringFile, "s_81");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What?  Don't insult me.
			boolean hasResponse1 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It looks like Derg encrypted a lengthy message on this data disk. So far I have found what looks like important coordinates to a secret laboratory on Lok. Apparently he was working on some sort of illicit project. Feel like going on a trip to Lok?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested. I've got my own problems.
	if (response == "s_55")
	{
		doAnimationAction (player, "wave_on_dismissing");

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Wait a second! Weren't you the person that mentioned something about doing the 'right thing?' Don't think that if I am captured with this apparently important data disk that I won't say you helped. Wait, what was your name again?
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I need to find the killer, not a lab on Lok.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wait a second! Weren't you the person that mentioned something about doing the 'right thing?' Don't think that if I am captured with this apparently important data disk that I won't say you helped. Wait, what was your name again?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to find the killer, not a lab on Lok.
	if (response == "s_57")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Why are you so interested in the killer?
			string_id message = new string_id (c_stringFile, "s_170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The killer murdered someone important to Jabba the Hutt.  Derg's lab assistant.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why are you so interested in the killer?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The killer murdered someone important to Jabba the Hutt.  Derg's lab assistant.
	if (response == "s_171")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "poke");

			//-- NPC: Jabba? Oh I see. So your doing some bounty hunting for Jabba, except now things are a little more complicated.
			string_id message = new string_id (c_stringFile, "s_175");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.  Complicated is a good description.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Jabba? Oh I see. So your doing some bounty hunting for Jabba, except now things are a little more complicated.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  Complicated is a good description.
	if (response == "s_179")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Why is Jabba so interested in a lab assistant?
			string_id message = new string_id (c_stringFile, "s_183");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Some super soldier drug was involved. 
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_187");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why is Jabba so interested in a lab assistant?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Some super soldier drug was involved. 
	if (response == "s_187")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah! Perhaps the biologist had created a new drug and someone more slimey than Jabba got it first.
			string_id message = new string_id (c_stringFile, "s_191");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Seems sloppy to leave behind the data disk.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_194");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah! Perhaps the biologist had created a new drug and someone more slimey than Jabba got it first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Seems sloppy to leave behind the data disk.
	if (response == "s_194")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, Mos Eisley isn't home to some of the sharpest tools in the shed, but I have to agree that not everything makes sense.
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Which brings me back to my problem with Jabba.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, Mos Eisley isn't home to some of the sharpest tools in the shed, but I have to agree that not everything makes sense.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Which brings me back to my problem with Jabba.
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: If I agree to help you with your situation, will you help me look into this ordeal?
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How can you help with Jabba?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_202");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If I agree to help you with your situation, will you help me look into this ordeal?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How can you help with Jabba?
	if (response == "s_202")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: What if I told you that Jabba and Lady Valarian are enemies and framing Lady Valarian would be easier for Jabba to accept than the truth? 
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_206");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What if I told you that Jabba and Lady Valarian are enemies and framing Lady Valarian would be easier for Jabba to accept than the truth? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (response == "s_206")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Derg's lab was in Mos Eisley. Guess where Lady Valarian's Lucky Despot is located?
			string_id message = new string_id (c_stringFile, "s_208");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Mos Eisley.  Wait...this seems wrong.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_210");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Derg's lab was in Mos Eisley. Guess where Lady Valarian's Lucky Despot is located?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Mos Eisley.  Wait...this seems wrong.
	if (response == "s_210")
	{
		doAnimationAction (player, "shake_head_disgust");

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slit_throat");

			//-- NPC: It is probably true, right?  And it beats waiting for Jabba to send someone after you for failing to  deliver.
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh...I'm listening.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_214");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is probably true, right?  And it beats waiting for Jabba to send someone after you for failing to  deliver.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh...I'm listening.
	if (response == "s_214")
	{
		doAnimationAction (player, "nervous");

		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			slicer_01_mos_taike_action_sendSignalCompleteQuest04 (player, npc);

			//-- NPC: Call Jabba or whoever from the Lucky Despot and tell them you've tracked the killer there.They'll connect the dots. Then walk away and come back here so we can find out what is really going on. That is all you have to do.
			string_id message = new string_id (c_stringFile, "s_216");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sorry, not interested. Please leave.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have a data disk from Derg Prantis. 
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Derg? You mean the biologist. That's interesting. I was just thinking about him after reading the HoloNet. What is Derg up to these days?
			string_id message = new string_id (c_stringFile, "s_111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well sir, he is dead. I suspect foul play and I am looking for information.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_113");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Derg? You mean the biologist. That's interesting. I was just thinking about him after reading the HoloNet. What is Derg up to these days?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well sir, he is dead. I suspect foul play and I am looking for information.
	if (response == "s_113")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "squirm");

			//-- NPC: Wait...did you say Derg is dead?  Are you sure?
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this data disk on his body.  It has a message.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_117");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wait...did you say Derg is dead?  Are you sure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this data disk on his body.  It has a message.
	if (response == "s_117")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Let me see the message.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see the message.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright
	if (response == "s_121")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			slicer_01_mos_taike_action_startCommunication (player, npc);

			//-- NPC: ....
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry to be the bearer of such bad news.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: ....

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry to be the bearer of such bad news.
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: You don't know the half of it. This isn't the only biologist that has met with an unfortunate end. I just read some HoloNet news about a few high profile scientists that have turned up 'missing'.
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So, what are you saying?
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_159");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You don't know the half of it. This isn't the only biologist that has met with an unfortunate end. I just read some HoloNet news about a few high profile scientists that have turned up 'missing'.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So, what are you saying?
	if (response == "s_159")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			//-- NPC: Either there is a psychopath that really hates biologists, or something more sinister going on. 
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well maybe the data disk Derg wanted me to bring you will help figure this all out.  
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Either there is a psychopath that really hates biologists, or something more sinister going on. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well maybe the data disk Derg wanted me to bring you will help figure this all out.  
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scared");

			//-- NPC: Right...right. Uh...I don't know if I should be getting involved. What if I am targeted for assassination or something?
			string_id message = new string_id (c_stringFile, "s_165");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I think Derg asked this disk go to you because he knew you'd do the right thing.
			boolean hasResponse0 = false;
			if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_167");

				utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 45);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int slicer_01_mos_taike_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right...right. Uh...I don't know if I should be getting involved. What if I am targeted for assassination or something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think Derg asked this disk go to you because he knew you'd do the right thing.
	if (response == "s_167")
	{
		//-- [NOTE] 
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "handshake_tandem");

			doAnimationAction (player, "handshake_tandem");

			slicer_01_mos_taike_action_sendSignalSpokeCale (player, npc);

			//-- NPC: The right thing? Ha. I really doubt that. I'm a slicer, friend. We specialize in doing the wrong thing.  Pffft....give me the disk. Give me a moment to examine it and we'll talk.
			string_id message = new string_id (c_stringFile, "s_169");
			utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.slicer_01_mos_taike");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.slicer_01_mos_taike");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_hasCompletedProlog (player, npc))
	{
		//-- NPC: Well, looks like we are done for now. I'll be in touch.
		string_id message = new string_id (c_stringFile, "s_134");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_hasCompletedDathomir (player, npc))
	{
		//-- NPC: Look. I don't know about you, but I'm done 'doing the right thing' for now.
		string_id message = new string_id (c_stringFile, "s_127");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Why?
		boolean hasResponse0 = false;
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_129");

			utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 2);

			npcStartConversation (player, npc, "slicer_01_mos_taike", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_canceledQuest06 (player, npc))
	{
		slicer_01_mos_taike_action_grantQuest06 (player, npc);

		//-- NPC: Meet me on Lok. We'll have more to go on there.
		string_id message = new string_id (c_stringFile, "s_146");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_shouldBeOnLok (player, npc))
	{
		//-- NPC: I was just about to leave. Do you need the coordinates to Lok again?
		string_id message = new string_id (c_stringFile, "s_30");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_hasCompletedValarian (player, npc))
	{
		//-- NPC: You're back!  I heard about the Lucky Despot.
		string_id message = new string_id (c_stringFile, "s_70");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You mean your great idea that cost me a trip to the cloning facility?
		boolean hasResponse0 = false;
		if (slicer_01_mos_taike_condition_failedToDefeatAssassin (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: You mean your great idea that almost got me killed?
		boolean hasResponse1 = false;
		if (slicer_01_mos_taike_condition_successDefeatAssassin (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_72");

			utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 9);

			npcStartConversation (player, npc, "slicer_01_mos_taike", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_shouldBeLadyValerian (player, npc))
	{
		//-- NPC: I thought you were going to the Lucky Despot.  Come back when you are done.  Good luck!
		string_id message = new string_id (c_stringFile, "s_48");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_completedQuest04Deleted05 (player, npc))
	{
		slicer_01_mos_taike_action_grantFrameValarainQuest (player, npc);

		//-- NPC: Well...looks like something got mixed up. You are supposed to go to the Lucky Despot. We'll be in touch.
		string_id message = new string_id (c_stringFile, "s_149");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_hasCompletedInitQuest (player, npc))
	{
		//-- NPC: It looks like Derg encrypted a lengthy message on this data disk. So far I have found what looks like important coordinates to a secret laboratory on Lok. Apparently he was working on some sort of illicit project. Feel like going on a trip to Lok?
		string_id message = new string_id (c_stringFile, "s_54");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm not interested. I've got my own problems.
		boolean hasResponse0 = false;
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_55");

			utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 25);

			npcStartConversation (player, npc, "slicer_01_mos_taike", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_isCheckingWithBib (player, npc))
	{
		//-- NPC: Give me a few more moments. I'm not THAT quick!
		string_id message = new string_id (c_stringFile, "s_147");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition_hasInitialQuest (player, npc))
	{
		doAnimationAction (npc, "wave_finger_warning");

		//-- NPC: Sorry, not interested. Please leave.
		string_id message = new string_id (c_stringFile, "s_107");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have a data disk from Derg Prantis. 
		boolean hasResponse0 = false;
		if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_109");

			utils.setScriptVar (player, "conversation.slicer_01_mos_taike.branchId", 38);

			npcStartConversation (player, npc, "slicer_01_mos_taike", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (slicer_01_mos_taike_condition__defaultCondition (player, npc))
	{
		//-- NPC: You are on private property. In other words I want you to leave.
		string_id message = new string_id (c_stringFile, "s_157");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "slicer_01_mos_taike")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

	if (branchId == 2 && slicer_01_mos_taike_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && slicer_01_mos_taike_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && slicer_01_mos_taike_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && slicer_01_mos_taike_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && slicer_01_mos_taike_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && slicer_01_mos_taike_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && slicer_01_mos_taike_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && slicer_01_mos_taike_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && slicer_01_mos_taike_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && slicer_01_mos_taike_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && slicer_01_mos_taike_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && slicer_01_mos_taike_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && slicer_01_mos_taike_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && slicer_01_mos_taike_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && slicer_01_mos_taike_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && slicer_01_mos_taike_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && slicer_01_mos_taike_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && slicer_01_mos_taike_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && slicer_01_mos_taike_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && slicer_01_mos_taike_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && slicer_01_mos_taike_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && slicer_01_mos_taike_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && slicer_01_mos_taike_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && slicer_01_mos_taike_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && slicer_01_mos_taike_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && slicer_01_mos_taike_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && slicer_01_mos_taike_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && slicer_01_mos_taike_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && slicer_01_mos_taike_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && slicer_01_mos_taike_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && slicer_01_mos_taike_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && slicer_01_mos_taike_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && slicer_01_mos_taike_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && slicer_01_mos_taike_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && slicer_01_mos_taike_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && slicer_01_mos_taike_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.slicer_01_mos_taike.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

