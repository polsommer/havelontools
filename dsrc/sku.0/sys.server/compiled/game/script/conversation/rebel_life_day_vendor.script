// ======================================================================
//
// rebel_life_day_vendor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.buff;
include library.chat;
include library.collection;
include library.conversation;
include library.factions;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rebel_life_day_vendor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rebel_life_day_vendor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_alreadyWorking (obj_id player, obj_id npc)
{
	int lifeDayBuff = buff.getBuffOnTargetFromGroup(player, "lifeday_tracker");
	
	if (lifeDayBuff == 0)
		return true;
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_lockedOut (obj_id player, obj_id npc)
{
	if (hasObjVar(player, "lifeday.locked_out"))
		return true;
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_godMode (obj_id player, obj_id npc)
{
	return(isGod(player));
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_scoreBoardNotEmpty (obj_id player, obj_id npc)
{
		obj_id tatooine = getPlanetByName("tatooine");
		
		if (!isIdValid(tatooine))
			return false;
		
		if (!hasObjVar(tatooine, "lifeday.emptyScoreBoard"))
			return false;
			
		string emptyScoreBoard = getStringObjVar(tatooine, "lifeday.emptyScoreBoard");

		if (emptyScoreBoard == null || emptyScoreBoard.equals (""))
			return false;

		if (emptyScoreBoard.equals("true"))
			return false;
		
		return true;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_alreadyWorking_2 (obj_id player, obj_id npc)
{
	int lifeDayBuff = buff.getBuffOnTargetFromGroup(player, "lifeday");
	
	if (lifeDayBuff == 0)
		return false;
	return true;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_imperialPlayer (obj_id player, obj_id npc)
{
	if (factions.isImperial(player))
		return true;
		
	int lifeDayBuff = buff.getBuffOnTargetFromGroup(player, "lifeday_tracker");
	int lifeDayBuffImperial = buff.getBuffOnTargetFromGroup(player, "lifeday_imperial");
	
	if (buff.hasBuff(player, "event_lifeday_casual_imperial_lock_in") || buff.hasBuff(player, "event_lifeday_competitive_imperial_lock_in"))
		return true;
		
	if (lifeDayBuffImperial != 0)
		return true;		
	
	else if (lifeDayBuff == 0)
	{
		if (hasObjVar(player, "lifeday.neutral_imperial"))
		{
			removeObjVar(player, "lifeday.neutral_imperial");
			return false;
		}
	}
		
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_life_day_vendor_condition_neutral (obj_id player, obj_id npc)
{
	if (!factions.isRebel(player))
		return true;
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void rebel_life_day_vendor_action_showTokenVendorUI (obj_id player, obj_id npc)
{
    dictionary d = new dictionary();
    d.put("player", player);
    messageTo(npc, "showInventorySUI", d, 0, false);
    
    return;
}

// ----------------------------------------------------------------------

void rebel_life_day_vendor_action_addCasualBuff (obj_id player, obj_id npc)
{
	int lifeDayBuff = buff.getBuffOnTargetFromGroup(player, "lifeday_tracker");
	
	if (lifeDayBuff == 0)
	{
		if (!hasObjVar(player, "lifeday.locked_out"))
		{
			buff.applyBuff(player, "event_lifeday_casual_rebel_lock_in");
			
			if (!factions.isRebel(player))
				setObjVar(player, "lifeday.neutral_rebel", 1);
		}	
	}
	playMusic(player, "sound/lifeday_wookiee_greeting1.snd");
	return;
}

// ----------------------------------------------------------------------

void rebel_life_day_vendor_action_addCompetitiveBuff (obj_id player, obj_id npc)
{
	int lifeDayBuff = buff.getBuffOnTargetFromGroup(player, "lifeday_tracker");
	
	if (lifeDayBuff == 0)
	{
		if (!hasObjVar(player, "lifeday.locked_out"))
		{	
			buff.applyBuff(player, "event_lifeday_competitive_rebel_lock_in");
			
			if (!factions.isRebel(player))
				setObjVar(player, "lifeday.neutral_rebel", 1);
		}		
	}
	playMusic(player, "sound/lifeday_wookiee_greeting1.snd");
	return;
}

// ----------------------------------------------------------------------

void rebel_life_day_vendor_action_barkLeaders (obj_id player, obj_id npc)
{
	if (!buff.hasBuff(npc, "event_lifeday_no_bark"))
	{
		obj_id tatooine = getPlanetByName("tatooine");
		
		if (!isIdValid(tatooine))
			return;
		
		if (!hasObjVar(tatooine, "lifeday.emptyScoreBoard"))
			return;
			
		string emptyScoreBoard = getStringObjVar(tatooine, "lifeday.emptyScoreBoard");

		if (emptyScoreBoard == null || emptyScoreBoard.equals (""))
			return;

		if (!emptyScoreBoard.equals("true"))
		{
			if (hasObjVar(tatooine, "lifeday.positionThree.playerScore"))
			{
				int playerScore = getIntObjVar(tatooine, "lifeday.positionThree.playerScore");
				string playerName = getStringObjVar(tatooine, "lifeday.positionThree.playerName");
				string playerFaction = getStringObjVar(tatooine, "lifeday.positionThree.playerFaction");
				chat.chat(npc, "In third place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.");
			}
			if (hasObjVar(tatooine, "lifeday.positionTwo.playerScore"))
			{
				int playerScore = getIntObjVar(tatooine, "lifeday.positionTwo.playerScore");
				string playerName = getStringObjVar(tatooine, "lifeday.positionTwo.playerName");
				string playerFaction = getStringObjVar(tatooine, "lifeday.positionTwo.playerFaction");
				chat.chat(npc, "In second place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.");
			}
			if (hasObjVar(tatooine, "lifeday.positionOne.playerScore"))
			{
				int playerScore = getIntObjVar(tatooine, "lifeday.positionOne.playerScore");
				string playerName = getStringObjVar(tatooine, "lifeday.positionOne.playerName");
				string playerFaction = getStringObjVar(tatooine, "lifeday.positionOne.playerFaction");
				chat.chat(npc, "In first place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.");
			}
			buff.applyBuff(npc, "event_lifeday_no_bark");
		}
	}	
}

// ----------------------------------------------------------------------

void rebel_life_day_vendor_action_barkLeardersSilent (obj_id player, obj_id npc)
{
	obj_id tatooine = getPlanetByName("tatooine");
	
	if (!isIdValid(tatooine))
		return;
	
	if (!hasObjVar(tatooine, "lifeday.emptyScoreBoard"))
		return;	
	
	string emptyScoreBoard = getStringObjVar(tatooine, "lifeday.emptyScoreBoard");
	
	if (emptyScoreBoard == null || emptyScoreBoard.equals (""))
		return;	
	
	if (!emptyScoreBoard.equals("true"))
	{
		chat.chat(npc, "Today's propaganda masters are");
		if (hasObjVar(tatooine, "lifeday.positionThree.playerScore"))
		{
			int playerScore = getIntObjVar(tatooine, "lifeday.positionThree.playerScore");
			string playerName = getStringObjVar(tatooine, "lifeday.positionThree.playerName");
			string playerFaction = getStringObjVar(tatooine, "lifeday.positionThree.playerFaction");
			chat.chat(npc, player, "In third place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.", chat.ChatFlag_targetOnly);
		}
		if (hasObjVar(tatooine, "lifeday.positionTwo.playerScore"))
		{
			int playerScore = getIntObjVar(tatooine, "lifeday.positionTwo.playerScore");
			string playerName = getStringObjVar(tatooine, "lifeday.positionTwo.playerName");
			string playerFaction = getStringObjVar(tatooine, "lifeday.positionTwo.playerFaction");
			chat.chat(npc, player, "In second place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.", chat.ChatFlag_targetOnly);
		}
		if (hasObjVar(tatooine, "lifeday.positionOne.playerScore"))
		{
			int playerScore = getIntObjVar(tatooine, "lifeday.positionOne.playerScore");
			string playerName = getStringObjVar(tatooine, "lifeday.positionOne.playerName");
			string playerFaction = getStringObjVar(tatooine, "lifeday.positionOne.playerFaction");
			chat.chat(npc, player, "In first place the "+playerFaction+" "+playerName+", with "+playerScore+" tokens.", chat.ChatFlag_targetOnly);
		}
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int rebel_life_day_vendor_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It appears you are already working for the holiday event %TU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was just stopping by to see what you have for sale.
	if (response == "s_36")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_showTokenVendorUI (player, npc);

			//-- NPC: Yes I've brought some things with me from back home. Though only those that have shown the will to help will be able to purchase anything.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are today's propaganda masters?
	if (response == "s_42")
	{
		rebel_life_day_vendor_action_barkLeardersSilent (player, npc);

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: There you have it.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_life_day_vendor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Imperial scum are on to us %TU, we have to back off for now. Things should have settled down tomorrow though, you should come back then.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. You have anything for sale in the meantime?
	if (response == "s_102")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_showTokenVendorUI (player, npc);

			//-- NPC: Yes I've brought some things with me from back home. Though only those that have shown the will to help will be able to purchase anything.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand. I will be back tomorrow then.
	if (response == "s_103")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Most appreciated %TU, these people need our help. Everyone should be able to celebrate Life Day.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are today's propaganda masters?
	if (response == "s_29")
	{
		rebel_life_day_vendor_action_barkLeardersSilent (player, npc);

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: There you have it.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_life_day_vendor_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: %TU, good to see you. You here to help us out?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah I was hoping I could lend a hand for a good cause.
	if (response == "s_85")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: And we're grateful to have you %TU. We're trying to bring Life Day to the less fortunate citizens in Wayfar, Doaba Guerfel and Dearic. We need all the help we can get decorating the trees in these cities.
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds easy enough, I'll help out.
			boolean hasResponse0 = false;
			if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I was hoping to see if you have something for sale?
			boolean hasResponse1 = false;
			if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Who are today's propaganda masters?
			boolean hasResponse2 = false;
			if (rebel_life_day_vendor_condition_scoreBoardNotEmpty (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_60");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't right now I'm afraid.
	if (response == "s_87")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: I see. Well if you feel like you can put some time in your busy schedule to bring joy to those in need, you know where to find me.
			string_id message = new string_id (c_stringFile, "s_89");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping to see if you have something for sale?
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_showTokenVendorUI (player, npc);

			//-- NPC: Yes I've brought some things with me from back home. Though only those that have shown the will to help will be able to purchase anything.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are today's propaganda masters?
	if (response == "s_40")
	{
		rebel_life_day_vendor_action_barkLeardersSilent (player, npc);

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: There you have it.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_life_day_vendor_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And we're grateful to have you %TU. We're trying to bring Life Day to the less fortunate citizens in Wayfar, Doaba Guerfel and Dearic. We need all the help we can get decorating the trees in these cities.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll help out.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: That's great, one catch though. The Imperial fools think we are giving weapons to citizens or some such nonsense, so their spies are everywhere. I won't lie however, this is also an opportunity to show the Galaxy that the Alliance care about everyone. So if you feel like proudly displaying your allegiance, a bonus will be in it for you.
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oppressive bastards. I will show them!
			boolean hasResponse0 = false;
			if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: My time is pressed at the moment but I can help for a bit.
			boolean hasResponse1 = false;
			if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have too much on my plate right now, sorry.
			boolean hasResponse2 = false;
			if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping to see if you have something for sale?
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_showTokenVendorUI (player, npc);

			//-- NPC: Yes I've brought some things with me from back home. Though only those that have shown the will to help will be able to purchase anything.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are today's propaganda masters?
	if (response == "s_38")
	{
		rebel_life_day_vendor_action_barkLeardersSilent (player, npc);

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: There you have it.
			string_id message = new string_id (c_stringFile, "s_41");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_life_day_vendor_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There you are %TU, time to get to work! We're trying to bring Life Day to the less fortunate citizens in Wayfar, Doaba Guerfel and Dearic. We need all the help we can get decorating the trees in these cities.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy enough, I'll help out.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: That's great, one catch though. The Imperial fools think we are giving weapons to citizens or some such nonsense, so their spies are everywhere. I won't lie however, this is also an opportunity to show the Galaxy that the Alliance care about everyone. So if you feel like proudly displaying your allegiance, a bonus will be in it for you.
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oppressive bastards. I will show them!
			boolean hasResponse0 = false;
			if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: My time is pressed at the moment but I can help for a bit.
			boolean hasResponse1 = false;
			if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have too much on my plate right now, sorry.
			boolean hasResponse2 = false;
			if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping to see if you have something for sale?
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_showTokenVendorUI (player, npc);

			//-- NPC: Yes I've brought some things with me from back home. Though only those that have shown the will to help will be able to purchase anything.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are today's propaganda masters?
	if (response == "s_38")
	{
		rebel_life_day_vendor_action_barkLeardersSilent (player, npc);

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: There you have it.
			string_id message = new string_id (c_stringFile, "s_41");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_life_day_vendor_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's great, one catch though. The Imperial fools think we are giving weapons to citizens or some such nonsense, so their spies are everywhere. I won't lie however, this is also an opportunity to show the Galaxy that the Alliance care about everyone. So if you feel like proudly displaying your allegiance, a bonus will be in it for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oppressive bastards. I will show them!
	if (response == "s_71")
	{
		doAnimationAction (player, "pound_fist_palm");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate1");

			rebel_life_day_vendor_action_addCompetitiveBuff (player, npc);

			//-- NPC: I knew I could count on you %TU! Get out there and bring Life Day to the Galaxy! You have a limited time before drawing too much attention though so decorate as many trees as you can. If you help enough, you might even be recognized Galaxy wide for your selfless acts.
			string_id message = new string_id (c_stringFile, "s_77");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My time is pressed at the moment but I can help for a bit.
	if (response == "s_73")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			rebel_life_day_vendor_action_addCasualBuff (player, npc);

			//-- NPC: I know you have a lot on your plate %TU but anything helps. If you could decorate, say ten trees, that should be enough for today.
			string_id message = new string_id (c_stringFile, "s_79");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have too much on my plate right now, sorry.
	if (response == "s_75")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: I see. Well if you feel like you can put some time in your busy schedule to bring joy to those in need, you know where to find me.
			string_id message = new string_id (c_stringFile, "s_81");
			utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rebel_life_day_vendor");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rebel_life_day_vendor");

	return SCRIPT_CONTINUE;
}

trigger OnDetach ()
{
	clearCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rebel_life_day_vendor_condition_imperialPlayer (player, npc))
	{
		doAnimationAction (npc, "scare");

		//-- NPC: I know you, come here so I can rip your arms out of their sockets! Hey, where are you going?
		string_id message = new string_id (c_stringFile, "s_50");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_life_day_vendor_condition_alreadyWorking_2 (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		rebel_life_day_vendor_action_barkLeaders (player, npc);

		//-- NPC: It appears you are already working for the holiday event %TU.
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was just stopping by to see what you have for sale.
		boolean hasResponse0 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Who are today's propaganda masters?
		boolean hasResponse1 = false;
		if (rebel_life_day_vendor_condition_scoreBoardNotEmpty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 2);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_life_day_vendor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_life_day_vendor_condition_lockedOut (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		rebel_life_day_vendor_action_barkLeaders (player, npc);

		//-- NPC: The Imperial scum are on to us %TU, we have to back off for now. Things should have settled down tomorrow though, you should come back then.
		string_id message = new string_id (c_stringFile, "s_101");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I see. You have anything for sale in the meantime?
		boolean hasResponse0 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I understand. I will be back tomorrow then.
		boolean hasResponse1 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Who are today's propaganda masters?
		boolean hasResponse2 = false;
		if (rebel_life_day_vendor_condition_scoreBoardNotEmpty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_102");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_103");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_life_day_vendor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_life_day_vendor_condition_neutral (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		rebel_life_day_vendor_action_barkLeaders (player, npc);

		//-- NPC: %TU, good to see you. You here to help us out?
		string_id message = new string_id (c_stringFile, "s_83");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah I was hoping I could lend a hand for a good cause.
		boolean hasResponse0 = false;
		if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I can't right now I'm afraid.
		boolean hasResponse1 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I was hoping to see if you have something for sale?
		boolean hasResponse2 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Who are today's propaganda masters?
		boolean hasResponse3 = false;
		if (rebel_life_day_vendor_condition_scoreBoardNotEmpty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_85");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_87");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_93");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 7);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_life_day_vendor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		rebel_life_day_vendor_action_barkLeaders (player, npc);

		//-- NPC: There you are %TU, time to get to work! We're trying to bring Life Day to the less fortunate citizens in Wayfar, Doaba Guerfel and Dearic. We need all the help we can get decorating the trees in these cities.
		string_id message = new string_id (c_stringFile, "s_58");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sounds easy enough, I'll help out.
		boolean hasResponse0 = false;
		if (rebel_life_day_vendor_condition_alreadyWorking (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I was hoping to see if you have something for sale?
		boolean hasResponse1 = false;
		if (rebel_life_day_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Who are today's propaganda masters?
		boolean hasResponse2 = false;
		if (rebel_life_day_vendor_condition_scoreBoardNotEmpty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_60");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_62");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			utils.setScriptVar (player, "conversation.rebel_life_day_vendor.branchId", 11);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_life_day_vendor", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rebel_life_day_vendor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

	if (branchId == 2 && rebel_life_day_vendor_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && rebel_life_day_vendor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && rebel_life_day_vendor_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && rebel_life_day_vendor_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && rebel_life_day_vendor_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && rebel_life_day_vendor_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rebel_life_day_vendor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

