// ======================================================================
//
// npe_rebel_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.skill;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_rebel_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_rebel_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_isTask1Done (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_rebel_1", "wait");
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_hasFinishedTemplate (obj_id player, obj_id npc)
{
	return 	hasObjVar(player, "npe.finishedTemplate");
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_impQuestActiveOrComplete (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "npe_imperial_1");
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_finishedQuest1 (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "npe_rebel_1") &&
			!groundquests.hasCompletedQuest(player, "npe_rebel_2"));
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_finishedAll (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "npe_rebel_1") && groundquests.hasCompletedQuest(player, "npe_rebel_2"));
}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_isTask2Done (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_rebel_2", "return");

}

// ----------------------------------------------------------------------

boolean npe_rebel_questgiver_condition_isGetInfoTaskActive (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "npe_rebel_2", "slicing") ||
			groundquests.isTaskActive(player, "npe_rebel_2", "accessSpace"));

}

// ======================================================================
// Script Actions
// ======================================================================

void npe_rebel_questgiver_action_grantQuest1 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_rebel_1");
}

// ----------------------------------------------------------------------

void npe_rebel_questgiver_action_sendQuest1Signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_rebel_1_wait");
}

// ----------------------------------------------------------------------

void npe_rebel_questgiver_action_giveQuest2 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_rebel_2");
	npe.giveStationWaypoint(player);
	if(!hasObjVar(player, npe.QUEST_REWORK_VAR))
		setObjVar(player, npe.QUEST_REWORK_VAR, npe.QUEST_ENUMERATION);
}

// ----------------------------------------------------------------------

void npe_rebel_questgiver_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_rebel_questgiver_action_sendQuest2Signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_rebel_2_complete");
}

// ----------------------------------------------------------------------

void npe_rebel_questgiver_action_groupPopUp (obj_id player, obj_id npc)
{
	messageTo(player, "groupPopUp1", null, 0, false);
	messageTo(player, "groupPopUp2", null, 5, false);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_rebel_questgiver_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you finished yet?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. I have not retrieved the information.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please go to Station Gamma and retrieve that information. If we want to have any hope of winning this war, we need to find out how much the Empire knows.
			string_id message = new string_id (c_stringFile, "s_71");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you get it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, it wasn't easy though.
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Perfect. This is what we have been looking for. It looks like our hidden base is still secret...for now, at least.
			string_id message = new string_id (c_stringFile, "s_57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am happy to have served.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perfect. This is what we have been looking for. It looks like our hidden base is still secret...for now, at least.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am happy to have served.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			npe_rebel_questgiver_action_sendQuest2Signal (player, npc);

			//-- NPC: You have done us a great service today. Take this. May it serve you well.
			string_id message = new string_id (c_stringFile, "s_59");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you ready to help the Alliance?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am always ready to help the Alliance.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Our spies tell us that the Empire has formed a temporary alliance with the Rak'qua over in Station Gamma. We also think that they may have uncovered the location of our secret base. I need you to get in there and access the databank to find out if they have tracked down our brethren. Download what you find and return to me immediately.
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I get there?
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this so important?
			boolean hasResponse1 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maybe later.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay, come back when you are ready to help.
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Our spies tell us that the Empire has formed a temporary alliance with the Rak'qua over in Station Gamma. We also think that they may have uncovered the location of our secret base. I need you to get in there and access the databank to find out if they have tracked down our brethren. Download what you find and return to me immediately.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get there?
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just take the shuttle in Hangarbay 1.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, sir!
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is this so important?
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: We lost a lot of good men at Yavin 4. After the Death Star was destroyed, the Emperor was furious. He attacked Alliance allies with ruthless fury. The main force of the Rebels was forced to go into hiding. We need time to rebuild our strength, and if the Empire truly has found our position, it would be disastrous.
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood. I will get the data for you.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just take the shuttle in Hangarbay 1.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir!
	if (response == "s_68")
	{
		doAnimationAction (player, "salute1");

		npe_rebel_questgiver_action_groupPopUp (player, npc);

		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			npe_rebel_questgiver_action_giveQuest2 (player, npc);

			//-- NPC: Be careful. That place is very dangerous and may be guarded by Imperial droids. You may need to recruit a group of friends to assist you.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We lost a lot of good men at Yavin 4. After the Death Star was destroyed, the Emperor was furious. He attacked Alliance allies with ruthless fury. The main force of the Rebels was forced to go into hiding. We need time to rebuild our strength, and if the Empire truly has found our position, it would be disastrous.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. I will get the data for you.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just take the shuttle in Hangarbay 1.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, sir!
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see you are back. Did you get the information?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I spoke to your contacts.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Let me see the data disks they gave you. Good. I see they have not been tampered with or accessed. Grandma Drake's soup recipes shall never fall into the hands of the Empire. HA HA! It was a test, you see, and you have done well. You have earned my trust.
			string_id message = new string_id (c_stringFile, "s_37");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's good to know.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_39");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see the data disks they gave you. Good. I see they have not been tampered with or accessed. Grandma Drake's soup recipes shall never fall into the hands of the Empire. HA HA! It was a test, you see, and you have done well. You have earned my trust.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's good to know.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			npe_rebel_questgiver_action_sendQuest1Signal (player, npc);

			//-- NPC: I may have other things for you to do...if and when you are up for the challenge.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am always ready to help the Alliance.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Maybe later.
			boolean hasResponse1 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I may have other things for you to do...if and when you are up for the challenge.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am always ready to help the Alliance.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Our spies tell us that the Empire has formed a temporary alliance with the Rak'qua over in Station Gamma. We also think that they may have uncovered the location of our secret base. I need you to get in there and access the databank to find out if they have tracked down our brethren. Download what you find and return to me immediately.
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I get there?
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is this so important?
			boolean hasResponse1 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maybe later.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay, come back when you are ready to help.
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Can I help you with something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hear you are connected to certain individuals not friendly to the Empire.
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Is that so? Maybe I am. Maybe I am not. How do I know where your allegiance lies?
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm no fan of the Empire. I can prove it.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Your coat looks like an Imperial naval uniform.
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: HA! I think not. Now leave me be.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Is that so? Maybe I am. Maybe I am not. How do I know where your allegiance lies?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm no fan of the Empire. I can prove it.
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: We shall see. I have a few friends on the station that are collecting information regarding all the recent Imperial activity. One is in Hangar Bay 1 and the other is in the Cloning Facility. Go see what they uncovered and report back to me. Do try and be discreet about this, okay?
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly. I will get the information.
			boolean hasResponse0 = false;
			if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_rebel_questgiver_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We shall see. I have a few friends on the station that are collecting information regarding all the recent Imperial activity. One is in Hangar Bay 1 and the other is in the Cloning Facility. Go see what they uncovered and report back to me. Do try and be discreet about this, okay?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Certainly. I will get the information.
	if (response == "s_54")
	{
		npe_rebel_questgiver_action_grantQuest1 (player, npc);

		//-- [NOTE] 
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. I have added the contacts to your journal.
			string_id message = new string_id (c_stringFile, "s_61");
			utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_rebel_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	//setCondition( self, CONDITION_INTERESTING );
	setName( self, "Garek");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	//setCondition( self, CONDITION_INTERESTING );
	setName( self, "Garek");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_rebel_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_finishedAll (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Thanks for all your hard work, %TU.
		string_id message = new string_id (c_stringFile, "s_73");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_isGetInfoTaskActive (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Have you finished yet?
		string_id message = new string_id (c_stringFile, "s_67");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No. I have not retrieved the information.
		boolean hasResponse0 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 2);

			npcStartConversation (player, npc, "npe_rebel_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_isTask2Done (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Did you get it?
		string_id message = new string_id (c_stringFile, "s_55");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, it wasn't easy though.
		boolean hasResponse0 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_56");

			utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 4);

			npcStartConversation (player, npc, "npe_rebel_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_finishedQuest1 (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Are you ready to help the Alliance?
		string_id message = new string_id (c_stringFile, "s_19");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am always ready to help the Alliance.
		boolean hasResponse0 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Maybe later.
		boolean hasResponse1 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 7);

			npcStartConversation (player, npc, "npe_rebel_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_isTask1Done (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: I see you are back. Did you get the information?
		string_id message = new string_id (c_stringFile, "s_33");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I spoke to your contacts.
		boolean hasResponse0 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 13);

			npcStartConversation (player, npc, "npe_rebel_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition_hasFinishedTemplate (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Can I help you with something?
		string_id message = new string_id (c_stringFile, "s_44");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I hear you are connected to certain individuals not friendly to the Empire.
		boolean hasResponse0 = false;
		if (!npe_rebel_questgiver_condition_impQuestActiveOrComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Your coat looks like an Imperial naval uniform.
		boolean hasResponse1 = false;
		if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_46");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_63");

			utils.setScriptVar (player, "conversation.npe_rebel_questgiver.branchId", 16);

			npcStartConversation (player, npc, "npe_rebel_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_rebel_questgiver_condition__defaultCondition (player, npc))
	{
		npe_rebel_questgiver_action_facePlayer (player, npc);

		//-- NPC: Leave me be. You can't help me right now.
		string_id message = new string_id (c_stringFile, "s_76");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_rebel_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

	if (branchId == 2 && npe_rebel_questgiver_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_rebel_questgiver_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_rebel_questgiver_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_rebel_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_rebel_questgiver_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_rebel_questgiver_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && npe_rebel_questgiver_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && npe_rebel_questgiver_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && npe_rebel_questgiver_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && npe_rebel_questgiver_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && npe_rebel_questgiver_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && npe_rebel_questgiver_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && npe_rebel_questgiver_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_rebel_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

