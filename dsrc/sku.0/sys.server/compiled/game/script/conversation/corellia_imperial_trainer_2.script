// ======================================================================
//
// corellia_imperial_trainer_2.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;
include library.xp;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_imperial_trainer_2";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_imperial_trainer_2_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasWonMission15 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "destroy_surpriseattack", "corellia_imperial_15_split" ) &&
	!space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_imperial_15_split" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasWonMission12 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "assassinate", "corellia_imperial_12" ) &&
	!space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_12" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_onMyTrack (obj_id player, obj_id npc)
{
	return space_flags.isSpaceTrack(player, space_flags.IMPERIAL_CORELLIA);
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isOnQuest (obj_id player, obj_id npc)
{
	return space_quest.hasQuest( player );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForTraining (obj_id player, obj_id npc)
{
	if ( space_flags.hasCompletedTierTwo( player ) )
		return false;//you have all your skills, so you are done.
		
	if (space_quest.hasWonQuest( player, "recovery", "corellia_imperial_16" ) &&
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_starships_02")	||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_weapons_02")	||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_procedures_02")	||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_droid_02"))
			return true;

	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasDroidSkill2 (obj_id player, obj_id npc)
{
	return (hasSkill( player, "pilot_imperial_navy_droid_02"));
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasProceduresSkill2 (obj_id player, obj_id npc)
{
	return (hasSkill( player, "pilot_imperial_navy_procedures_02"));
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasStarshipSkill2 (obj_id player, obj_id npc)
{
	return (hasSkill( player, "pilot_imperial_navy_starships_02"));
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasWeaponSkill2 (obj_id player, obj_id npc)
{
	return (hasSkill( player, "pilot_imperial_navy_weapons_02"));
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasAllTier2Skills (obj_id player, obj_id npc)
{
	/*
	if (!hasSkill( player, "pilot_imperial_navy_starships_02") )
		return false;
	else if (!hasSkill( player, "pilot_imperial_navy_procedures_02") )
		return false;
	else if (!hasSkill( player, "pilot_imperial_navy_weapons_02") )
		return false;
	else if (!hasSkill( player, "pilot_imperial_navy_droid_02" ) )
		return false;
	else	
		return true;
	*/
	
	if(space_flags.hasCompletedTierTwo(player) && space_quest.hasReceivedReward(player, "destroy_surpriseattack", "corellia_imperial_15_split"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_canFlyNonTrackDuty (obj_id player, obj_id npc)
{
	if(space_flags.hasCompletedTierOne(player) && !space_quest.hasQuest(player))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isPrivateer (obj_id player, obj_id npc)
{
	if ( hasSkill( player, "pilot_neutral_novice" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isRebel (obj_id player, obj_id npc)
{
	if ( factions.getFaction(player) == factions.FACTION_REBEL )
		return true;

	if ( hasSkill( player, "pilot_rebel_navy_novice" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isPilot (obj_id player, obj_id npc)
{
	return space_flags.hasAnyPilotSkill(player);
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedMission12 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "assassinate", "corellia_imperial_12" ) ||
		space_quest.hasAbortedQuest( player, "assassinate", "corellia_imperial_12" ) )
		return true;
	else
		return false;	
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedMission13 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "inspect", "corellia_imperial_13" ) ||
		space_quest.hasAbortedQuest( player, "inspect", "corellia_imperial_13" ) )
		return true;
	else
		return false;	
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedMission14 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "assassinate", "corellia_imperial_14" ) ||
		space_quest.hasAbortedQuest( player, "assassinate", "corellia_imperial_14" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedMission15 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "destroy_surpriseattack", "corellia_imperial_15_split" ) ||
		space_quest.hasAbortedQuest( player, "destroy_surpriseattack", "corellia_imperial_15_split" ) ||
		space_quest.hasFailedQuest( player, "patrol", "corellia_imperial_15" ) ||
		space_quest.hasAbortedQuest( player, "patrol", "corellia_imperial_15" ))
		return true;
	else
		return false;	
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasCompletedOpening (obj_id player, obj_id npc)
{
	return 	space_quest.hasWonQuest( player, "recovery", "corellia_imperial_16" );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForPhase2Other (obj_id player, obj_id npc)
{
	return space_quest.hasCompletedQuestSeries( player, "imperial_corellia_1" );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedMissionFinal (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "survival", "corellia_tier2_final" ) ||
		space_quest.hasAbortedQuest( player, "survival", "corellia_tier2_final" ) ||
		space_quest.hasFailedQuest( player, "assassinate", "corellia_imperial_17" ) ||
		space_quest.hasAbortedQuest( player, "assassinate", "corellia_imperial_17" ))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasCompletedFinal (obj_id player, obj_id npc)
{
	return 	space_quest.hasWonQuest( player, "survival", "corellia_tier2_final" );

}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasWonMission13 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "inspect", "corellia_imperial_13" ) &&
	!space_quest.hasReceivedReward( player, "inspect", "corellia_imperial_13" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasWonMission14 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "assassinate", "corellia_imperial_14" ) &&
	!space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_14" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasNegativeFaction (obj_id player, obj_id npc)
{
	return ( factions.getFactionStanding( player, factions.FACTION_IMPERIAL) < 0.0f );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasNegativeFactionMale (obj_id player, obj_id npc)
{
	return ( (factions.getFactionStanding( player, factions.FACTION_IMPERIAL) < 0.0f) &&
			 getGender(player) == GENDER_MALE );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_hasFailedOpening (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "recovery", "corellia_imperial_16" ) ||
		space_quest.hasAbortedQuest( player, "recovery", "corellia_imperial_16" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForMission1 (obj_id player, obj_id npc)
{
	int mission = 0;
	
	if(space_flags.hasSpaceFlag(player, "readyForTier2Mission"))
		mission = space_flags.getIntSpaceFlag(player, "readyForTier2Mission");
		
	if(mission == 1)
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForMission2 (obj_id player, obj_id npc)
{
	int mission = 0;
	
	if(space_flags.hasSpaceFlag(player, "readyForTier2Mission"))
		mission = space_flags.getIntSpaceFlag(player, "readyForTier2Mission");
		
	if(mission == 2)
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForMission3 (obj_id player, obj_id npc)
{
	int mission = 0;
	
	if(space_flags.hasSpaceFlag(player, "readyForTier2Mission"))
		mission = space_flags.getIntSpaceFlag(player, "readyForTier2Mission");
		
	if(mission == 3)
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForMission4 (obj_id player, obj_id npc)
{
	int mission = 0;
	
	if(space_flags.hasSpaceFlag(player, "readyForTier2Mission"))
		mission = space_flags.getIntSpaceFlag(player, "readyForTier2Mission");
		
	if(mission == 4)
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_2_condition_isReadyForMission (obj_id player, obj_id npc)
{
	return space_flags.hasSpaceFlag(player, "readyForTier2Mission");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_imperial_trainer_2_action_giveReward12 (obj_id player, obj_id npc)
{
	if (!space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_12") )
	{
		// Animation.
		faceTo( npc, player );
		
		// Give credits.
		space_quest.giveReward( player, "assassinate", "corellia_imperial_12", 5000, "object/tangible/ship/components/weapon/wpn_mission_reward_imperial_cygnus_starblaster.iff" );
		factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 75.0f );
	}
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission08 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "corellia_imperial_8" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission09 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "corellia_imperial_9" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission10 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "corellia_imperial_10" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission11 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "corellia_imperial_11" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_buyWeaponSkill2 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_imperial_navy_weapons_02" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_buyStarshipSkill2 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_imperial_navy_starships_02" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_buyProcedureSkill2 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_imperial_navy_procedures_02" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_buyDroidSkill2 (obj_id player, obj_id npc)
{
	skill.purchaseSkill( player, "pilot_imperial_navy_droid_02" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission12 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "assassinate", "corellia_imperial_12" );
	space_flags.removeSpaceFlag(player, "readyForTier2Mission");
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission13 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "inspect", "corellia_imperial_13" );
	space_flags.removeSpaceFlag(player, "readyForTier2Mission");
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission14 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "assassinate", "corellia_imperial_14" );
	space_flags.removeSpaceFlag(player, "readyForTier2Mission");
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMission15 (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "patrol", "corellia_imperial_15" );
	space_flags.removeSpaceFlag(player, "readyForTier2Mission");
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMissionOpen (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "recovery", "corellia_imperial_16" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_grantMissionFinal (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "assassinate", "corellia_imperial_17" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_giveReward13 (obj_id player, obj_id npc)
{
	if (!space_quest.hasReceivedReward( player, "inspect", "corellia_imperial_13") )
	{
	
		// Animation.
		faceTo( npc, player );
		
		// Give credits.
		space_quest.giveReward( player, "inspect", "corellia_imperial_13", 5000, "object/tangible/ship/components/armor/arm_mission_reward_imperial_sfs_light_military.iff" );
		factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 75.0f );	
	}
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_giveReward14 (obj_id player, obj_id npc)
{
	if (!space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_14") )
	{
	
		// Animation.
		faceTo( npc, player );
		
		// Give credits.
		space_quest.giveReward( player, "assassinate", "corellia_imperial_14", 5000, "object/tangible/ship/components/booster/bst_mission_reward_imperial_rss_ion_booster.iff" );
		factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 75.0f );	
	}
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_giveReward15 (obj_id player, obj_id npc)
{
	if (!space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_imperial_15_split") )
	{
	
		// Animation.
		faceTo( npc, player );
		
		// Give credits.
		space_quest.giveReward( player, "destroy_surpriseattack", "corellia_imperial_15_split", 5000, "object/tangible/ship/components/shield_generator/shd_mission_reward_imperial_rendili_dual_projector.iff" );
		factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 75.0f );	
	}
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_setReadyForMission1 (obj_id player, obj_id npc)
{
	space_flags.setSpaceFlag(player, "readyForTier2Mission", 1);
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_setReadyForMission2 (obj_id player, obj_id npc)
{
	space_flags.setSpaceFlag(player, "readyForTier2Mission", 2);
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_setReadyForMission3 (obj_id player, obj_id npc)
{
	space_flags.setSpaceFlag(player, "readyForTier2Mission", 3);
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_2_action_setReadyForMission4 (obj_id player, obj_id npc)
{
	space_flags.setSpaceFlag(player, "readyForTier2Mission", 4);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_imperial_trainer_2_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: %TU, is it?  I hear you are a wanted man.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?!
	if (response == "s_7090182")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: It seems you are an enemy of the Empire after all.  Did you think we would not know of this little... indiscretion?
			string_id message = new string_id (c_stringFile, "s_83993cf3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't know what you mean
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ecb17e60");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It seems you are an enemy of the Empire after all.  Did you think we would not know of this little... indiscretion?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't know what you mean
	if (response == "s_ecb17e60")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yes, of course you don't.  Nevertheless, you cannot be trusted to fly for the Imperial Navy.  Not after what you did.
			string_id message = new string_id (c_stringFile, "s_3ec7906d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What can I do?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5b204877");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, of course you don't.  Nevertheless, you cannot be trusted to fly for the Imperial Navy.  Not after what you did.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can I do?
	if (response == "s_5b204877")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Prove your devotion to the Empire.  If you improve your standing with the Empire, you may have a future after all.
			string_id message = new string_id (c_stringFile, "s_8f26747e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A future in the Imperial Navy, you mean.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71d84d34");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Prove your devotion to the Empire.  If you improve your standing with the Empire, you may have a future after all.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A future in the Imperial Navy, you mean.
	if (response == "s_71d84d34")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: Let's not get ahead of ourselves, %NU.
			string_id message = new string_id (c_stringFile, "s_f35be898");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: %TU, is it?  I hear you are a wanted woman.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?!
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: It seems females such as yourself are too unreliable to be trustworthy agents for the Empire after all.  Did you think we would not know of this little... indiscretion?
			string_id message = new string_id (c_stringFile, "s_c2b7ea3a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't know what you mean
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It seems females such as yourself are too unreliable to be trustworthy agents for the Empire after all.  Did you think we would not know of this little... indiscretion?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't know what you mean
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yes, of course you don't.  Nevertheless, you cannot be trusted to fly for the Imperial Navy.  Not that I am surprised. I have long argued against the inclusion of females in the military.
			string_id message = new string_id (c_stringFile, "s_af154d31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What can I do?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, of course you don't.  Nevertheless, you cannot be trusted to fly for the Imperial Navy.  Not that I am surprised. I have long argued against the inclusion of females in the military.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can I do?
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Prove your devotion to the Empire.  If you improve your standing with the Empire, you may have a future after all.
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A future in the Imperial Navy, you mean.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Prove your devotion to the Empire.  If you improve your standing with the Empire, you may have a future after all.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A future in the Imperial Navy, you mean.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: Let's not get ahead of ourselves, %NU.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I do not have time for pleasantries, pilot. Why have you come?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to request a mission.
	if (response == "s_4854758d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition_canFlyNonTrackDuty (player, npc))
		{
			//-- NPC: I would like to think that you are more skilled at flying than you are at military protocol. However, I do have some duty missions that need tending to. I'll save the important missions for my good pilots.
			string_id message = new string_id (c_stringFile, "s_60a52374");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [DESTROY] I wish to assist in anti-pirate patrols.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [ESCORT] I will assist as a merchant escort.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [DESTROY] I'm looking to dust a few Rebels.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: [ESCORT] I wish to assist the local security forces.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bd5df827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_798fbe2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1a0f022");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3e38e6a0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do not waste my time with inane requests. If you want a mission, go speak to your own commanding officer.
			string_id message = new string_id (c_stringFile, "s_42aa1748");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I would like to think that you are more skilled at flying than you are at military protocol. However, I do have some duty missions that need tending to. I'll save the important missions for my good pilots.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [DESTROY] I wish to assist in anti-pirate patrols.
	if (response == "s_bd5df827")
	{
		corellia_imperial_trainer_2_action_grantMission08 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Downing local pirates will make the Empire look favorable to the citizens of this sector.
			string_id message = new string_id (c_stringFile, "s_dc33e486");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [ESCORT] I will assist as a merchant escort.
	if (response == "s_798fbe2")
	{
		corellia_imperial_trainer_2_action_grantMission09 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Trade is the lifeblood of the Corellian system. This task will give us high visibility with those whose loyalty we aim to sway.
			string_id message = new string_id (c_stringFile, "s_e8db34a5");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [DESTROY] I'm looking to dust a few Rebels.
	if (response == "s_1a0f022")
	{
		corellia_imperial_trainer_2_action_grantMission10 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Leave no survivors. The Emperor does not look favorably on mercy or weakness.
			string_id message = new string_id (c_stringFile, "s_e17fc7e4");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [ESCORT] I wish to assist the local security forces.
	if (response == "s_3e38e6a0")
	{
		corellia_imperial_trainer_2_action_grantMission11 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need you to escort one of our scanning vessels on its rounds.  As you can imagine both smugglers and Rebels alike would love to see these craft out of commission.
			string_id message = new string_id (c_stringFile, "s_3ab6a9ed");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's about time that you returned. I have an assignment for you and it cannot wait.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the task?
	if (response == "s_6d3be6aa")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition_isReadyForMission1 (player, npc))
		{
			//-- NPC: The Rebels are flying in a diplomat named Darmin Lerspri, supposedly an Alderaanian official of some sort who happened to be off world when it was destroyed.
			string_id message = new string_id (c_stringFile, "s_50b5b468");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am to capture this man?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: About Alderaan....
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_246");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition_isReadyForMission2 (player, npc))
		{
			//-- NPC: Black Epsilon command wants you to intercept a freighter and inspect their cargo.  You are looking for a Personnel Dossier on Rebel agents working in the Coronet area.
			string_id message = new string_id (c_stringFile, "s_79813bfb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What should I do with the freighter?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_178");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition_isReadyForMission3 (player, npc))
		{
			//-- NPC: There has been a squad of Rebel bombers sighted in the system. Black Epsilon has been tasked with their destruction.
			string_id message = new string_id (c_stringFile, "s_c52a69c1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Shouldn't a straightforward assault be handled by the Navy?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_206");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: One of the scanning vessels received odd signals from a Nebula in the system. There are possible Rebel craft in the area, but the interference from the Nebula make it difficult to confirm.
			string_id message = new string_id (c_stringFile, "s_1946850");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This is a reconnaissance flight then?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_190");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 67);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Rebels are flying in a diplomat named Darmin Lerspri, supposedly an Alderaanian official of some sort who happened to be off world when it was destroyed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am to capture this man?
	if (response == "s_222")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, you are to kill him.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I thought you wanted pilots, not assassins?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: About Alderaan....
	if (response == "s_246")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We are not here to discuss a dead and wasted planet, stay focused!
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am to capture this man?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: About Alderaan....
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_246");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon command wants you to intercept a freighter and inspect their cargo.  You are looking for a Personnel Dossier on Rebel agents working in the Coronet area.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What should I do with the freighter?
	if (response == "s_178")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			corellia_imperial_trainer_2_action_grantMission13 (player, npc);

			//-- NPC: That is between you, the freighter, and the cold reaches of space.  Dismissed!
			string_id message = new string_id (c_stringFile, "s_180");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There has been a squad of Rebel bombers sighted in the system. Black Epsilon has been tasked with their destruction.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Shouldn't a straightforward assault be handled by the Navy?
	if (response == "s_206")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Imperial Navy is tied up with other tasks at the moment.  Black Epsilon can accomplish with one craft what would take them ten.
			string_id message = new string_id (c_stringFile, "s_208");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will not fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_210");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One of the scanning vessels received odd signals from a Nebula in the system. There are possible Rebel craft in the area, but the interference from the Nebula make it difficult to confirm.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is a reconnaissance flight then?
	if (response == "s_190")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, this is a burrow mite hunt.  I KNOW they are in there, and I want you to dig them out.
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_194");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is all I have for you.  Speak with Haymir Rendundi for more duties. He is currently stationed at Imperial command on Yavin 4. Keep your nose clean and do your duty.  Haymir isn't nice like me and will be all over you if you mess up. Or are you here for more duties?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dismissed, aye sir!
	if (response == "s_79375065")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good, that is all.
			string_id message = new string_id (c_stringFile, "s_25457635");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I am.
	if (response == "s_d335136f")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Since you appear to have run out of useful things to do, take some duties to keep you busy.
			string_id message = new string_id (c_stringFile, "s_ee11d13c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [DESTROY] I wish to assist in anti-pirate patrols.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [ESCORT] I will assist as a merchant escort.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [DESTROY] I'm looking to dust a few Rebels.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: [ESCORT] I wish to assist the local security forces.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bd5df827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_798fbe2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1a0f022");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3e38e6a0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your tour with me is just about finished, but I have one final task.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have more enemy fighter squads to put out of commission?
	if (response == "s_9d2c9b0a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not exactly.  The Rebels have taken note of your activities in this system and are setting up a little surprise for you.
			string_id message = new string_id (c_stringFile, "s_e978ca6b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What sort of surprise?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7ca4fcb8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not exactly.  The Rebels have taken note of your activities in this system and are setting up a little surprise for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of surprise?
	if (response == "s_7ca4fcb8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There will be a lone fighter passing near one of the outer asteroid belts.  This fighter will be unmanned though the piloting droid will put up a fight.
			string_id message = new string_id (c_stringFile, "s_25edc644");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the purpose of this craft?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_17780ca7");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There will be a lone fighter passing near one of the outer asteroid belts.  This fighter will be unmanned though the piloting droid will put up a fight.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the purpose of this craft?
	if (response == "s_17780ca7")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: It is a decoy to lure you specifically.  They intend to ambush you, and Black Epsilon intends to let them.
			string_id message = new string_id (c_stringFile, "s_af16cd74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is a decoy to lure you specifically.  They intend to ambush you, and Black Epsilon intends to let them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is the ambush important?
	if (response == "s_9cca1500")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have discovered the location of their fighter wing headquarters.  When they scramble the ships to destroy you, Black Epsilon will launch its own attack on their undefended base.
			string_id message = new string_id (c_stringFile, "s_f0c8febb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_6ed7de92")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must survive.  TechOps is installing a powerful communications jammer in your craft.  This jammer will allow the attacking forces to communicate with each other to avoid suspicion, but will prevent communications from their base. 
			string_id message = new string_id (c_stringFile, "s_2fa7f312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of back up will I have?
	if (response == "s_83bf02e8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will have none.  If you are half as good as you are confidant, you might live long enough to get out of this.
			string_id message = new string_id (c_stringFile, "s_d1f1fea2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_dbd8c729")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionFinal (player, npc);

			//-- NPC: Remember, you must stay within range of the ambush point.  We will provide you with a location that will disrupt their hyperspace jumps, it is all the help you will get from us.
			string_id message = new string_id (c_stringFile, "s_329f7488");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have discovered the location of their fighter wing headquarters.  When they scramble the ships to destroy you, Black Epsilon will launch its own attack on their undefended base.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is the ambush important?
	if (response == "s_9cca1500")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have discovered the location of their fighter wing headquarters.  When they scramble the ships to destroy you, Black Epsilon will launch its own attack on their undefended base.
			string_id message = new string_id (c_stringFile, "s_f0c8febb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_6ed7de92")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must survive.  TechOps is installing a powerful communications jammer in your craft.  This jammer will allow the attacking forces to communicate with each other to avoid suspicion, but will prevent communications from their base. 
			string_id message = new string_id (c_stringFile, "s_2fa7f312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of back up will I have?
	if (response == "s_83bf02e8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will have none.  If you are half as good as you are confidant, you might live long enough to get out of this.
			string_id message = new string_id (c_stringFile, "s_d1f1fea2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_dbd8c729")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionFinal (player, npc);

			//-- NPC: Remember, you must stay within range of the ambush point.  We will provide you with a location that will disrupt their hyperspace jumps, it is all the help you will get from us.
			string_id message = new string_id (c_stringFile, "s_329f7488");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must survive.  TechOps is installing a powerful communications jammer in your craft.  This jammer will allow the attacking forces to communicate with each other to avoid suspicion, but will prevent communications from their base. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is the ambush important?
	if (response == "s_9cca1500")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have discovered the location of their fighter wing headquarters.  When they scramble the ships to destroy you, Black Epsilon will launch its own attack on their undefended base.
			string_id message = new string_id (c_stringFile, "s_f0c8febb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_6ed7de92")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must survive.  TechOps is installing a powerful communications jammer in your craft.  This jammer will allow the attacking forces to communicate with each other to avoid suspicion, but will prevent communications from their base. 
			string_id message = new string_id (c_stringFile, "s_2fa7f312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of back up will I have?
	if (response == "s_83bf02e8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will have none.  If you are half as good as you are confidant, you might live long enough to get out of this.
			string_id message = new string_id (c_stringFile, "s_d1f1fea2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_dbd8c729")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionFinal (player, npc);

			//-- NPC: Remember, you must stay within range of the ambush point.  We will provide you with a location that will disrupt their hyperspace jumps, it is all the help you will get from us.
			string_id message = new string_id (c_stringFile, "s_329f7488");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will have none.  If you are half as good as you are confidant, you might live long enough to get out of this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is the ambush important?
	if (response == "s_9cca1500")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have discovered the location of their fighter wing headquarters.  When they scramble the ships to destroy you, Black Epsilon will launch its own attack on their undefended base.
			string_id message = new string_id (c_stringFile, "s_f0c8febb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_6ed7de92")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must survive.  TechOps is installing a powerful communications jammer in your craft.  This jammer will allow the attacking forces to communicate with each other to avoid suspicion, but will prevent communications from their base. 
			string_id message = new string_id (c_stringFile, "s_2fa7f312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of back up will I have?
	if (response == "s_83bf02e8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will have none.  If you are half as good as you are confidant, you might live long enough to get out of this.
			string_id message = new string_id (c_stringFile, "s_d1f1fea2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why is the ambush important?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What must I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What sort of back up will I have?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9cca1500");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6ed7de92");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83bf02e8");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dbd8c729");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_dbd8c729")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionFinal (player, npc);

			//-- NPC: Remember, you must stay within range of the ambush point.  We will provide you with a location that will disrupt their hyperspace jumps, it is all the help you will get from us.
			string_id message = new string_id (c_stringFile, "s_329f7488");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You already have orders to carry out. Your time is my time, so quit wasting it or you may find yourself out of time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need a hyperdrive!
	if (response == "s_5ffdd434")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: That is correct.  You do need a hyperdrive if you're going to be of use to me.  I suggest you purchase a better ship immediately.
			string_id message = new string_id (c_stringFile, "s_ccf466b2");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Blast it! Next time you mess up and fail, stay dead! I don't have any time for pilots who don't know when to zig when they should have zagged.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me try again. You won't be disappointed.
	if (response == "s_37680b25")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionOpen (player, npc);

			//-- NPC: Fine. Have it your way. Get out there and prove yourself worthy of being in my squad. Capture that Hidden Dagger freighter.
			string_id message = new string_id (c_stringFile, "s_5bfd4371");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have more potential than I was expecting. Darmin will no longer be a thorn in the side of the Empire, thanks to your...intervention.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It was nothing. He deserved what he got.
	if (response == "s_59894e66")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_giveReward12 (player, npc);

			//-- NPC: Indeed. The Empire always rewards those who go above and beyond. Here is a small token of our appreciation for your service. Enjoy it and come back to me when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_c4179a5d");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are back already? Do you have anything to report or are you just here wasting my time?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Hand over dossier]
	if (response == "s_d4374209")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_giveReward13 (player, npc);

			//-- NPC: Excellently done. Maybe you are not as worthless as I first thought. This dossier is sure to have many interesting facts that the Inquisition is sure to enjoy. Here is your payment for services rendered. Return to me when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_9f952cc3");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I honestly didn't expect you to survive this one. Yet again you prove to be a very resourceful pilot. Thanks to your efforts, the bomber squadron has been destroyed and security brought to the system.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All in a days work.
	if (response == "s_16439d46")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_giveReward14 (player, npc);

			//-- NPC: You destroy and entire squad of Rebel bombers and all you say is...all in a days work? I am liking you more and more each day. Here is your commission for taking those bombers out. Take some time to yourself and when you are ready come back for some more work.
			string_id message = new string_id (c_stringFile, "s_a70cef5");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have reviewed your ship logs and must say that I am surprised that the Rebels decided to attack you. Regardless you handled yourself with utmost skill and ruthlessness. Nice work.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Rebels barely know how to pilot their ships. It is no big deal.
	if (response == "s_8e613fca")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_giveReward15 (player, npc);

			//-- NPC: To the Empire it is a very big deal. To show their appreciation, here is a bonus payment. Take some time off and enjoy that bonus. When you are ready come back and see me for some more work.
			string_id message = new string_id (c_stringFile, "s_345e676a");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've done an excellent job for me, %NU.  I can see that you are ready for more training.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of training?
	if (response == "s_164")
	{
		//-- [NOTE] 
		if (!corellia_imperial_trainer_2_condition_hasStarshipSkill2 (player, npc))
		{
			//-- NPC: You will be learning about advanced TIE combat craft.
			string_id message = new string_id (c_stringFile, "s_165");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_214");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corellia_imperial_trainer_2_condition_hasWeaponSkill2 (player, npc))
		{
			//-- NPC: You will be learning about intermediate starship component use.
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 60);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corellia_imperial_trainer_2_condition_hasProceduresSkill2 (player, npc))
		{
			//-- NPC: You will be learning about regular Imperial training.
			string_id message = new string_id (c_stringFile, "s_167");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_182");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 65);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will be learning about reactor engineering algorithms.
			string_id message = new string_id (c_stringFile, "s_168");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_170");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 70);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will be learning about advanced TIE combat craft.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_214")
	{
		corellia_imperial_trainer_2_action_buyStarshipSkill2 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_setReadyForMission1 (player, npc);

			//-- NPC: The Empire's advanced craft are worth the effort required to master them.  I have a critical task that you can apply your new-found skills to.
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do I get to baby-sit another freighter?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_218");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 51);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire's advanced craft are worth the effort required to master them.  I have a critical task that you can apply your new-found skills to.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do I get to baby-sit another freighter?
	if (response == "s_218")
	{
		doAnimationAction (player, "shake_head_disgust");

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not all tasks can be fit for the history books, but perhaps this one may.  The Rebels are flying in a diplomat named Darmin Lerspri, supposedly an Alderaanian official of some sort who happened to be off world when it was destroyed.
			string_id message = new string_id (c_stringFile, "s_220");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am to capture this man?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: About Alderaan....
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_246");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not all tasks can be fit for the history books, but perhaps this one may.  The Rebels are flying in a diplomat named Darmin Lerspri, supposedly an Alderaanian official of some sort who happened to be off world when it was destroyed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am to capture this man?
	if (response == "s_222")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, you are to kill him.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I thought you wanted pilots, not assassins?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: About Alderaan....
	if (response == "s_246")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We are not here to discuss a dead and wasted planet, stay focused!
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am to capture this man?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: About Alderaan....
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_246");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, you are to kill him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I thought you wanted pilots, not assassins?
	if (response == "s_226")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Pilots I have.  But I do not want this man to even set foot on Corellia. So I need an assassin.
			string_id message = new string_id (c_stringFile, "s_228");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What Intelligence do we have on the target?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Pilots I have.  But I do not want this man to even set foot on Corellia. So I need an assassin.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What Intelligence do we have on the target?
	if (response == "s_230")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Darmin will be travelling in a YT-1300 named the 'Nerfs Pride', and will likely have an armed escort.
			string_id message = new string_id (c_stringFile, "s_232");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Darmin will be travelling in a YT-1300 named the 'Nerfs Pride', and will likely have an armed escort.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Nerfs Pride'?
	if (response == "s_234")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Apparently he was some sort of nerf herder on his native Alderaan.  The ships name is not of concern.
			string_id message = new string_id (c_stringFile, "s_236");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you estimate the strength of his escort?
	if (response == "s_238")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: I expect only a couple fighters.  What you should be more concerned with is the local fighter wing here on Corellia.  We do not know of their base yet, so they may be scrambled while we remain unaware.
			string_id message = new string_id (c_stringFile, "s_240");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMission12 (player, npc);

			//-- NPC: Good luck %NU, take no prisoners.
			string_id message = new string_id (c_stringFile, "s_244");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Apparently he was some sort of nerf herder on his native Alderaan.  The ships name is not of concern.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Nerfs Pride'?
	if (response == "s_234")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Apparently he was some sort of nerf herder on his native Alderaan.  The ships name is not of concern.
			string_id message = new string_id (c_stringFile, "s_236");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you estimate the strength of his escort?
	if (response == "s_238")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: I expect only a couple fighters.  What you should be more concerned with is the local fighter wing here on Corellia.  We do not know of their base yet, so they may be scrambled while we remain unaware.
			string_id message = new string_id (c_stringFile, "s_240");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMission12 (player, npc);

			//-- NPC: Good luck %NU, take no prisoners.
			string_id message = new string_id (c_stringFile, "s_244");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I expect only a couple fighters.  What you should be more concerned with is the local fighter wing here on Corellia.  We do not know of their base yet, so they may be scrambled while we remain unaware.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Nerfs Pride'?
	if (response == "s_234")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Apparently he was some sort of nerf herder on his native Alderaan.  The ships name is not of concern.
			string_id message = new string_id (c_stringFile, "s_236");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you estimate the strength of his escort?
	if (response == "s_238")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: I expect only a couple fighters.  What you should be more concerned with is the local fighter wing here on Corellia.  We do not know of their base yet, so they may be scrambled while we remain unaware.
			string_id message = new string_id (c_stringFile, "s_240");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 'Nerfs Pride'?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Can you estimate the strength of his escort?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_238");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_242");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready.
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMission12 (player, npc);

			//-- NPC: Good luck %NU, take no prisoners.
			string_id message = new string_id (c_stringFile, "s_244");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch59 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We are not here to discuss a dead and wasted planet, stay focused!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am to capture this man?
	if (response == "s_222")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, you are to kill him.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I thought you wanted pilots, not assassins?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: About Alderaan....
	if (response == "s_246")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We are not here to discuss a dead and wasted planet, stay focused!
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am to capture this man?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: About Alderaan....
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_246");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will be learning about intermediate starship component use.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_198")
	{
		corellia_imperial_trainer_2_action_buyWeaponSkill2 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_setReadyForMission3 (player, npc);

			//-- NPC: Yes, and you will be afforded the opportunity to use that knowledge.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you have a task for me?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_202");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 61);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, and you will be afforded the opportunity to use that knowledge.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have a task for me?
	if (response == "s_202")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed.  There has been a squad of Rebel bombers sighted in the system. Black Epsilon has been tasked with their destruction.
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Shouldn't a straightforward assault be handled by the Navy?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_206");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch62 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Indeed.  There has been a squad of Rebel bombers sighted in the system. Black Epsilon has been tasked with their destruction.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Shouldn't a straightforward assault be handled by the Navy?
	if (response == "s_206")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Imperial Navy is tied up with other tasks at the moment.  Black Epsilon can accomplish with one craft what would take them ten.
			string_id message = new string_id (c_stringFile, "s_208");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will not fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_210");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Imperial Navy is tied up with other tasks at the moment.  Black Epsilon can accomplish with one craft what would take them ten.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will not fail.
	if (response == "s_210")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMission14 (player, npc);

			//-- NPC: See that you don't.
			string_id message = new string_id (c_stringFile, "s_212");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch65 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will be learning about regular Imperial training.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_182")
	{
		corellia_imperial_trainer_2_action_buyProcedureSkill2 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_setReadyForMission4 (player, npc);

			//-- NPC: I have a priority task to accompany this assignment.
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What sort of task.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 66);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have a priority task to accompany this assignment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What sort of task.
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: One of the scanning vessels received odd signals from a Nebula in the system. There are possible Rebel craft in the area, but the interference from the Nebula make it difficult to confirm.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This is a reconnaissance flight then?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_190");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 67);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch67 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One of the scanning vessels received odd signals from a Nebula in the system. There are possible Rebel craft in the area, but the interference from the Nebula make it difficult to confirm.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is a reconnaissance flight then?
	if (response == "s_190")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, this is a burrow mite hunt.  I KNOW they are in there, and I want you to dig them out.
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_194");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, this is a burrow mite hunt.  I KNOW they are in there, and I want you to dig them out.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_194")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMission15 (player, npc);

			//-- NPC: They will not be able to resist attacking you.  Ambush is their favorite tactic knowing that a direct assault is futile.  Show them what it means cross with Black Epsilon.
			string_id message = new string_id (c_stringFile, "s_196");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will be learning about reactor engineering algorithms.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_170")
	{
		corellia_imperial_trainer_2_action_buyDroidSkill2 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_setReadyForMission2 (player, npc);

			//-- NPC: Indeed, droid management is important. Your droid is almost as vital as your blaster. I have another mission lined up for you, so get your droid prepared.
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What must I do?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Indeed, droid management is important. Your droid is almost as vital as your blaster. I have another mission lined up for you, so get your droid prepared.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What must I do?
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Black Epsilon command wants you to intercept a freighter and inspect their cargo.  You are looking for a Personnel Dossier on Rebel agents working in the Coronet area.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What should I do with the freighter?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_178");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon command wants you to intercept a freighter and inspect their cargo.  You are looking for a Personnel Dossier on Rebel agents working in the Coronet area.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What should I do with the freighter?
	if (response == "s_178")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			corellia_imperial_trainer_2_action_grantMission13 (player, npc);

			//-- NPC: That is between you, the freighter, and the cold reaches of space.  Dismissed!
			string_id message = new string_id (c_stringFile, "s_180");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch74 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well done. Consider yourself part of my squad. I do not have time for idle chatter %NU, so are you prepared for your next assignment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I am.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Since you appear to have run out of useful things to do, take some duties to keep you busy.
			string_id message = new string_id (c_stringFile, "s_ee11d13c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [DESTROY] I wish to assist in anti-pirate patrols.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [ESCORT] I will assist as a merchant escort.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [DESTROY] I'm looking to dust a few Rebels.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: [ESCORT] I wish to assist the local security forces.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bd5df827");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_798fbe2");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1a0f022");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3e38e6a0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I have other matters to attend to.
	if (response == "s_25c6e073")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then return when speaking with me will not be such an inconvenience.  I will not look forward to you wasting more of my time.
			string_id message = new string_id (c_stringFile, "s_395e48e8");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Since you appear to have run out of useful things to do, take some duties to keep you busy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [DESTROY] I wish to assist in anti-pirate patrols.
	if (response == "s_bd5df827")
	{
		corellia_imperial_trainer_2_action_grantMission08 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Downing local pirates will make the Empire look favorable to the citizens of this sector.
			string_id message = new string_id (c_stringFile, "s_dc33e486");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [ESCORT] I will assist as a merchant escort.
	if (response == "s_798fbe2")
	{
		corellia_imperial_trainer_2_action_grantMission09 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Trade is the lifeblood of the Corellian system. This task will give us high visibility with those whose loyalty we aim to sway.
			string_id message = new string_id (c_stringFile, "s_e8db34a5");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [DESTROY] I'm looking to dust a few Rebels.
	if (response == "s_1a0f022")
	{
		corellia_imperial_trainer_2_action_grantMission10 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Leave no survivors. The Emperor does not look favorably on mercy or weakness.
			string_id message = new string_id (c_stringFile, "s_e17fc7e4");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [ESCORT] I wish to assist the local security forces.
	if (response == "s_3e38e6a0")
	{
		corellia_imperial_trainer_2_action_grantMission11 (player, npc);

		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need you to escort one of our scanning vessels on its rounds.  As you can imagine both smugglers and Rebels alike would love to see these craft out of commission.
			string_id message = new string_id (c_stringFile, "s_3ab6a9ed");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch81 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hakasha sent me.
	if (response == "s_9edd30bf")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: How does that explain you gawking like a fool?
			string_id message = new string_id (c_stringFile, "s_c71a5ce3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I believed that Bothawui had sided with the Rebellion.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f87e5fe8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch82 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How does that explain you gawking like a fool?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believed that Bothawui had sided with the Rebellion.
	if (response == "s_f87e5fe8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: By such narrow minded thinking, all humans would be loyal followers of the Empire. Bothawui remains neutral as always, though many clans have openly sided with the Rebels, my clan has found the Imperial coffers deep enough for our loyalties.  I am sure one such as you can understand.
			string_id message = new string_id (c_stringFile, "s_eea972b1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Indeed.  I am ready for a mission.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f4f691ae");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 83);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch83 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: By such narrow minded thinking, all humans would be loyal followers of the Empire. Bothawui remains neutral as always, though many clans have openly sided with the Rebels, my clan has found the Imperial coffers deep enough for our loyalties.  I am sure one such as you can understand.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Indeed.  I am ready for a mission.
	if (response == "s_f4f691ae")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Eager and to the point, I like that. I willing to give you a test run. If you succeed I think that I might have an opening in my squad for you. If you fail...well you will be dead and I won't lose any sleep over it. There is a Hidden Dagger heavy transport entering the system that needs to be eliminated.
			string_id message = new string_id (c_stringFile, "s_2ee19e18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What will be my involvement?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7a33d3dc");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 84);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch84 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Eager and to the point, I like that. I willing to give you a test run. If you succeed I think that I might have an opening in my squad for you. If you fail...well you will be dead and I won't lose any sleep over it. There is a Hidden Dagger heavy transport entering the system that needs to be eliminated.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What will be my involvement?
	if (response == "s_7a33d3dc")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I fully expect you to die. You are still expendable in my book so consider this a test.
			string_id message = new string_id (c_stringFile, "s_fd8878bc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch85 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I fully expect you to die. You are still expendable in my book so consider this a test.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are these Hidden Daggers?
	if (response == "s_e7f16de3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Hidden Daggers were a minor band of highly skilled Assassins founded by a disavowed Flail Cutthroat Lieutenant.  They were never well known, taking only small bounties and have since degenerated into a band of thugs and pirates.
			string_id message = new string_id (c_stringFile, "s_683cbf70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we want them destroyed?
	if (response == "s_f37f3d1a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slit_throat");

			//-- NPC: However inept they may be, they did manage to acquire some information about the 'Rebel' attack of the 72nd Army Barracks.  They are transporting this information to the Rebels here on Corellia now.  This cannot be allowed to happen.
			string_id message = new string_id (c_stringFile, "s_bc90f6c5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take the mission.
	if (response == "s_8bf01045")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: This will not be a simple ordeal.  If Black Epsilon just wanted them destroyed, we would have dispatched the Navy.  We need this vessel captured.
			string_id message = new string_id (c_stringFile, "s_aa457e5d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch86 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Hidden Daggers were a minor band of highly skilled Assassins founded by a disavowed Flail Cutthroat Lieutenant.  They were never well known, taking only small bounties and have since degenerated into a band of thugs and pirates.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are these Hidden Daggers?
	if (response == "s_e7f16de3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Hidden Daggers were a minor band of highly skilled Assassins founded by a disavowed Flail Cutthroat Lieutenant.  They were never well known, taking only small bounties and have since degenerated into a band of thugs and pirates.
			string_id message = new string_id (c_stringFile, "s_683cbf70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we want them destroyed?
	if (response == "s_f37f3d1a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slit_throat");

			//-- NPC: However inept they may be, they did manage to acquire some information about the 'Rebel' attack of the 72nd Army Barracks.  They are transporting this information to the Rebels here on Corellia now.  This cannot be allowed to happen.
			string_id message = new string_id (c_stringFile, "s_bc90f6c5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take the mission.
	if (response == "s_8bf01045")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: This will not be a simple ordeal.  If Black Epsilon just wanted them destroyed, we would have dispatched the Navy.  We need this vessel captured.
			string_id message = new string_id (c_stringFile, "s_aa457e5d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: However inept they may be, they did manage to acquire some information about the 'Rebel' attack of the 72nd Army Barracks.  They are transporting this information to the Rebels here on Corellia now.  This cannot be allowed to happen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are these Hidden Daggers?
	if (response == "s_e7f16de3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Hidden Daggers were a minor band of highly skilled Assassins founded by a disavowed Flail Cutthroat Lieutenant.  They were never well known, taking only small bounties and have since degenerated into a band of thugs and pirates.
			string_id message = new string_id (c_stringFile, "s_683cbf70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we want them destroyed?
	if (response == "s_f37f3d1a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slit_throat");

			//-- NPC: However inept they may be, they did manage to acquire some information about the 'Rebel' attack of the 72nd Army Barracks.  They are transporting this information to the Rebels here on Corellia now.  This cannot be allowed to happen.
			string_id message = new string_id (c_stringFile, "s_bc90f6c5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who are these Hidden Daggers?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we want them destroyed?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll take the mission.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7f16de3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f37f3d1a");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8bf01045");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 85);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take the mission.
	if (response == "s_8bf01045")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: This will not be a simple ordeal.  If Black Epsilon just wanted them destroyed, we would have dispatched the Navy.  We need this vessel captured.
			string_id message = new string_id (c_stringFile, "s_aa457e5d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch88 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This will not be a simple ordeal.  If Black Epsilon just wanted them destroyed, we would have dispatched the Navy.  We need this vessel captured.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How will I do this?
	if (response == "s_83c3790d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: They will likely have an escort.  This escort must be neutralized.  Then target the freighter's engines to disable them.  After they are down, move into position, and upload an autopilot override program that TechOps is outfitting your craft with now.
			string_id message = new string_id (c_stringFile, "s_52841755");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What should I do with the crew?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26912e4b");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we need them captured?
	if (response == "s_c8516ab0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Black Epsilon does not wish the Rebels to have any local allies here.  We will use the ship, properly scuttled, to implicate foul play at the hands of the Rebels.
			string_id message = new string_id (c_stringFile, "s_4ea4b48d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready to take off.
	if (response == "s_1d1f03a8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionOpen (player, npc);

			//-- NPC: Stay focused.  The fallback plan is to destroy this freighter outright if your assault fails.  We do not have any craft available for a rescue, so don't expect one.
			string_id message = new string_id (c_stringFile, "s_38d28ac2");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch89 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They will likely have an escort.  This escort must be neutralized.  Then target the freighter's engines to disable them.  After they are down, move into position, and upload an autopilot override program that TechOps is outfitting your craft with now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What should I do with the crew?
	if (response == "s_26912e4b")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The crew has been accounted for.  Just get the program uploaded.
			string_id message = new string_id (c_stringFile, "s_4a5ef35b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch90 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The crew has been accounted for.  Just get the program uploaded.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How will I do this?
	if (response == "s_83c3790d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: They will likely have an escort.  This escort must be neutralized.  Then target the freighter's engines to disable them.  After they are down, move into position, and upload an autopilot override program that TechOps is outfitting your craft with now.
			string_id message = new string_id (c_stringFile, "s_52841755");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What should I do with the crew?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26912e4b");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we need them captured?
	if (response == "s_c8516ab0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Black Epsilon does not wish the Rebels to have any local allies here.  We will use the ship, properly scuttled, to implicate foul play at the hands of the Rebels.
			string_id message = new string_id (c_stringFile, "s_4ea4b48d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready to take off.
	if (response == "s_1d1f03a8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionOpen (player, npc);

			//-- NPC: Stay focused.  The fallback plan is to destroy this freighter outright if your assault fails.  We do not have any craft available for a rescue, so don't expect one.
			string_id message = new string_id (c_stringFile, "s_38d28ac2");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_2_handleBranch91 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon does not wish the Rebels to have any local allies here.  We will use the ship, properly scuttled, to implicate foul play at the hands of the Rebels.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How will I do this?
	if (response == "s_83c3790d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: They will likely have an escort.  This escort must be neutralized.  Then target the freighter's engines to disable them.  After they are down, move into position, and upload an autopilot override program that TechOps is outfitting your craft with now.
			string_id message = new string_id (c_stringFile, "s_52841755");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What should I do with the crew?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26912e4b");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do we need them captured?
	if (response == "s_c8516ab0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Black Epsilon does not wish the Rebels to have any local allies here.  We will use the ship, properly scuttled, to implicate foul play at the hands of the Rebels.
			string_id message = new string_id (c_stringFile, "s_4ea4b48d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How will I do this?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why do we need them captured?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I am ready to take off.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_83c3790d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c8516ab0");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1d1f03a8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 88);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready to take off.
	if (response == "s_1d1f03a8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_2_action_grantMissionOpen (player, npc);

			//-- NPC: Stay focused.  The fallback plan is to destroy this freighter outright if your assault fails.  We do not have any craft available for a rescue, so don't expect one.
			string_id message = new string_id (c_stringFile, "s_38d28ac2");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_imperial_trainer_2");

	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setupNpc(self, "Prisk Kith`Vys", true, true);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	factions.setFaction( self, factions.FACTION_IMPERIAL );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setupNpc(self, "Prisk Kith`Vys", true, true);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	factions.setFaction( self, factions.FACTION_IMPERIAL );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_imperial_trainer_2");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isPrivateer (player, npc))
	{
		doAnimationAction (npc, "wave_finger_warning");

		//-- NPC: You would hate to ruin my mood by speaking with me friend, so why don't we end our conversation here.
		string_id message = new string_id (c_stringFile, "s_fc007f1");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isRebel (player, npc))
	{
		doAnimationAction (npc, "slow_down");

		//-- NPC: Your face is familiar to me, but I can't remember why. You're probably wanted for something, I'm sure.
		string_id message = new string_id (c_stringFile, "s_dbf39d2a");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_imperial_trainer_2_condition_isPilot (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: You would hate to ruin my mood by speaking with me, so why don't we end our conversation here.
		string_id message = new string_id (c_stringFile, "s_4391b2de");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasNegativeFactionMale (player, npc))
	{
		doAnimationAction (npc, "sigh_deeply");

		//-- NPC: %TU, is it?  I hear you are a wanted man.
		string_id message = new string_id (c_stringFile, "s_f7df921b");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What?!
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7090182");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasNegativeFaction (player, npc))
	{
		doAnimationAction (npc, "sigh_deeply");

		//-- NPC: %TU, is it?  I hear you are a wanted woman.
		string_id message = new string_id (c_stringFile, "s_9d62faa2");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What?!
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 9);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_imperial_trainer_2_condition_onMyTrack (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		//-- NPC: I do not have time for pleasantries, pilot. Why have you come?
		string_id message = new string_id (c_stringFile, "s_74f9775d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would like to request a mission.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4854758d");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 14);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isReadyForMission (player, npc))
	{
		doAnimationAction (npc, "nod");

		//-- NPC: It's about time that you returned. I have an assignment for you and it cannot wait.
		string_id message = new string_id (c_stringFile, "s_9a117462");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is the task?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6d3be6aa");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 17);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasCompletedFinal (player, npc))
	{
		doAnimationAction (npc, "thumb_up");

		//-- NPC: That is all I have for you.  Speak with Haymir Rendundi for more duties. He is currently stationed at Imperial command on Yavin 4. Keep your nose clean and do your duty.  Haymir isn't nice like me and will be all over you if you mess up. Or are you here for more duties?
		string_id message = new string_id (c_stringFile, "s_be3a7e31");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Dismissed, aye sir!
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes I am.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_79375065");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d335136f");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 22);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedMissionFinal (player, npc))
	{
		doAnimationAction (npc, "pound_fist_palm");

		corellia_imperial_trainer_2_action_grantMissionFinal (player, npc);

		//-- NPC: This attack must proceed as planned.  Survive for as long as you can and keep their communications down.  Black Epsilon and your Emperor are counting on you.
		string_id message = new string_id (c_stringFile, "s_4cc1cf3b");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasAllTier2Skills (player, npc))
	{
		doAnimationAction (npc, "nod");

		//-- NPC: Your tour with me is just about finished, but I have one final task.
		string_id message = new string_id (c_stringFile, "s_d9391d4a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have more enemy fighter squads to put out of commission?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9d2c9b0a");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 25);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isOnQuest (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: You already have orders to carry out. Your time is my time, so quit wasting it or you may find yourself out of time.
		string_id message = new string_id (c_stringFile, "s_ae8492d2");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need a hyperdrive!
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5ffdd434");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 33);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedOpening (player, npc))
	{
		doAnimationAction (npc, "point_accusingly");

		//-- NPC: Blast it! Next time you mess up and fail, stay dead! I don't have any time for pilots who don't know when to zig when they should have zagged.
		string_id message = new string_id (c_stringFile, "s_e2d5b9eb");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Let me try again. You won't be disappointed.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37680b25");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 35);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedMission12 (player, npc))
	{
		doAnimationAction (npc, "point_up");

		corellia_imperial_trainer_2_action_grantMission12 (player, npc);

		//-- NPC: You have failed to dispose of Darmin, get back up there before he can land.
		string_id message = new string_id (c_stringFile, "s_bae9fe80");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedMission13 (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		corellia_imperial_trainer_2_action_grantMission13 (player, npc);

		//-- NPC: How can you fail such a simple task? Get back in space and complete your mission.
		string_id message = new string_id (c_stringFile, "s_63e01bb7");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedMission14 (player, npc))
	{
		corellia_imperial_trainer_2_action_grantMission14 (player, npc);

		//-- NPC: I will not have these bombers reach their objective.  Get up there and destroy them.
		string_id message = new string_id (c_stringFile, "s_b5a3714a");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasFailedMission15 (player, npc))
	{
		doAnimationAction (npc, "point_up");

		corellia_imperial_trainer_2_action_grantMission15 (player, npc);

		//-- NPC: What's wrong?  Were the mean Rebels too much for you?  Get up there and finish them.
		string_id message = new string_id (c_stringFile, "s_fe284208");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasWonMission12 (player, npc))
	{
		doAnimationAction (npc, "thumb_up");

		//-- NPC: You have more potential than I was expecting. Darmin will no longer be a thorn in the side of the Empire, thanks to your...intervention.
		string_id message = new string_id (c_stringFile, "s_e67a0734");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It was nothing. He deserved what he got.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_59894e66");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 41);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasWonMission13 (player, npc))
	{
		doAnimationAction (npc, "point_to_self");

		//-- NPC: You are back already? Do you have anything to report or are you just here wasting my time?
		string_id message = new string_id (c_stringFile, "s_cfb9fb6e");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: [Hand over dossier]
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d4374209");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 43);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasWonMission14 (player, npc))
	{
		doAnimationAction (npc, "applause_polite");

		//-- NPC: I honestly didn't expect you to survive this one. Yet again you prove to be a very resourceful pilot. Thanks to your efforts, the bomber squadron has been destroyed and security brought to the system.
		string_id message = new string_id (c_stringFile, "s_b69b5bf4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: All in a days work.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16439d46");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 45);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasWonMission15 (player, npc))
	{
		doAnimationAction (npc, "thumb_up");

		//-- NPC: I have reviewed your ship logs and must say that I am surprised that the Rebels decided to attack you. Regardless you handled yourself with utmost skill and ruthlessness. Nice work.
		string_id message = new string_id (c_stringFile, "s_9d96ae32");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: The Rebels barely know how to pilot their ships. It is no big deal.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8e613fca");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 47);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isReadyForTraining (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: You've done an excellent job for me, %NU.  I can see that you are ready for more training.
		string_id message = new string_id (c_stringFile, "s_584a90f8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What sort of training?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_164");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 49);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_hasCompletedOpening (player, npc))
	{
		doAnimationAction (npc, "thumbs_up");

		//-- NPC: Well done. Consider yourself part of my squad. I do not have time for idle chatter %NU, so are you prepared for your next assignment?
		string_id message = new string_id (c_stringFile, "s_392fc531");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes I am.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I have other matters to attend to.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_128");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_25c6e073");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 74);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition_isReadyForPhase2Other (player, npc))
	{
		//-- NPC: What do you want?
		string_id message = new string_id (c_stringFile, "s_6a1562ad");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Hakasha sent me.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9edd30bf");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId", 81);

			npcStartConversation (player, npc, "corellia_imperial_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_2_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "wave_finger_warning");

		//-- NPC: You would hate to ruin my mood by speaking with me friend, so why don't we end our conversation here.  If you have Imperial interests at heart, perhaps it is Hakasha Sireen you are seeking.
		string_id message = new string_id (c_stringFile, "s_e71f0d40");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_imperial_trainer_2")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

	if (branchId == 4 && corellia_imperial_trainer_2_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && corellia_imperial_trainer_2_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && corellia_imperial_trainer_2_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_imperial_trainer_2_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && corellia_imperial_trainer_2_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && corellia_imperial_trainer_2_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && corellia_imperial_trainer_2_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && corellia_imperial_trainer_2_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && corellia_imperial_trainer_2_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && corellia_imperial_trainer_2_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && corellia_imperial_trainer_2_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && corellia_imperial_trainer_2_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && corellia_imperial_trainer_2_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && corellia_imperial_trainer_2_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && corellia_imperial_trainer_2_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && corellia_imperial_trainer_2_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && corellia_imperial_trainer_2_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && corellia_imperial_trainer_2_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && corellia_imperial_trainer_2_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && corellia_imperial_trainer_2_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && corellia_imperial_trainer_2_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && corellia_imperial_trainer_2_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && corellia_imperial_trainer_2_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && corellia_imperial_trainer_2_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && corellia_imperial_trainer_2_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && corellia_imperial_trainer_2_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && corellia_imperial_trainer_2_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && corellia_imperial_trainer_2_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && corellia_imperial_trainer_2_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && corellia_imperial_trainer_2_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && corellia_imperial_trainer_2_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && corellia_imperial_trainer_2_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && corellia_imperial_trainer_2_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && corellia_imperial_trainer_2_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && corellia_imperial_trainer_2_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && corellia_imperial_trainer_2_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && corellia_imperial_trainer_2_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && corellia_imperial_trainer_2_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 59 && corellia_imperial_trainer_2_handleBranch59 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && corellia_imperial_trainer_2_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && corellia_imperial_trainer_2_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 62 && corellia_imperial_trainer_2_handleBranch62 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && corellia_imperial_trainer_2_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 65 && corellia_imperial_trainer_2_handleBranch65 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && corellia_imperial_trainer_2_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 67 && corellia_imperial_trainer_2_handleBranch67 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && corellia_imperial_trainer_2_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && corellia_imperial_trainer_2_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && corellia_imperial_trainer_2_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && corellia_imperial_trainer_2_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 74 && corellia_imperial_trainer_2_handleBranch74 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && corellia_imperial_trainer_2_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 81 && corellia_imperial_trainer_2_handleBranch81 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 82 && corellia_imperial_trainer_2_handleBranch82 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 83 && corellia_imperial_trainer_2_handleBranch83 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 84 && corellia_imperial_trainer_2_handleBranch84 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 85 && corellia_imperial_trainer_2_handleBranch85 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 86 && corellia_imperial_trainer_2_handleBranch86 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && corellia_imperial_trainer_2_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 88 && corellia_imperial_trainer_2_handleBranch88 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 89 && corellia_imperial_trainer_2_handleBranch89 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 90 && corellia_imperial_trainer_2_handleBranch90 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 91 && corellia_imperial_trainer_2_handleBranch91 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_2.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

