// ======================================================================
//
// tat_icon_missingdroid_droid.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.34 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/tat_icon_missingdroid_droid";

// ======================================================================
// Script Conditions
// ======================================================================

boolean tat_icon_missingdroid_droid_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean tat_icon_missingdroid_droid_condition_fixingJawa_e2_jawa2Droid (obj_id player, obj_id npc)
{	
	int questId1 = questGetQuestId("quest/tat_icon_fixingjawa_1");
	int tat_icon_jawa_to_droid_e2 = groundquests.getTaskId(questId1, "tat_icon_jawa_to_droid_e2"); 
	
	boolean onTask = questIsTaskActive(questId1, tat_icon_jawa_to_droid_e2, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean tat_icon_missingdroid_droid_condition_fixingJawa_e7_lyrissa2Droid (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/tat_icon_fixingjawa_1");
	int tat_icon_jawa_to_droid_e2 = groundquests.getTaskId(questId1, "tat_icon_lyrissa_to_droid_e7"); 
	
	boolean onTask = questIsTaskActive(questId1, tat_icon_jawa_to_droid_e2, player);
	
	return onTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void tat_icon_missingdroid_droid_action_signal_gotoDren_e2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "tat_icon_fixingjawa_jawa_to_droid_e2");
}

// ----------------------------------------------------------------------

void tat_icon_missingdroid_droid_action_signal_gotoDren_e7 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "tat_icon_fixingjawa_lyrissa_to_droid_e7");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int tat_icon_missingdroid_droid_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The droid appears to start coming out of standby mode as you approach it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [INSERT SLICE CARD]
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			tat_icon_missingdroid_droid_action_signal_gotoDren_e7 (player, npc);

			//-- NPC: Bleep! Memory purge initiated... Reconstructing priority parameters matrix...
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Brzzt! Harvesting... mines. Collection terminated.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Override code Aurek Trill Seven Resh Three. Begin diagnostic mode.
	if (response == "s_7")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			//-- NPC: zzikt! Boop bleep boop. Diagnostic mode con... con... execute backup behavioral inducers. Reset in 5... 4... 3... 2... 1... Diagnostic mode confirmed. Please begin diagnostic procedures.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: State primary function
			boolean hasResponse0 = false;
			if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: zzikt! Boop bleep boop. Diagnostic mode con... con... execute backup behavioral inducers. Reset in 5... 4... 3... 2... 1... Diagnostic mode confirmed. Please begin diagnostic procedures.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: State primary function
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			//-- NPC: Primary function is to harvest... mines. Error. Primary function is ambiguous. Reverting to core functionality... Primary function is to disable enemy munitions and disperse area denial munitions.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: State secondary function
			boolean hasResponse0 = false;
			if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Primary function is to harvest... mines. Error. Primary function is ambiguous. Reverting to core functionality... Primary function is to disable enemy munitions and disperse area denial munitions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: State secondary function
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			//-- NPC: Secondary function is to harvest moisture vaporators. Secondary function is contrary to primary function. Disregarding extraneous function programming.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Override code Xesh Herf Four Isk Nine. Perform Immediate shutdown.
			boolean hasResponse0 = false;
			if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Secondary function is to harvest moisture vaporators. Secondary function is contrary to primary function. Disregarding extraneous function programming.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Override code Xesh Herf Four Isk Nine. Perform Immediate shutdown.
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "threaten_combat");

			//-- NPC: Error. Cannot perform shutdown procedures. Combat awareness behavior initiated.
			string_id message = new string_id (c_stringFile, "s_23");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh oh...
			boolean hasResponse0 = false;
			if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Error. Cannot perform shutdown procedures. Combat awareness behavior initiated.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh oh...
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			//-- NPC: Combat awareness behavior initiation complete. Standby window closing in 10 seconds... 9... 8...
			string_id message = new string_id (c_stringFile, "s_27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Override code Grek Dorn Cresh Eight One. Perform standby procedures.
			boolean hasResponse0 = false;
			if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int tat_icon_missingdroid_droid_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Combat awareness behavior initiation complete. Standby window closing in 10 seconds... 9... 8...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Override code Grek Dorn Cresh Eight One. Perform standby procedures.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			tat_icon_missingdroid_droid_action_signal_gotoDren_e2 (player, npc);

			//-- NPC: Standby code recognized. Beginning standby procedures... Munitions dispenser set to park position... Deployment arm retracted... disengaging motivators... charging startup capacitors... main power standby in 3... 2... 1...
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
    if ((!isMob (self)) || (isPlayer (self)))
    	detachScript(self, "conversation.tat_icon_missingdroid_droid");
    	
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

    setName (self, "Strange Droid");

    ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

    return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);
    
    setName (self, "Strange Droid");
    
    ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
    
    return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.tat_icon_missingdroid_droid");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (tat_icon_missingdroid_droid_condition_fixingJawa_e7_lyrissa2Droid (player, npc))
	{
		doAnimationAction (npc, "manipulate_high");

		//-- NPC: The droid appears to start coming out of standby mode as you approach it.
		string_id message = new string_id (c_stringFile, "s_26");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: [INSERT SLICE CARD]
		boolean hasResponse0 = false;
		if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29");

			utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 1);

			npcStartConversation (player, npc, "tat_icon_missingdroid_droid", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (tat_icon_missingdroid_droid_condition__defaultCondition (player, npc))
	{
		//-- NPC: Brzzt! Harvesting... mines. Collection terminated.
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Override code Aurek Trill Seven Resh Three. Begin diagnostic mode.
		boolean hasResponse0 = false;
		if (tat_icon_missingdroid_droid_condition_fixingJawa_e2_jawa2Droid (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7");

			utils.setScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId", 3);

			npcStartConversation (player, npc, "tat_icon_missingdroid_droid", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "tat_icon_missingdroid_droid")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

	if (branchId == 1 && tat_icon_missingdroid_droid_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && tat_icon_missingdroid_droid_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && tat_icon_missingdroid_droid_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && tat_icon_missingdroid_droid_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && tat_icon_missingdroid_droid_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && tat_icon_missingdroid_droid_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && tat_icon_missingdroid_droid_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.tat_icon_missingdroid_droid.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

