// ======================================================================
//
// theme_park_record_keeper_rebel.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/theme_park_record_keeper_rebel";

// ======================================================================
// Script Conditions
// ======================================================================

boolean theme_park_record_keeper_rebel_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_rebel_condition_theme_park_complete (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.rebel")) {
	
		if(hasObjVar(player, "theme_park_rebel")) {
		
			int gating = getIntObjVar(player, "theme_park_rebel");
			
			if(gating >= 49) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_rebel_condition_theme_park_in_progress (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.rebel")) {
	
		if(hasObjVar(player, "theme_park_rebel")) {
		
			int gating = getIntObjVar(player, "theme_park_rebel");
			
			if(gating > 0) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_rebel_condition_already_reset (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "theme_park_reset.rebel")) {
	
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_rebel_condition_not_rebel (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);

	if(playerFaction == null || playerFaction == "") {

		playerFaction = "neutral";

	}

	if(!playerFaction.equals(factions.FACTION_REBEL)) {

		return true;
	}
	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void theme_park_record_keeper_rebel_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_rebel_action_reset_gating (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.rebel", true);
	
	int gating = getIntObjVar(player, "theme_park_rebel");
	removeObjVar(player, "theme_park_rebel");
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Rebel -- " + getName(player) + " (" + player + ") has opted to RESET his/her theme park obj var [" + gating + "] and START OVER");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_rebel_action_set_redo (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.rebel", true);
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Rebel -- " + getName(player) + " (" + player + ") has opted to NOT RESET his/her theme park obj var and CONTINUE");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_rebel_action_face_to (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.theme_park_record_keeper_rebel");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.theme_park_record_keeper_rebel");

	return SCRIPT_CONTINUE;
}


// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (theme_park_record_keeper_rebel_condition_not_rebel (player, self))
	{
		theme_park_record_keeper_rebel_action_face_to (player, self);

		//-- NPC: I'm sorry, I don't believe that you would have been in our databases. You don't need to speak with me.
		string_id message = new string_id (c_stringFile, "s_b1f9a8ac");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_rebel_condition_already_reset (player, self))
	{
		theme_park_record_keeper_rebel_action_face_to (player, self);

		//-- NPC: Yes, I have already recorded your services. You do not need to speak with me.
		string_id message = new string_id (c_stringFile, "s_5a47438c");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_rebel_condition_theme_park_complete (player, self))
	{
		theme_park_record_keeper_rebel_action_face_to (player, self);

		//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
		string_id message = new string_id (c_stringFile, "s_37420d49");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 3);

			npcStartConversation (player, self, "theme_park_record_keeper_rebel", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_rebel_condition_theme_park_in_progress (player, self))
	{
		theme_park_record_keeper_rebel_action_face_to (player, self);

		//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
		string_id message = new string_id (c_stringFile, "s_37420d49");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 20);

			npcStartConversation (player, self, "theme_park_record_keeper_rebel", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
	{
		theme_park_record_keeper_rebel_action_face_to (player, self);

		//-- NPC: I don't believe that you have performed any services for our cause in the past. You do not need to speak with me.
		string_id message = new string_id (c_stringFile, "s_3547d92c");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "theme_park_record_keeper_rebel")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 3 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
			string_id message = new string_id (c_stringFile, "s_ce26bb71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_edb238bc");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 3 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (branchId == 4 && response == "s_edb238bc")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
			string_id message = new string_id (c_stringFile, "s_19da6a67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. What do you need me for?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_866cf013");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 4 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. What do you need me for?
	if (branchId == 5 && response == "s_866cf013")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
			string_id message = new string_id (c_stringFile, "s_a45bb0ec");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. What do you need?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b7023094");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 5 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. What do you need?
	if (branchId == 6 && response == "s_b7023094")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_3315cf03");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does that entail?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history right now.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3cf75f2d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6e88ecc1");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 6 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does that entail?
	if (branchId == 7 && response == "s_3cf75f2d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Rebellion. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_48d3face");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 7 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history right now.
	if (branchId == 7 && response == "s_6e88ecc1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those who have helped us so willingly in the past are not called on to do so again. However, if you wish, I can reset your service history with the Rebellion. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Rebellion. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 8 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Rebellion. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my service history.
	if (branchId == 9 && response == "s_dc1c8663")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_rebel_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with C-3PO when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_7666799");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 9 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my service history.
	if (branchId == 12 && response == "s_dc1c8663")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_rebel_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with C-3PO when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_7666799");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 12 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 20 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
			string_id message = new string_id (c_stringFile, "s_ce26bb71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_edb238bc");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 20 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, good. I'm glad you stopped by, now I don't have to go looking for you. I need to ask you some questions if you have a moment to spare.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (branchId == 21 && response == "s_edb238bc")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
			string_id message = new string_id (c_stringFile, "s_19da6a67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. What do you need me for?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_866cf013");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 21 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We almost had a major catastrophe. The data disks that we use to keep all information on our allies that have performed services for our cause were stolen recently by an Imperial spy.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. What do you need me for?
	if (branchId == 22 && response == "s_866cf013")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
			string_id message = new string_id (c_stringFile, "s_a45bb0ec");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. What do you need?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b7023094");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 22 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'We don't know who the spy was, but we were able to destroy his ship as it took off. He was killed in the explosion, but unfortunately the data disks he stole were destroyed as well.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. What do you need?
	if (branchId == 23 && response == "s_b7023094")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_2eadaa06");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 23 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Of course. Please come back and speak with me when you get a chance.
			string_id message = new string_id (c_stringFile, "s_b78f6030");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, it's up to me to recompile all the data that was on those disks, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 24 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_deeb1462");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 24 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_3d89228f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 24 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 24 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 24 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your service history and you can assist the Rebellion again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 25 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_3d89228f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 25 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 25 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 25 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 26 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_deeb1462");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 26 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 26 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 26 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my service history.
	if (branchId == 27 && response == "s_dc1c8663")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_rebel_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with C-3PO when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_7666799");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 27 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Take all the time you need.
			string_id message = new string_id (c_stringFile, "s_3c440d33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 29 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_deeb1462");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 29 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_3d89228f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 29 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 29 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 29 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. I want to continue my service.
	if (branchId == 30 && response == "s_f7565bbd")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_rebel_action_set_redo (player, self);

			//-- NPC: Very well, it is done. You may continue your service to the Rebellion where you last left off.
			string_id message = new string_id (c_stringFile, "s_45b87508");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 30 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Take all the time you need.
			string_id message = new string_id (c_stringFile, "s_3c440d33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 32 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Rebellion again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Rebellion. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_deeb1462");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 32 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will give you further instructions then. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_3d89228f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my service history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9bc93d72");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my service history.
	if (branchId == 32 && response == "s_9bc93d72")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your service history?
			string_id message = new string_id (c_stringFile, "s_11f0619b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my service history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dc1c8663");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 32 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 32 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_rebel_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.theme_park_record_keeper_rebel.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

