// ======================================================================
//
// restuss_imperial_space_destroy.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.resource;
include library.restuss_event;
include library.space_flags;
include library.space_quest;
include library.trial;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_imperial_space_destroy";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_imperial_space_destroy_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_completedKill1 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_imperial_space_destroy_1", "returnWulf");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_killActive1 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_imperial_space_destroy_1");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_completedKill2 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_imperial_space_destroy_2", "returnWulf2");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_killActive2 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_imperial_space_destroy_2");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_inPhase2 (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isImperial(player)&&
		(restuss_event.getPhase(object) == 2))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_inPhase1 (obj_id player, obj_id npc)
{
	if (factions.isImperial(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_enoughKills (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isImperial(player)&&
		(restuss_event.getPhase(object) == 3))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_ifFailedOne (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuestRecursive( player, "destroy", "restuss_imperial_destroy_1" ) ||
		 space_quest.hasAbortedQuestRecursive( player, "destroy", "restuss_imperial_destroy_1" ) )
		 {
		 	return true;
		 }
	return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_ifFailedTwo (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuestRecursive( player, "destroy", "restuss_imperial_destroy_2" ) ||
		 space_quest.hasAbortedQuestRecursive( player, "destroy", "restuss_imperial_destroy_2" ) )
		 {
		 	return true;
		 }
	return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_space_destroy_condition_isRebelPlayer (obj_id player, obj_id npc)
{
	return factions.isRebel(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_imperial_space_destroy_action_givekill1 (obj_id player, obj_id npc)
{
	groundquests.clearQuest (player, "restuss_imperial_space_destroy_1");
	groundquests.grantQuest (player, "restuss_imperial_space_destroy_1");
}

// ----------------------------------------------------------------------

void restuss_imperial_space_destroy_action_signalDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedWulf");
	restuss_event.incrimentCompletedQuestCount(npc, "restuss_imperial_space_destroy_1");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 0)
	{
		float ratio = restuss_event.getCompletedQuestRatio(npc, "restuss_imperial_space_destroy_1");
		if (ratio > .5)
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
	if (phase == 1)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_imperial_space_destroy_1"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_imperial_space_destroy_action_givekill2 (obj_id player, obj_id npc)
{
	groundquests.clearQuest (player, "restuss_imperial_space_destroy_2");
	groundquests.grantQuest (player, "restuss_imperial_space_destroy_2");
}

// ----------------------------------------------------------------------

void restuss_imperial_space_destroy_action_signalDone2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedWulf2");
	restuss_event.incrimentCompletedQuestCount(npc, "restuss_imperial_space_destroy_2");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 2)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_imperial_space_destroy_2"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_imperial_space_destroy_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_imperial_space_destroy_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It doesn't look like you completed the task you were assigned.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir. don't worry.
	if (response == "s_26")
	{
		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_givekill1 (player, npc);

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: I don't now. Good luck, pilot. Be careful up there. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piloting isn't really my thing, sir.
	if (response == "s_35")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			doAnimationAction (player, "salute2");

			//-- NPC: Alright, then check with one of the other officers and see if you can assist one of them instead.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_space_destroy_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So, you have come back without finishing up your assignment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir. Don't worry.
	if (response == "s_30")
	{
		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: I don't now. Good luck, pilot. Be careful up there. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piloting isn't really my thing, sir.
	if (response == "s_34")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			doAnimationAction (player, "salute2");

			//-- NPC: Alright, then check with one of the other officers and see if you can assist one of them instead.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_space_destroy_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels are still bringing in reinforcements from the Lok system. We just finished cleaning them out of the Corellia system and are preparing to move in our capital ships. Your orders, if you accept them, are to destroy 15 of their fighters in the Lok system, to prevent them from ever getting here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir. Don't worry.
	if (response == "s_38")
	{
		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: I don't now. Good luck, pilot. Be careful up there. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_40");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piloting isn't really my thing, sir.
	if (response == "s_42")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			doAnimationAction (player, "salute2");

			//-- NPC: Alright, then check with one of the other officers and see if you can assist one of them instead.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_space_destroy_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels are bringing in reinforcements from the Lok system. We just finished cleaning them out of the Corellia system and are preparing to move in our capital ships. Your orders, if you accept them, are to destroy 15 of their fighters in the Lok system, to prevent them from ever getting here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir. Don't worry.
	if (response == "s_30")
	{
		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: I don't now. Good luck, pilot. Be careful up there. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piloting isn't really my thing, sir.
	if (response == "s_34")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			doAnimationAction (player, "salute2");

			//-- NPC: Alright, then check with one of the other officers and see if you can assist one of them instead.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_space_destroy_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels have mobilized fighters to the Corellia system to prevent us from moving in our capital ships. Your job, if you accept will be to destroy 30 of their military craft.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir. don't worry.
	if (response == "s_26")
	{
		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_givekill1 (player, npc);

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: I don't now. Good luck, pilot. Be careful up there. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Piloting isn't really my thing, sir.
	if (response == "s_35")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			doAnimationAction (player, "salute2");

			//-- NPC: Alright, then check with one of the other officers and see if you can assist one of them instead.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_imperial_space_destroy");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_imperial_space_destroy");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_isRebelPlayer (player, npc))
	{
		restuss_imperial_space_destroy_action_eject (player, npc);

		//-- NPC: I have no time for your rebellious games.
		string_id message = new string_id (c_stringFile, "s_47");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_completedKill2 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_signalDone2 (player, npc);

		//-- NPC: You have made me and the other officers proud, pilot. There's still more of the Rebel scum in the Lok system though, so let me know when you are ready to get back up there.
		string_id message = new string_id (c_stringFile, "s_13");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_completedKill1 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_space_destroy_action_signalDone (player, npc);

		//-- NPC: You have made me and the other officers proud, pilot. There's still more of the Rebel scum around though, so let me know when you are ready to get back up there.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_ifFailedOne (player, npc))
	{
		//-- NPC: It doesn't look like you completed the task you were assigned.
		string_id message = new string_id (c_stringFile, "s_39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will handle it, sir. don't worry.
		boolean hasResponse0 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Piloting isn't really my thing, sir.
		boolean hasResponse1 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId", 14);

			npcStartConversation (player, npc, "restuss_imperial_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_ifFailedTwo (player, npc))
	{
		//-- NPC: So, you have come back without finishing up your assignment.
		string_id message = new string_id (c_stringFile, "s_41");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will handle it, sir. Don't worry.
		boolean hasResponse0 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Piloting isn't really my thing, sir.
		boolean hasResponse1 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId", 11);

			npcStartConversation (player, npc, "restuss_imperial_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_killActive2 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: We need some more Rebel fighters taken out of action in the Lok system, pilot. Get on it.
		string_id message = new string_id (c_stringFile, "s_11");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_killActive1 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: We need some more Rebel fighters taken out of action in the Corellia system, pilot. Get on it.
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_enoughKills (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels are still bringing in reinforcements from the Lok system. We just finished cleaning them out of the Corellia system and are preparing to move in our capital ships. Your orders, if you accept them, are to destroy 15 of their fighters in the Lok system, to prevent them from ever getting here.
		string_id message = new string_id (c_stringFile, "s_33");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will handle it, sir. Don't worry.
		boolean hasResponse0 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Piloting isn't really my thing, sir.
		boolean hasResponse1 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId", 8);

			npcStartConversation (player, npc, "restuss_imperial_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_inPhase2 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels are bringing in reinforcements from the Lok system. We just finished cleaning them out of the Corellia system and are preparing to move in our capital ships. Your orders, if you accept them, are to destroy 15 of their fighters in the Lok system, to prevent them from ever getting here.
		string_id message = new string_id (c_stringFile, "s_28");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will handle it, sir. Don't worry.
		boolean hasResponse0 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Piloting isn't really my thing, sir.
		boolean hasResponse1 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId", 11);

			npcStartConversation (player, npc, "restuss_imperial_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition_inPhase1 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Glad you are here, soldier! Are you a pilot? If so, we need your assistance immediately. The Rebels have mobilized fighters to the Corellia system to prevent us from moving in our capital ships. Your job, if you accept will be to destroy 30 of their military craft.
		string_id message = new string_id (c_stringFile, "s_24");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will handle it, sir. don't worry.
		boolean hasResponse0 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Piloting isn't really my thing, sir.
		boolean hasResponse1 = false;
		if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId", 14);

			npcStartConversation (player, npc, "restuss_imperial_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_space_destroy_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: I don't have time for you, civilian. Besides, you shouldn't be here. It's too dangerous.
		string_id message = new string_id (c_stringFile, "s_46");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_imperial_space_destroy")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

	if (branchId == 4 && restuss_imperial_space_destroy_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && restuss_imperial_space_destroy_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && restuss_imperial_space_destroy_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && restuss_imperial_space_destroy_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && restuss_imperial_space_destroy_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_imperial_space_destroy.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

