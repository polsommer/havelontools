// ======================================================================
//
// c_tutorial_rm1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_tutorial_rm1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_tutorial_rm1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm1_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainRibbon = groundquests.getTaskId(questId, "explainRibbon"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainRibbon, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean c_tutorial_rm1_condition_taskComplete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive (player, "quest/c_newbie_hall_01", "explainRibbon");
}

// ======================================================================
// Script Actions
// ======================================================================

void c_tutorial_rm1_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	if (!groundquests.isQuestActiveOrComplete(player, "c_newbie_hall_01"))
	{
		groundquests.grantQuest (player, "c_newbie_hall_01");
	}
}

// ----------------------------------------------------------------------

void c_tutorial_rm1_action_actionSendSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "explainRibbon");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_tutorial_rm1_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, %TU, I'm so glad to see you survived! It looks like we found you just in time!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You blew up my ship!
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Ah, trauma can do strange things to your perception. We arrived just in time to pull you from danger. You haven't been easy to find.
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Find? You've been looking for me?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you mean, 'found me just in time'?
	if (response == "s_85")
	{
		doAnimationAction (player, "point_to_self");

		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: If we hadn't arrived when we did, I'm afraid those pirates would have succeeded in killing you. You've certainly attracted a lot of attention, you know.
			string_id message = new string_id (c_stringFile, "s_87");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A lot of attention? From who?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: The pirates were after me?
			boolean hasResponse1 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, trauma can do strange things to your perception. We arrived just in time to pull you from danger. You haven't been easy to find.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Find? You've been looking for me?
	if (response == "s_73")
	{
		doAnimationAction (player, "point_to_self");

		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Why yes. You've recently come to the attention of the Empire as a person of interest. I'm sure the Emperor will want to be notified that we've found you.
			string_id message = new string_id (c_stringFile, "s_75");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What? The Emperor? Me? Why?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why yes. You've recently come to the attention of the Empire as a person of interest. I'm sure the Emperor will want to be notified that we've found you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What? The Emperor? Me? Why?
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: The Empire is always interested in those who seem to have an unusual amount of 'potential'. But now that you are safely aboard, there will be papers to fill out. If you'll just move along down the corridor, we will get that taken care of.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh, alright.
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_81");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire is always interested in those who seem to have an unusual amount of 'potential'. But now that you are safely aboard, there will be papers to fill out. If you'll just move along down the corridor, we will get that taken care of.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, alright.
	if (response == "s_81")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			c_tutorial_rm1_action_actionSendSignal (player, npc);

			//-- NPC: Just move right along.
			string_id message = new string_id (c_stringFile, "s_83");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If we hadn't arrived when we did, I'm afraid those pirates would have succeeded in killing you. You've certainly attracted a lot of attention, you know.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A lot of attention? From who?
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: You've recently come to the attention of the Empire as a person of interest. I'm sure the Emperor will want to be notified that we've found you.
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What? The Emperor? Me? Why?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The pirates were after me?
	if (response == "s_101")
	{
		doAnimationAction (player, "point_to_self");

		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Yes they were. They were the ones that blew up your ship.  The Empire has been looking for you for a while now. It's just good luck that we found you when we did. Had we been a moment later you would never have made it.
			string_id message = new string_id (c_stringFile, "s_103");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What? The Empire? Me? Why?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've recently come to the attention of the Empire as a person of interest. I'm sure the Emperor will want to be notified that we've found you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What? The Emperor? Me? Why?
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: The Empire is always interested in those who seem to have an unusual amount of 'potential'. But now that you are safely aboard, there will be papers to fill out. If you'll just move along down the corridor, we will get that taken care of.
			string_id message = new string_id (c_stringFile, "s_95");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh, alright.
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire is always interested in those who seem to have an unusual amount of 'potential'. But now that you are safely aboard, there will be papers to fill out. If you'll just move along down the corridor, we will get that taken care of.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, alright.
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			c_tutorial_rm1_action_actionSendSignal (player, npc);

			//-- NPC: Just move right along.
			string_id message = new string_id (c_stringFile, "s_99");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes they were. They were the ones that blew up your ship.  The Empire has been looking for you for a while now. It's just good luck that we found you when we did. Had we been a moment later you would never have made it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What? The Empire? Me? Why?
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Why, you've been of interest to the Empire for quite a while now. They are often interested in those who seem to have an unusual amount of 'potential'. We are lucky we found you before the pirates did.
			string_id message = new string_id (c_stringFile, "s_107");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Pirates?
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why, you've been of interest to the Empire for quite a while now. They are often interested in those who seem to have an unusual amount of 'potential'. We are lucky we found you before the pirates did.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pirates?
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: Yes, they were after you.  That's why they shot your ship down. But now that you are safely aboard, there will be some papers to  fill out. If you'll just move along down the corridor, we will get that taken care of.
			string_id message = new string_id (c_stringFile, "s_111");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh, alright.
			boolean hasResponse0 = false;
			if (c_tutorial_rm1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_113");

				utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm1_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, they were after you.  That's why they shot your ship down. But now that you are safely aboard, there will be some papers to  fill out. If you'll just move along down the corridor, we will get that taken care of.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh, alright.
	if (response == "s_113")
	{
		//-- [NOTE] 
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			c_tutorial_rm1_action_actionSendSignal (player, npc);

			//-- NPC: Just move right along.
			string_id message = new string_id (c_stringFile, "s_115");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_tutorial_rm1");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Captain Clough");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Captain Clough");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_tutorial_rm1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_tutorial_rm1_condition_taskComplete (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		doAnimationAction (player, "point_right");

		c_tutorial_rm1_action_facePlayer (player, npc);

		//-- NPC: Move along the corridor please.
		string_id message = new string_id (c_stringFile, "s_117");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm1_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_tutorial_rm1_action_facePlayer (player, npc);

		//-- NPC: Ah, %TU, I'm so glad to see you survived! It looks like we found you just in time!
		string_id message = new string_id (c_stringFile, "s_67");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You blew up my ship!
		boolean hasResponse0 = false;
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What do you mean, 'found me just in time'?
		boolean hasResponse1 = false;
		if (c_tutorial_rm1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_85");

			utils.setScriptVar (player, "conversation.c_tutorial_rm1.branchId", 2);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "c_tutorial_rm1", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_tutorial_rm1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_tutorial_rm1.branchId");

	if (branchId == 2 && c_tutorial_rm1_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_tutorial_rm1_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_tutorial_rm1_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_tutorial_rm1_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_tutorial_rm1_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && c_tutorial_rm1_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_tutorial_rm1_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_tutorial_rm1_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && c_tutorial_rm1_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && c_tutorial_rm1_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_tutorial_rm1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

