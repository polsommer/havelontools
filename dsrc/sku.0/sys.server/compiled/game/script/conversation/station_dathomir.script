// ======================================================================
//
// station_dathomir.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.space_combat;
include library.space_content;
include library.space_crafting;
include library.space_flags;
include library.space_quest;
include library.space_transition;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_dathomir";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_dathomir_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAfford50 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAfford25 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .25f);
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAfford75 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .75f);
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAfford100 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_needRepairs (obj_id player, obj_id npc)
{
	
	float fltDamage = space_crafting.getDamageTotal(player, getPilotedShip(player));
	if(fltDamage>0)
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_isRebelPilotDath (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_rebel_navy_novice") && !utils.hasScriptVar( player, "AuthorizedForDath" ));
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_isTooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	obj_id containingShip = space_transition.getContainingShip(player);
	return ( getDistance( npc, containingShip ) > space_transition.STATION_COMM_MAX_DISTANCE );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_gatedByTimer (obj_id player, obj_id npc)
{
	int timeStamp = utils.getIntScriptVar( player, "lastDathomirRepair" );
	if (timeStamp==0)
		return false;//no stamp!
	
	int currentTime = getGameTime();
	if (currentTime < timeStamp )
	{
		return true;//you're gated
	}
	else
	{
		utils.removeScriptVar( player, "lastDathomirRepair" );
		return false;//you're not gated
	}
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_WaitingButStillGated (obj_id player, obj_id npc)
{
	if (!utils.hasScriptVar(player,"waitingAtDathStation" ))
		return false;//not waiting.
		
	return (station_dathomir_condition_gatedByTimer(player, npc));
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_waitingAndNowUngated (obj_id player, obj_id npc)
{
	if (!utils.hasScriptVar(player,"waitingAtDathStation" ))
		return false;//not waiting.
		
	if (!station_dathomir_condition_gatedByTimer(player, npc))
	{
		if (!station_dathomir_condition_canAfford25(player,npc))
			return false;//keep waiting, you can't afford repairs!
		
		//remove this, you're done waiting:
		utils.removeScriptVar(player,"waitingAtDathStation" );
		return true;
	}
	
	return false;		
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_eligibleForPrivateerlQuests (obj_id player, obj_id npc)
{
	if ( space_flags.isNeutralPilot(player) )
	{
		if ( space_flags.hasCompletedTierTwo(player) )
		{
			if ( !space_quest.hasQuest(player)  )
			{
				return !hasObjVar(player, "station_dathomir.isOnPrivStoryQuest_01");
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_eligibleForImperialQuests (obj_id player, obj_id npc)
{
	if ( space_flags.isImperialPilot(player) )
	{
		if ( space_flags.hasCompletedTierTwo(player) )
		{
			if ( !space_quest.hasQuest(player)  )
			{
				return !hasObjVar(player, "station_dathomir.isOnImpStoryQuest_01");
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canDoImperialStoryQuest (obj_id player, obj_id npc)
{
	return !space_quest.hasWonQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_e" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canDoPrivateerStoryQuest (obj_id player, obj_id npc)
{
	return !space_quest.hasWonQuest ( player, "assassinate", "dathomir_station_priv_storyquest_01_d" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonPrivStoryQuest_a (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest ( player, "delivery", "dathomir_station_priv_storyquest_01_a" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonPrivStoryQuest_b (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest ( player, "recovery", "dathomir_station_priv_storyquest_01_b" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canTakeQuest (obj_id player, obj_id npc)
{
	if(space_quest.hasQuest(player))
	{
		return false;
	}
 	return true;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonPrivStoryQuest_c (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest ( player, "escort", "dathomir_station_priv_storyquest_01_c" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonImpStoryQuest_d (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest( player, "recovery", "dathomir_station_imp_storyquest_01_d" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonImpStoryQuest_c (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_c" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonImpStoryQuest_b (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_b" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_wonImpStoryQuest_a (obj_id player, obj_id npc)
{
	return space_quest.hasWonQuest( player, "recovery", "dathomir_station_imp_storyquest_01_a" );
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAttackImperial (obj_id player, obj_id npc)
{
	if(space_flags.isRebelPilot(player) || space_flags.isRebelHelperPilot(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canReceiveFullRepair (obj_id player, obj_id npc)
{	
	if ( space_quest.hasWonQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_e" ) )
	{
		if ( hasObjVar(player, "station_dathomir.isOnImpStoryQuest_01") )
		{
			removeObjVar(player, "station_dathomir.isOnImpStoryQuest_01");
		}
		return true;
	}
	else if( space_quest.hasWonQuest( player, "assassinate", "dathomir_station_priv_storyquest_01_d" ) )
	{
		if ( hasObjVar(player, "station_dathomir.isOnPrivStoryQuest_01") )
		{
			removeObjVar(player, "station_dathomir.isOnPrivStoryQuest_01");
		}
		return true;
	}
			
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_isOnPrivStoryQuest_01 (obj_id player, obj_id npc)
{
	return hasObjVar(player, "station_dathomir.isOnPrivStoryQuest_01");
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_isOnImpStoryQuest_01 (obj_id player, obj_id npc)
{
	return hasObjVar(player, "station_dathomir.isOnImpStoryQuest_01");
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_alreadyHasAQuest (obj_id player, obj_id npc)
{
	return space_quest.hasQuest(player);
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canAttackRebel (obj_id player, obj_id npc)
{
	if(space_flags.isImperialPilot(player) || space_flags.isImperialHelperPilot(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean station_dathomir_condition_canHandleTier4 (obj_id player, obj_id npc)
{
	return space_flags.hasCompletedTierThree(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void station_dathomir_action_landStation3 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Dathomir Quarantine Zone");
}

// ----------------------------------------------------------------------

void station_dathomir_action_fix25 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .25f);
}

// ----------------------------------------------------------------------

void station_dathomir_action_fix50 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

void station_dathomir_action_fix75 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .75f);
}

// ----------------------------------------------------------------------

void station_dathomir_action_fix100 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

void station_dathomir_action_landStation1 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Dathomir Outpost");
}

// ----------------------------------------------------------------------

void station_dathomir_action_landStation2 (obj_id player, obj_id npc)
{
	space_content.landPlayer(player, npc, "Science Outpost");
}

// ----------------------------------------------------------------------

void station_dathomir_action_flagPlayerClearedForLanding (obj_id player, obj_id npc)
{
	utils.setScriptVar( player, "AuthorizedForDath", true );
}

// ----------------------------------------------------------------------

void station_dathomir_action_timeStampRepairs (obj_id player, obj_id npc)
{
	int timeStamp = getGameTime() + 360;
	utils.setScriptVar( player, "lastDathomirRepair", ( timeStamp ));
}

// ----------------------------------------------------------------------

void station_dathomir_action_flagPlayerAsWaiting (obj_id player, obj_id npc)
{
	utils.setScriptVar(player,"waitingAtDathStation",true);
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImperialDestroyDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "dathomir_station_imp_destroy_duty_tier3" );
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImperialEscortDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "dathomir_station_imp_escort_duty_tier3" );
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantPrivateerEscortDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "dathomir_station_priv_escort_duty_tier3" );
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantPrivateerDestroyDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "dathomir_station_priv_destroy_duty_tier3" );
}

// ----------------------------------------------------------------------

void station_dathomir_action_startImpStoryQuest_01 (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "recovery", "dathomir_station_imp_storyquest_01_a" );
	space_quest.grantQuest( player, "recovery", "dathomir_station_imp_storyquest_01_a" );
	
	if ( !hasObjVar(player, "station_dathomir.isOnImpStoryQuest_01") )
	{
		setObjVar(player, "station_dathomir.isOnImpStoryQuest_01", true);
	}
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_startPrivStoryQuest_01 (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "delivery", "dathomir_station_priv_storyquest_01_a" );
	space_quest.grantQuest( player, "delivery", "dathomir_station_priv_storyquest_01_a" );
	
	setObjVar(player, "station_dathomir.isOnPrivStoryQuest_01", true);
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImpStoryQuest_01_b (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "assassinate", "dathomir_station_imp_storyquest_01_b" );
	space_quest.grantQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_b" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImpStoryQuest_01_c (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "assassinate", "dathomir_station_imp_storyquest_01_c" );
	space_quest.grantQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_c" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImpStoryQuest_01_d (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "recovery", "dathomir_station_imp_storyquest_01_d" );
	space_quest.grantQuest( player, "recovery", "dathomir_station_imp_storyquest_01_d" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImpStoryQuest_01_e (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "assassinate", "dathomir_station_imp_storyquest_01_e" );
	space_quest.grantQuest( player, "assassinate", "dathomir_station_imp_storyquest_01_e" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantPrivStoryQuest_01_b (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "recovery", "dathomir_station_priv_storyquest_01_b" );
	space_quest.grantQuest( player, "recovery", "dathomir_station_priv_storyquest_01_b" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantPrivStoryQuest_01_c (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "escort", "dathomir_station_priv_storyquest_01_c" );
	space_quest.grantQuest( player, "escort", "dathomir_station_priv_storyquest_01_c" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantPrivStoryQuest_01_d (obj_id player, obj_id npc)
{
	space_quest.clearQuestFlags( player, "assassinate", "dathomir_station_priv_storyquest_01_d" );
	space_quest.grantQuest( player, "assassinate", "dathomir_station_priv_storyquest_01_d" );
	
	return;
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImperialDuty4 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "dathomir_imperial_tier4");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantImperialDuty5 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "kessel_imperial_tier5");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantRebelDuty4 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "dathomir_rebel_tier4");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantRebelDuty5 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "kessel_rebel_tier5");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantHiddenDaggerDuty4 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "dathomir_hidden_dagger_tier4");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantHiddenDaggerDuty5 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "dathomir_hidden_dagger_tier5");
}

// ----------------------------------------------------------------------

void station_dathomir_action_grantKesselPirateTier6 (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "kessel_pirate_tier6");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string station_dathomir_tokenTO_tokenTO0001 (obj_id player, obj_id npc)
{
	return new string();
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

int station_dathomir_tokenDI_getStationRepairCost25 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .25f);
	
}

// ----------------------------------------------------------------------

int station_dathomir_tokenDI_getStationRepairCost50 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .50f);
	
}

// ----------------------------------------------------------------------

int station_dathomir_tokenDI_getStationRepairCost75 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .75f);
}

// ----------------------------------------------------------------------

int station_dathomir_tokenDI_getStationRepairCost100 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, 1.0f);
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_dathomir_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good news, %TU! I found a crate of old parts that might be just what you need!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sorry, %TU, I still haven't found any supplies we could use to repair your ship. Do you want to land on the planet? Maybe there's a shipwright that could help you there?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'll keep waiting.
	if (response == "s_568")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, %TU. Dathomir Station, out!
			string_id message = new string_id (c_stringFile, "s_571");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes!
	if (response == "s_574")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't think you're supposed to be here. Do you have the Imperial authorization code to be in this system?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_578")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm sorry. I won't be able to help you. In fact, I should probably call this in...
			string_id message = new string_id (c_stringFile, "s_581");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wait! Yes I do.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Don't do that. I'll leave.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_583");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_586");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_591")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Transmit your authorization code, please.
			string_id message = new string_id (c_stringFile, "s_594");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't have one.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Fake it)
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_598");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_603");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sorry. I won't be able to help you. In fact, I should probably call this in...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait! Yes I do.
	if (response == "s_583")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Transmit your authorization code, please.
			string_id message = new string_id (c_stringFile, "s_594");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't have one.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Fake it)
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_598");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_603");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't do that. I'll leave.
	if (response == "s_586")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well... I guess it would save me some paperwork to forget I ever saw you. But don't hang around here!
			string_id message = new string_id (c_stringFile, "s_588");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Transmit your authorization code, please.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have one.
	if (response == "s_598")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stop playing games, pilot. Do you have the authorization code or not?
			string_id message = new string_id (c_stringFile, "s_601");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_578");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_591");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Fake it)
	if (response == "s_603")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_flagPlayerClearedForLanding (player, npc);

			//-- NPC: This code doesn't look right... *sigh* Why doesn't the Empire ever send me the latest codes? This must be new. Okay, how can I help you?
			string_id message = new string_id (c_stringFile, "s_605");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stop playing games, pilot. Do you have the authorization code or not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_578")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm sorry. I won't be able to help you. In fact, I should probably call this in...
			string_id message = new string_id (c_stringFile, "s_581");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wait! Yes I do.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Don't do that. I'll leave.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_583");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_586");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_591")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Transmit your authorization code, please.
			string_id message = new string_id (c_stringFile, "s_594");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't have one.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Fake it)
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_598");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_603");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This code doesn't look right... *sigh* Why doesn't the Empire ever send me the latest codes? This must be new. Okay, how can I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is Dathomir Station. Ah, it's you. You've served me well, and I appreciate that. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've returned. Are you ready to continue?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, what is my next move?
	if (response == "s_613")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_alreadyHasAQuest (player, npc))
		{
			//-- NPC: Your next move is to finish your current mission. Come back when that one has been completed.
			string_id message = new string_id (c_stringFile, "s_616");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonImpStoryQuest_d (player, npc))
		{
			//-- NPC: This is odd. The captured Black Sun pirate claims that no Rebel has ever been given authorization codes by them. And that the Rebels have never even approached them for anything like that. He further claims that you don't need any codes. That you can just make up any code and be granted access to the planet's surface. [*he suddenly looks flustered*] No, it can't be....
			string_id message = new string_id (c_stringFile, "s_619");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is everything okay?
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_621");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonImpStoryQuest_c (player, npc))
		{
			//-- NPC: Arrgh, you let that Black Sun pirate escape! I'm certain he knew something. We... wait. Excellent, we've located a ship matching the one that escaped. Go capture that pirate, and this time there had better be no mistakes!
			string_id message = new string_id (c_stringFile, "s_633");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll catch that pirate!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll catch the pirate another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_635");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_640");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonImpStoryQuest_b (player, npc))
		{
			//-- NPC: Your attack on the Rebel officer's comrades worked beautifully. She has finally opened up and named the Black Sun as the source of the codes. She still wouldn't name anyone specific by name, which is a bit odd, but that's not a matter of concern. We will target Black Sun ships in the area until we get the information we seek. Go attack some Black Sun pirates, and we'll see what more we can learn.
			string_id message = new string_id (c_stringFile, "s_645");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll do that another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_648");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_652");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonImpStoryQuest_a (player, npc))
		{
			//-- NPC: The Rebel officer you captured refuses to reveal the source of the authorization code. She claims that no one gave her any codes, and that she just had them. I don't believe her.
			string_id message = new string_id (c_stringFile, "s_657");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on it. She'll talk soon.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll take care of that another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_660");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_666");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You let the Rebel officer elude you, but we've managed to recover from your incompetence. My technicians have gotten a fix on her location.
			string_id message = new string_id (c_stringFile, "s_673");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: She won't get away again.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll go after her another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any duties I could do instead?
	if (response == "s_688")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_alreadyHasAQuest (player, npc))
		{
			//-- NPC: Your need to finish your current mission. Come back when that one has been completed.
			string_id message = new string_id (c_stringFile, "s_690");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: As it ends up, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_692");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_695")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_698")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is odd. The captured Black Sun pirate claims that no Rebel has ever been given authorization codes by them. And that the Rebels have never even approached them for anything like that. He further claims that you don't need any codes. That you can just make up any code and be granted access to the planet's surface. [*he suddenly looks flustered*] No, it can't be....

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is everything okay?
	if (response == "s_621")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: [*He visibly composes himself and pushes a button in front of him on his console*] Yes, yes. I'm fine. The pirate's claims are, of course, untrue. How could they be anything but? And, oh my, look at that. The pirate has escaped! Such a shame. Go destroy him.
			string_id message = new string_id (c_stringFile, "s_623");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't worry, I'll take care of him.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll go after him later.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_625");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_629");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [*He visibly composes himself and pushes a button in front of him on his console*] Yes, yes. I'm fine. The pirate's claims are, of course, untrue. How could they be anything but? And, oh my, look at that. The pirate has escaped! Such a shame. Go destroy him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't worry, I'll take care of him.
	if (response == "s_625")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImpStoryQuest_01_e (player, npc);

			//-- NPC: Go now and be swift about it!
			string_id message = new string_id (c_stringFile, "s_627");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll go after him later.
	if (response == "s_629")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, but don't delay too long. We'll monitor his location.
			string_id message = new string_id (c_stringFile, "s_631");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Arrgh, you let that Black Sun pirate escape! I'm certain he knew something. We... wait. Excellent, we've located a ship matching the one that escaped. Go capture that pirate, and this time there had better be no mistakes!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll catch that pirate!
	if (response == "s_635")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImpStoryQuest_01_d (player, npc);

			//-- NPC: You'd better. Now go!
			string_id message = new string_id (c_stringFile, "s_638");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll catch the pirate another time.
	if (response == "s_640")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Arrgh. Return when you are ready, but be quick about it.
			string_id message = new string_id (c_stringFile, "s_642");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your attack on the Rebel officer's comrades worked beautifully. She has finally opened up and named the Black Sun as the source of the codes. She still wouldn't name anyone specific by name, which is a bit odd, but that's not a matter of concern. We will target Black Sun ships in the area until we get the information we seek. Go attack some Black Sun pirates, and we'll see what more we can learn.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_648")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImpStoryQuest_01_c (player, npc);

			//-- NPC: Excellent. Hit them hard, and we'll see what happens in response.
			string_id message = new string_id (c_stringFile, "s_650");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do that another time.
	if (response == "s_652")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Return when you are ready.
			string_id message = new string_id (c_stringFile, "s_654");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Rebel officer you captured refuses to reveal the source of the authorization code. She claims that no one gave her any codes, and that she just had them. I don't believe her.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it. She'll talk soon.
	if (response == "s_660")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImpStoryQuest_01_b (player, npc);

			//-- NPC: Excellent. She'll soon be singing like a witch from that mountain on the planet below.
			string_id message = new string_id (c_stringFile, "s_663");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take care of that another time.
	if (response == "s_666")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmmph. Well, come back when you're ready.
			string_id message = new string_id (c_stringFile, "s_669");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You let the Rebel officer elude you, but we've managed to recover from your incompetence. My technicians have gotten a fix on her location.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: She won't get away again.
	if (response == "s_676")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_startImpStoryQuest_01 (player, npc);

			//-- NPC: Good. That's the attitude I like to see. Now go.
			string_id message = new string_id (c_stringFile, "s_680");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll go after her another time.
	if (response == "s_684")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bah. Fine then, but don't delay too long. I wish to find out what she knows as soon as possible. Return when you are ready.
			string_id message = new string_id (c_stringFile, "s_686");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As it ends up, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll teach those Rebel pilots a lesson.
	if (response == "s_921")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialDestroyDuty (player, npc);

			//-- NPC: Excellent. They had the gall to try and use a fake code, and then the stupidity to celebrate its use while their comm link was still open. Teach them that this station is not to be taken so lightly.
			string_id message = new string_id (c_stringFile, "s_905");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the supply freighters.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialEscortDuty (player, npc);

			//-- NPC: Supply routes to the Imperial prison on Dathomir's surface are vital to its smooth operation. Freighters are en route with new supplies and must be protected from Alliance interference. To be honest, some of the freighters are decoys to help increase our chances of the actual supply freighters making it through. Even I don't know which are real and which are just decoys. Your job would be to provide protection to any or all of them.
			string_id message = new string_id (c_stringFile, "s_909");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_925")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're back. Are you ready to continue?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, what do I do next?
	if (response == "s_705")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_alreadyHasAQuest (player, npc))
		{
			//-- NPC: Next you need to finish your current mission. Come back when you're done with that.
			string_id message = new string_id (c_stringFile, "s_707");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonPrivStoryQuest_c (player, npc))
		{
			//-- NPC: I can't say what a relief it is to finally be rid of those [*itches*] lice. Well, mostly rid of anyway. And well on the way to having the station be pest-free again. Which leaves one other matter to deal with. I've got to send a message to those [*itches*] who sent me that lice infested cargo. And I want you to deliver it. Go to the Lok system and let that Kimogila battlelord know that I didn't appreciate his little surprise.
			string_id message = new string_id (c_stringFile, "s_709");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll do this another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_711");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_716");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonPrivStoryQuest_b (player, npc))
		{
			//-- NPC: Good work recovering my [*itches*] shipment. There's one small hitch, as it turns [*itches*] out. The packing [*itches*] crates were infested with lice! Those [*itches*] sent me a shipment infested with [*itches*] lice! Arrgh! We'll deal with them [*itches*] later. For now, I have arranged for ointments [*itches*] and pesticides to be delivered to the station. Go escort the freighter [*itches*] carrying those and make sure they arrive safely.
			string_id message = new string_id (c_stringFile, "s_723");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll protect those freighters.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll do this another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_727");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_733");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition_wonPrivStoryQuest_a (player, npc))
		{
			//-- NPC: The freighter with the cargo you delivered was ambushed by Black Sun pirates. They killed everyone on board and took everything that was worth salvaging including my cargo. We can forget about the casualties for now, but I need that cargo recovered. Luckily, foresight prompted me to have a tracking transmitter installed in one of the packing crates, so I've been able to locate the pirate ship. Go recover my cargo!
			string_id message = new string_id (c_stringFile, "s_737");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll recover the cargo.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll do this another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_739");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_743");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You failed! How could you fail such a simple task? How? I'll give you another chance, but don't press your luck. Be more careful this time.
			string_id message = new string_id (c_stringFile, "s_747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll do this another time.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_749");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_753");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Any duties I could do instead?
	if (response == "s_757")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_alreadyHasAQuest (player, npc))
		{
			//-- NPC: You need to finish your current mission. Come back when you're done with that.
			string_id message = new string_id (c_stringFile, "s_759");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_761");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_763")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_765")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't say what a relief it is to finally be rid of those [*itches*] lice. Well, mostly rid of anyway. And well on the way to having the station be pest-free again. Which leaves one other matter to deal with. I've got to send a message to those [*itches*] who sent me that lice infested cargo. And I want you to deliver it. Go to the Lok system and let that Kimogila battlelord know that I didn't appreciate his little surprise.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_711")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivStoryQuest_01_d (player, npc);

			//-- NPC: Good. Teach them that this station is not to be trifled with.
			string_id message = new string_id (c_stringFile, "s_713");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do this another time.
	if (response == "s_716")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, but return when you're ready.
			string_id message = new string_id (c_stringFile, "s_720");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good work recovering my [*itches*] shipment. There's one small hitch, as it turns [*itches*] out. The packing [*itches*] crates were infested with lice! Those [*itches*] sent me a shipment infested with [*itches*] lice! Arrgh! We'll deal with them [*itches*] later. For now, I have arranged for ointments [*itches*] and pesticides to be delivered to the station. Go escort the freighter [*itches*] carrying those and make sure they arrive safely.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll protect those freighters.
	if (response == "s_727")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivStoryQuest_01_c (player, npc);

			//-- NPC: Yes. Good. Please hurry. [*itches*]
			string_id message = new string_id (c_stringFile, "s_731");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do this another time.
	if (response == "s_733")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I was afraid you'd say that. [*itches*] Very well, but please hurry back when you're ready.
			string_id message = new string_id (c_stringFile, "s_735");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The freighter with the cargo you delivered was ambushed by Black Sun pirates. They killed everyone on board and took everything that was worth salvaging including my cargo. We can forget about the casualties for now, but I need that cargo recovered. Luckily, foresight prompted me to have a tracking transmitter installed in one of the packing crates, so I've been able to locate the pirate ship. Go recover my cargo!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll recover the cargo.
	if (response == "s_739")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivStoryQuest_01_b (player, npc);

			//-- NPC: Catch those pirates before they escape. Off with you!
			string_id message = new string_id (c_stringFile, "s_741");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do this another time.
	if (response == "s_743")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Time isn't exactly on our side, so hurry back when you're ready.
			string_id message = new string_id (c_stringFile, "s_745");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You failed! How could you fail such a simple task? How? I'll give you another chance, but don't press your luck. Be more careful this time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_749")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_startPrivStoryQuest_01 (player, npc);

			//-- NPC: Good. And be more careful this time. Please.
			string_id message = new string_id (c_stringFile, "s_751");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do this another time.
	if (response == "s_753")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay. I guess waiting a bit longer will make no difference. Return here when you are ready.
			string_id message = new string_id (c_stringFile, "s_755");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll deal with the Black Sun pirates.
	if (response == "s_959")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerDestroyDuty (player, npc);

			//-- NPC: Excellent. I had a... business arrangement of sorts with some local Black Sun pirates. Don't ask what it involved, because I'll certainly not say more. The important part is that these pirates failed to uphold their part of the arrangement. And for that they must be punished.
			string_id message = new string_id (c_stringFile, "s_935");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the passenger transports.
	if (response == "s_961")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerEscortDuty (player, npc);

			//-- NPC: Very good. You task will be to escort transports that are on their way out of the Dathomir system. As I previously stated, these transports are carrying passengers who have arranged to leave the system. Their reasons for this vary and should be of no concern to you. What you should concern yourself with is the safety of these passengers. They have paid well for this service, and I intend to see that they gain their freedom. So to speak.
			string_id message = new string_id (c_stringFile, "s_939");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_965");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is Dathomir Station. What do you need?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Trade Outpost.
	if (response == "s_773")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You are cleared for landing.
			string_id message = new string_id (c_stringFile, "s_775");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_777");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_781");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dathomir Science Outpost.
	if (response == "s_785")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Acknowledged. Dathomir Science Outpost is ready for you to land.
			string_id message = new string_id (c_stringFile, "s_787");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_789");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_793");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Quarantine Zone
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Uh...are you sure?
			string_id message = new string_id (c_stringFile, "s_185");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_189");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 56);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are cleared for landing.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_777")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_landStation1 (player, npc);

			//-- NPC: Be careful down there. This is a dangerous world!
			string_id message = new string_id (c_stringFile, "s_779");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_781")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Acknowledged. Landing clearance aborted. Hail me if I can be of service.
			string_id message = new string_id (c_stringFile, "s_783");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Acknowledged. Dathomir Science Outpost is ready for you to land.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_789")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_landStation2 (player, npc);

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_791");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_793")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Acknowledged. Landing clearance aborted.
			string_id message = new string_id (c_stringFile, "s_795");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Uh...are you sure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Land)
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_landStation3 (player, npc);

			//-- NPC: Uh...alright then. Have fun with the inflicted.
			string_id message = new string_id (c_stringFile, "s_187");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_189")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Acknowledged. Landing clearance aborted.
			string_id message = new string_id (c_stringFile, "s_190");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch59 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't wait that long!
	if (response == "s_801")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_flagPlayerAsWaiting (player, npc);

			//-- NPC: Well, just give me a few minutes... maybe I can scrounge something up...
			string_id message = new string_id (c_stringFile, "s_803");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Arrgh!
	if (response == "s_805")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I know, I know. It's terrible being stationed in such a remote locale. We hardly ever get a supply run through here.
			string_id message = new string_id (c_stringFile, "s_807");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's okay. I'll manage somehow.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: This is the worst station in the galaxy!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_809");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_813");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 61);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know, I know. It's terrible being stationed in such a remote locale. We hardly ever get a supply run through here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's okay. I'll manage somehow.
	if (response == "s_809")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay, %NU. Good luck!
			string_id message = new string_id (c_stringFile, "s_811");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This is the worst station in the galaxy!
	if (response == "s_813")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I know, I know... but what can I do? I wish I could get a transfer.
			string_id message = new string_id (c_stringFile, "s_815");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't deserve a transfer.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Well, hang in there.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_817");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_835");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know, I know... but what can I do? I wish I could get a transfer.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't deserve a transfer.
	if (response == "s_817")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well... look... it's not my fault. I wish I could help you, I really do. I just don't have the supplies on hand here.
			string_id message = new string_id (c_stringFile, "s_819");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't believe you!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's okay. Forget it.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_821");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_831");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 64);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, hang in there.
	if (response == "s_835")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks, %NU.
			string_id message = new string_id (c_stringFile, "s_837");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch64 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well... look... it's not my fault. I wish I could help you, I really do. I just don't have the supplies on hand here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't believe you!
	if (response == "s_821")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: But it's true! I mean... maybe I could scrounge something up to get you under way, but... it wouldn't be much.
			string_id message = new string_id (c_stringFile, "s_823");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Try!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Aw, forget it.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_825");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_827");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 65);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's okay. Forget it.
	if (response == "s_831")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I really am sorry, %TU. Very, very sorry.
			string_id message = new string_id (c_stringFile, "s_833");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch65 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But it's true! I mean... maybe I could scrounge something up to get you under way, but... it wouldn't be much.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Try!
	if (response == "s_825")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_flagPlayerAsWaiting (player, npc);

			//-- NPC: Well, just give me a few minutes... maybe I can scrounge something up...
			string_id message = new string_id (c_stringFile, "s_803");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Aw, forget it.
	if (response == "s_827")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I really am sorry, %TU. Very, very sorry.
			string_id message = new string_id (c_stringFile, "s_829");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch69 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just a little.
	if (response == "s_841")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I think we can manage to get you underway. There will be a fee of %DI credits for this, though. Is that acceptable?
			string_id message = new string_id (c_stringFile, "s_843");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_845");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_849");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 70);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost25 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost25 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Half?
	if (response == "s_859")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Repairing half of the damage on your ship shouldn't be a problem. There will be a fee of %DI credits, however. Is that acceptable?
			string_id message = new string_id (c_stringFile, "s_861");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_863");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_867");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 74);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost50 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost50 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All of it.
	if (response == "s_869")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canReceiveFullRepair (player, npc))
		{
			//-- NPC: Repairing your ship of all damage shouldn't be a problem. There will be a fee of %DI credits, however. Is that acceptable?
			string_id message = new string_id (c_stringFile, "s_871");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't afford that.
			boolean hasResponse1 = false;
			if (!station_dathomir_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_873");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_877");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_887");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 76);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost100 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost100 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: The most we could possibly repair at this station is 75% of your ship's damage. There will be a fee of %DI credits for that repair... is that acceptable?
			string_id message = new string_id (c_stringFile, "s_889");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_891");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_895");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 80);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost75 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost75 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_897")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I think we can manage to get you underway. There will be a fee of %DI credits for this, though. Is that acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_845")
	{
		station_dathomir_action_fix25 (player, npc);

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Acknowledged. I hope that holds you until you can get back to civilization.
			string_id message = new string_id (c_stringFile, "s_847");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_849")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I want to land.
	if (response == "s_853")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you. Never mind.
	if (response == "s_855")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Good luck.
			string_id message = new string_id (c_stringFile, "s_857");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch74 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Repairing half of the damage on your ship shouldn't be a problem. There will be a fee of %DI credits, however. Is that acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_863")
	{
		station_dathomir_action_fix50 (player, npc);

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Repairs Complete! Let me know if there is anything else I can do for you.
			string_id message = new string_id (c_stringFile, "s_865");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_867")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch76 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Repairing your ship of all damage shouldn't be a problem. There will be a fee of %DI credits, however. Is that acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_873")
	{
		station_dathomir_action_fix100 (player, npc);

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_timeStampRepairs (player, npc);

			//-- NPC: Repairs Complete! Let me know if there is anything else I can do for you.
			string_id message = new string_id (c_stringFile, "s_875");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't afford that.
	if (response == "s_877")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, we can repair 75% of your ship's damage for %DI credits, and it looks like you could afford that amount. Would you like to try that instead?
			string_id message = new string_id (c_stringFile, "s_879");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_881");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_885");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 78);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost75 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_dathomir_tokenDI_getStationRepairCost75 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_887")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch78 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, we can repair 75% of your ship's damage for %DI credits, and it looks like you could afford that amount. Would you like to try that instead?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_881")
	{
		station_dathomir_action_fix75 (player, npc);

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_timeStampRepairs (player, npc);

			//-- NPC: Repairs Complete! Let me know if there is anything else I can do for you.
			string_id message = new string_id (c_stringFile, "s_883");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.
	if (response == "s_885")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch80 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The most we could possibly repair at this station is 75% of your ship's damage. There will be a fee of %DI credits for that repair... is that acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_891")
	{
		station_dathomir_action_fix75 (player, npc);

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_timeStampRepairs (player, npc);

			//-- NPC: Repairs Complete! Let me know if there is anything else I can do for you.
			string_id message = new string_id (c_stringFile, "s_893");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_895")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't think there's anything we can do for you, unless you'd like to land and seek repairs on Dathomir.
			string_id message = new string_id (c_stringFile, "s_851");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I want to land.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you. Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_853");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_855");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch82 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll teach those Rebel pilots a lesson.
	if (response == "s_903")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialDestroyDuty (player, npc);

			//-- NPC: Excellent. They had the gall to try and use a fake code, and then the stupidity to celebrate its use while their comm link was still open. Teach them that this station is not to be taken so lightly.
			string_id message = new string_id (c_stringFile, "s_905");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the supply freighters.
	if (response == "s_907")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialEscortDuty (player, npc);

			//-- NPC: Supply routes to the Imperial prison on Dathomir's surface are vital to its smooth operation. Freighters are en route with new supplies and must be protected from Alliance interference. To be honest, some of the freighters are decoys to help increase our chances of the actual supply freighters making it through. Even I don't know which are real and which are just decoys. Your job would be to provide protection to any or all of them.
			string_id message = new string_id (c_stringFile, "s_909");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll track down that Rebel officer for you.
	if (response == "s_911")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_startImpStoryQuest_01 (player, npc);

			//-- NPC: Very good. Let me brief you on the details. A Rebel officer presented what looked like a genuine authorization code for Dathomir. If I hadn't recognized her as a member of the Rebel Alliance, she would have been allowed to land. She fled once she realized we knew who she was, but we managed to get a fix on her location. Capture her so that we may interrogate her and find out where she got those codes.
			string_id message = new string_id (c_stringFile, "s_913");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_915")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_917");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch86 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Was there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll teach those Rebel pilots a lesson.
	if (response == "s_921")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialDestroyDuty (player, npc);

			//-- NPC: Excellent. They had the gall to try and use a fake code, and then the stupidity to celebrate its use while their comm link was still open. Teach them that this station is not to be taken so lightly.
			string_id message = new string_id (c_stringFile, "s_905");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the supply freighters.
	if (response == "s_923")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialEscortDuty (player, npc);

			//-- NPC: Supply routes to the Imperial prison on Dathomir's surface are vital to its smooth operation. Freighters are en route with new supplies and must be protected from Alliance interference. To be honest, some of the freighters are decoys to help increase our chances of the actual supply freighters making it through. Even I don't know which are real and which are just decoys. Your job would be to provide protection to any or all of them.
			string_id message = new string_id (c_stringFile, "s_909");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_925")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_927");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch88 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Was there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch89 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll deal with the Black Sun pirates.
	if (response == "s_933")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerDestroyDuty (player, npc);

			//-- NPC: Excellent. I had a... business arrangement of sorts with some local Black Sun pirates. Don't ask what it involved, because I'll certainly not say more. The important part is that these pirates failed to uphold their part of the arrangement. And for that they must be punished.
			string_id message = new string_id (c_stringFile, "s_935");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the passenger transports.
	if (response == "s_937")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerEscortDuty (player, npc);

			//-- NPC: Very good. You task will be to escort transports that are on their way out of the Dathomir system. As I previously stated, these transports are carrying passengers who have arranged to leave the system. Their reasons for this vary and should be of no concern to you. What you should concern yourself with is the safety of these passengers. They have paid well for this service, and I intend to see that they gain their freedom. So to speak.
			string_id message = new string_id (c_stringFile, "s_939");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can trust me.
	if (response == "s_941")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. This needs to remain strictly between the two of us. I arranged to obtain some goods from some associates in the Lok system. I need you to go pickup that cargo and shuttle it to a freighter here in the Dathomir system.
			string_id message = new string_id (c_stringFile, "s_943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll take care of it.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_945");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_949");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_953")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_955");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch92 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. This needs to remain strictly between the two of us. I arranged to obtain some goods from some associates in the Lok system. I need you to go pickup that cargo and shuttle it to a freighter here in the Dathomir system.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take care of it.
	if (response == "s_945")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_startPrivStoryQuest_01 (player, npc);

			//-- NPC: Excellent. Be careful. I outbid a Black Sun Captain in order to obtain these goods, and I expect him to make an attempt to take them from you as you return here. 
			string_id message = new string_id (c_stringFile, "s_947");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_949")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_951");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch94 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Was there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch95 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Was there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch96 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll deal with the Black Sun pirates.
	if (response == "s_959")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerDestroyDuty (player, npc);

			//-- NPC: Excellent. I had a... business arrangement of sorts with some local Black Sun pirates. Don't ask what it involved, because I'll certainly not say more. The important part is that these pirates failed to uphold their part of the arrangement. And for that they must be punished.
			string_id message = new string_id (c_stringFile, "s_935");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll escort the passenger transports.
	if (response == "s_961")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantPrivateerEscortDuty (player, npc);

			//-- NPC: Very good. You task will be to escort transports that are on their way out of the Dathomir system. As I previously stated, these transports are carrying passengers who have arranged to leave the system. Their reasons for this vary and should be of no concern to you. What you should concern yourself with is the safety of these passengers. They have paid well for this service, and I intend to see that they gain their freedom. So to speak.
			string_id message = new string_id (c_stringFile, "s_939");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.
	if (response == "s_963")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Was there anything else?
			string_id message = new string_id (c_stringFile, "s_965");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: (Request Permission to Land)
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: (Request Repairs)
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford25 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Any work for an Imperial pilot?
			boolean hasResponse2 = false;
			if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Do you have any work?
			boolean hasResponse3 = false;
			if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'm looking for mercenary contracts
			boolean hasResponse4 = false;
			if (station_dathomir_condition_canTakeQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_769");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_797");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_899");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_929");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_197");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch97 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Was there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Permission to Land)
	if (response == "s_769")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: There are only three outposts on this planet that can accommodate your ship. Where do you want to land?
			string_id message = new string_id (c_stringFile, "s_771");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Trade Outpost.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dathomir Science Outpost.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Quarantine Zone
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_773");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_785");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: (Request Repairs)
	if (response == "s_797")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_gatedByTimer (player, npc))
		{
			//-- NPC: Sorry, %TU, but we don't have the supplies on hand to provide you with more repairs. We should be getting more supplies any day now though.
			string_id message = new string_id (c_stringFile, "s_799");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can't wait that long!
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Arrgh!
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_805");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: We're not equipped to provide more than the most basic level of repairs. How much of the damage do you want us to fix?
			string_id message = new string_id (c_stringFile, "s_839");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Just a little.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Half?
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: All of it.
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_841");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_859");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_869");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_897");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Imperial pilots.
	//-- PLAYER: Any work for an Imperial pilot?
	if (response == "s_899")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoImperialStoryQuest (player, npc))
		{
			//-- NPC: Actually, I do. There are a number of things you could help me with. I have two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_901");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll track down that Rebel officer for you.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_903");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_907");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_911");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_915");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I do. There are two duties you could undertake. One is to teach some Rebel pilots not to mess with this station. The other is to escort supply freighters that are en route to the Imperial prison.
			string_id message = new string_id (c_stringFile, "s_919");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll teach those Rebel pilots a lesson.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the supply freighters.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_921");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_923");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_925");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Duty missions for Criminal pilots.
	//-- PLAYER: Do you have any work?
	if (response == "s_929")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canDoPrivateerStoryQuest (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy. There's also one other thing... if I can trust you.
			string_id message = new string_id (c_stringFile, "s_931");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: You can trust me.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse3 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_933");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_937");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_941");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_953");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: For one such as you? As it happens, I do. I have two duties you can undertake. One is to deal with some Black Sun pirates and teach them to honor their agreements with this station. The other is to escort the transport of.... Well, let's just call it the transport of passengers who have managed to arrange to leave the Dathomir system, but who wish to do so in secrecy.
			string_id message = new string_id (c_stringFile, "s_957");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with the Black Sun pirates.
			boolean hasResponse0 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll escort the passenger transports.
			boolean hasResponse1 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.
			boolean hasResponse2 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_959");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_961");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_963");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm looking for mercenary contracts
	if (response == "s_197")
	{
		//-- [NOTE] 
		if (station_dathomir_condition_canHandleTier4 (player, npc))
		{
			//-- NPC: Here is the list of contracts available.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll hunt down tier 4 Imperial patrols
			boolean hasResponse0 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
			boolean hasResponse1 = false;
			if (station_dathomir_condition_canAttackImperial (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 rebel patrols
			boolean hasResponse2 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
			boolean hasResponse3 = false;
			if (station_dathomir_condition_canAttackRebel (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
			boolean hasResponse4 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
			boolean hasResponse5 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
			boolean hasResponse6 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Nothing here for me
			boolean hasResponse7 = false;
			if (station_dathomir_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_201");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_225");

				utils.setScriptVar (player, "conversation.station_dathomir.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have sufficient experience to take on any of the available contracts yet.
			string_id message = new string_id (c_stringFile, "s_229");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_dathomir_handleBranch98 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is the list of contracts available.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 4 Imperial patrols
	if (response == "s_201")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantRebelDuty4 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_207");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 5 Imperial patrols in Kessel
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantRebelDuty5 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_208");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 4 rebel patrols
	if (response == "s_209")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialDuty4 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_211");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 5 rebel patrols in Kessel
	if (response == "s_213")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantImperialDuty5 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_215");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 4 Hidden Dagger Pirates
	if (response == "s_217")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantHiddenDaggerDuty4 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_219");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down tier 5 Hidden Dagger Pirates
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantHiddenDaggerDuty5 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_223");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll hunt down Kessel Pirates [High Tier]
	if (response == "s_230")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			station_dathomir_action_grantKesselPirateTier6 (player, npc);

			//-- NPC: Transmitting mission data. Good hunting.
			string_id message = new string_id (c_stringFile, "s_231");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing here for me
	if (response == "s_225")
	{
		//-- [NOTE] 
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Stay safe.
			string_id message = new string_id (c_stringFile, "s_227");
			utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_dathomir.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setObjVar(self, "convo.appearance", "object/mobile/space_comm_station_dathomir.iff" );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_dathomir");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_dathomir_condition_isTooFar (player, npc))
	{
		//-- NPC: If you wish to interact with this station, then you must fly within scanning range. And please have your authorization code ready!
		string_id message = new string_id (c_stringFile, "s_562");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_waitingAndNowUngated (player, npc))
	{
		//-- NPC: Good news, %TU! I found a crate of old parts that might be just what you need!
		string_id message = new string_id (c_stringFile, "s_564");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: (Request Permission to Land)
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_dathomir_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any work for an Imperial pilot?
		boolean hasResponse2 = false;
		if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Do you have any work?
		boolean hasResponse3 = false;
		if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I'm looking for mercenary contracts
		boolean hasResponse4 = false;
		if (station_dathomir_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_769");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_797");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_899");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_929");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_197");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "station_dathomir", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_WaitingButStillGated (player, npc))
	{
		//-- NPC: Sorry, %TU, I still haven't found any supplies we could use to repair your ship. Do you want to land on the planet? Maybe there's a shipwright that could help you there?
		string_id message = new string_id (c_stringFile, "s_566");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, I'll keep waiting.
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes!
		boolean hasResponse1 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_568");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_574");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 3);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "station_dathomir", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_isRebelPilotDath (player, npc))
	{
		//-- NPC: I don't think you're supposed to be here. Do you have the Imperial authorization code to be in this system?
		string_id message = new string_id (c_stringFile, "s_576");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No.
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes.
		boolean hasResponse1 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_578");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_591");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 5);

			npcStartConversation (player, npc, "station_dathomir", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_canReceiveFullRepair (player, npc))
	{
		//-- NPC: This is Dathomir Station. Ah, it's you. You've served me well, and I appreciate that. 
		string_id message = new string_id (c_stringFile, "s_608");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: (Request Permission to Land)
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_dathomir_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any work for an Imperial pilot?
		boolean hasResponse2 = false;
		if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Do you have any work?
		boolean hasResponse3 = false;
		if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I'm looking for mercenary contracts
		boolean hasResponse4 = false;
		if (station_dathomir_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_769");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_797");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_899");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_929");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_197");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

			npcStartConversation (player, npc, "station_dathomir", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_isOnImpStoryQuest_01 (player, npc))
	{
		//-- NPC: You've returned. Are you ready to continue?
		string_id message = new string_id (c_stringFile, "s_610");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, what is my next move?
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Any duties I could do instead?
		boolean hasResponse1 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: (Request Permission to Land)
		boolean hasResponse2 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse3 = false;
		if (station_dathomir_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_613");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_688");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_695");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_698");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 12);

			npcStartConversation (player, npc, "station_dathomir", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition_isOnPrivStoryQuest_01 (player, npc))
	{
		//-- NPC: You're back. Are you ready to continue?
		string_id message = new string_id (c_stringFile, "s_702");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, what do I do next?
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Any duties I could do instead?
		boolean hasResponse1 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: (Request Permission to Land)
		boolean hasResponse2 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse3 = false;
		if (station_dathomir_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_705");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_757");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_763");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_765");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 32);

			npcStartConversation (player, npc, "station_dathomir", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_dathomir_condition__defaultCondition (player, npc))
	{
		//-- NPC: This is Dathomir Station. What do you need?
		string_id message = new string_id (c_stringFile, "s_767");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: (Request Permission to Land)
		boolean hasResponse0 = false;
		if (station_dathomir_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: (Request Repairs)
		boolean hasResponse1 = false;
		if (station_dathomir_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Any work for an Imperial pilot?
		boolean hasResponse2 = false;
		if (station_dathomir_condition_eligibleForImperialQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Do you have any work?
		boolean hasResponse3 = false;
		if (station_dathomir_condition_eligibleForPrivateerlQuests (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I'm looking for mercenary contracts
		boolean hasResponse4 = false;
		if (station_dathomir_condition_canTakeQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_769");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_797");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_899");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_929");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_197");

			utils.setScriptVar (player, "conversation.station_dathomir.branchId", 48);

			npcStartConversation (player, npc, "station_dathomir", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_dathomir")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_dathomir.branchId");

	if (branchId == 2 && station_dathomir_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && station_dathomir_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && station_dathomir_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && station_dathomir_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && station_dathomir_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && station_dathomir_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && station_dathomir_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && station_dathomir_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && station_dathomir_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && station_dathomir_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && station_dathomir_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && station_dathomir_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && station_dathomir_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && station_dathomir_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && station_dathomir_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && station_dathomir_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && station_dathomir_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && station_dathomir_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && station_dathomir_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && station_dathomir_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && station_dathomir_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && station_dathomir_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && station_dathomir_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && station_dathomir_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && station_dathomir_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && station_dathomir_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && station_dathomir_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 59 && station_dathomir_handleBranch59 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && station_dathomir_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && station_dathomir_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 64 && station_dathomir_handleBranch64 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 65 && station_dathomir_handleBranch65 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 69 && station_dathomir_handleBranch69 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && station_dathomir_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && station_dathomir_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 74 && station_dathomir_handleBranch74 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 76 && station_dathomir_handleBranch76 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 78 && station_dathomir_handleBranch78 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 80 && station_dathomir_handleBranch80 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 82 && station_dathomir_handleBranch82 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 86 && station_dathomir_handleBranch86 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && station_dathomir_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 88 && station_dathomir_handleBranch88 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 89 && station_dathomir_handleBranch89 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 92 && station_dathomir_handleBranch92 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 94 && station_dathomir_handleBranch94 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 95 && station_dathomir_handleBranch95 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 96 && station_dathomir_handleBranch96 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 97 && station_dathomir_handleBranch97 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 98 && station_dathomir_handleBranch98 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_dathomir.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

