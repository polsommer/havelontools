// ======================================================================
//
// rebel_remembrance_day_captain_derlin.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.buff;
include library.chat;
include library.collection;
include library.conversation;
include library.create;
include library.factions;
include library.groundquests;
include library.holiday;
include library.space_quest;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rebel_remembrance_day_captain_derlin";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rebel_remembrance_day_captain_derlin_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return buff.hasBuff(player, holiday.BUFF_REB_EMPIREDAY_RESISTANCE_COMBATANT) 
	|| buff.hasBuff(player, holiday.BUFF_REB_EMPIREDAY_RESISTANCE_SF);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasCompletedOneOrMoreCollections (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_hasCompletedVandalCollection(player, npc) || rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isSpecialForcesRebel (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (factions.isDeclared(player) && factions.isRebel(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasResistanceCollectionPrerequisite (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollectionSlotPrereq(player, holiday.REBEL_RESISTANCE_COUNTER_SLOT);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return buff.hasBuff(player, holiday.BUFF_REB_EMPIREDAY_VANDAL_COMBATANT) 
	|| buff.hasBuff(player, holiday.BUFF_REB_EMPIREDAY_VANDAL_SF);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_alreadyKnowsDerlin (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_hasResistanceCollectionPrerequisite(player, npc) || rebel_remembrance_day_captain_derlin_condition_hasVandalCollectionPrerequisite(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasVandalCollectionPrerequisite (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollectionSlotPrereq(player, holiday.REBEL_VANDAL_COUNTER_SLOT);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollectionSlot(player, holiday.REMEMBRANCE_DAY_CHAMPION_BADGE);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isQualifiedResistanceSpecialForces (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_isSpecialForcesRebel(player, npc) && !rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isQualifiedVandalSpecialForces (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_isSpecialForcesRebel(player, npc) && !rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isImperialPlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (factions.isImperial(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNeutralPlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return(!factions.isImperial(player) && !factions.isRebel(player));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isQualifiedResistanceCombatant (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!rebel_remembrance_day_captain_derlin_condition_isSpecialForcesRebel(player, npc) && !rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isQualifiedVandalCombatant (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!rebel_remembrance_day_captain_derlin_condition_isSpecialForcesRebel(player, npc) && !rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollection(player, holiday.REBEL_RESISTANCE_COLLECTION);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasCompletedVandalCollection (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasCompletedCollection(player, holiday.REBEL_VANDAL_COLLECTION);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isLockedOutOfEvents (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_isLockedOutOfResistance(player, npc) && rebel_remembrance_day_captain_derlin_condition_isLockedOutOfVandal(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasNotCompletedBothCollections (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!rebel_remembrance_day_captain_derlin_condition_hasCompletedVandalCollection(player, npc) && !rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_alreadyDoingBothVandalResistance (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance(player, npc) && rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isChampionDoesntKnowDerlin (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge(player, npc) && !rebel_remembrance_day_captain_derlin_condition_alreadyKnowsDerlin(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isChampionKnowsDerlin (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge(player, npc) && rebel_remembrance_day_captain_derlin_condition_alreadyKnowsDerlin(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasCollectionsButNotCompleted (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	if(rebel_remembrance_day_captain_derlin_condition_hasVandalCollectionPrerequisite(player, npc) && rebel_remembrance_day_captain_derlin_condition_hasResistanceCollectionPrerequisite(player, npc) && rebel_remembrance_day_captain_derlin_condition_hasNotCompletedBothCollections(player, npc))
	{
		if(!rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal(player, npc) || !rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance(player, npc))
			return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isLockedOutOfVandal (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasObjVar(player, holiday.EMPIRE_DAY_VANDAL_LOCKED_OUT);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isLockedOutOfResistance (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return hasObjVar(player, holiday.EMPIRE_DAY_RESISTANCE_LOCKED_OUT);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!rebel_remembrance_day_captain_derlin_condition_alreadyDoingVandal(player, npc) && !rebel_remembrance_day_captain_derlin_condition_isLockedOutOfVandal(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (!rebel_remembrance_day_captain_derlin_condition_alreadyDoingResistance(player, npc) && !rebel_remembrance_day_captain_derlin_condition_isLockedOutOfResistance(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent(player, npc) || rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isTrader (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return utils.isProfession(player, utils.TRADER);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isEntertainer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return utils.isProfession(player, utils.ENTERTAINER);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isTraderOrEntertainer (obj_id player, obj_id npc)
{
	return rebel_remembrance_day_captain_derlin_condition_isTrader(player, npc) || rebel_remembrance_day_captain_derlin_condition_isEntertainer(player, npc);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasCompletedBothCollections (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (rebel_remembrance_day_captain_derlin_condition_hasCompletedVandalCollection(player, npc) && rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection(player, npc));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasScore (obj_id player, obj_id npc)
{
	return hasObjVar(player, holiday.PLAYER_EMPIRE_DAY_SCORE);
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNeutralImperial (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return((getCollectionSlotValue(player, holiday.IMPERIAL_RECRUITING_COUNTER_SLOT) > 0)
	&& !hasCompletedCollection(player, holiday.IMPERIAL_RECRUITING_COLLECTION)
	|| (getCollectionSlotValue(player, holiday.IMPERIAL_ANTIPROP_COUNTER_SLOT) > 0)
	&& !hasCompletedCollection(player, holiday.IMPERIAL_ANTIPROP_COLLECTION));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNewNeutralPlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);	
	return((getCollectionSlotValue(player, holiday.REBEL_RESISTANCE_START_SLOT) <= 0)
	&& (getCollectionSlotValue(player, holiday.REBEL_VANDAL_START_SLOT) <= 0));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNeutralImperialButRebel (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	if(hasObjVar(player, holiday.PLAYER_EMPIRE_DAY_NEUTRAL + holiday.PLANET_VAR_PLAYER_FACTION_IMP) 
	&& factions.isRebel(player))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNeutralAlignedIncompleteCollections (obj_id player, obj_id npc)
{
	return ((getCollectionSlotValue(player, holiday.REBEL_VANDAL_START_SLOT) > 0) 
	&& !hasCompletedCollection(player, holiday.REBEL_VANDAL_COLLECTION)
	|| (getCollectionSlotValue(player, holiday.REBEL_RESISTANCE_START_SLOT) > 0)
	&& !hasCompletedCollection(player, holiday.REBEL_RESISTANCE_COLLECTION));
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_hasBothImpAndRebKioskCollections (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	if((getCollectionSlotValue(player, holiday.IMPERIAL_RECRUITING_COUNTER_SLOT) > 0)
	&& !hasCompletedCollection(player, holiday.IMPERIAL_RECRUITING_COLLECTION)
	|| (getCollectionSlotValue(player, holiday.IMPERIAL_ANTIPROP_COUNTER_SLOT) > 0)
	&& !hasCompletedCollection(player, holiday.IMPERIAL_ANTIPROP_COLLECTION))
	{
		if((getCollectionSlotValue(player, holiday.REBEL_RESISTANCE_COUNTER_SLOT) > 0)
		&& !hasCompletedCollection(player, holiday.REBEL_RESISTANCE_COLLECTION)
		|| (getCollectionSlotValue(player, holiday.REBEL_VANDAL_COUNTER_SLOT) > 0)
		&& !hasCompletedCollection(player, holiday.REBEL_VANDAL_COLLECTION))
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean rebel_remembrance_day_captain_derlin_condition_isNotTraderEntertainerNeutral (obj_id player, obj_id npc)
{
	return (!rebel_remembrance_day_captain_derlin_condition_isTraderOrEntertainer(player, npc) && !rebel_remembrance_day_captain_derlin_condition_isNeutralPlayer(player, npc));
}

// ======================================================================
// Script Actions
// ======================================================================

void rebel_remembrance_day_captain_derlin_action_setSFResistanceEventOnPlayer (obj_id player, obj_id npc)
{
	//Give Prerequisite if it doesn't exist
	if(getCollectionSlotValue(player, holiday.REBEL_RESISTANCE_START_SLOT) <= 0)
		rebel_remembrance_day_captain_derlin_action_setResistanceCollectionStarterSlot(player, npc);
	
	//Set Buff(s)
	buff.applyBuff(player, holiday.BUFF_REB_EMPIREDAY_RESISTANCE_SF);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_resetBothCollections (obj_id player, obj_id npc)
{
	if(rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection(player, npc) && rebel_remembrance_day_captain_derlin_condition_hasCompletedVandalCollection(player, npc))
	{

		string[] resistanceSlotsInCollection = getAllCollectionSlotsInCollection(holiday.REBEL_RESISTANCE_COLLECTION);
		// loop through and clear each slot 
		for(int i = 0; i < resistanceSlotsInCollection.length; i++)
		{
			// get the collectionSlotValue and multiply by -1 
			long collectionSlotValue = getCollectionSlotValue(player, resistanceSlotsInCollection[i]) * -1;
			// apply the collectionSlotValue to each slot - this should clear the slot.
			modifyCollectionSlotValue(player, resistanceSlotsInCollection[i], collectionSlotValue);
		}

		string[] slotsInCollection = getAllCollectionSlotsInCollection(holiday.REBEL_VANDAL_COLLECTION);
		// loop through and clear each slot 
		for(int i = 0; i < slotsInCollection.length; i++)
		{
			// get the collectionSlotValue and multiply by -1 
			long collectionSlotValue = getCollectionSlotValue(player, slotsInCollection[i]) * -1;
			// apply the collectionSlotValue to each slot - this should clear the slot.
			modifyCollectionSlotValue(player, slotsInCollection[i], collectionSlotValue);
		}
				
		rebel_remembrance_day_captain_derlin_action_setResistanceCollectionStarterSlot(player, npc);
		rebel_remembrance_day_captain_derlin_action_setVandalCollectionStarterSlot(player, npc);
	}
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (obj_id player, obj_id npc)
{
	obj_id tatooine = getPlanetByName("tatooine");
	if(!isIdValid(tatooine) || !exists(tatooine))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: Could not find Tatooine OID.");	
		return;	
	}
		
	string data = holiday.getEventHighScores(tatooine, holiday.PLANET_VAR_EVENT_PREFIX + holiday.PLANET_VAR_EMPIRE_DAY + holiday.PLANET_VAR_SCORE, true);
	if(data == null || data.length() <= 0)
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: High Score Data Invalid.");		
		return;	
	}
	
	if(!holiday.createEventLeaderBoardUI(player, holiday.LEADER_BOARD_TITLE, data))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: createEventLeaderBoardUI failed.");		
		return;	
	}
	
	CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: High Score Data received by player: "+player+".");		
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setSFVandalEventOnPlayer (obj_id player, obj_id npc)
{
	//Give Prerequisite if it doesn't exist
	if(getCollectionSlotValue(player, holiday.REBEL_VANDAL_START_SLOT) <= 0)
		rebel_remembrance_day_captain_derlin_action_setVandalCollectionStarterSlot(player, npc);
	
	//Set Buffs
	buff.applyBuff(player, holiday.BUFF_REB_EMPIREDAY_VANDAL_SF);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_giveWedgeAntillesWaypoint (obj_id player, obj_id npc)
{
	location loc = new location(-243, 28, -4150, "corellia");  
	obj_id wedgeWpt = createWaypointInDatapad(player, loc);
	setWaypointName(wedgeWpt, "Squadron Representative");
	setWaypointActive(wedgeWpt, true);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_spawnTroopers (obj_id player, obj_id npc)
{
	//spawn some mean enemies
	for (int i = 0; i < 3; i++)
	{
		location guardLocation = groundquests.getRandom2DLocationAroundLocation(npc, 1, 1, 5, 12);
		int mobLevel = getLevel(player);
		obj_id guard = create.object("rebel_emperorsday_ceremony_sentry", guardLocation, mobLevel);
		attachScript(guard, "event.emp_day.factional_guard_self_destruct");
		startCombat(guard, player);
	}
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setLeaderBoardScore (obj_id player, obj_id npc)
{
	//If the player has no score no need to continue
	if(!hasObjVar(player, holiday.PLAYER_EMPIRE_DAY_SCORE))
		return;
	
	int playerScore = getIntObjVar(player, holiday.PLAYER_EMPIRE_DAY_SCORE);
	if(playerScore <= 0)
		return;
	
	string playerName = getPlayerFullName(player);
	if(playerName == null || playerName.length() <= 0)
		return;
	
	obj_id tatooine = getPlanetByName("tatooine");
	if(!isIdValid(tatooine) || !exists(tatooine))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: Could not find Tatooine OID.");	
		return;	
	}

	if(!holiday.setEmpireDayLeaderScores(tatooine, player, holiday.PLANET_VAR_EVENT_PREFIX + holiday.PLANET_VAR_EMPIRE_DAY + holiday.PLANET_VAR_SCORE, playerScore, playerName, holiday.REBEL_PLAYER))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.getLeaderBoardSui: Player: ("+player+") " +playerName+ " was unable to attain leader board data. Their score was: "+playerScore);	
		return;	
	}
	
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setResistanceCollectionStarterSlot (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, holiday.REBEL_RESISTANCE_START_SLOT, 1);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setVandalCollectionStarterSlot (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, holiday.REBEL_VANDAL_START_SLOT, 1);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setCombatantResistanceEventOnPlayer (obj_id player, obj_id npc)
{
	//Give Prerequisite if it doesn't exist
	if(getCollectionSlotValue(player, holiday.REBEL_RESISTANCE_START_SLOT) <= 0)
		rebel_remembrance_day_captain_derlin_action_setResistanceCollectionStarterSlot(player, npc);
	
	//Set Buff(s)
	buff.applyBuff(player, holiday.BUFF_REB_EMPIREDAY_RESISTANCE_COMBATANT);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_setCombatantVandalEventOnPlayer (obj_id player, obj_id npc)
{
	//Give Prerequisite if it doesn't exist
	if(getCollectionSlotValue(player, holiday.REBEL_VANDAL_START_SLOT) <= 0)
		rebel_remembrance_day_captain_derlin_action_setVandalCollectionStarterSlot(player, npc);
	
	//Set Buffs
	buff.applyBuff(player, holiday.BUFF_REB_EMPIREDAY_VANDAL_COMBATANT);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_makeNeutralRebel (obj_id player, obj_id npc)
{
	play2dNonLoopingSound(player, space_quest.MUSIC_QUEST_EVENT);
	setObjVar(player, holiday.PLAYER_EMPIRE_DAY_NEUTRAL + holiday.PLANET_VAR_PLAYER_FACTION_REB, true);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_checkHolidayTimeStampOnPlayer (obj_id player, obj_id npc)
{
	holiday.checkEventLockOutRemoval(player, holiday.EMPIRE_DAY_RESISTANCE_TIMESTAMP, holiday.EMPIRE_DAY_RESISTANCE_LOCKED_OUT);
	holiday.checkEventLockOutRemoval(player, holiday.EMPIRE_DAY_VANDAL_TIMESTAMP, holiday.EMPIRE_DAY_VANDAL_LOCKED_OUT);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_removeNeutralImperial (obj_id player, obj_id npc)
{
	removeObjVar(player, holiday.PLAYER_EMPIRE_DAY_NEUTRAL + holiday.PLANET_VAR_PLAYER_FACTION_IMP);
}

// ----------------------------------------------------------------------

void rebel_remembrance_day_captain_derlin_action_removeImpCollections (obj_id player, obj_id npc)
{
	string playerName = getPlayerFullName(player);

	if(!collection.removeCollectionForRealsies(player, holiday.IMPERIAL_RECRUITING_COLLECTION))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.removeImpCollections: ERROR. Player: ("+player+") " +playerName+ " was UNABLE to remove their Imperial collection "+holiday.IMPERIAL_RECRUITING_COLLECTION+" and fix themselves to continue doing Kiosk events.");
	}
	else
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.removeImpCollections: Player: ("+player+") " +playerName+ " was able to remove their Imperial collection "+holiday.IMPERIAL_RECRUITING_COLLECTION+" and fix themselves to continue doing Kiosk events.");
	}
	
	if(!collection.removeCollectionForRealsies(player, holiday.IMPERIAL_ANTIPROP_COLLECTION))
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.removeImpCollections: ERROR. Player: ("+player+") " +playerName+ " was UNABLE to remove their Imperial collection "+holiday.IMPERIAL_ANTIPROP_COLLECTION+" and fix themselves to continue doing Kiosk events.");
	}
	else
	{
		CustomerServiceLog("holidayEvent", "derlin_conversation.removeImpCollections: Player: ("+player+") " +playerName+ " was able to remove their Imperial collection "+holiday.IMPERIAL_ANTIPROP_COLLECTION+" and fix themselves to continue doing Kiosk events.");
	}

}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string rebel_remembrance_day_captain_derlin_tokenTO_timeLeftVandal (obj_id player, obj_id npc)
{
	string returnString = holiday.getTimeRemainingBeforeLockoutRemoved(player, holiday.EMPIRE_DAY_VANDAL_TIMESTAMP);
	if(returnString == null || returnString.equals(""))
		return "might have to contact Customer Service. I can't seem to get any time data off your character.";
	return returnString;
}

// ----------------------------------------------------------------------

string rebel_remembrance_day_captain_derlin_tokenTO_timeLeftResistance (obj_id player, obj_id npc)
{
	string returnString = holiday.getTimeRemainingBeforeLockoutRemoved(player, holiday.EMPIRE_DAY_RESISTANCE_TIMESTAMP);
	if(returnString == null || returnString.equals(""))
		return "might have to contact Customer Service. I can't seem to get any time data off your character.";
	return returnString;
}

// ----------------------------------------------------------------------

string rebel_remembrance_day_captain_derlin_tokenTO_currentScore (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, holiday.PLAYER_EMPIRE_DAY_SCORE))
		return "no points so far.";

	int playerScore = getIntObjVar(player, holiday.PLAYER_EMPIRE_DAY_SCORE);
	if(playerScore <= 0)
		return "no points so far.";

	return playerScore+" points so far.";
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

int rebel_remembrance_day_captain_derlin_tokenDI_notUsed (obj_id player, obj_id npc)
{
	return 0;
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int rebel_remembrance_day_captain_derlin_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You managed to somehow participate in both Imperial and Alliance Kiosk events and that is not allowed. I can remove the Imperial Kiosk Collections now and fix you, or you can go back to the Imperials and have them remove the Alliance Collections.  What will it be?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to remove the Imperial Collections now.
	if (response == "s_170")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you sure?
			string_id message = new string_id (c_stringFile, "s_171");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_172");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you sure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_172")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_removeImpCollections (player, npc);

			//-- NPC: Done! Speak with me again once you are ready.
			string_id message = new string_id (c_stringFile, "s_174");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back, %TU. What can I help the Champion of the Remembrance with today?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any jobs for me?
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_hasCompletedBothCollections (player, npc))
		{
			//-- NPC: Looks like you have gone above and beyond the what the Chief of Intelligence has requested, %TU. I am very proud to have worked with you.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to do more Captain. There must be something.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isLockedOutOfEvents (player, npc))
		{
			//-- NPC: Looks like you have done a lot of work today. You should go get some rest and come back tomorrow.
			string_id message = new string_id (c_stringFile, "s_175");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How long before I should come back?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Is there nothing else I can do for the Alliance?
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			//-- NPC: Not at the moment. Finish up your tasks and come back. Maybe I'll have more work for you then.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			//-- NPC: Lets Look...
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks like you have a problem with this event that needs to be fixed.
			string_id message = new string_id (c_stringFile, "s_117");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_121")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_127");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_123")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_128");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is my current score?
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: You have %TO
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (rebel_remembrance_day_captain_derlin_tokenTO_currentScore (player, npc));

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score is calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_136");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back, %TU. What can I help you with?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any jobs for me?
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_hasCompletedBothCollections (player, npc))
		{
			//-- NPC: Looks like you have gone above and beyond the what the Chief of Intelligence has requested, %TU. I am very proud to have worked with you.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to do more Captain. There must be something.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isLockedOutOfEvents (player, npc))
		{
			//-- NPC: Looks like you have done a lot of work today. You should go get some rest and come back tomorrow.
			string_id message = new string_id (c_stringFile, "s_175");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How long before I should come back?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Is there nothing else I can do for the Alliance?
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			//-- NPC: Not at the moment. Finish up your tasks and come back. Maybe I'll have more work for you then.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			//-- NPC: Lets Look...
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks like you have a problem with this event that needs to be fixed.
			string_id message = new string_id (c_stringFile, "s_117");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_121")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_127");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_123")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_128");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is my current score?
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: You have %TO
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (rebel_remembrance_day_captain_derlin_tokenTO_currentScore (player, npc));

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score is calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_136");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Looks like you have gone above and beyond the what the Chief of Intelligence has requested, %TU. I am very proud to have worked with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to do more Captain. There must be something.
	if (response == "s_179")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I am not an officer who would stand in the way of a soldier with a mission. In your case I will waive the Chief of Intelligence directive and put you back in the field immediately. Let me know what you want to do.
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Allow me to redo both the Resistance and Vandal Events.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_hasCompletedResistanceCollection (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_181");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I am not an officer who would stand in the way of a soldier with a mission. In your case I will waive the Chief of Intelligence directive and put you back in the field immediately. Let me know what you want to do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Allow me to redo both the Resistance and Vandal Events.
	if (response == "s_181")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: This will reset the datapad data for both the events but you will still keep all your rewards. Are you sure you want to do this?
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_185");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This will reset the datapad data for both the events but you will still keep all your rewards. Are you sure you want to do this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_185")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_hasCompletedBothCollections (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_resetBothCollections (player, npc);

			//-- NPC: Datapad data reset. You can now redo this event.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Datapad data reset. You can now redo this event.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Looks like you have done a lot of work today. You should go get some rest and come back tomorrow.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How long before I should come back?
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which event are you speaking of?
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there nothing else I can do for the Alliance?
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isTraderOrEntertainer (player, npc))
		{
			//-- NPC: Well. I do know Major Rieekan, who is standing on the other side of the table, is looking for Entertainers and Tradesman. You may want to talk to him.
			string_id message = new string_id (c_stringFile, "s_59");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isNotTraderEntertainerNeutral (player, npc))
		{
			//-- NPC: There is a pilot not far from here that is organizing rescue parties. Would you like a waypoint to the pilot?
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Nothing today. Maybe something will come up in the future. Until then, may the Force be with you.
			string_id message = new string_id (c_stringFile, "s_191");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which event are you speaking of?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_91")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks like %TO.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (rebel_remembrance_day_captain_derlin_tokenTO_timeLeftVandal (player, npc));

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Looks like %TO.
			string_id message = new string_id (c_stringFile, "s_96");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (rebel_remembrance_day_captain_derlin_tokenTO_timeLeftResistance (player, npc));

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is a pilot not far from here that is organizing rescue parties. Would you like a waypoint to the pilot?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_giveWedgeAntillesWaypoint (player, npc);

			//-- NPC: I've placed a location in your datapad. Good luck.
			string_id message = new string_id (c_stringFile, "s_124");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lets Look...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, Champion %TU. Congratulations on the award ceremony. You have every reason to be proud of your accomplishments with the Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And you are?
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Captain Derlin. I don't believe we have had the pleasure of working together yet.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Pleasure to meet you.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes Freelancer?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to help the Alliance.
	if (response == "s_119")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh look, a Freelancer that is on my watch list for supporting the Empire. Go shine the Emperor's shoes or something.
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want to work for the Alliance now.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to help the Alliance.
	if (response == "s_98")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you help the Alliance you will not be able to switch sides to help the Empire before your tasks are done. You'll be exclusively helping us during that time. Are you sure you want to do this?
			string_id message = new string_id (c_stringFile, "s_100");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm back for more work.
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes. What can I help you with, %TU?
			string_id message = new string_id (c_stringFile, "s_132");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh nothing. Just saying 'Hi.'
	if (response == "s_129")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hi.
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh look, a Freelancer that is on my watch list for supporting the Empire. Go shine the Emperor's shoes or something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to work for the Alliance now.
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: You'll need to finish up business with the Empire first. Come back when that is done and we'll talk. 
			string_id message = new string_id (c_stringFile, "s_134");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you help the Alliance you will not be able to switch sides to help the Empire before your tasks are done. You'll be exclusively helping us during that time. Are you sure you want to do this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you ready to get to work?
			string_id message = new string_id (c_stringFile, "s_102");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes Sir!
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you ready to get to work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes Sir!
	if (response == "s_103")
	{
		doAnimationAction (player, "salute1");

		rebel_remembrance_day_captain_derlin_action_makeNeutralRebel (player, npc);

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Captain Derlin. I don't believe we have had the pleasure of working together yet.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Pleasure to meet you.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes. What can I help you with, %TU?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah! %TU, I have heard good things about you. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And you are?
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Captain Derlin. I don't believe we have had the pleasure of working together yet.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Pleasure to meet you.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am Captain Derlin. I don't believe we have had the pleasure of working together yet.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pleasure to meet you.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: What can I help you with, %TU?
			string_id message = new string_id (c_stringFile, "s_80");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What can I help you with, %TU?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So...you want me to post posters?
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isNeutralPlayer (player, npc))
		{
			//-- NPC: Right.
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sign me up.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_137");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Right.  Also, there is something extra in it for you if you do this while Special Forces. The Chief of Intelligence encourages you to be as visual as possible.
			string_id message = new string_id (c_stringFile, "s_110");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sign me up.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_114");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sign me up.
	if (response == "s_137")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like anything else?
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_140");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here are your orders. Would you like anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right.  Also, there is something extra in it for you if you do this while Special Forces. The Chief of Intelligence encourages you to be as visual as possible.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sign me up.
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isQualifiedResistanceCombatant (player, npc))
		{
			//-- NPC: So you are going to hang posters as a Rebel On Leave or Enemy Combatant. Is this correct?
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isQualifiedResistanceSpecialForces (player, npc))
		{
			//-- NPC: So you are going to hang posters as Rebel Special Forces. Is this correct?
			string_id message = new string_id (c_stringFile, "s_154");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you are going to hang posters as a Rebel On Leave or Enemy Combatant. Is this correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_142")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like anything else?
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_150");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here are your orders. Would you like anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you are going to hang posters as Rebel Special Forces. Is this correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setSFResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like the other task?
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setSFResistanceEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_162");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here are your orders. Would you like the other task?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isNeutralPlayer (player, npc))
		{
			//-- NPC: Right.
			string_id message = new string_id (c_stringFile, "s_141");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sign me up.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_145");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Right.  Also, there is something extra in it for you if you do this while Special Forces. The Chief of Intelligence encourages you to be as visual as possible.
			string_id message = new string_id (c_stringFile, "s_187");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. I'll give it my best.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_190");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 53);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sign me up.
	if (response == "s_145")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like anything else?
			string_id message = new string_id (c_stringFile, "s_147");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_148");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right.  Also, there is something extra in it for you if you do this while Special Forces. The Chief of Intelligence encourages you to be as visual as possible.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. I'll give it my best.
	if (response == "s_190")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isQualifiedVandalCombatant (player, npc))
		{
			//-- NPC: So you are going to deface Imperial recruitment posters as an Rebel On Leave or Enemy Combatant. Is this correct?
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_194");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_isQualifiedVandalSpecialForces (player, npc))
		{
			//-- NPC: So you are going to deface Imperial recruitment posters as Rebel Special Forces. Is this correct?
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_202");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 57);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you are going to deface Imperial recruitment posters as an Rebel On Leave or Enemy Combatant. Is this correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_194")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like anything else?
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setCombatantVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_198");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here are your orders. Would you like anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you are going to deface Imperial recruitment posters as Rebel Special Forces. Is this correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_202")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setSFVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders. Would you like anything else?
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Remembrance Day through Resistance 
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoResistanceEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Vandal for the Rebellion
			boolean hasResponse1 = false;
			if (rebel_remembrance_day_captain_derlin_condition_canDoVandalEvent (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Know anyone that can put a Trader to work?
			boolean hasResponse2 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Know anyone that can put an Entertainer to work?
			boolean hasResponse3 = false;
			if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Who are the Remembrance Day top performers?
			boolean hasResponse4 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
			boolean hasResponse5 = false;
			if (!rebel_remembrance_day_captain_derlin_condition_hasRemembranceDayBadge (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_212");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_216");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_220");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!rebel_remembrance_day_captain_derlin_condition_canDoAtLeastOneEvent (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_setSFVandalEventOnPlayer (player, npc);

			//-- NPC: Here are your orders.
			string_id message = new string_id (c_stringFile, "s_206");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rebel_remembrance_day_captain_derlin_handleBranch58 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here are your orders. Would you like anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Remembrance Day through Resistance 
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need to counter the Imperial propaganda and remind every citizen that the Alliance fights against the Imperial oppression. It was they who destroyed Alderaan, and the Alliance who in turn destroyed the Death Star! The Chief of Intelligence needs volunteers to dedicate an hour a day to posting that message around Coronet.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So...you want me to post posters?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Vandal for the Rebellion
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has launched a recruitment campaign around Coronet.  We need someone to...uhh, alter the Imperial posters.
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you want me to deface the recruitment posters posted by the Empire?
			boolean hasResponse0 = false;
			if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put a Trader to work?
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan next to me. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_210");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Know anyone that can put an Entertainer to work?
	if (response == "s_212")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Speak to Major Rieekan on the other side of the table. I think he may have something.
			string_id message = new string_id (c_stringFile, "s_214");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who are the Remembrance Day top performers?
	if (response == "s_216")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			rebel_remembrance_day_captain_derlin_action_getLeaderBoardSui (player, npc);

			//-- NPC: Your name and score will be calculated once you have finished both the Resistance and Vandalism tasks.
			string_id message = new string_id (c_stringFile, "s_218");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am looking for the Remembrance Day ceremony. Do you know where it is?
	if (response == "s_220")
	{
		//-- [NOTE] 
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course I do. It is right behind you.
			string_id message = new string_id (c_stringFile, "s_222");
			utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rebel_remembrance_day_captain_derlin");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rebel_remembrance_day_captain_derlin");

	return SCRIPT_CONTINUE;
}

trigger OnDetach ()
{
	clearCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_isImperialPlayer (player, npc))
	{
		doAnimationAction (npc, "backhand_threaten");

		//-- NPC: Don't you have people to oppress or something?  Go bother a sentry, I have work to do.
		string_id message = new string_id (c_stringFile, "s_50");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_hasBothImpAndRebKioskCollections (player, npc))
	{
		//-- NPC: You managed to somehow participate in both Imperial and Alliance Kiosk events and that is not allowed. I can remove the Imperial Kiosk Collections now and fix you, or you can go back to the Imperials and have them remove the Alliance Collections.  What will it be?
		string_id message = new string_id (c_stringFile, "s_169");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want to remove the Imperial Collections now.
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_170");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 2);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_isNeutralImperial (player, npc))
	{
		//-- NPC: We have nothing to discuss. You made your decision to support the Empire, now live with it. Finish up all business you have with them and maybe we'll talk.
		string_id message = new string_id (c_stringFile, "s_88");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_isChampionKnowsDerlin (player, npc))
	{
		rebel_remembrance_day_captain_derlin_action_checkHolidayTimeStampOnPlayer (player, npc);

		//-- NPC: Welcome back, %TU. What can I help the Champion of the Remembrance with today?
		string_id message = new string_id (c_stringFile, "s_67");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have any jobs for me?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Know anyone that can put a Trader to work?
		boolean hasResponse1 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Know anyone that can put an Entertainer to work?
		boolean hasResponse2 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: What is my current score?
		boolean hasResponse3 = false;
		if (rebel_remembrance_day_captain_derlin_condition_hasScore (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: Who are the Remembrance Day top performers?
		boolean hasResponse4 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_173");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_121");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_123");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_93");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_126");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 7);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_alreadyKnowsDerlin (player, npc))
	{
		rebel_remembrance_day_captain_derlin_action_checkHolidayTimeStampOnPlayer (player, npc);

		//-- NPC: Welcome back, %TU. What can I help you with?
		string_id message = new string_id (c_stringFile, "s_116");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have any jobs for me?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Know anyone that can put a Trader to work?
		boolean hasResponse1 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isTrader (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Know anyone that can put an Entertainer to work?
		boolean hasResponse2 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isEntertainer (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: What is my current score?
		boolean hasResponse3 = false;
		if (rebel_remembrance_day_captain_derlin_condition_hasScore (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: Who are the Remembrance Day top performers?
		boolean hasResponse4 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_173");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_121");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_123");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_93");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_126");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 7);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_isChampionDoesntKnowDerlin (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Well, Champion %TU. Congratulations on the award ceremony. You have every reason to be proud of your accomplishments with the Alliance.
		string_id message = new string_id (c_stringFile, "s_109");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: And you are?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 35);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition_isNeutralPlayer (player, npc))
	{
		//-- NPC: Yes Freelancer?
		string_id message = new string_id (c_stringFile, "s_89");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want to help the Alliance.
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isNeutralImperial (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I want to help the Alliance.
		boolean hasResponse1 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isNewNeutralPlayer (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm back for more work.
		boolean hasResponse2 = false;
		if (rebel_remembrance_day_captain_derlin_condition_isNeutralAlignedIncompleteCollections (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Oh nothing. Just saying 'Hi.'
		boolean hasResponse3 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_119");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_98");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_125");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_129");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 28);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Ah! %TU, I have heard good things about you. 
		string_id message = new string_id (c_stringFile, "s_65");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: And you are?
		boolean hasResponse0 = false;
		if (rebel_remembrance_day_captain_derlin_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			utils.setScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId", 35);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "rebel_remembrance_day_captain_derlin", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rebel_remembrance_day_captain_derlin")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

	if (branchId == 2 && rebel_remembrance_day_captain_derlin_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && rebel_remembrance_day_captain_derlin_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && rebel_remembrance_day_captain_derlin_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && rebel_remembrance_day_captain_derlin_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && rebel_remembrance_day_captain_derlin_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && rebel_remembrance_day_captain_derlin_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && rebel_remembrance_day_captain_derlin_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && rebel_remembrance_day_captain_derlin_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && rebel_remembrance_day_captain_derlin_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && rebel_remembrance_day_captain_derlin_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && rebel_remembrance_day_captain_derlin_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && rebel_remembrance_day_captain_derlin_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && rebel_remembrance_day_captain_derlin_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && rebel_remembrance_day_captain_derlin_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && rebel_remembrance_day_captain_derlin_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && rebel_remembrance_day_captain_derlin_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && rebel_remembrance_day_captain_derlin_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && rebel_remembrance_day_captain_derlin_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && rebel_remembrance_day_captain_derlin_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && rebel_remembrance_day_captain_derlin_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && rebel_remembrance_day_captain_derlin_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && rebel_remembrance_day_captain_derlin_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && rebel_remembrance_day_captain_derlin_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && rebel_remembrance_day_captain_derlin_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && rebel_remembrance_day_captain_derlin_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && rebel_remembrance_day_captain_derlin_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && rebel_remembrance_day_captain_derlin_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && rebel_remembrance_day_captain_derlin_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && rebel_remembrance_day_captain_derlin_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && rebel_remembrance_day_captain_derlin_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && rebel_remembrance_day_captain_derlin_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && rebel_remembrance_day_captain_derlin_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && rebel_remembrance_day_captain_derlin_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && rebel_remembrance_day_captain_derlin_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && rebel_remembrance_day_captain_derlin_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 58 && rebel_remembrance_day_captain_derlin_handleBranch58 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rebel_remembrance_day_captain_derlin.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

