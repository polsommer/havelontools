// ======================================================================
//
// collections_ice_cream_part_four.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/collections_ice_cream_part_four";

// ======================================================================
// Script Conditions
// ======================================================================

boolean collections_ice_cream_part_four_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean collections_ice_cream_part_four_condition_hasActiveTask (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, "chapter9_ice_cream"))
	{	
		return groundquests.isTaskActive(player, "chapter9_ice_cream", "meet_eteto_topan");
	}	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void collections_ice_cream_part_four_action_signalNextTask (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "col_fried_icecream_part_04", 1);
	groundquests.sendSignal(player, "meet_eteto_topan"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int collections_ice_cream_part_four_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello.  I am busy in the garden at the moment. I wasn't expecting company.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am sorry Eteto I don't want to take too much of your time.
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh?  Do I know you?  I don't recall your face.
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No. Mikfa Faaus suggested I come and ask you about this fryer.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_four.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_four_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh?  Do I know you?  I don't recall your face.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. Mikfa Faaus suggested I come and ask you about this fryer.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh dear me.  I am retired.  I haven't handled one of those things in a long time.  That looks as old as me.  Does it work?
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No it is broken.  I am trying to reverse engineer it.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_four.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_four_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh dear me.  I am retired.  I haven't handled one of those things in a long time.  That looks as old as me.  Does it work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No it is broken.  I am trying to reverse engineer it.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh.  Well in that case I might be able to help.  Obviously the fryer has a heating element that cannot be flammable and as well as not exceed the melting point of the fryer or the heating element itself.  It must of course be hot enough to bring the oil to a boiling point.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow. Thank you.  Is there anything else you can tell me?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_four.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_four_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh.  Well in that case I might be able to help.  Obviously the fryer has a heating element that cannot be flammable and as well as not exceed the melting point of the fryer or the heating element itself.  It must of course be hot enough to bring the oil to a boiling point.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow. Thank you.  Is there anything else you can tell me?
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			//-- NPC: Huh?  Who are you?  Were we just having a conversation?  Oh poodoo.  I recognize that model of fryer.  Kerhi Hilak used to sell those in her shop.  You should visit her and maybe she'll buy it.  That is what you wanted to do right?  Sell it?
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh yeah.  Where is Kerhi hi-Lak again?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_four.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_four_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Huh?  Who are you?  Were we just having a conversation?  Oh poodoo.  I recognize that model of fryer.  Kerhi Hilak used to sell those in her shop.  You should visit her and maybe she'll buy it.  That is what you wanted to do right?  Sell it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh yeah.  Where is Kerhi hi-Lak again?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			collections_ice_cream_part_four_action_signalNextTask (player, npc);

			//-- NPC: Here you go.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.collections_ice_cream_part_four");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.collections_ice_cream_part_four");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (collections_ice_cream_part_four_condition_hasActiveTask (player, npc))
	{
		//-- NPC: Hello.  I am busy in the garden at the moment. I wasn't expecting company.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am sorry Eteto I don't want to take too much of your time.
		boolean hasResponse0 = false;
		if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			utils.setScriptVar (player, "conversation.collections_ice_cream_part_four.branchId", 1);

			npcStartConversation (player, npc, "collections_ice_cream_part_four", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (collections_ice_cream_part_four_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello.  I am busy in the garden at the moment. Maybe you can come back later for tea.
		string_id message = new string_id (c_stringFile, "s_26");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "collections_ice_cream_part_four")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

	if (branchId == 1 && collections_ice_cream_part_four_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && collections_ice_cream_part_four_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && collections_ice_cream_part_four_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && collections_ice_cream_part_four_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && collections_ice_cream_part_four_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.collections_ice_cream_part_four.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

