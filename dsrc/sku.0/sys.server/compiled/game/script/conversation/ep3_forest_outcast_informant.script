// ======================================================================
//
// ep3_forest_outcast_informant.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_forest_outcast_informant";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_forest_outcast_informant_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_isEpicTaskActiveBad (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_2", 0) ||
		    groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_isEpicTaskActiveGood (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_3", 0) ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_3") ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_kerritamba_epic_7"));
	
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_isEpicTaskActiveContact (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_outcast_contact", 0) ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_outcast_contact"));
	
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_isEpicTaskAssassinActive (obj_id player, obj_id npc)
{
		return (groundquests.isTaskActive(player, "ep3_forest_outcast_assassin", 0) ||
			   groundquests.hasCompletedQuest(player, "ep3_forest_outcast_assassin"));
		
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_ChkActiveAssassin (obj_id player, obj_id npc)
{
		return groundquests.isTaskActive(player, "ep3_forest_outcast_assassin", 0);
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_ChkCompleteAssassin (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_outcast_assassin");
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_ChkContactActive (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "ep3_forest_outcast_contact", 0);
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_ChkContactFinish (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_outcast_contact");
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_isTaskActiveOne (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "ep3_forest_cryl_quest_2", 0);
}

// ----------------------------------------------------------------------

boolean ep3_forest_outcast_informant_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_cryl_quest_2");
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_forest_outcast_informant_action_giveAssassinQuest (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_outcast_assassin");
}

// ----------------------------------------------------------------------

void ep3_forest_outcast_informant_action_giveContactQuest (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_outcast_contact");
}

// ----------------------------------------------------------------------

void ep3_forest_outcast_informant_action_giveSignalOne (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "zhadran");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_forest_outcast_informant_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing milling around out here? You should get back to the Society. I can't be seen talking to you, if you know what I mean. [Zhadran smirks.]

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good to see you're still the same.
	if (response == "s_586")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran laughs.] Always. Now, get along. I have work to do.
			string_id message = new string_id (c_stringFile, "s_590");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran smirks.] I thought I'd never see you again. What are you now? Grunt? Merc? Surely, not Exemplar.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Currently, I am a mercenary for the Society.
	if (response == "s_598")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's good to see you've moved up in the world, however small that may be. What do you have for me?
			string_id message = new string_id (c_stringFile, "s_602");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Cryl wanted me to give you this.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_606");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's good to see you've moved up in the world, however small that may be. What do you have for me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Cryl wanted me to give you this.
	if (response == "s_606")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			ep3_forest_outcast_informant_action_giveSignalOne (player, npc);

			//-- NPC: Ahh. Well done. In return, give him this. He'll know you were successful if you show it to him.
			string_id message = new string_id (c_stringFile, "s_610");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_612");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ahh. Well done. In return, give him this. He'll know you were successful if you show it to him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will.
	if (response == "s_612")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good to see you again, merc. [Zhadran smiles slyly.]
			string_id message = new string_id (c_stringFile, "s_614");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why have you returned?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't seem to find Aveso Ars.
	if (response == "s_618")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Follow the river to the waterfall. There, you'll find a cave littered with Webweavers. Fight past them into the depths to find out little band of Outcasts. Aveso Ars will be there waiting for you.
			string_id message = new string_id (c_stringFile, "s_620");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [You nod.]
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_622");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No reason.
	if (response == "s_626")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then, I bid you away. The Kerritamba are watching.
			string_id message = new string_id (c_stringFile, "s_675");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Follow the river to the waterfall. There, you'll find a cave littered with Webweavers. Fight past them into the depths to find out little band of Outcasts. Aveso Ars will be there waiting for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [You nod.]
	if (response == "s_622")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Now hurry. I hve other things to which I must attend.
			string_id message = new string_id (c_stringFile, "s_624");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran looks you over briefly.] You survived..

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Survived.. what?
	if (response == "s_630")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran turns back to his work, only the trace of a smile left on his face.]
			string_id message = new string_id (c_stringFile, "s_632");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah. I survived your little attempt to get rid of me.
	if (response == "s_634")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Me? I would do no such thing. You must be mistaken. [Zhadran chuckles.] Move along. I have work to do.
			string_id message = new string_id (c_stringFile, "s_636");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran nods.] Ahh, an intelligent one. Good. You have dodged your first trial effortlessly and have chosen correctly. We could use someone who posseses such agility of the mind.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm listening.
	if (response == "s_640")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			ep3_forest_outcast_informant_action_giveContactQuest (player, npc);

			//-- NPC: [Zhadran leans in closer.] We are the Outcasts and, fortunately enough for you, the Kerritamba has labeled you as just that; an outcast feeding on the edge of life. You should seek out Aveso Ars. She's the go-to for new 'recruits'. She resides in the Webweaver caves just behind the Nawataa Waterfall. Seek her out.
			string_id message = new string_id (c_stringFile, "s_642");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This had better not be a waste of my time.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_644");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran leans in closer.] We are the Outcasts and, fortunately enough for you, the Kerritamba has labeled you as just that; an outcast feeding on the edge of life. You should seek out Aveso Ars. She's the go-to for new 'recruits'. She resides in the Webweaver caves just behind the Nawataa Waterfall. Seek her out.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This had better not be a waste of my time.
	if (response == "s_644")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran arches a brow.] Yes... you'll fit in nicely. [Zhadran smiles slyly as if thinking to himself.] Hmm.. You must go now. I can't risk drawing attention to myself. We never had this conversation.
			string_id message = new string_id (c_stringFile, "s_646");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What conversation? [You grin.]
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_648");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran arches a brow.] Yes... you'll fit in nicely. [Zhadran smiles slyly as if thinking to himself.] Hmm.. You must go now. I can't risk drawing attention to myself. We never had this conversation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What conversation? [You grin.]
	if (response == "s_648")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: Exactly. [Zhadran nods.]
			string_id message = new string_id (c_stringFile, "s_650");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see the Kerritamba have yet again pierced the skin of the ignorant with their deceiving talons. You should have been wiser, my young friend.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Kerritamba are good people. Who are you?
	if (response == "s_654")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: That is of no concern to you now, now is it? You've already made your choice.
			string_id message = new string_id (c_stringFile, "s_656");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You had better watch yourself.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_658");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is of no concern to you now, now is it? You've already made your choice.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You had better watch yourself.
	if (response == "s_658")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran just smiles.] So fierce, yet so naive. Fine then. Be gone. I have work to do.
			string_id message = new string_id (c_stringFile, "s_660");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran smiles knowingly.] Another Kerritamba puppet. Such a pity.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What--what do you mean?
	if (response == "s_664")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: You'll see in due time, my friend. When the time comes, you must make the choice... will you be a puppet? Or a part of a society.. a part of a bigger, better goal?
			string_id message = new string_id (c_stringFile, "s_666");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't make any sense.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_668");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You'll see in due time, my friend. When the time comes, you must make the choice... will you be a puppet? Or a part of a society.. a part of a bigger, better goal?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't make any sense.
	if (response == "s_668")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran just smiles.] You'll see soon enough. Just keep my words in mind, won't you? Keep your eyes open to the lies these people are trying to sell you. [Zhadran looks around,] Shhh... we never had this conversation.
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see.
			boolean hasResponse0 = false;
			if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_outcast_informant_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Zhadran just smiles.] You'll see soon enough. Just keep my words in mind, won't you? Keep your eyes open to the lies these people are trying to sell you. [Zhadran looks around,] Shhh... we never had this conversation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see.
	if (response == "s_672")
	{
		//-- [NOTE] 
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Zhadran returns to his work, but not without sending a knowing wink your way.]
			string_id message = new string_id (c_stringFile, "s_674");
			utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_forest_outcast_informant");

	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "zhadran" ));
	setInvulnerable(self, true);
	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "zhadran" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_forest_outcast_informant");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: What are you doing milling around out here? You should get back to the Society. I can't be seen talking to you, if you know what I mean. [Zhadran smirks.]
		string_id message = new string_id (c_stringFile, "s_583");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Good to see you're still the same.
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_586");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 1);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_isTaskActiveOne (player, npc))
	{
		//-- NPC: [Zhadran smirks.] I thought I'd never see you again. What are you now? Grunt? Merc? Surely, not Exemplar.
		string_id message = new string_id (c_stringFile, "s_594");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Currently, I am a mercenary for the Society.
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_598");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 3);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_isEpicTaskActiveContact (player, npc))
	{
		//-- NPC: Why have you returned?
		string_id message = new string_id (c_stringFile, "s_616");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I can't seem to find Aveso Ars.
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition_ChkContactActive (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No reason.
		boolean hasResponse1 = false;
		if (ep3_forest_outcast_informant_condition_ChkContactFinish (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_618");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_626");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 7);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_isEpicTaskAssassinActive (player, npc))
	{
		//-- NPC: [Zhadran looks you over briefly.] You survived..
		string_id message = new string_id (c_stringFile, "s_628");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Survived.. what?
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition_ChkActiveAssassin (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yeah. I survived your little attempt to get rid of me.
		boolean hasResponse1 = false;
		if (ep3_forest_outcast_informant_condition_ChkCompleteAssassin (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_630");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_634");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 11);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_isEpicTaskActiveBad (player, npc))
	{
		//-- NPC: [Zhadran nods.] Ahh, an intelligent one. Good. You have dodged your first trial effortlessly and have chosen correctly. We could use someone who posseses such agility of the mind.
		string_id message = new string_id (c_stringFile, "s_638");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm listening.
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_640");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 14);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition_isEpicTaskActiveGood (player, npc))
	{
		//-- NPC: I see the Kerritamba have yet again pierced the skin of the ignorant with their deceiving talons. You should have been wiser, my young friend.
		string_id message = new string_id (c_stringFile, "s_652");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: The Kerritamba are good people. Who are you?
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_654");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 18);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
	{
		//-- NPC: [Zhadran smiles knowingly.] Another Kerritamba puppet. Such a pity.
		string_id message = new string_id (c_stringFile, "s_662");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What--what do you mean?
		boolean hasResponse0 = false;
		if (ep3_forest_outcast_informant_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_664");

			utils.setScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId", 21);

			npcStartConversation (player, npc, "ep3_forest_outcast_informant", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_forest_outcast_informant")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

	if (branchId == 1 && ep3_forest_outcast_informant_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && ep3_forest_outcast_informant_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_forest_outcast_informant_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_forest_outcast_informant_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && ep3_forest_outcast_informant_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && ep3_forest_outcast_informant_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && ep3_forest_outcast_informant_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && ep3_forest_outcast_informant_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && ep3_forest_outcast_informant_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && ep3_forest_outcast_informant_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && ep3_forest_outcast_informant_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && ep3_forest_outcast_informant_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && ep3_forest_outcast_informant_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && ep3_forest_outcast_informant_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && ep3_forest_outcast_informant_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_forest_outcast_informant.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

