// ======================================================================
//
// c_impdefector_def.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_impdefector_def";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_impdefector_def_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_impdefector_def_condition_isOnQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_impdefector");
	int takephrase = groundquests.getTaskId(questId1, "takephrase"); 
	
	boolean onQuest = questIsTaskComplete(questId1, takephrase, player);
	
	return onQuest;
}

// ----------------------------------------------------------------------

boolean c_impdefector_def_condition_isonStepofQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_impdefector");
	int takephrase = groundquests.getTaskId(questId1, "takephrase"); 
	
	boolean onQuest = questIsTaskActive(questId1, takephrase, player);
	
	return onQuest;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_impdefector_def_action_forwardQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_impdefector_code");

	obj_id waypoint2 = getObjIdObjVar(player, "quest.general.quest/c_impdefector.hiding");
	if (waypoint2 != null)
    {
       destroyWaypointInDatapad(waypoint2, player);
    }
	removeObjVar(player, "quest.general.quest/c_impdefector.hiding");
	

}

// ----------------------------------------------------------------------

void c_impdefector_def_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_impdefector_def_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excuse me, you are the person that will take me to Officer Ten'doora, are you not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I'm here to take you to him.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (c_impdefector_def_condition__defaultCondition (player, npc))
		{
			c_impdefector_def_action_forwardQuest (player, npc);

			//-- NPC: The plans have changed.  The information that I have is very time sensitive and I'll only slow you down.  You need to get to Officer Ten'doora within 20 minutes and give him this message:  Droids need Star Destroyers in the evening.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Droids need Star Destroyers in the evening?  You have to be kidding me.
			boolean hasResponse0 = false;
			if (c_impdefector_def_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Got it.  I'm on my way.
			boolean hasResponse1 = false;
			if (c_impdefector_def_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.c_impdefector_def.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_impdefector_def.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_impdefector_def_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The plans have changed.  The information that I have is very time sensitive and I'll only slow you down.  You need to get to Officer Ten'doora within 20 minutes and give him this message:  Droids need Star Destroyers in the evening.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Droids need Star Destroyers in the evening?  You have to be kidding me.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (c_impdefector_def_condition__defaultCondition (player, npc))
		{
			//-- NPC: Do you think that I'm risking my life out here for nothing?  Just tell him what I said and don't screw it up.  Time is ticking.
			string_id message = new string_id (c_stringFile, "s_66");
			utils.removeScriptVar (player, "conversation.c_impdefector_def.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Got it.  I'm on my way.
	if (response == "s_68")
	{
		//-- [NOTE] 
		if (c_impdefector_def_condition__defaultCondition (player, npc))
		{
			//-- NPC: You have 20 minutes.  Hurry!
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.c_impdefector_def.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_impdefector_def");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName (self, "Inperial Defector");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName (self, "Imperial Defector");	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_impdefector_def");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_impdefector_def_condition_isonStepofQuest (player, npc))
	{
		c_impdefector_def_action_faceplayer (player, npc);

		//-- NPC: Excuse me, you are the person that will take me to Officer Ten'doora, are you not?
		string_id message = new string_id (c_stringFile, "s_58");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I'm here to take you to him.
		boolean hasResponse0 = false;
		if (c_impdefector_def_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_60");

			utils.setScriptVar (player, "conversation.c_impdefector_def.branchId", 1);

			npcStartConversation (player, npc, "c_impdefector_def", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_impdefector_def_condition_isOnQuest (player, npc))
	{
		c_impdefector_def_action_faceplayer (player, npc);

		//-- NPC: Why are you standing around, get moving!
		string_id message = new string_id (c_stringFile, "s_72");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_impdefector_def_condition__defaultCondition (player, npc))
	{
		//-- NPC: Can't a person just enjoy a lovely day?  Please leave me be.
		string_id message = new string_id (c_stringFile, "s_74");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_impdefector_def")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_impdefector_def.branchId");

	if (branchId == 1 && c_impdefector_def_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_impdefector_def_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_impdefector_def.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

