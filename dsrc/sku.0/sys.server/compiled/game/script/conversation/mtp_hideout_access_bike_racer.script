// ======================================================================
//
// mtp_hideout_access_bike_racer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_hideout_access_bike_racer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_hideout_access_bike_racer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_access_bike_racer_condition_mtpHideout03_01 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "mtp_hideout_access_03", "mtp_hideout_access_03_01") ||
	groundquests.isTaskActive(player, "mtp_hideout_access_high_03", "mtp_hideout_access_03_01");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_access_bike_racer_condition_mtpHideout03_01_done (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "mtp_hideout_access_03", "mtp_hideout_access_03_01") ||
	groundquests.hasCompletedTask(player, "mtp_hideout_access_high_03", "mtp_hideout_access_03_01");
}

// ======================================================================
// Script Actions
// ======================================================================

void mtp_hideout_access_bike_racer_action_signal_mtpHideout03_01 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "mtp_hideout_access_03_01");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_hideout_access_bike_racer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They smashed my bikes. Some Meatlumps. I know of them on Corellia, but had never run into any here on Talus before this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do you know it was Meatlumps?
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (mtp_hideout_access_bike_racer_condition__defaultCondition (player, npc))
		{
			mtp_hideout_access_bike_racer_action_signal_mtpHideout03_01 (player, npc);

			//-- NPC: I found one of their jackets. They left it behind...probably forgotten in their lustful rampage of destruction. There was also a map to their camp. I will upload the coordinates for you.
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.mtp_hideout_access_bike_racer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_hideout_access_bike_racer");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_hideout_access_bike_racer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (mtp_hideout_access_bike_racer_condition_mtpHideout03_01_done (player, npc))
	{
		//-- NPC: I hope you make them pay...the foul, degenerate miscreants. Talus was much better off without Meatlumps, and I, for one, look forward to the day in which they are once again gone from this planet.
		string_id message = new string_id (c_stringFile, "s_4");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_access_bike_racer_condition_mtpHideout03_01 (player, npc))
	{
		//-- NPC: They smashed my bikes. Some Meatlumps. I know of them on Corellia, but had never run into any here on Talus before this.
		string_id message = new string_id (c_stringFile, "s_29");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do you know it was Meatlumps?
		boolean hasResponse0 = false;
		if (mtp_hideout_access_bike_racer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.mtp_hideout_access_bike_racer.branchId", 2);

			npcStartConversation (player, npc, "mtp_hideout_access_bike_racer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_access_bike_racer_condition__defaultCondition (player, npc))
	{
		//-- NPC: Riding a speeder bike is the only thing I know how to do and I gotta do something.
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_hideout_access_bike_racer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_hideout_access_bike_racer.branchId");

	if (branchId == 2 && mtp_hideout_access_bike_racer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_hideout_access_bike_racer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

