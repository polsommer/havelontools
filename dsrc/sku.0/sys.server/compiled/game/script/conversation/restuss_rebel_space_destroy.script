// ======================================================================
//
// restuss_rebel_space_destroy.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.resource;
include library.restuss_event;
include library.space_flags;
include library.space_quest;
include library.trial;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_rebel_space_destroy";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_rebel_space_destroy_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_completedKill1 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_rebel_space_destroy_1", "returnGrollo");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_killActive1 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_rebel_space_destroy_1");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_completedKill2 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_rebel_space_destroy_2", "returnGrollo2");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_killActive2 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_rebel_space_destroy_2");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_inPhase2 (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isRebel(player)&&
		(restuss_event.getPhase(object) == 2))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_inPhase1 (obj_id player, obj_id npc)
{
	if (factions.isRebel(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_enoughKills (obj_id player, obj_id npc)
{
	obj_id object = trial.getParent(npc);
	
	if (factions.isRebel(player)&&
		(restuss_event.getPhase(object) == 3))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_isRSFPilot (obj_id player, obj_id npc)
{
	return space_flags.isSpaceTrack(player, space_flags.PRIVATEER_NABOO);
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_isFailedTwo (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuestRecursive( player, "destroy", "restuss_rebel_destroy_2" ) ||
		 space_quest.hasAbortedQuestRecursive( player, "destroy", "restuss_rebel_destroy_2" ) )
		 {
		 	return true;
		 }
	return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_isFailedOne (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuestRecursive( player, "destroy", "restuss_rebel_destroy_1" ) ||
		 space_quest.hasAbortedQuestRecursive( player, "destroy", "restuss_rebel_destroy_1" ) )
		 {
		 	return true;
		 }
	return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_space_destroy_condition_isImperialPlayer (obj_id player, obj_id npc)
{
	return factions.isImperial(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_rebel_space_destroy_action_givekill1 (obj_id player, obj_id npc)
{
	obj_id mobj = space_quest._getQuest(player, "destroy", "restuss_rebel_destroy_1");
	space_quest.setSilentQuestAborted(player, mobj);

	groundquests.clearQuest (player, "restuss_rebel_space_destroy_1");
	groundquests.grantQuest (player, "restuss_rebel_space_destroy_1");
}

// ----------------------------------------------------------------------

void restuss_rebel_space_destroy_action_signalDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedGrollo");
	restuss_event.incrimentCompletedQuestCount(npc, "restuss_rebel_space_destroy_1");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 0)
	{
		float ratio = restuss_event.getCompletedQuestRatio(npc, "restuss_rebel_space_destroy_1");
		if (ratio > .5)
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
	if (phase == 1)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_rebel_space_destroy_1"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_rebel_space_destroy_action_givekill2 (obj_id player, obj_id npc)
{
	obj_id mobj = space_quest._getQuest(player, "destroy", "restuss_rebel_destroy_2");
	space_quest.setSilentQuestAborted(player, mobj);

	groundquests.clearQuest (player, "restuss_rebel_space_destroy_2");
	groundquests.grantQuest (player, "restuss_rebel_space_destroy_2");
}

// ----------------------------------------------------------------------

void restuss_rebel_space_destroy_action_signalDone2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedGrollo2");
	restuss_event.incrimentCompletedQuestCount(npc, "restuss_rebel_space_destroy_2");
	int phase = restuss_event.getPhase(npc);
	
	if (phase == 2)
	{
		if (restuss_event.isRequiredCountMet(npc, "restuss_rebel_space_destroy_2"))
		{
			restuss_event.incrimentPhase(npc);
			return;
		}
	}
}

// ----------------------------------------------------------------------

void restuss_rebel_space_destroy_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_rebel_space_destroy_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So, you have come back without completing your task.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir!
	if (response == "s_30")
	{
		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: I know you will, pilot. Good luck up there, we're counting on you!
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm afraid I'm not a pilot, sir.
	if (response == "s_34")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: I understand. You should check with one of the other officers here and see if they have something you can assist them with.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_destroy_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You didn't destroy nearly enough of those fighters.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir!
	if (response == "s_27")
	{
		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_givekill1 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: I know you will, pilot. Good luck up there, we're counting on you!
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm afraid I'm not a pilot, sir.
	if (response == "s_37")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: I understand. You should check with one of the other officers here and see if they have something you can assist them with.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_destroy_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance. Since we've maintained control of the Corellia system, the Imperial Navy is making another push. They are bringing in fighters from other parts of the galaxy for a massive fleet attack. Your mission, if you accept, will be to destroy 15 TIEs in the Yavin system.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir!
	if (response == "s_38")
	{
		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: I know you will, pilot. Good luck up there, we're counting on you!
			string_id message = new string_id (c_stringFile, "s_40");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm afraid I'm not a pilot, sir.
	if (response == "s_42")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: I understand. You should check with one of the other officers here and see if they have something you can assist them with.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_destroy_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance. Since we've maintained control of the Corellia system, the Imperial Navy is making one last push. They are bringing in fighters from other parts of the galaxy for a massive fleet attack. Your mission, if you accept, will be to destroy 15 TIEs in the Yavin system.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir!
	if (response == "s_30")
	{
		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_givekill2 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: I know you will, pilot. Good luck up there, we're counting on you!
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm afraid I'm not a pilot, sir.
	if (response == "s_34")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: I understand. You should check with one of the other officers here and see if they have something you can assist them with.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_space_destroy_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance with taking control of the Corellia system. The Imperial Navy is planning to bring in capital ships for ground bombardment, to help in their defense of Restuss. We can't let that happen. I need you to destroy 30 of their military ships so that we can maintain control above Rori.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir!
	if (response == "s_27")
	{
		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_givekill1 (player, npc);

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: I know you will, pilot. Good luck up there, we're counting on you!
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm afraid I'm not a pilot, sir.
	if (response == "s_37")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			//-- NPC: I understand. You should check with one of the other officers here and see if they have something you can assist them with.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_rebel_space_destroy");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_rebel_space_destroy");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_isImperialPlayer (player, npc))
	{
		restuss_rebel_space_destroy_action_eject (player, npc);

		//-- NPC: The Empire has no place here.
		string_id message = new string_id (c_stringFile, "s_49");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_isRSFPilot (player, npc))
	{
		//-- NPC: Sorry, but I cannot take the risk that you might be an Imperial spy. I can only hire pilots who do not work closely with the Empire.
		string_id message = new string_id (c_stringFile, "s_41");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_completedKill2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_signalDone2 (player, npc);

		//-- NPC: Splendid work, pilot. We're in your debt. We have reports that there's still more TIEs scheduled to be transferred from the Yavin system though so if you're up to it, let me know and I'll assign you another mission.
		string_id message = new string_id (c_stringFile, "s_13");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_completedKill1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_space_destroy_action_signalDone (player, npc);

		//-- NPC: Splendid work, pilot. We're in your debt. There's still more of the Imperial Navy up there though. If you're up to it, let me know and I'll assign you a new mission.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_isFailedTwo (player, npc))
	{
		//-- NPC: So, you have come back without completing your task.
		string_id message = new string_id (c_stringFile, "s_45");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do my best, sir!
		boolean hasResponse0 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm afraid I'm not a pilot, sir.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId", 12);

			npcStartConversation (player, npc, "restuss_rebel_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_isFailedOne (player, npc))
	{
		//-- NPC: You didn't destroy nearly enough of those fighters.
		string_id message = new string_id (c_stringFile, "s_46");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do my best, sir!
		boolean hasResponse0 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm afraid I'm not a pilot, sir.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_27");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId", 15);

			npcStartConversation (player, npc, "restuss_rebel_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_killActive2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: We still need you to destroy more TIEs in the Yavin system, pilot.
		string_id message = new string_id (c_stringFile, "s_11");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_killActive1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: We still need you to destroy more Imperial fighters in the Corellia system, pilot.
		string_id message = new string_id (c_stringFile, "s_12");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_enoughKills (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance. Since we've maintained control of the Corellia system, the Imperial Navy is making another push. They are bringing in fighters from other parts of the galaxy for a massive fleet attack. Your mission, if you accept, will be to destroy 15 TIEs in the Yavin system.
		string_id message = new string_id (c_stringFile, "s_33");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do my best, sir!
		boolean hasResponse0 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm afraid I'm not a pilot, sir.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId", 9);

			npcStartConversation (player, npc, "restuss_rebel_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_inPhase2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance. Since we've maintained control of the Corellia system, the Imperial Navy is making one last push. They are bringing in fighters from other parts of the galaxy for a massive fleet attack. Your mission, if you accept, will be to destroy 15 TIEs in the Yavin system.
		string_id message = new string_id (c_stringFile, "s_28");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do my best, sir!
		boolean hasResponse0 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm afraid I'm not a pilot, sir.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId", 12);

			npcStartConversation (player, npc, "restuss_rebel_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition_inPhase1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Good to see another soldier joining the fray. We sure could use you. If you're a pilot, I need your assistance with taking control of the Corellia system. The Imperial Navy is planning to bring in capital ships for ground bombardment, to help in their defense of Restuss. We can't let that happen. I need you to destroy 30 of their military ships so that we can maintain control above Rori.
		string_id message = new string_id (c_stringFile, "s_25");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will do my best, sir!
		boolean hasResponse0 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm afraid I'm not a pilot, sir.
		boolean hasResponse1 = false;
		if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_27");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37");

			utils.setScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId", 15);

			npcStartConversation (player, npc, "restuss_rebel_space_destroy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_space_destroy_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: You should leave, friend. This place is about to get very dangerous for civilians.
		string_id message = new string_id (c_stringFile, "s_48");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_rebel_space_destroy")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

	if (branchId == 5 && restuss_rebel_space_destroy_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && restuss_rebel_space_destroy_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && restuss_rebel_space_destroy_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && restuss_rebel_space_destroy_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && restuss_rebel_space_destroy_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_rebel_space_destroy.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

