// ======================================================================
//
// story_loot_talus.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.money;
include library.prose;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/story_loot_talus";

// ======================================================================
// Script Conditions
// ======================================================================

boolean story_loot_talus_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkAll (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("all"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkTatooine (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("tatooine"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkNaboo (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("naboo"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkCorellia (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("corellia"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkLok (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("lok"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkDantooine (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("dantooine"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkYavin4 (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("yavin4"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkEndor (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("endor"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkDathomir (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("dathomir"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_hasSpaceExp (obj_id player, obj_id npc)
{
	return features.isSpaceEdition(player);

}

// ----------------------------------------------------------------------

boolean story_loot_talus_condition_checkRem (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.rem"))
		return true;
		
return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void story_loot_talus_action_Tatooine (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Naboo (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Corellia (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Dantooine (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Lok (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Yavin4 (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Endor (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 4000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_Dathomir (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 4000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_All (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 150;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_talus_action_animBow (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "bow" );
}

// ----------------------------------------------------------------------

void story_loot_talus_action_storyLoot (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "story_loot.rem", true);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.story_loot_talus");
		
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName( self, "Ebony Ves'Ser" );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName( self, "Ebony Ves'Ser" );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.story_loot_talus");

	return SCRIPT_CONTINUE;
}

trigger OnGiveItem(obj_id item, obj_id player)
{
	if (hasObjVar(item, "story_loot.planet"))
	{
		string planet = getStringObjVar(item, "story_loot.planet");
		
		utils.setScriptVar(player, "story_loot.planet", planet);
		utils.setScriptVar(player, "story_loot.item", item);
		
		OnStartNpcConversation(self, player);
	}
	
	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (story_loot_talus_condition_checkAll (player, self))
	{
		story_loot_talus_action_All (player, self);

		//-- NPC: Freightersss... deviousss, are you not?
		string_id message = new string_id (c_stringFile, "s_d446e3df");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkCorellia (player, self))
	{
		story_loot_talus_action_Corellia (player, self);

		//-- NPC: Corellia... Thank you.
		string_id message = new string_id (c_stringFile, "s_a5556cbd");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkDantooine (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_talus_action_Dantooine (player, self);

		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkDathomir (player, self))
	{
		story_loot_talus_action_Dathomir (player, self);

		//-- NPC: Dathomir... yesss. Go find more.
		string_id message = new string_id (c_stringFile, "s_dd1eea6d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkEndor (player, self))
	{
		doAnimationAction (self, "nod_head_multiple");

		story_loot_talus_action_Endor (player, self);

		//-- NPC: Endor.. Yesss! My homeworld. How I missss it.
		string_id message = new string_id (c_stringFile, "s_e45caf5a");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkLok (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_talus_action_Lok (player, self);

		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkNaboo (player, self))
	{
		story_loot_talus_action_Naboo (player, self);

		//-- NPC: Naboo, yesss.. Delicate, tasty humanss.
		string_id message = new string_id (c_stringFile, "s_383cdae");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkTatooine (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_talus_action_Tatooine (player, self);

		//-- NPC: Tatooine, yesss.. My people will approve.
		string_id message = new string_id (c_stringFile, "s_ece79bc1");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkYavin4 (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_talus_action_Yavin4 (player, self);

		//-- NPC: Yavin 4, yesss...
		string_id message = new string_id (c_stringFile, "s_c4f7d1f");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_checkRem (player, self))
	{
		//-- NPC: ... Oh, yesss. I remember you. Drag the objectsss onto me and I will pay you for your ssservicess.
		string_id message = new string_id (c_stringFile, "s_244d9ea1");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition_hasSpaceExp (player, self))
	{
		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Whoa! What are you?
		boolean hasResponse0 = false;
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_a10eda57");

			setObjVar (player, "conversation.story_loot_talus.branchId", 11);

			npcStartConversation (player, self, "story_loot_talus", message, responses);
		}
		else
		{
			chat.chat (self, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_talus_condition__defaultCondition (player, self))
	{
		//-- NPC: ... You are not a pilot. Go away.
		string_id message = new string_id (c_stringFile, "s_9b37d148");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "story_loot_talus")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.story_loot_talus.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: ...
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Whoa! What are you?
	if (branchId == 11 && response == "s_a10eda57")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: ... I am a Marauder, a race of reptilian humanoidsss, sssurviving as best we can on Endor. We lure sssilly humanoidsss like you to their death and ssteal their technology sso we can ssurvive. Now, what iss it that you want?
			string_id message = new string_id (c_stringFile, "s_a3d8ff73");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uh... nothing. Bye.
			boolean hasResponse0 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: But this is Talus. Are you lost?
			boolean hasResponse1 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1eaeb942");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b7dfba8d");

				setObjVar (player, "conversation.story_loot_talus.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_talus.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch '...' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: ... I am a Marauder, a race of reptilian humanoidsss, sssurviving as best we can on Endor. We lure sssilly humanoidsss like you to their death and ssteal their technology sso we can ssurvive. Now, what iss it that you want?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uh... nothing. Bye.
	if (branchId == 12 && response == "s_1eaeb942")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: ...
			string_id message = new string_id (c_stringFile, "s_9208410d");
			removeObjVar (player, "conversation.story_loot_talus.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch '... I am a Marauder, a race of reptilian humanoidsss, sssurviving as best we can on Endor. We lure sssilly humanoidsss like you to their death and ssteal their technology sso we can ssurvive. Now, what iss it that you want?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: ... I am a Marauder, a race of reptilian humanoidsss, sssurviving as best we can on Endor. We lure sssilly humanoidsss like you to their death and ssteal their technology sso we can ssurvive. Now, what iss it that you want?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: But this is Talus. Are you lost?
	if (branchId == 12 && response == "s_b7dfba8d")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: Ssstupid human. I am here to gather information for my people.
			string_id message = new string_id (c_stringFile, "s_c4dd562d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh. What kind of information?
			boolean hasResponse0 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82270559");

				setObjVar (player, "conversation.story_loot_talus.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_talus.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch '... I am a Marauder, a race of reptilian humanoidsss, sssurviving as best we can on Endor. We lure sssilly humanoidsss like you to their death and ssteal their technology sso we can ssurvive. Now, what iss it that you want?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Ssstupid human. I am here to gather information for my people.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh. What kind of information?
	if (branchId == 14 && response == "s_82270559")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: It doesss not concern you.
			string_id message = new string_id (c_stringFile, "s_8696779b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: C'mon. Maybe I can help.
			boolean hasResponse0 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Alright, if you want to be like that.
			boolean hasResponse1 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_435d9064");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6236530");

				setObjVar (player, "conversation.story_loot_talus.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_talus.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Ssstupid human. I am here to gather information for my people.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: It doesss not concern you.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: C'mon. Maybe I can help.
	if (branchId == 15 && response == "s_435d9064")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: ... You ssseem to be a pilot. I sssuppose I can implore you to help me. I am ssseeking information from the ssspace sssystemss. When you find it, you will know what I am looking for. Bring them to me.
			string_id message = new string_id (c_stringFile, "s_c42087aa");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's a little vague. But you're not much for talking. But okay.
			boolean hasResponse0 = false;
			if (story_loot_talus_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2e907efd");

				setObjVar (player, "conversation.story_loot_talus.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_talus.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'It doesss not concern you.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: It doesss not concern you.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, if you want to be like that.
	if (branchId == 15 && response == "s_6236530")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			//-- NPC: ...
			string_id message = new string_id (c_stringFile, "s_9208410d");
			removeObjVar (player, "conversation.story_loot_talus.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'It doesss not concern you.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: ... You ssseem to be a pilot. I sssuppose I can implore you to help me. I am ssseeking information from the ssspace sssystemss. When you find it, you will know what I am looking for. Bring them to me.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's a little vague. But you're not much for talking. But okay.
	if (branchId == 16 && response == "s_2e907efd")
	{
		//-- [NOTE] 
		if (story_loot_talus_condition__defaultCondition (player, self))
		{
			story_loot_talus_action_storyLoot (player, self);

			//-- NPC: ...
			string_id message = new string_id (c_stringFile, "s_9208410d");
			removeObjVar (player, "conversation.story_loot_talus.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch '... You ssseem to be a pilot. I sssuppose I can implore you to help me. I am ssseeking information from the ssspace sssystemss. When you find it, you will know what I am looking for. Bring them to me.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.story_loot_talus.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

