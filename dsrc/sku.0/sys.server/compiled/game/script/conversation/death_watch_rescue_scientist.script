// ======================================================================
//
// death_watch_rescue_scientist.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.money;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/death_watch_rescue_scientist";

// ======================================================================
// Script Conditions
// ======================================================================

boolean death_watch_rescue_scientist_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean death_watch_rescue_scientist_condition_RebelCheck (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	
	if ( playerFaction == null )
		return false;
	
	if ( playerFaction.equals("Rebel") )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_rescue_scientist_condition_ImperialCheck (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	
	if ( playerFaction == null )
		return false;
	
	if ( playerFaction.equals("Imperial") )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_rescue_scientist_condition_NeutralCheck (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if ( playerFaction == null )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean death_watch_rescue_scientist_condition_AlreadyRescuedCheck (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "death_watch_herald.neutralrescue"))
		return true;
	if(hasObjVar(player, "death_watch_herald.imperialrescue"))
		return true;
	if(hasObjVar(player, "death_watch_herald.rebelrescue"))
		return true;
				
return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void death_watch_rescue_scientist_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void death_watch_rescue_scientist_action_RewardRebel (obj_id player, obj_id npc)
{
	if (!hasObjVar(player, "death_watch_herald.rebelfinish"))
	{
		if (!hasObjVar(player, "death_watch_herald.rebelrescue"))
		{
			factions.addFactionStanding(player, "Rebel", 30);
			setObjVar(player, "death_watch_herald.rebelrescue", true);
		}
	}
return;
}

// ----------------------------------------------------------------------

void death_watch_rescue_scientist_action_RewardImperial (obj_id player, obj_id npc)
{
	if (!hasObjVar(player, "death_watch_herald.imperialrescue"))
	{
		factions.addFactionStanding(player, "Imperial", 30);
		setObjVar(player, "death_watch_herald.imperialrescue", true);
	}
return;
}

// ----------------------------------------------------------------------

void death_watch_rescue_scientist_action_RewardNeutral (obj_id player, obj_id npc)
{
	if (!hasObjVar(player, "death_watch_herald.neutralrescue"))
	{
		int credits = 487;
		if (credits != 0)
		{
			money.bankTo(money.ACCT_JABBA, player, credits);
			sendSystemMessage (player, credits + " credits have been deposited in your bank account.", null);
			setObjVar(player, "death_watch_herald.neutralrescue", true);
		}
	}
return;
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.death_watch_rescue_scientist");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, "Hetl Darkrunner");
	setInvulnerable(self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.death_watch_rescue_scientist");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (death_watch_rescue_scientist_condition_AlreadyRescuedCheck (player, self))
	{
		//-- NPC: Thank you for saving me earlier. Getting out is harder than I thought. I'm devising my plan for escape now. You needn't worry about me anymore.
		string_id message = new string_id (c_stringFile, "s_bbc873d5");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (death_watch_rescue_scientist_condition_RebelCheck (player, self))
	{
		death_watch_rescue_scientist_action_RewardRebel (player, self);

		//-- NPC: Ah! I'm so glad you've come! I thought I was done for! Here, take this as a symbol of my appreciation. I need to get out of here!
		string_id message = new string_id (c_stringFile, "s_d3b5ac87");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (death_watch_rescue_scientist_condition_ImperialCheck (player, self))
	{
		death_watch_rescue_scientist_action_RewardImperial (player, self);

		//-- NPC: Thank you for rescuing me. I am truly in your debt. Forgive me, but I must get out of here quickly. Thank you again.
		string_id message = new string_id (c_stringFile, "s_8801c9a5");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (death_watch_rescue_scientist_condition_NeutralCheck (player, self))
	{
		death_watch_rescue_scientist_action_RewardNeutral (player, self);

		//-- NPC: Whew! Thank you for rescuing me. I appreciate it! I have to get out of here quickly!
		string_id message = new string_id (c_stringFile, "s_b4b8c363");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "death_watch_rescue_scientist")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.death_watch_rescue_scientist.branchId");

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.death_watch_rescue_scientist.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

