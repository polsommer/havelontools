// ======================================================================
//
// c_prof_ent_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.content;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_prof_ent_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_prof_ent_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");

	return questIsQuestActive(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playerFinishedQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	
	return questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playerFinishedFirstPart (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int anchorContact = groundquests.getTaskId(questId1, "anchorContact"); 
	int bestineContact = groundquests.getTaskId(questId1, "bestineContact"); 
	int espaContact = groundquests.getTaskId(questId1, "espaContact"); 	
	
	return 	questIsTaskComplete(questId1, anchorContact, player)&& 
			questIsTaskComplete(questId1, bestineContact, player)&&
			questIsTaskComplete(questId1, espaContact, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_espaDone (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int espaContact = groundquests.getTaskId(questId1, "espaContact"); 
	
	return questIsTaskComplete(questId1, espaContact, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_bestineDone (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int bestineContact = groundquests.getTaskId(questId1, "bestineContact"); 
	
	return questIsTaskComplete(questId1, bestineContact, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_anchorDone (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int anchorContact = groundquests.getTaskId(questId1, "anchorContact"); 
	
	return questIsTaskComplete(questId1, anchorContact, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playerFinishedParty (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int longdance = groundquests.getTaskId(questId1, "longdance"); 
	
	return questIsTaskComplete(questId1, longdance, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playeronFirstPart (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int firstdone = groundquests.getTaskId(questId1, "firstdone"); 
	
	return questIsTaskActive(questId1, firstdone, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playeronSecondPart (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int longdance = groundquests.getTaskId(questId1, "longdance"); 
	
	return questIsTaskActive(questId1, longdance, player)||questIsTaskComplete(questId1, longdance, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_playerOnPartyStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_entertainer");
	int longdance = groundquests.getTaskId(questId1, "longdance"); 
	
	return questIsTaskComplete(questId1, longdance, player)||
			questIsTaskActive(questId1, longdance, player);
}

// ----------------------------------------------------------------------

boolean c_prof_ent_questgiver_condition_isPlayerEntertainer (obj_id player, obj_id npc)
{
	return content.isEntertainer(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void c_prof_ent_questgiver_action_giveQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_prof_entertainer");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveRewardIthMale (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_finishQuest");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/wearables/ithorian/ith_shirt_s03.iff";
	obj_id objectPlaced = createObject( templateName, playerInventory, "" );

	groundquests.sendPlacedInInventorySystemMessage(player, objectPlaced, templateName);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_facePlayer (obj_id player, obj_id npc)
{
		faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveRewardIthFem (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_finishQuest");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/wearables/ithorian/ith_pants_s11.iff";
	obj_id objectPlaced = createObject( templateName, playerInventory, "" );

	groundquests.sendPlacedInInventorySystemMessage(player, objectPlaced, templateName);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveRewardWook (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_finishQuest");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/wearables/wookiee/wke_skirt_s01.iff";
	obj_id objectPlaced = createObject( templateName, playerInventory, "" );

	groundquests.sendPlacedInInventorySystemMessage(player, objectPlaced, templateName);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveRewardMale (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_finishQuest");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/wearables/shirt/shirt_s03.iff";
	obj_id objectPlaced = createObject( templateName, playerInventory, "" );

	groundquests.sendPlacedInInventorySystemMessage(player, objectPlaced, templateName);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveRewardFemale (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_finishQuest");

	obj_id playerInventory = utils.getInventoryContainer( player );
	string templateName = "object/tangible/wearables/skirt/skirt_s04.iff";
	obj_id objectPlaced = createObject( templateName, playerInventory, "" );
	
	groundquests.sendPlacedInInventorySystemMessage(player, objectPlaced, templateName);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_giveMayorWaypoint (obj_id player, obj_id npc)
{
	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = 3429;
	loc.y = 0;
	loc.z = -4730;
	loc.area = "tatooine";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setWaypointName(waypoint, "Mayor Guh'rantt");
	setWaypointActive(waypoint, true);
}

// ----------------------------------------------------------------------

void c_prof_ent_questgiver_action_firstPartDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_ent_firstdone");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_prof_ent_questgiver_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello, %TU. How is Mos Eisley treating you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You know me?
	if (response == "s_1164")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Yes, of course. Did you think that your presence wouldn't be talked about?  Do you think that I don't know what goes on around here?
			string_id message = new string_id (c_stringFile, "s_1166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I didn't think about it that way. I guess you do hear a lot.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1168");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: About expected. This is a rough city.
	if (response == "s_1208")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very much so. 
			string_id message = new string_id (c_stringFile, "s_1210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You must know how to keep yourself safe. 
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1212");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, of course. Did you think that your presence wouldn't be talked about?  Do you think that I don't know what goes on around here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I didn't think about it that way. I guess you do hear a lot.
	if (response == "s_1168")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I do hear quite a bit. There is something about performing that people find familiar. Many trust us with secrets that they wouldn't tell their closest friends. I have never been able to understand why, actually.
			string_id message = new string_id (c_stringFile, "s_1170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like a useful skill to have.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1172");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I do hear quite a bit. There is something about performing that people find familiar. Many trust us with secrets that they wouldn't tell their closest friends. I have never been able to understand why, actually.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like a useful skill to have.
	if (response == "s_1172")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Without a doubt. Is this a skill that you would like to have?
			string_id message = new string_id (c_stringFile, "s_1174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I already have it, thanks.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No way. That's like manipulation!
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1176");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1192");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1204");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Without a doubt. Is this a skill that you would like to have?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes!
	if (response == "s_1176")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: All right. What you need to do is establish yourself as a performer. With attention spans the way they are, it usually only takes 5 or 10 minutes. Once you establish yourself, you should have no problem talking to people. In fact, I have three people that I want you to talk to. It will give you practice.
			string_id message = new string_id (c_stringFile, "s_1178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who do you want me to talk to?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I refuse to do your dirty work!
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1180");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1188");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I already have it, thanks.
	if (response == "s_1192")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: Prove it to me then!  Go out to Bestine, Anchorhead, and Mos Espa and talk to three people. Bring back information for me and I will pay you well.
			string_id message = new string_id (c_stringFile, "s_1194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine!  I will!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1196");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No way. That's like manipulation!
	if (response == "s_1204")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "blame");

			//-- NPC: Manipulation! I didn't realize that talking to people was manipulating them. Come back when you change your attitude.  
			string_id message = new string_id (c_stringFile, "s_1206");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right. What you need to do is establish yourself as a performer. With attention spans the way they are, it usually only takes 5 or 10 minutes. Once you establish yourself, you should have no problem talking to people. In fact, I have three people that I want you to talk to. It will give you practice.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who do you want me to talk to?
	if (response == "s_1180")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I want you to go to Bestine, Anchorhead, and Mos Espa. I'll give you waypoints and put the names in your journal. When you have spoken to all three, return to me. If you can find out anything about Tuskens or criminal activity, I'd appreciate it.
			string_id message = new string_id (c_stringFile, "s_1182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1184");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I refuse to do your dirty work!
	if (response == "s_1188")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: What dirty work?  I just want you to talk to people. If you change your mind, come back. 
			string_id message = new string_id (c_stringFile, "s_1190");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I want you to go to Bestine, Anchorhead, and Mos Espa. I'll give you waypoints and put the names in your journal. When you have spoken to all three, return to me. If you can find out anything about Tuskens or criminal activity, I'd appreciate it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well.
	if (response == "s_1184")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveQuest (player, npc);

			//-- NPC: I'll see you when you get back.
			string_id message = new string_id (c_stringFile, "s_1186");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Prove it to me then!  Go out to Bestine, Anchorhead, and Mos Espa and talk to three people. Bring back information for me and I will pay you well.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine!  I will!
	if (response == "s_1196")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good!  I'll write down the names in your journal. If you can find out anything about Tuskens or criminal activity, I'd appreciate it.
			string_id message = new string_id (c_stringFile, "s_1198");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tuskens.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1200");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good!  I'll write down the names in your journal. If you can find out anything about Tuskens or criminal activity, I'd appreciate it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tuskens.  Got it.
	if (response == "s_1200")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			c_prof_ent_questgiver_action_giveQuest (player, npc);

			//-- NPC: I'll see you when you get back.
			string_id message = new string_id (c_stringFile, "s_1202");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very much so. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You must know how to keep yourself safe. 
	if (response == "s_1212")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I do hear quite a bit. There is something about performing that people find familiar. Many trust us with secrets that they wouldn't tell their closest friends. I have never been able to understand why, actually.
			string_id message = new string_id (c_stringFile, "s_1170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like a useful skill to have.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1172");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.  What did you discover?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't gotten any information from Dorn Gestros yet.
	if (response == "s_1216")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Head over to Mos Espa and talk to him.  Remember that I'm looking for information about Tuskens or criminals. Once he believes that you are an entertainer, you should have little trouble.
			string_id message = new string_id (c_stringFile, "s_1218");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will head there now.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1220");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't gotten any information from Crix Yarrow yet.
	if (response == "s_1224")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, well go to Bestine and talk to him.  He's probably drinking pretty heavily.  He usually does when he's upset.  If you can keep him on track, he will give you decent information.
			string_id message = new string_id (c_stringFile, "s_1226");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on my way.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1228");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't gotten any information from Borra Setas yet.
	if (response == "s_1232")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, well go to Anchorhead and talk to her.  From all reports, she's hiding, so reminding her why she needs to be scared won't help at all.  Try to distract her or anger her.  That may get her past her fear.
			string_id message = new string_id (c_stringFile, "s_1234");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting.  I'll go back now.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1236");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  Let me tell you when I found out...
	if (response == "s_1240")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Interesting indeed.  Right now, you are the only one that I trust to continue following this.  I'm going to need you to go to a party and perform there.  I'd like to make sure that you are as well-armed with knowledge as possible.  Is there anything that I can explain to you to help?
			string_id message = new string_id (c_stringFile, "s_1242");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Head over to Mos Espa and talk to him.  Remember that I'm looking for information about Tuskens or criminals. Once he believes that you are an entertainer, you should have little trouble.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will head there now.
	if (response == "s_1220")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_1222");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, well go to Bestine and talk to him.  He's probably drinking pretty heavily.  He usually does when he's upset.  If you can keep him on track, he will give you decent information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on my way.
	if (response == "s_1228")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_1230");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, well go to Anchorhead and talk to her.  From all reports, she's hiding, so reminding her why she needs to be scared won't help at all.  Try to distract her or anger her.  That may get her past her fear.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting.  I'll go back now.
	if (response == "s_1236")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_1238");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Interesting indeed.  Right now, you are the only one that I trust to continue following this.  I'm going to need you to go to a party and perform there.  I'd like to make sure that you are as well-armed with knowledge as possible.  Is there anything that I can explain to you to help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make money as an entertainer?
	if (response == "s_1244")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I play in a band?
	if (response == "s_1248")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?
			string_id message = new string_id (c_stringFile, "s_1250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I learn new routines?
	if (response == "s_1252")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a new instrument?
	if (response == "s_1256")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?
			string_id message = new string_id (c_stringFile, "s_1258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe I know what I need.  Tell me more about this party.
	if (response == "s_1260")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  
			string_id message = new string_id (c_stringFile, "s_1262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Rauk.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1264");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make money as an entertainer?
	if (response == "s_1244")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I play in a band?
	if (response == "s_1248")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?
			string_id message = new string_id (c_stringFile, "s_1250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I learn new routines?
	if (response == "s_1252")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a new instrument?
	if (response == "s_1256")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?
			string_id message = new string_id (c_stringFile, "s_1258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe I know what I need.  Tell me more about this party.
	if (response == "s_1260")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  
			string_id message = new string_id (c_stringFile, "s_1262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Rauk.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1264");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make money as an entertainer?
	if (response == "s_1244")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I play in a band?
	if (response == "s_1248")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?
			string_id message = new string_id (c_stringFile, "s_1250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I learn new routines?
	if (response == "s_1252")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a new instrument?
	if (response == "s_1256")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?
			string_id message = new string_id (c_stringFile, "s_1258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe I know what I need.  Tell me more about this party.
	if (response == "s_1260")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  
			string_id message = new string_id (c_stringFile, "s_1262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Rauk.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1264");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make money as an entertainer?
	if (response == "s_1244")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I play in a band?
	if (response == "s_1248")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?
			string_id message = new string_id (c_stringFile, "s_1250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I learn new routines?
	if (response == "s_1252")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a new instrument?
	if (response == "s_1256")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?
			string_id message = new string_id (c_stringFile, "s_1258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe I know what I need.  Tell me more about this party.
	if (response == "s_1260")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  
			string_id message = new string_id (c_stringFile, "s_1262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Rauk.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1264");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make money as an entertainer?
	if (response == "s_1244")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes.  While cantinas do not charge to enter, you may charge a cover fee for your talents. Once you set your cover fee, anyone that wishes to watch you will have to pay you.  They may also tip you above and beyond your fee.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1246");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I play in a band?
	if (response == "s_1248")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: To play music in a group, you must be in a group.  Then, the band leader starts the band and chooses the song. The band then performs together, with the band leader choosing the flourishes.  If you cannot play a piece of music that the band is playing, you may not join them. Would you like to know about anything else?
			string_id message = new string_id (c_stringFile, "s_1250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I learn new routines?
	if (response == "s_1252")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you train your skills, you gain new techniques.  These may be new dance types or songs.  They may also be flashy pyrotechnics or spotlights.  Is there anything else that you would like to know?
			string_id message = new string_id (c_stringFile, "s_1254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I make a new instrument?
	if (response == "s_1256")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a musician, you may craft instruments using your generic crafting tool.  The more difficult instruments require that you are at a public or private crafting station to complete.  Is there anything else?
			string_id message = new string_id (c_stringFile, "s_1258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I make money as an entertainer?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How do I play in a band?
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I learn new routines?
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: How do I make a new instrument?
			boolean hasResponse3 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I believe I know what I need.  Tell me more about this party.
			boolean hasResponse4 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1244");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1248");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1252");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1256");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1260");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe I know what I need.  Tell me more about this party.
	if (response == "s_1260")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  
			string_id message = new string_id (c_stringFile, "s_1262");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Rauk.  Got it.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1264");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great!  This party is at a house nearby.  This party is full of very self-important people.  Their host's name is Rauk Oenish.  He knows that I'll be sending someone.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Rauk.  Got it.
	if (response == "s_1264")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Talk to him if you wish.  He won't need you very long and you should get all the information you need within about 10 minutes, so I want you to perform for about that long.  Don't talk to any other guests.  
			string_id message = new string_id (c_stringFile, "s_1266");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So where do I go?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1268");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Talk to him if you wish.  He won't need you very long and you should get all the information you need within about 10 minutes, so I want you to perform for about that long.  Don't talk to any other guests.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So where do I go?
	if (response == "s_1268")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll put a waypoint on your datapad and update your quest journal with instructions.  When you have completed your assignment, come back and talk to me.
			string_id message = new string_id (c_stringFile, "s_1270");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wish me luck!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1272");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll put a waypoint on your datapad and update your quest journal with instructions.  When you have completed your assignment, come back and talk to me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wish me luck!
	if (response == "s_1272")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			c_prof_ent_questgiver_action_firstPartDone (player, npc);

			//-- NPC: Good luck, of course!
			string_id message = new string_id (c_stringFile, "s_1274");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.  I take it you were a success?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I got the information that you wanted.
	if (response == "s_1278")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I knew that you were going to be effective. What did you learn?
			string_id message = new string_id (c_stringFile, "s_1280");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It looks like Jabba the Hutt is behind this.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1282");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished yet.
	if (response == "s_1378")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please go back there. My reputation is at stake for sending you.
			string_id message = new string_id (c_stringFile, "s_1380");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew that you were going to be effective. What did you learn?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It looks like Jabba the Hutt is behind this.
	if (response == "s_1282")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Somehow that doesn't shock me.  Thank you for bringing this to my attention.  I'll bet the mayor would like to know about this.  I'll let you go take the credit.  I'd rather stay in the background.
			string_id message = new string_id (c_stringFile, "s_1284");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will.   Do you think that you will have any additional work for me in the future?
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1286");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Somehow that doesn't shock me.  Thank you for bringing this to my attention.  I'll bet the mayor would like to know about this.  I'll let you go take the credit.  I'd rather stay in the background.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will.   Do you think that you will have any additional work for me in the future?
	if (response == "s_1286")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Perhaps I will.  As you did so well for me, I have something for you.  A tailor friend left me with some new clothes.  I'll give you one of the pieces for you to wear or to give as a gift to someone else.  What gender is the person who will get the item?
			string_id message = new string_id (c_stringFile, "s_1288");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps I will.  As you did so well for me, I have something for you.  A tailor friend left me with some new clothes.  I'll give you one of the pieces for you to wear or to give as a gift to someone else.  What gender is the person who will get the item?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wookiee, please.
	if (response == "s_1294")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent!  I have a waist wrap that should look wonderful!  Is that what you want?
			string_id message = new string_id (c_stringFile, "s_1296");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1298");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1310");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ithorian.
	if (response == "s_1314")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wonderful.  I have a comfortable and fashionable shirt.  Is this what you want?
			string_id message = new string_id (c_stringFile, "s_1316");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1318");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1322");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Neither Wookiee nor Ithorian. 
	if (response == "s_1326")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right.  This shirt can fit just about anyone else, from Rodian to Human to Trandoshan.  Is that what you want?
			string_id message = new string_id (c_stringFile, "s_1328");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1330");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1334");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 45);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent!  I have a waist wrap that should look wonderful!  Is that what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you!
	if (response == "s_1298")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardWook (player, npc);

			//-- NPC: Here you are.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1300");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.  I'd like to choose something else.
	if (response == "s_1310")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: All right.  Let's start over then.  What gender? 
			string_id message = new string_id (c_stringFile, "s_1312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here you are.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start over then.  What gender? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wonderful.  I have a comfortable and fashionable shirt.  Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1318")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardIthMale (player, npc);

			//-- NPC: It is yours then.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1320");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.  I'd like to choose something else.
	if (response == "s_1322")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: All right.  Let's start back at the top then.  Male or female?
			string_id message = new string_id (c_stringFile, "s_1324");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is yours then.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start back at the top then.  Male or female?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  This shirt can fit just about anyone else, from Rodian to Human to Trandoshan.  Is that what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely!
	if (response == "s_1330")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardMale (player, npc);

			//-- NPC: Here you go!  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1332");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.  I'd like to choose something else.
	if (response == "s_1334")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right.  Let's start over then.  Male or Female?
			string_id message = new string_id (c_stringFile, "s_1336");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here you go!  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start over then.  Male or Female?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wookiee, please.
	if (response == "s_1342")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent!  I have a waist wrap that should look wonderful!  Is that what you want?
			string_id message = new string_id (c_stringFile, "s_1344");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1346");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1350");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 49);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ithorian.
	if (response == "s_1354")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wonderful.  I have a comfortable and fashionable pair of pants.  Is this what you want?
			string_id message = new string_id (c_stringFile, "s_1356");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1358");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1362");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 52);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Neither Wookiee nor Ithorian. 
	if (response == "s_1366")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right.  This skirt can fit just about anyone else, from Rodian to Human to Trandoshan.  Is that what you want?
			string_id message = new string_id (c_stringFile, "s_1368");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Absolutely!
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.  I'd like to choose something else.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1370");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1374");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent!  I have a waist wrap that should look wonderful!  Is that what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you!
	if (response == "s_1346")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardWook (player, npc);

			//-- NPC: Here you are.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1348");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.  I'd like to choose something else.
	if (response == "s_1350")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right.  Let's start over then.  What gender? 
			string_id message = new string_id (c_stringFile, "s_1352");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here you are.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start over then.  What gender? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wonderful.  I have a comfortable and fashionable pair of pants.  Is this what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1358")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardIthFem (player, npc);

			//-- NPC: It is yours then.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1360");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.  I'd like to choose something else.
	if (response == "s_1362")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: All right.  Let's start back at the top then.  Male or female?
			string_id message = new string_id (c_stringFile, "s_1364");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is yours then.  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start back at the top then.  Male or female?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  This skirt can fit just about anyone else, from Rodian to Human to Trandoshan.  Is that what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely!
	if (response == "s_1370")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_ent_questgiver_action_giveRewardFemale (player, npc);

			//-- NPC: Here you go!  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?
			string_id message = new string_id (c_stringFile, "s_1372");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, thank you.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.  I know where he is.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1302");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1306");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.  I'd like to choose something else.
	if (response == "s_1374")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right.  Let's start over then.  Male or Female?
			string_id message = new string_id (c_stringFile, "s_1376");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Male.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Female.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1290");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1338");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here you go!  I also have something else for you:  a codephrase.  When you speak to an entertainer, if they greet you with 'What is your passion?' respond with 'Music is my life.'  That will tell them that you are one of us.  Now I suggest you go talk to Mayor Guh'rantt.  Do you need a waypoint?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, thank you.
	if (response == "s_1302")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow5");

			c_prof_ent_questgiver_action_giveMayorWaypoint (player, npc);

			//-- NPC: Here you are.  Good luck with your future here.
			string_id message = new string_id (c_stringFile, "s_1304");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I know where he is.
	if (response == "s_1306")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very good.  Be safe out there.  This is a rough galaxy.
			string_id message = new string_id (c_stringFile, "s_1308");
			utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_ent_questgiver_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All right.  Let's start over then.  Male or Female?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Male.
	if (response == "s_1290")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1292");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1294");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1314");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1326");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Female.
	if (response == "s_1338")
	{
		//-- [NOTE] 
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  Most of what I have fits a range of races.  Wookiee and Ithorian items, however, are different.  Would you like a Wookiee or an Ithorian item?
			string_id message = new string_id (c_stringFile, "s_1340");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wookiee, please.
			boolean hasResponse0 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ithorian.
			boolean hasResponse1 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Neither Wookiee nor Ithorian. 
			boolean hasResponse2 = false;
			if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1342");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1354");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1366");

				utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_prof_ent_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Anetia Kah'ryn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}
 
trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Anetia Kah'ryn");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_prof_ent_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!c_prof_ent_questgiver_condition_isPlayerEntertainer (player, npc))
	{
		//-- NPC: I hope you're enjoying the atmosphere. We entertainers work for your enjoyment.
		string_id message = new string_id (c_stringFile, "s_113");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_prof_ent_questgiver_condition_playerFinishedQuest (player, npc))
	{
		c_prof_ent_questgiver_action_facePlayer (player, npc);

		//-- NPC: Hello again %TU.  
		string_id message = new string_id (c_stringFile, "s_1160");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!c_prof_ent_questgiver_condition_playerOnQuest (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_prof_ent_questgiver_action_facePlayer (player, npc);

		//-- NPC: Hello, %TU. How is Mos Eisley treating you?
		string_id message = new string_id (c_stringFile, "s_1162");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You know me?
		boolean hasResponse0 = false;
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: About expected. This is a rough city.
		boolean hasResponse1 = false;
		if (c_prof_ent_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1164");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1208");

			utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 3);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "c_prof_ent_questgiver", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_prof_ent_questgiver_condition_playeronFirstPart (player, npc))
	{
		c_prof_ent_questgiver_action_facePlayer (player, npc);

		//-- NPC: Welcome back.  What did you discover?
		string_id message = new string_id (c_stringFile, "s_1214");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I haven't gotten any information from Dorn Gestros yet.
		boolean hasResponse0 = false;
		if (!c_prof_ent_questgiver_condition_espaDone (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I haven't gotten any information from Crix Yarrow yet.
		boolean hasResponse1 = false;
		if (!c_prof_ent_questgiver_condition_bestineDone (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I haven't gotten any information from Borra Setas yet.
		boolean hasResponse2 = false;
		if (!c_prof_ent_questgiver_condition_anchorDone (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Yes.  Let me tell you when I found out...
		boolean hasResponse3 = false;
		if (c_prof_ent_questgiver_condition_playerFinishedFirstPart (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1216");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1224");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1232");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1240");

			utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 16);

			npcStartConversation (player, npc, "c_prof_ent_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_prof_ent_questgiver_condition_playerOnPartyStep (player, npc))
	{
		c_prof_ent_questgiver_action_facePlayer (player, npc);

		//-- NPC: Welcome back.  I take it you were a success?
		string_id message = new string_id (c_stringFile, "s_1276");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I got the information that you wanted.
		boolean hasResponse0 = false;
		if (c_prof_ent_questgiver_condition_playerFinishedParty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I haven't finished yet.
		boolean hasResponse1 = false;
		if (!c_prof_ent_questgiver_condition_playerFinishedParty (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1278");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1378");

			utils.setScriptVar (player, "conversation.c_prof_ent_questgiver.branchId", 32);

			npcStartConversation (player, npc, "c_prof_ent_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_prof_ent_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

	if (branchId == 3 && c_prof_ent_questgiver_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_prof_ent_questgiver_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_prof_ent_questgiver_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_prof_ent_questgiver_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_prof_ent_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && c_prof_ent_questgiver_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_prof_ent_questgiver_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && c_prof_ent_questgiver_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && c_prof_ent_questgiver_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && c_prof_ent_questgiver_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && c_prof_ent_questgiver_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && c_prof_ent_questgiver_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && c_prof_ent_questgiver_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && c_prof_ent_questgiver_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && c_prof_ent_questgiver_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && c_prof_ent_questgiver_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && c_prof_ent_questgiver_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && c_prof_ent_questgiver_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && c_prof_ent_questgiver_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && c_prof_ent_questgiver_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && c_prof_ent_questgiver_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && c_prof_ent_questgiver_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && c_prof_ent_questgiver_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && c_prof_ent_questgiver_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && c_prof_ent_questgiver_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && c_prof_ent_questgiver_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && c_prof_ent_questgiver_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && c_prof_ent_questgiver_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && c_prof_ent_questgiver_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && c_prof_ent_questgiver_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && c_prof_ent_questgiver_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && c_prof_ent_questgiver_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && c_prof_ent_questgiver_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && c_prof_ent_questgiver_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && c_prof_ent_questgiver_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && c_prof_ent_questgiver_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && c_prof_ent_questgiver_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && c_prof_ent_questgiver_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && c_prof_ent_questgiver_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && c_prof_ent_questgiver_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && c_prof_ent_questgiver_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && c_prof_ent_questgiver_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && c_prof_ent_questgiver_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && c_prof_ent_questgiver_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && c_prof_ent_questgiver_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_prof_ent_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

