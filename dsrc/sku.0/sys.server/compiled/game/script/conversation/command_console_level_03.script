// ======================================================================
//
// command_console_level_03.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/command_console_level_03";

// ======================================================================
// Script Conditions
// ======================================================================

boolean command_console_level_03_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean command_console_level_03_condition_tracingCall (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "outbreak_quest_facility_04", "griffaxJinComm")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_04", "traceCall"));
}

// ----------------------------------------------------------------------

boolean command_console_level_03_condition_openingHatch (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "outbreak_quest_facility_04", "scientistCom")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_04", "unlockSeal"));

}

// ----------------------------------------------------------------------

boolean command_console_level_03_condition_answeringCall (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "outbreak_quest_facility_03", "goToNextConsole"));
}

// ----------------------------------------------------------------------

boolean command_console_level_03_condition_hasQuest (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "outbreak_quest_facility_03", "goToNextConsole")
	|| groundquests.isQuestActiveOrComplete(player, "outbreak_quest_facility_04"));

}

// ----------------------------------------------------------------------

boolean command_console_level_03_condition_playerDeletedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "outbreak_quest_facility_03")
	&& !groundquests.isQuestActiveOrComplete(player, "outbreak_quest_facility_04");
}

// ======================================================================
// Script Actions
// ======================================================================

void command_console_level_03_action_answerCall (obj_id player, obj_id npc)
{
	if(groundquests.isTaskActive(player, "outbreak_quest_facility_03", "goToNextConsole"))
	{
		groundquests.sendSignal(player, "hasFoundNextConsole"); 
	}
}

// ----------------------------------------------------------------------

void command_console_level_03_action_openHatch (obj_id player, obj_id npc)
{

	if(groundquests.isTaskActive(player, "outbreak_quest_facility_04", "scientistCom")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_04", "unlockSeal"))
	{
		groundquests.sendSignal(player, "sealUnlocked");
	}

}

// ----------------------------------------------------------------------

void command_console_level_03_action_tracedCall (obj_id player, obj_id npc)
{
	if(groundquests.isTaskActive(player, "outbreak_quest_facility_04", "griffaxJinComm")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_04", "traceCall"))
	{
		groundquests.sendSignal(player, "hasTracedCall");
	}
}

// ----------------------------------------------------------------------

void command_console_level_03_action_getRancorPoint (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_undead_rancor_boss_fight"); 
}

// ----------------------------------------------------------------------

void command_console_level_03_action_fixDeletedQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_quest_facility_04"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int command_console_level_03_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Command Console Access...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Facility Emergency Escape Hatches
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 3, Maintenance Room
			string_id message = new string_id (c_stringFile, "s_37");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Unlock Hatch
			boolean hasResponse0 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Blinking Com Light
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			command_console_level_03_action_answerCall (player, npc);

			//-- NPC: Internal communication answered.
			string_id message = new string_id (c_stringFile, "s_52");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give me the 'What Next' quest.
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			command_console_level_03_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_87");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communications Log
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Command Console Communications
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Comms Received
			boolean hasResponse0 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Comms Initiated
			boolean hasResponse1 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Level 3, Maintenance Room

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Unlock Hatch
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			command_console_level_03_action_openHatch (player, npc);

			//-- NPC: Hatch Opened
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Command Console Communications

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Comms Received
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: See Transcripts, Calls Received
			string_id message = new string_id (c_stringFile, "s_53");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Experimental Laboratory 2, Level 3
			boolean hasResponse0 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Observation Area, Level 3
			boolean hasResponse1 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance Room, Level 3
			boolean hasResponse2 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse3 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Maintenance Room, Level 3
			boolean hasResponse4 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_63");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_69");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Comms Initiated
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: See Transcripts, Calls Made
			string_id message = new string_id (c_stringFile, "s_55");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse0 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse1 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance Room, Level 3
			boolean hasResponse2 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse3 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse4 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Security Post 32, Level 2
			boolean hasResponse5 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_78");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: See Transcripts, Calls Received

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Experimental Laboratory 2, Level 3
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Dr. Jin - (Cough) I don't know who you are but you are...you are not authorized (Cough) to be in this facility.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Get Waypoint
			boolean hasResponse0 = false;
			if (command_console_level_03_condition_tracingCall (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_59");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Observation Area, Level 3
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Dr. Mar - There is a security breach in the observation area! Repeat...the creature has broken the restraints! Send a security detail as soon as possible.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Get Group Quest
			boolean hasResponse0 = false;
			if (command_console_level_03_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maintenance Room, Level 3
	if (response == "s_63")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: FR-351 - I checked the emergency escape hatch again. I don't care what maintenance says, their hatch is malfunctioning. If there is any type of emergency that warrants escape, the hatch will need to be opened from your command console.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_67")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: TK-217 - Hahaha. You should have been there! We put an empty Blackwing canister under Lieutenant Boster's bunk pillow. Man was he upset! It was worth every hour of extra duty. Hey, can you call this post every once in a while to make sure I'm awake?
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maintenance Room, Level 3
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Cornburr - Yeah, this is maintenance. I ran the level diagnostic and all emergency systems are nominal. There was a few problems with vents not opening and closing but nothing I can't fix. Oh, and our escape hatch won't demagnatize down here. Probably some issue with the electrical current. I'll fix that before the end of the day.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Dr. Jin - (Cough) I don't know who you are but you are...you are not authorized (Cough) to be in this facility.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Get Waypoint
	if (response == "s_59")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			command_console_level_03_action_tracedCall (player, npc);

			//-- NPC: Waypoint Issued
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Dr. Mar - There is a security breach in the observation area! Repeat...the creature has broken the restraints! Send a security detail as soon as possible.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Get Group Quest
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			command_console_level_03_action_getRancorPoint (player, npc);

			//-- NPC: Waypoint Issued
			string_id message = new string_id (c_stringFile, "s_62");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int command_console_level_03_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: See Transcripts, Calls Made

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: No answer.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: TK-217 - Yeah, I mean yes sir! Situation normal here...hey wait a second! Very funny. Stop with the Doctor Jin impression! You're going to give me nightmares.
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maintenance Room, Level 3
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: Cornburr - Yeah?  Uh, right. Yeah, I'm finished making all the repairs. No, I'm awake. No, seriously, if I say it's repaired, it's repaired. Besides, what could possibly happen?
			string_id message = new string_id (c_stringFile, "s_83");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_74")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: No answer.
			string_id message = new string_id (c_stringFile, "s_77");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_79")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: No answer.
			string_id message = new string_id (c_stringFile, "s_80");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Post 32, Level 2
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			//-- NPC: TK-217 - Yeah, I'm awake. Get this, if I lean just right in this Stormtrooper armor, it looks like I'm standing! I plan on catching up on my sleep for the next 16 hours.
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.command_console_level_03");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.command_console_level_03");

	return SCRIPT_CONTINUE;
}

//--------------------------------
//--------------------------------
messageHandler rewardPlayerFactionalQuest()
{	
	if ((params == null) || (params.isEmpty()))
	{
		CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler received no data. Catestrophic error.");
		return SCRIPT_CONTINUE;
	}
	if(!params.containsKey("player"))
	{
		CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler received data but without critical PLAYER key. Catestrophic error.");
		return SCRIPT_CONTINUE;		
	}
	obj_id player = params.getObjId("player");
	if(!isValidId(player) || !exists(player))
	{
		CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler received data but Player is no longer valid or no longer exists. Catestrophic error for player: "+player+".");
		return SCRIPT_CONTINUE;		
	}
	if(!params.containsKey("faction_quest"))
	{
		CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler received data but without critical faction key. Catestrophic error for player: "+player+".");
		return SCRIPT_CONTINUE;		
	}		
	string factionQuest = params.getString("faction_quest");
	if(factionQuest == null || factionQuest.length() <= 0)
	{
		CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler received data but faction quest is not valid. Catestrophic error for player: "+player);
		return SCRIPT_CONTINUE;		
	}
	groundquests.requestGrantQuest(player, factionQuest);
	CustomerServiceLog("outbreak_themepark", "computer_console_level_02 conversation script.rewardPlayerFactionalQuest() messageHandler requesting that player: "+player+" be granted quest: "+factionQuest);		
	return SCRIPT_CONTINUE;	
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (command_console_level_03_condition__defaultCondition (player, npc))
	{
		//-- NPC: Command Console Access...
		string_id message = new string_id (c_stringFile, "s_38");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Facility Emergency Escape Hatches
		boolean hasResponse0 = false;
		if (command_console_level_03_condition_openingHatch (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Blinking Com Light
		boolean hasResponse1 = false;
		if (command_console_level_03_condition_answeringCall (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Please give me the 'What Next' quest.
		boolean hasResponse2 = false;
		if (command_console_level_03_condition_playerDeletedQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Internal Communications Log
		boolean hasResponse3 = false;
		if (command_console_level_03_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_48");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_86");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45");

			utils.setScriptVar (player, "conversation.command_console_level_03.branchId", 1);

			npcStartConversation (player, npc, "command_console_level_03", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "command_console_level_03")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.command_console_level_03.branchId");

	if (branchId == 1 && command_console_level_03_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && command_console_level_03_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && command_console_level_03_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && command_console_level_03_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && command_console_level_03_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && command_console_level_03_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && command_console_level_03_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.command_console_level_03.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

