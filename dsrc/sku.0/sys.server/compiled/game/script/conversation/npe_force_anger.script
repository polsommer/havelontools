// ======================================================================
//
// npe_force_anger.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_force_anger";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_force_anger_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_force_anger_condition_isOnQuest (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_force_sensitive", "anger_manage");
}

// ----------------------------------------------------------------------

boolean npe_force_anger_condition_hasCompleted (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "npe_force_sensitive", "anger_manage");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_force_anger_action_sendAngerSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_anger_managed");
}

// ----------------------------------------------------------------------

void npe_force_anger_action_playDarkside (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "npe_force_sensitive");
	groundquests.grantQuest(player, "npe_force_dark");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_force_anger_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go away. I don't want to talk to anyone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's wrong?
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			//-- NPC: What's wrong? There're pirates in the lower holds, wild creatures in the Atrium, and nothing is being done about it! My sister was killed because of it!
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm sorry to hear that. It's terrible what happened to her.
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes. That's enough to upset anyone.
			boolean hasResponse1 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What's wrong? There're pirates in the lower holds, wild creatures in the Atrium, and nothing is being done about it! My sister was killed because of it!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry to hear that. It's terrible what happened to her.
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah, ya think? No one on this station cares and no one will drop those invaders out an airlock. If something isn't done soon, I'll be forced to take control of the situation myself. I have a disruptor rifle that I found in a room below. They'll pay!
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Would she want you to become a murderer?
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You should do something about it!
			boolean hasResponse1 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_33");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. That's enough to upset anyone.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			//-- NPC: Upset?! You don't know the half of it. No one is paying any attention to the casualties, and we're just supposed to do our jobs and smile about it! Well, I have a disruptor rifle that says differently.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Whoa there. Your sister wouldn't want you to be a murderer.
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You should do something about this.
			boolean hasResponse1 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_36");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah, ya think? No one on this station cares and no one will drop those invaders out an airlock. If something isn't done soon, I'll be forced to take control of the situation myself. I have a disruptor rifle that I found in a room below. They'll pay!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Would she want you to become a murderer?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			//-- NPC: I think she would understand. She was...
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Would she want you to put the station in more danger?
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You should do something about it!
	if (response == "s_33")
	{
		doAnimationAction (player, "poke");

		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Yeah! I should! It's bad enough that these idiots see us as pawns to be used and discarded, but to get our families involved... it's too much.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go dust off that disruptor rifle.
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I think she would understand. She was...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Would she want you to put the station in more danger?
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, but I...
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Would she want you to become as monstrous as her killer?
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No, but I...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Would she want you to become as monstrous as her killer?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "catchbreath");

			npe_force_anger_action_sendAngerSignal (player, npc);

			//-- NPC: I guess not. I'm going to talk to Inaldra and try to get her to see reason. 
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Upset?! You don't know the half of it. No one is paying any attention to the casualties, and we're just supposed to do our jobs and smile about it! Well, I have a disruptor rifle that says differently.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Whoa there. Your sister wouldn't want you to be a murderer.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			//-- NPC: I think she would understand. She was...
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Would she want you to put the station in more danger?
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You should do something about this.
	if (response == "s_36")
	{
		doAnimationAction (player, "poke");

		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Yeah! I should! It's bad enough that these idiots see us as pawns to be used and discarded, but to get our families involved... it's too much.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go dust off that disruptor rifle.
			boolean hasResponse0 = false;
			if (npe_force_anger_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_force_anger_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah! I should! It's bad enough that these idiots see us as pawns to be used and discarded, but to get our families involved... it's too much.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go dust off that disruptor rifle.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "taken_aback");

			npe_force_anger_action_playDarkside (player, npc);

			//-- NPC: How did you know that I have...yeah. I will.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_force_anger");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Angry Car'das Guard");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Angry Car'das Guard");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_force_anger");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_force_anger_condition_hasCompleted (player, npc))
	{
		//-- NPC: Thank you for keeping me from doing something stupid.
		string_id message = new string_id (c_stringFile, "s_7");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_force_anger_condition_isOnQuest (player, npc))
	{
		//-- NPC: Go away. I don't want to talk to anyone.
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What's wrong?
		boolean hasResponse0 = false;
		if (npe_force_anger_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8");

			utils.setScriptVar (player, "conversation.npe_force_anger.branchId", 2);

			npcStartConversation (player, npc, "npe_force_anger", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_force_anger_condition__defaultCondition (player, npc))
	{
		//-- NPC: Leave me alone. This station is going to ... never mind. Just leave me alone.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_force_anger")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_force_anger.branchId");

	if (branchId == 2 && npe_force_anger_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && npe_force_anger_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_force_anger_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_force_anger_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_force_anger_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_force_anger_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_force_anger_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_force_anger.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

