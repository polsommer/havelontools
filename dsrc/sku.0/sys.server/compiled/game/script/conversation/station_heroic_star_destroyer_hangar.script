// ======================================================================
//
// station_heroic_star_destroyer_hangar.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.buff;
include library.chat;
include library.collection;
include library.conversation;
include library.instance;
include library.space_combat;
include library.space_transition;
include library.space_utils;
include library.township;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_heroic_star_destroyer_hangar";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_heroic_star_destroyer_hangar_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_heroic_star_destroyer_hangar_condition_tooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	location stationLoc = getLocation(npc);
	location playerLoc = getLocation(space_transition.getContainingShip(player));
	return ( getDistance(stationLoc, playerLoc) > township.STAR_DESTROYER_COMM_DISTANCE );
}

// ======================================================================
// Script Actions
// ======================================================================

void station_heroic_star_destroyer_hangar_action_moveToSD (obj_id player, obj_id npc)
{
	obj_id	ship = space_transition.getContainingShip(player);
	if (!isIdValid(ship))
		return;
		
	obj_id pilot = space_utils.getPilotForRealsies(ship);
	obj_id[] players = space_utils.getAllPlayersInShip(ship);
	boolean isSmuggler = utils.isProfession(pilot, utils.SMUGGLER);
	
	if (players == null || players.length == 0)
		return;

	boolean inYacht = false;
	string strChassisType = getShipChassisType(ship);
	
	if((strChassisType != null) && strChassisType.equals("player_sorosuub_space_yacht"))
	{
		inYacht = true;
	}
	
	if(!inYacht && players.length > 3)
	{
		//we give a better buff is a smuggler takes you up
		if(isSmuggler)
		{
			//only give the buff if they given acess to the instance
			buff.applyBuff(players, "sm_smuggled");				
		}
		else
			buff.applyBuff(players, "sm_smuggled_01");
	}

	for (int q=0;q<players.length;q++)
	{
		collection.pilotSmuggleTimeCheck(pilot, players[q], ship, strChassisType);
	}
	
	boolean[] groupResults = instance.requestInstancePobGroup(players, "heroic_star_destroyer");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_heroic_star_destroyer_hangar_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sait has gone mad. The whole destroyer is packed with boarders. You must help us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We can board and rid you of this menace.
	if (response == "s_457a7010")
	{
		//-- [NOTE] 
		if (station_heroic_star_destroyer_hangar_condition__defaultCondition (player, npc))
		{
			station_heroic_star_destroyer_hangar_action_moveToSD (player, npc);

			//-- NPC: We will attempt to unload any passengers you may have first. If you wish to board yourself, please request landing once more.
			string_id message = new string_id (c_stringFile, "s_b780e818");
			utils.removeScriptVar (player, "conversation.station_heroic_star_destroyer_hangar.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will return when I have more help.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (station_heroic_star_destroyer_hangar_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please hurry.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.station_heroic_star_destroyer_hangar.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{

	setCondition (self, CONDITION_CONVERSABLE);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	detachScript(self, "space.content_tools.spacestation");
	setName(self, "Blackguard Hangar Bay");
	setObjVar(self, "intInvincible", 1);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_heroic_star_destroyer_hangar");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_heroic_star_destroyer_hangar_condition_tooFar (player, npc))
	{
		//-- NPC: Come closer to the hangarbay and we can help you board.
		string_id message = new string_id (c_stringFile, "s_7");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_heroic_star_destroyer_hangar_condition__defaultCondition (player, npc))
	{
		//-- NPC: Sait has gone mad. The whole destroyer is packed with boarders. You must help us.
		string_id message = new string_id (c_stringFile, "s_e7fb4e63");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: We can board and rid you of this menace.
		boolean hasResponse0 = false;
		if (station_heroic_star_destroyer_hangar_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I will return when I have more help.
		boolean hasResponse1 = false;
		if (station_heroic_star_destroyer_hangar_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_457a7010");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.station_heroic_star_destroyer_hangar.branchId", 2);

			npcStartConversation (player, npc, "station_heroic_star_destroyer_hangar", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_heroic_star_destroyer_hangar")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_heroic_star_destroyer_hangar.branchId");

	if (branchId == 2 && station_heroic_star_destroyer_hangar_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_heroic_star_destroyer_hangar.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

