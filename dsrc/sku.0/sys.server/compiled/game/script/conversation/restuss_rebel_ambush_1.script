// ======================================================================
//
// restuss_rebel_ambush_1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.restuss_event;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_rebel_ambush_1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_rebel_ambush_1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_stage3ready (obj_id player, obj_id npc)
{
	if (factions.isRebel(player)&& restuss_event.isRestussInStageThree(npc))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_mission1Active (obj_id player, obj_id npc)
{
	if (groundquests.isQuestActive(player, "restuss_rebel_st3_comm_array") ||
		groundquests.isQuestActive(player, "restuss_rebel_st3_comm_array_spy"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_mission1Success (obj_id player, obj_id npc)
{
	if (groundquests.isTaskActive(player, "restuss_rebel_st3_comm_array", "returnKlork1")||
		groundquests.isTaskActive(player, "restuss_rebel_st3_comm_array_spy", "returnKlork1"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_completedMission1 (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedQuest(player, "restuss_rebel_st3_comm_array") ||
		groundquests.hasCompletedQuest(player, "restuss_rebel_st3_comm_array_spy"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_mission2Active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_rebel_st3_ambush_1");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_mission2Success (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_rebel_st3_ambush_1", "returnKlork2");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_notSpy (obj_id player, obj_id npc)
{
	if (utils.isProfession(player, utils.SPY)||
		utils.isProfession(player, utils.SMUGGLER))
		return false;
	else
		return true;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_spy (obj_id player, obj_id npc)
{
	if (utils.isProfession(player, utils.SPY)||
		utils.isProfession(player, utils.SMUGGLER))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_completedMission2 (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "restuss_rebel_st3_ambush_1");
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_playerRebel (obj_id player, obj_id npc)
{
	if (factions.isRebel(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_rebel_ambush_1_condition_isImperialPlayer (obj_id player, obj_id npc)
{
	return factions.isImperial(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_rebel_ambush_1_action_giveCapture (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_rebel_st3_comm_array");
}

// ----------------------------------------------------------------------

void restuss_rebel_ambush_1_action_reward1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedKlork1");
}

// ----------------------------------------------------------------------

void restuss_rebel_ambush_1_action_giveAmbush (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_rebel_st3_ambush_1");
}

// ----------------------------------------------------------------------

void restuss_rebel_ambush_1_action_reward2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedKlork2");
}

// ----------------------------------------------------------------------

void restuss_rebel_ambush_1_action_giveCaptureSpy (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_rebel_st3_comm_array_spy");
}

// ----------------------------------------------------------------------

void restuss_rebel_ambush_1_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);

}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_rebel_ambush_1_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you again, soldier. Despite your prior success, there's still more work to be done. The supply convoys are still moving around the city and some of the survey arrays we captured, the Empire has managed to gain control over again.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll get those supplies for us, Captain.
	if (response == "s_74")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveAmbush (player, npc);

			//-- NPC: Excellent, soldier. We can always use more supplies. Good luck!
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will take care of the survey arrays, Captain.
	if (response == "s_64")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent, soldier! Those arrays are proving to be most useful to us when we have control of them.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll help take over those survey arrays Captain.
	if (response == "s_71")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Excellent, soldier! Those arrays are proving to be most useful to us when we have control of them.
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_94")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Very well, soldier. Be careful out there.
			string_id message = new string_id (c_stringFile, "s_96");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_ambush_1_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad to have you back, soldier. The Imperial Army is moving supplies through the city between their base and their troops. Stealing the supplies would not only be a great blow to their troops but those resources would be extremely valuable to us. We need some volunteers to ambush that convoy and we are hoping you'd be up for it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir! Where do I find the supply convoy?
	if (response == "s_26")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveAmbush (player, npc);

			//-- NPC: It's moving from the Imperial base and around the city but it's not on a fixed schedule so we can't pinpoint it. You will have to hunt it down.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping to hack some more survey arrays?
	if (response == "s_30")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well, soldier. Your last attack proved very useful to us so that would be most excellent.
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll get right on it, sir!
			boolean hasResponse0 = false;
			if (restuss_rebel_ambush_1_condition_notSpy (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will handle it, sir!
			boolean hasResponse1 = false;
			if (restuss_rebel_ambush_1_condition_spy (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
			boolean hasResponse2 = false;
			if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_36");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_46")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Very well, soldier. Be careful out there.
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_ambush_1_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, soldier. Your last attack proved very useful to us so that would be most excellent.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll get right on it, sir!
	if (response == "s_65")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent! Good luck out there, soldier!
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir!
	if (response == "s_36")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Great, with your skills, you'll be perfect for this mission. Good luck out there, soldier!
			string_id message = new string_id (c_stringFile, "s_69");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_42")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Very well, soldier. Be careful out there.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_rebel_ambush_1_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you, soldier. We've come up with a new plan that you would be perfect for. The Imperial Army has placed some survey arrays around Restuss that they use to track down their lost research material. If we get control of them, we can use them for the very same thing. We need you to hack one of these arrays to put it under our control.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll get on it, Captain.
	if (response == "s_52")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent! I had a feeling I could count on you. Good luck out there, soldier!
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can count on me Captain.
	if (response == "s_61")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			restuss_rebel_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Great! With your skills, you'll be perfect for this mission. Good luck out there, soldier!
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_56")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			//-- NPC: Very well, soldier. Be careful out there.
			string_id message = new string_id (c_stringFile, "s_58");
			utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_rebel_ambush_1");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_rebel_ambush_1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_isImperialPlayer (player, npc))
	{
		restuss_rebel_ambush_1_action_eject (player, npc);

		//-- NPC: Imperial Dog!
		string_id message = new string_id (c_stringFile, "s_57");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_mission2Success (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_ambush_1_action_reward2 (player, npc);

		//-- NPC: Splendid work, soldier! These supplies will prove to be extremely useful for us and the added bonus of the Imperial troopers missing their supplies makes this victory even sweeter.
		string_id message = new string_id (c_stringFile, "s_39");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_mission1Success (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		restuss_rebel_ambush_1_action_reward1 (player, npc);

		//-- NPC: Great job, soldier. The survey arrays are extremely useful to us and we've already found some interesting research material among the rubble in Restuss.
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_mission1Active (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: We still need all the survey arrays to be in our possession, soldier.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_mission2Active (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: That supply convoy still needs to be ambushed, soldier.
		string_id message = new string_id (c_stringFile, "s_25");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_completedMission2 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Good to see you again, soldier. Despite your prior success, there's still more work to be done. The supply convoys are still moving around the city and some of the survey arrays we captured, the Empire has managed to gain control over again.
		string_id message = new string_id (c_stringFile, "s_72");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll get those supplies for us, Captain.
		boolean hasResponse0 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I will take care of the survey arrays, Captain.
		boolean hasResponse1 = false;
		if (restuss_rebel_ambush_1_condition_notSpy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'll help take over those survey arrays Captain.
		boolean hasResponse2 = false;
		if (restuss_rebel_ambush_1_condition_spy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse3 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_74");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_94");

			utils.setScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId", 6);

			npcStartConversation (player, npc, "restuss_rebel_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_completedMission1 (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Glad to have you back, soldier. The Imperial Army is moving supplies through the city between their base and their troops. Stealing the supplies would not only be a great blow to their troops but those resources would be extremely valuable to us. We need some volunteers to ambush that convoy and we are hoping you'd be up for it.
		string_id message = new string_id (c_stringFile, "s_23");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not a problem, sir! Where do I find the supply convoy?
		boolean hasResponse0 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I was hoping to hack some more survey arrays?
		boolean hasResponse1 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_46");

			utils.setScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId", 11);

			npcStartConversation (player, npc, "restuss_rebel_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_stage3ready (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: Good to see you, soldier. We've come up with a new plan that you would be perfect for. The Imperial Army has placed some survey arrays around Restuss that they use to track down their lost research material. If we get control of them, we can use them for the very same thing. We need you to hack one of these arrays to put it under our control.
		string_id message = new string_id (c_stringFile, "s_50");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll get on it, Captain.
		boolean hasResponse0 = false;
		if (restuss_rebel_ambush_1_condition_notSpy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: You can count on me Captain.
		boolean hasResponse1 = false;
		if (restuss_rebel_ambush_1_condition_spy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_52");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_61");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_56");

			utils.setScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId", 18);

			npcStartConversation (player, npc, "restuss_rebel_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition_playerRebel (player, npc))
	{
		doAnimationAction (npc, "salute1");

		doAnimationAction (player, "salute1");

		//-- NPC: I'm still awaiting new orders, soldier. Come back later and I will have your mission plan ready.
		string_id message = new string_id (c_stringFile, "s_53");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_rebel_ambush_1_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "goodbye");

		//-- NPC: You should hurry out of here, friend. This is no place for a civilian!
		string_id message = new string_id (c_stringFile, "s_60");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_rebel_ambush_1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

	if (branchId == 6 && restuss_rebel_ambush_1_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && restuss_rebel_ambush_1_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && restuss_rebel_ambush_1_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && restuss_rebel_ambush_1_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_rebel_ambush_1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

