// ======================================================================
//
// c_story1_4_imp_contact.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.money;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_story1_4_imp_contact";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_story1_4_imp_contact_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerCanMakeChoice (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4a");
	int chooseimp = groundquests.getTaskId(questId1, "chooseimp"); 
	
	return questIsTaskActive(questId1, chooseimp, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerisImperial (obj_id player, obj_id npc)
{
	if (!factions.isImperial(player))
		return false;
	return true;	
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerOnRebQuestFirst (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
	int reb_choice = groundquests.getTaskId(questId1, "reb_choice"); 
	
	return questIsTaskActive(questId1, reb_choice, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerOnRebQuestSecond (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
	int rebel_blackmail = groundquests.getTaskId(questId1, "rebel_blackmail"); 
	
	return questIsTaskActive(questId1, rebel_blackmail, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerOnImpQuestFirst (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imperial_nobribe = groundquests.getTaskId(questId1, "imperial_nobribe"); 
	
	return questIsTaskActive(questId1, imperial_nobribe, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerisRebel (obj_id player, obj_id npc)
{
	if (!factions.isRebel(player))
		return false;
	return true;	
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerIsImperialCompletedQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
		
	return questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerOnImpQuestSecond (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imperial_space = groundquests.getTaskId(questId1, "imperial_space"); 
	int imperial_nospace = groundquests.getTaskId(questId1, "getinfo"); 
	
	return questIsTaskActive(questId1, imperial_space, player)||
			questIsTaskComplete(questId1, imperial_space, player)||
			questIsTaskComplete(questId1, imperial_nospace, player)||
			questIsTaskActive(questId1, imperial_nospace, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerWonSpace (obj_id player, obj_id npc)
{
	if (space_quest.hasWonQuest( player, "assassinate", "c_story1_4_imp_space" ))
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerHasBribe (obj_id player, obj_id npc)
{
	int cash = getTotalMoney (player);
	
	if (cash >= 10000)
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerLostSpace (obj_id player, obj_id npc)
{
	if (( space_quest.hasAbortedQuest( player, "assassinate", "c_story1_4_imp_space" ) ||
		 space_quest.hasFailedQuest( player, "assassinate", "c_story1_4_imp_space" ))&&
		 (!space_quest.hasWonQuest( player, "assassinate", "c_story1_4_imp_space" )))
		 return true;

	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");

	return questIsQuestActive(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_contact_condition_playerFailedImpQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4a");
	int questId2 = questGetQuestId("quest/c_story1_4b_imperial");
		
	return 	questIsQuestComplete(questId1, player)&&
			(!questIsQuestActive(questId2, player)&&(!questIsQuestComplete(questId2, player)));
}

// ======================================================================
// Script Actions
// ======================================================================

void c_story1_4_imp_contact_action_completeFirstGiveSecond (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4a_chooseimperial");
	
	int questId = questGetQuestId("quest/c_story1_4b_imperial");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_rebStrongarmed (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_rebel_blackmail");
	space_quest.grantQuest( player, "assassinate", "c_story1_4_reb_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_rebPlayerNoBribe (obj_id player, obj_id npc)
{
//	int questId = questGetQuestId("quest/c_story1_4b_rebel");
//	int choice = groundquests.getTaskId(questId, "choice"); 
	
	groundquests.failTask(player, "quest/c_story1_4b_rebel", "reb_choice");
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_rebPaybribe (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_story1_4b_rebel");
	int rebel_nobribe = groundquests.getTaskId(questId, "rebel_nobribe"); 
	
	dictionary params = new dictionary();
	
	money.requestPayment(player, npc, 10000, "pass_fail", params, true);
	
	groundquests.sendSignal(player, "c_story1_4b_rebel_oppcontact");
	
	questFailTask(questId, rebel_nobribe, player);
	space_quest.grantQuest( player, "assassinate", "c_story1_4_reb_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_impSignal1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_imperial_nobribe");
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_finishThisQuest (obj_id player, obj_id npc)
{
	groundquests.completeQuest(player, "quest/c_story1_4b_imperial");
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_giveSecond (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_story1_4b_imperial");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_impGrantSpace (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "assassinate", "c_story1_4_imp_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_imp_contact_action_completeSecond (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_imperial_infogained1");
	groundquests.sendSignal(player, "c_story1_4b_imperial_infogained2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_story1_4_imp_contact_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good day.  Would you, a loyal member of the Empire, know the whereabouts of a pilot named Cal Handro?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir.  I have come to tell you where he is.
	if (response == "s_6")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Very good.  I knew that he would be discovered soon. Where is the traitor?
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tierce Martano will send you the coordinates.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't know what you are talking about.
	if (response == "s_40")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: Somehow I don't believe you, but I can't force you to tell me anything.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have come to tell you where he is.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: I have heard of you %TU.  You are not a member of Imperial Military.  You are sadly mistaken if you think that I will fall for a trap.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I want to help!
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You and your Imperialist ways will not win this war.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very good.  I knew that he would be discovered soon. Where is the traitor?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tierce Martano will send you the coordinates.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: That no-good gambler?  It shouldn't surprise me that he lied to us.  Of course, if he cooperates now, I won't have him arrested.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: He will.  Just send him a message with my name.  He's waiting for it.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No need.  He's ready to cooperate.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That no-good gambler?  It shouldn't surprise me that he lied to us.  Of course, if he cooperates now, I won't have him arrested.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He will.  Just send him a message with my name.  He's waiting for it.
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Me?  Why am I still involved?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just point me in the right direction.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No need.  He's ready to cooperate.
	if (response == "s_34")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Impressive.  What do I need to do to get the information?
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Contact him again and give him my name. He will turn Cal over. 
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Me?  Why am I still involved?
	if (response == "s_19")
	{
		doAnimationAction (player, "taken_aback");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Right now, you are the one that I trust most.  Talk to the head guard when you get there for a status report.
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just point me in the right direction.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Talk to the head guard when you get there.  He will fill you in on the situation as it stands.
			string_id message = new string_id (c_stringFile, "s_28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, sir.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right now, you are the one that I trust most.  Talk to the head guard when you get there for a status report.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well.
	if (response == "s_24")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_story1_4_imp_contact_action_completeFirstGiveSecond (player, npc);

			//-- NPC: See you when you get back.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Talk to the head guard when you get there.  He will fill you in on the situation as it stands.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			doAnimationAction (player, "salute1");

			c_story1_4_imp_contact_action_completeFirstGiveSecond (player, npc);

			//-- NPC: See you when you get back.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Impressive.  What do I need to do to get the information?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Contact him again and give him my name. He will turn Cal over. 
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Me?  Why am I still involved?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just point me in the right direction.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have heard of you %TU.  You are not a member of Imperial Military.  You are sadly mistaken if you think that I will fall for a trap.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I want to help!
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then I suggest that you go to your local recruitment officer, beg forgiveness, and join the ranks of the military.
			string_id message = new string_id (c_stringFile, "s_50");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You and your Imperialist ways will not win this war.
	if (response == "s_52")
	{
		doAnimationAction (player, "backhand_threaten");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Watch us.
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you want, rebel dog? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to know what you did with Cal Handro.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "mock");

			//-- NPC: Of course you do.  And of course, I won't tell you.   
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can think of 5,000 reasons why you will.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You won't tell me now.  But you will, trust me.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_172");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_195");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course you do.  And of course, I won't tell you.   

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can think of 5,000 reasons why you will.
	if (response == "s_172")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "expect_tip");

			//-- NPC: Perhaps I can think of 10,000 reasons why I might say something.
			string_id message = new string_id (c_stringFile, "s_174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's a fair price.  I will give you 10,000 credits. 
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition_playerHasBribe (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's outrageous!  I won't give you that! 
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't have 10,000 credits on me.
			boolean hasResponse2 = false;
			if (!c_story1_4_imp_contact_condition_playerHasBribe (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_176");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_192");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You won't tell me now.  But you will, trust me.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_rebPlayerNoBribe (player, npc);

			//-- NPC: Think again, scum.
			string_id message = new string_id (c_stringFile, "s_196");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps I can think of 10,000 reasons why I might say something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's a fair price.  I will give you 10,000 credits. 
	if (response == "s_176")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			c_story1_4_imp_contact_action_rebPaybribe (player, npc);

			//-- NPC: He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Rebellion that he knows and we will give him a new identity.  You can do nothing to stop it.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why you...
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_180");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's outrageous!  I won't give you that! 
	if (response == "s_188")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_rebPlayerNoBribe (player, npc);

			//-- NPC: Didn't think you would.  Off you go.
			string_id message = new string_id (c_stringFile, "s_190");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have 10,000 credits on me.
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I don't seem to have the information that you want on me either.
			string_id message = new string_id (c_stringFile, "s_194");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Rebellion that he knows and we will give him a new identity.  You can do nothing to stop it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why you...
	if (response == "s_180")
	{
		doAnimationAction (player, "threaten");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			//-- NPC: Serves you right, traitor.  Off you go.
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with you later.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Serves you right, traitor.  Off you go.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll deal with you later.
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Sure you will.
			string_id message = new string_id (c_stringFile, "s_186");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You again?  I think I'm done with you.  I'm going to have you arrested.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Certainly.  And when you do, this journal of yours will go with me.
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "taken_aback");

			//-- NPC: I beg your pardon?
			string_id message = new string_id (c_stringFile, "s_98");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Imperial Security will be happy to find a traitor that deals with Rebel sympathizers.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I beg your pardon?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Security will be happy to find a traitor that deals with Rebel sympathizers.
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: But... where did... you can't...
			string_id message = new string_id (c_stringFile, "s_102");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can and will, unless you tell me where the pilot is.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But... where did... you can't...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can and will, unless you tell me where the pilot is.
	if (response == "s_104")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			c_story1_4_imp_contact_action_rebStrongarmed (player, npc);

			//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Rebellion that he knows and we will give him a new identity.  You can't do anything to stop it.
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Watch me.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Rebellion that he knows and we will give him a new identity.  You can't do anything to stop it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Watch me.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will fail.  Mark my words.
			string_id message = new string_id (c_stringFile, "s_110");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I heard what happened.  Why are you coming back to me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want another chance.
	if (response == "s_149")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I shouldn't do this, but I don't have anyone else that I can trust with this information.  Fine.  Go back to the safe house and collect Handro.
			string_id message = new string_id (c_stringFile, "s_151");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you, sir.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I shouldn't do this, but I don't have anyone else that I can trust with this information.  Fine.  Go back to the safe house and collect Handro.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir.
	if (response == "s_153")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute1");

			c_story1_4_imp_contact_action_giveSecond (player, npc);

			//-- NPC: Don't disappoint me.
			string_id message = new string_id (c_stringFile, "s_155");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find out where Handro is?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wolff Kalos knows, but won't tell me.
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We've had our eyes on him.  Recently, I tracked down a small base where he sometimes operates from.  I'll bet that they have records on him and his family.  They would need a next of kin contact.  You can do something with that.
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting.  I should kidnap his family?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't hurt his family!
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We've had our eyes on him.  Recently, I tracked down a small base where he sometimes operates from.  I'll bet that they have records on him and his family.  They would need a next of kin contact.  You can do something with that.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting.  I should kidnap his family?
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: I don't think that will be necessary.  You only need to threaten to do something to make him cave.
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's my next move?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_130");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't hurt his family!
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: I'm not asking you to.  You only need to use the specter of having them arrested to make give you the information.
			string_id message = new string_id (c_stringFile, "s_140");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's my next move?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_130");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't think that will be necessary.  You only need to threaten to do something to make him cave.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next move?
	if (response == "s_130")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Go to his base and get the information from the computers.  While you are at it, take a few of those rebels down.  I believe that base's leader is General Garax Hadriin.  I'll put the information in your journal.
			string_id message = new string_id (c_stringFile, "s_132");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I find it?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go to his base and get the information from the computers.  While you are at it, take a few of those rebels down.  I believe that base's leader is General Garax Hadriin.  I'll put the information in your journal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I find it?
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_impSignal1 (player, npc);

			//-- NPC: I'll give you a waypoint.  With my information, you should be able to get in.
			string_id message = new string_id (c_stringFile, "s_136");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm not asking you to.  You only need to use the specter of having them arrested to make give you the information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next move?
	if (response == "s_130")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Go to his base and get the information from the computers.  While you are at it, take a few of those rebels down.  I believe that base's leader is General Garax Hadriin.  I'll put the information in your journal.
			string_id message = new string_id (c_stringFile, "s_132");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I find it?
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.  I take it you won?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I destroyed his ship.
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great work soldier!
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: For the good of the Empire!
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am expecting a reward. 
			boolean hasResponse1 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 40);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I failed and he got out of the sector.
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: One moment while I check...It appears that he did not.  His hyperdrive was damaged, but I would assume that by now, he has made repairs.  You still have a chance to stop him.  Get up there!
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will bring him down.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_135");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 45);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Handro is in space and I haven't gone up there yet.
	if (response == "s_167")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_up");

			//-- NPC: I suggest you get going now or he will escape.
			string_id message = new string_id (c_stringFile, "s_169");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great work soldier!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: For the good of the Empire!
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_completeSecond (player, npc);

			//-- NPC: And such good work deserves a reward.  I have a new type of carbine.  It is now yours.
			string_id message = new string_id (c_stringFile, "s_150");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you, sir.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 41);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am expecting a reward. 
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_completeSecond (player, npc);

			//-- NPC: And I will provide one.  I was recently given a new type of carbine. This should suffice.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And such good work deserves a reward.  I have a new type of carbine.  It is now yours.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir.
	if (response == "s_152")
	{
		doAnimationAction (player, "salute1");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_finishThisQuest (player, npc);

			//-- NPC: Come back to me soon and hopefully I will have more information for you so we can finish this.
			string_id message = new string_id (c_stringFile, "s_154");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And I will provide one.  I was recently given a new type of carbine. This should suffice.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_finishThisQuest (player, npc);

			//-- NPC: Come back to me soon and hopefully I will have more information for you so we can finish this.
			string_id message = new string_id (c_stringFile, "s_162");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One moment while I check...It appears that he did not.  His hyperdrive was damaged, but I would assume that by now, he has made repairs.  You still have a chance to stop him.  Get up there!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will bring him down.
	if (response == "s_135")
	{
		doAnimationAction (player, "pound_fist_palm");

		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_contact_action_impGrantSpace (player, npc);

			//-- NPC: I hope so, for your sake.
			string_id message = new string_id (c_stringFile, "s_139");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_contact_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't see Cal with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have not acquired him yet.
	if (response == "s_161")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I suggest you make that your priority then.
			string_id message = new string_id (c_stringFile, "s_165");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_story1_4_imp_contact");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Officer M'kae");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Officer M'kae");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_story1_4_imp_contact");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerCanMakeChoice (player, npc))
	{
		doAnimationAction (npc, "salute1");

		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Good day.  Would you, a loyal member of the Empire, know the whereabouts of a pilot named Cal Handro?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, sir.  I have come to tell you where he is.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition_playerisImperial (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't know what you are talking about.
		boolean hasResponse1 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have come to tell you where he is.
		boolean hasResponse2 = false;
		if (!c_story1_4_imp_contact_condition_playerisImperial (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_44");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 1);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerOnRebQuestFirst (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: What do you want, rebel dog? 
		string_id message = new string_id (c_stringFile, "s_56");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want to know what you did with Cal Handro.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_58");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 14);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerOnRebQuestSecond (player, npc))
	{
		doAnimationAction (npc, "shoo");

		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: You again?  I think I'm done with you.  I'm going to have you arrested.
		string_id message = new string_id (c_stringFile, "s_94");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Certainly.  And when you do, this journal of yours will go with me.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 23);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerisRebel (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: You are a part of the Rebel Alliance and a traitor.  Go away!
		string_id message = new string_id (c_stringFile, "s_164");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerFailedImpQuest (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: I heard what happened.  Why are you coming back to me?
		string_id message = new string_id (c_stringFile, "s_147");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want another chance.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_149");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 29);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerOnImpQuestFirst (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Did you find out where Handro is?
		string_id message = new string_id (c_stringFile, "s_120");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Wolff Kalos knows, but won't tell me.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_122");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 32);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerIsImperialCompletedQuest (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Good to see you. It looks like this isn't over. I need some time to compile my most recent data.
		string_id message = new string_id (c_stringFile, "s_166");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerOnImpQuestSecond (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Welcome back.  I take it you won?
		string_id message = new string_id (c_stringFile, "s_142");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Well, I destroyed his ship.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition_playerWonSpace (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I failed and he got out of the sector.
		boolean hasResponse1 = false;
		if (c_story1_4_imp_contact_condition_playerLostSpace (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Handro is in space and I haven't gone up there yet.
		boolean hasResponse2 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_144");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_127");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_167");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 39);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerOnQuest (player, npc))
	{
		//-- NPC: I don't see Cal with you.
		string_id message = new string_id (c_stringFile, "s_157");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have not acquired him yet.
		boolean hasResponse0 = false;
		if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_161");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_contact.branchId", 48);

			npcStartConversation (player, npc, "c_story1_4_imp_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition_playerisImperial (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Good day, citizen.  You were not sent here...no, I didn't think you were.
		string_id message = new string_id (c_stringFile, "s_170");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_contact_condition__defaultCondition (player, npc))
	{
		c_story1_4_imp_contact_action_facePlayer (player, npc);

		//-- NPC: Good day.
		string_id message = new string_id (c_stringFile, "s_173");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_story1_4_imp_contact")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

	if (branchId == 1 && c_story1_4_imp_contact_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_story1_4_imp_contact_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_story1_4_imp_contact_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_story1_4_imp_contact_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_story1_4_imp_contact_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_story1_4_imp_contact_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_story1_4_imp_contact_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_story1_4_imp_contact_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && c_story1_4_imp_contact_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && c_story1_4_imp_contact_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && c_story1_4_imp_contact_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && c_story1_4_imp_contact_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && c_story1_4_imp_contact_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && c_story1_4_imp_contact_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && c_story1_4_imp_contact_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && c_story1_4_imp_contact_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && c_story1_4_imp_contact_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && c_story1_4_imp_contact_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && c_story1_4_imp_contact_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && c_story1_4_imp_contact_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && c_story1_4_imp_contact_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && c_story1_4_imp_contact_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && c_story1_4_imp_contact_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && c_story1_4_imp_contact_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && c_story1_4_imp_contact_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && c_story1_4_imp_contact_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && c_story1_4_imp_contact_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && c_story1_4_imp_contact_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && c_story1_4_imp_contact_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && c_story1_4_imp_contact_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_story1_4_imp_contact.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

