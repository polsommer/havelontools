// ======================================================================
//
// theme_park_record_keeper_jabba.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/theme_park_record_keeper_jabba";

// ======================================================================
// Script Conditions
// ======================================================================

boolean theme_park_record_keeper_jabba_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_jabba_condition_theme_park_complete (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.jabba")) {
	
		if(hasObjVar(player, "theme_park_jabba")) {
		
			int gating = getIntObjVar(player, "theme_park_jabba");
			
			if(gating >= 49) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_jabba_condition_theme_park_in_progress (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.jabba")) {
	
		if(hasObjVar(player, "theme_park_jabba")) {
		
			int gating = getIntObjVar(player, "theme_park_jabba");
			
			if(gating > 0) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_jabba_condition_already_reset (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "theme_park_reset.jabba")) {
	
		return true;
	}
	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void theme_park_record_keeper_jabba_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_jabba_action_reset_gating (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.jabba", true);
	
	int gating = getIntObjVar(player, "theme_park_jabba");
	removeObjVar(player, "theme_park_jabba");
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Jabba's Palace -- " + getName(player) + " (" + player + ") has opted to RESET his/her theme park obj var [" + gating + "] and START OVER");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_jabba_action_set_redo (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.jabba", true);
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Jabba's Palace -- " + getName(player) + " (" + player + ") has opted to NOT RESET his/her theme park obj var and CONTINUE");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_jabba_action_face_to (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.theme_park_record_keeper_jabba");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.theme_park_record_keeper_jabba");

	return SCRIPT_CONTINUE;
}


// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (theme_park_record_keeper_jabba_condition_already_reset (player, self))
	{
		theme_park_record_keeper_jabba_action_face_to (player, self);

		//-- NPC: Your services for Jabba have already been recorded. I have no need to speak to you.
		string_id message = new string_id (c_stringFile, "s_adccd297");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_jabba_condition_theme_park_complete (player, self))
	{
		theme_park_record_keeper_jabba_action_face_to (player, self);

		//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
		string_id message = new string_id (c_stringFile, "s_3be84186");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 2);

			npcStartConversation (player, self, "theme_park_record_keeper_jabba", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_jabba_condition_theme_park_in_progress (player, self))
	{
		theme_park_record_keeper_jabba_action_face_to (player, self);

		//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
		string_id message = new string_id (c_stringFile, "s_3be84186");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 19);

			npcStartConversation (player, self, "theme_park_record_keeper_jabba", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
	{
		theme_park_record_keeper_jabba_action_face_to (player, self);

		//-- NPC: You have not performed any services for his exaltedness, Jabba the Hutt. I do not need to speak to you.
		string_id message = new string_id (c_stringFile, "s_3ae9c534");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "theme_park_record_keeper_jabba")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 2 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
			string_id message = new string_id (c_stringFile, "s_34f17e66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_edb238bc");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Yes, I do need to speak with you. I have questions that you need to answer.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 2 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Yes, I do need to speak with you. I have questions that you need to answer.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (branchId == 3 && response == "s_edb238bc")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
			string_id message = new string_id (c_stringFile, "s_c7528c3b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. What do you need me for?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_866cf013");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 3 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. What do you need me for?
	if (branchId == 4 && response == "s_866cf013")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
			string_id message = new string_id (c_stringFile, "s_c1ff278a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will answer your questions.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9ef848f9");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 4 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will answer your questions.
	if (branchId == 5 && response == "s_9ef848f9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_5cc1a230");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does that entail?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history right now.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3cf75f2d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6e88ecc1");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I must recompile all of the data that was lost. For that reason, I must ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 5 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I must recompile all of the data that was lost. For that reason, I must ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does that entail?
	if (branchId == 6 && response == "s_3cf75f2d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist Jabba again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the eyes of Jabba himself. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_72907ccb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 6 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history right now.
	if (branchId == 6 && response == "s_6e88ecc1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Come back and speak to me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_6d63d30d");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'It would seem that you have performed great services for Jabba in the past, and he has rewarded you well. However, if you wish, I can reset your employment history in our records. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist Jabba again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the eyes of Jabba himself. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 7 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist Jabba again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the eyes of Jabba himself. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 8 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_jabba_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You should speak to Reelo Baruk when you wish to serve his highness, Lord Jabba, again.
			string_id message = new string_id (c_stringFile, "s_630c8b2");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 8 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Come back and speak to me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_6d63d30d");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 11 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_jabba_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You should speak to Reelo Baruk when you wish to serve his highness, Lord Jabba, again.
			string_id message = new string_id (c_stringFile, "s_630c8b2");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 11 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Come back and speak to me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_6d63d30d");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 19 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
			string_id message = new string_id (c_stringFile, "s_34f17e66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_edb238bc");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Yes, I do need to speak with you. I have questions that you need to answer.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Yes, I do need to speak with you. I have questions that you need to answer.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 19 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Yes, I do need to speak with you. I have questions that you need to answer.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (branchId == 20 && response == "s_edb238bc")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
			string_id message = new string_id (c_stringFile, "s_c7528c3b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. What do you need me for?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_866cf013");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 20 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Due to an unfortunate incident caused by an irresponsible little droid, CZ-4, all of Lord Jabba's employment and accounting records were erased.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. What do you need me for?
	if (branchId == 21 && response == "s_866cf013")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
			string_id message = new string_id (c_stringFile, "s_c1ff278a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will answer your questions.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9ef848f9");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 21 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I am sure you can imagine the turmoil it caused. Those on Jabba's payroll are no longer getting paid, and those in debt to him, were free of their obligations. Needless to say, the CZ droid responsible was... disciplined.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will answer your questions.
	if (branchId == 22 && response == "s_9ef848f9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_5e8caf64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I must recompile all of the data that was lost. For that reason, I must ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I must recompile all of the data that was lost. For that reason, I must ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 22 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. Return when you are available.
			string_id message = new string_id (c_stringFile, "s_f3139d0");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I must recompile all of the data that was lost. For that reason, I must ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 23 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_eac2e473");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 23 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_741d0966");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 23 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_e11b3d7c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 23 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
			string_id message = new string_id (c_stringFile, "s_badb4859");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 23 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Return to me when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_555b76aa");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you may serve Lord Jabba again. Otherwise, you can continue your service to him where you left off. Remember that once you decide, you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 24 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_741d0966");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 24 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_e11b3d7c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 24 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
			string_id message = new string_id (c_stringFile, "s_badb4859");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 24 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Return to me when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_555b76aa");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 25 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_eac2e473");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 25 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_e11b3d7c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 25 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
			string_id message = new string_id (c_stringFile, "s_badb4859");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 25 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Return to me when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_555b76aa");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 26 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_jabba_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You should speak to Reelo Baruk when you wish to serve his highness, Lord Jabba, again.
			string_id message = new string_id (c_stringFile, "s_630c8b2");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 26 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. But do not take long.
			string_id message = new string_id (c_stringFile, "s_960270ff");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 28 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_eac2e473");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 28 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_741d0966");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 28 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_e11b3d7c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 28 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
			string_id message = new string_id (c_stringFile, "s_badb4859");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 28 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Return to me when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_555b76aa");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. I want to continue my service.
	if (branchId == 29 && response == "s_f7565bbd")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_jabba_action_set_redo (player, self);

			//-- NPC: Very well, it is done. You may continue your service to the almighty Jabba the Hutt where you last left off.
			string_id message = new string_id (c_stringFile, "s_faf7c09a");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 29 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Very well. But do not take long.
			string_id message = new string_id (c_stringFile, "s_960270ff");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 31 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist Lord Jabba again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the eyes of Jabba the Hutt. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_eac2e473");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 31 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. That person will then tell you how you may best serve Jabba. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_741d0966");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 31 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_e11b3d7c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 31 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: Remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your services to Jabba where you left off?
			string_id message = new string_id (c_stringFile, "s_badb4859");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Very well. But do not take long.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 31 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_jabba_condition__defaultCondition (player, self))
		{
			//-- NPC: As you wish. Return to me when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_555b76aa");
			removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Very well. But do not take long.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.theme_park_record_keeper_jabba.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

