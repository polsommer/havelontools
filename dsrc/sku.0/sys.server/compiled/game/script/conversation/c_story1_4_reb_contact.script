// ======================================================================
//
// c_story1_4_reb_contact.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.money;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_story1_4_reb_contact";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_story1_4_reb_contact_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerCanMakeChoice (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4a");
	int choosereb = groundquests.getTaskId(questId1, "choosereb"); 
	
	return questIsTaskActive(questId1, choosereb, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerisRebel (obj_id player, obj_id npc)
{
	if (!factions.isRebel(player))
		return false;
	return true;	
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerOnImpQuestFirst (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imp_choice = groundquests.getTaskId(questId1, "imp_choice"); 
	
	return questIsTaskActive(questId1, imp_choice, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerOnImpQuestSecond (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imperial_blackmail = groundquests.getTaskId(questId1, "imperial_blackmail"); 
	
	return (questIsQuestActive(questId1, player)&&!questIsTaskComplete(questId1, imperial_blackmail, player));
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerOnRebelQuestFirst (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
	int rebel_nobribe = groundquests.getTaskId(questId1, "rebel_nobribe"); 
	
	return questIsTaskActive(questId1, rebel_nobribe, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerisImperial (obj_id player, obj_id npc)
{
	if (!factions.isImperial(player))
		return false;
	return true;	
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerIsRebelCompletedQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
		
	return questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerOnRebelQuestSecond (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
	int rebel_space = groundquests.getTaskId(questId1, "rebel_space"); 
	int rebel_nospace = groundquests.getTaskId(questId1, "getinfo");
	
	return questIsTaskActive(questId1, rebel_space, player)||
			questIsTaskComplete(questId1, rebel_space, player)||
			questIsTaskComplete(questId1, rebel_nospace, player)||
			questIsTaskActive(questId1, rebel_nospace, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerLostSpace (obj_id player, obj_id npc)
{
	if (( space_quest.hasAbortedQuest( player, "assassinate", "c_story1_4_reb_space" ) ||
		 space_quest.hasFailedQuest( player, "assassinate", "c_story1_4_reb_space" ))&&
		 (!space_quest.hasWonQuest( player, "assassinate", "c_story1_4_reb_space" )))
		 return true;

	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerHasBribe (obj_id player, obj_id npc)
{
	int cash = getTotalMoney (player);
	
	if (cash >= 10000)
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerWonSpace (obj_id player, obj_id npc)
{
	if (space_quest.hasWonQuest( player, "assassinate", "c_story1_4_reb_space" ))
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerFailedRebQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4a");
	int questId2 = questGetQuestId("quest/c_story1_4b_rebel");
		
	return 	questIsQuestComplete(questId1, player)&&
			(!questIsQuestActive(questId2, player)&&(!questIsQuestComplete(questId2, player)));
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerIsRebelQuestActive (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_rebel");
		
	return 	questIsQuestActive(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerImpReadyToStrongarm (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imperial_blackmail = groundquests.getTaskId(questId1, "imperial_blackmail"); 
	
	return questIsTaskActive(questId1, imperial_blackmail, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_reb_contact_condition_playerFinishedImpStep (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imperial_blackmail = groundquests.getTaskId(questId1, "imperial_blackmail"); 
	
	return (questIsQuestComplete(questId1, player)||questIsTaskComplete(questId1, imperial_blackmail, player));
}

// ======================================================================
// Script Actions
// ======================================================================

void c_story1_4_reb_contact_action_completeFirstGiveSecond (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4a_chooserebel");
	
	int questId = questGetQuestId("quest/c_story1_4b_rebel");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_impStrongarmed (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_imperial_blackmail");
	space_quest.grantQuest( player, "assassinate", "c_story1_4_imp_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_impPlayerNoBribe (obj_id player, obj_id npc)
{
//	int questId = questGetQuestId("quest/c_story1_4b_imperial");
//	int choice = groundquests.getTaskId(questId, "choice"); 
	
	groundquests.failTask(player, "quest/c_story1_4b_imperial", "imp_choice");
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_impPaybribe (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	
	money.requestPayment(player, npc, 10000, "pass_fail", params, true);
	
	groundquests.sendSignal(player, "c_story1_4b_imperial_oppcontact");
	space_quest.grantQuest( player, "assassinate", "c_story1_4_imp_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_rebSignal1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_rebel_nobribe");
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_rebSignal2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_rebel_infogained");
	groundquests.sendSignal(player, "c_story1_4b_rebel_infogained2");
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_rebGrantSpace (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "assassinate", "c_story1_4_reb_space" );
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_giveSecondQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_story1_4b_rebel");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_story1_4_reb_contact_action_finishThisQuest (obj_id player, obj_id npc)
{
	groundquests.completeQuest(player, "quest/c_story1_4b_rebel");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_story1_4_reb_contact_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You wouldn't happen to know a Cal Handro, would you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I do.  I have come to tell you where he is.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Really?  This is the best news that I've had all day!  Where is the little kole?
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tierce Martano will send you the coordinates.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't know who you are talking about.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Somehow I don't believe you, but I can't force you to tell me anything.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have come to tell you where he is.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have heard of you %TU.  You are not sympathetic to my cause and while your intentions may be good, I cannot trust them.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But I want to help!
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You and your rebel friends will not win this war.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Really?  This is the best news that I've had all day!  Where is the little kole?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tierce Martano will send you the coordinates.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Him?  He didn't help us before.  Can we even trust him?
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tierce owes me one.  Give him my name in your message.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can be very persuasive. 
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Him?  He didn't help us before.  Can we even trust him?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tierce owes me one.  Give him my name in your message.
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Me?  Why am I still involved?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just point me in the right direction.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can be very persuasive. 
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see.  What do I need to do?
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Contact him again and give him my name. He will turn Cal over.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Me?  Why am I still involved?
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Right now, you are the only one that I trust.  Talk to the head guard when you get there for a status report.
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just point me in the right direction.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Talk to the head guard when you get there.  He will give you a heads up.
			string_id message = new string_id (c_stringFile, "s_28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm off.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right now, you are the only one that I trust.  Talk to the head guard when you get there for a status report.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well.
	if (response == "s_24")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_completeFirstGiveSecond (player, npc);

			//-- NPC: See you when you get back.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Talk to the head guard when you get there.  He will give you a heads up.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_completeFirstGiveSecond (player, npc);

			//-- NPC: See you when you get back.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see.  What do I need to do?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Contact him again and give him my name. He will turn Cal over.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent.  I'll have the pilot sent to a safe house where you will pick him up.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Me?  Why am I still involved?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just point me in the right direction.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have heard of you %TU.  You are not sympathetic to my cause and while your intentions may be good, I cannot trust them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I want to help!
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then I suggest you join the Rebel Alliance.
			string_id message = new string_id (c_stringFile, "s_50");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You and your rebel friends will not win this war.
	if (response == "s_52")
	{
		doAnimationAction (player, "backhand_threaten");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Perhaps not, but at least we will die for a cause that we believe in.  Can you say the same?
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you want, Imperial swine? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to know what you did with Cal Handro.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cover_mouth");

			//-- NPC: Of course you do.  And of course, I won't tell you.  
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I could kill you, you know.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course you do.  And of course, I won't tell you.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I could kill you, you know.
	if (response == "s_62")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: You could.  Not only would that make me a martyr, but Cal would get away, wouldn't he?
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: . . .
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can think of 5,000 reasons why you will.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You could.  Not only would that make me a martyr, but Cal would get away, wouldn't he?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: . . .
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			c_story1_4_reb_contact_action_impPlayerNoBribe (player, npc);

			//-- NPC: Exactly.  Now leave me alone. 
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can think of 5,000 reasons why you will.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Perhaps I can think of 10,000 reasons why I might say something.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's fair.  I will give you 10,000 credits. 
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition_playerHasBribe (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's outrageous!  I won't give you that! 
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I don't have 10,000 credits on me.
			boolean hasResponse2 = false;
			if (!c_story1_4_reb_contact_condition_playerHasBribe (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps I can think of 10,000 reasons why I might say something.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's fair.  I will give you 10,000 credits. 
	if (response == "s_74")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_impPaybribe (player, npc);

			//-- NPC: I probably should have asked for more.  Ah well.  I will tell you where he is, not that it will help you much. He's gone to space to show other pilots his route to Kashyyyk.  Ha ha ha, you won't be able to catch him!
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why you...
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's outrageous!  I won't give you that! 
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_impPlayerNoBribe (player, npc);

			//-- NPC: Didn't think you would.  Off you go.
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have 10,000 credits on me.
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I don't seem to have the information that you want on me either.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I probably should have asked for more.  Ah well.  I will tell you where he is, not that it will help you much. He's gone to space to show other pilots his route to Kashyyyk.  Ha ha ha, you won't be able to catch him!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why you...
	if (response == "s_85")
	{
		doAnimationAction (player, "threaten");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			//-- NPC: Ah ah ah... best go now if you want to catch him!
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll deal with you later.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah ah ah... best go now if you want to catch him!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll deal with you later.
	if (response == "s_87")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Sure you will.
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Leave me alone. You won't get what you want from me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If you won't tell me, perhaps your sister might. 
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "taken_aback");

			//-- NPC: I beg your pardon?
			string_id message = new string_id (c_stringFile, "s_98");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Your sister, Mirrian who lives in your parent's old home.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I beg your pardon?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Your sister, Mirrian who lives in your parent's old home.
	if (response == "s_100")
	{
		doAnimationAction (player, "slit_throat");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: You monster! You wouldn't hurt my family!
			string_id message = new string_id (c_stringFile, "s_102");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And you wouldn't tell me where Handro is!
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't want to hurt anyone, but I need to know where the pilot is.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You monster! You wouldn't hurt my family!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And you wouldn't tell me where Handro is!
	if (response == "s_104")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			c_story1_4_reb_contact_action_impStrongarmed (player, npc);

			//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Empire's plans and we will give him a new identity.  I hope you get stepped on by an AT-AT!
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.  Your family is safe from me.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't want to hurt anyone, but I need to know where the pilot is.
	if (response == "s_112")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			c_story1_4_reb_contact_action_impStrongarmed (player, npc);

			//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Empire's plans and we will give him a new identity.  I hope you get stepped on by an AT-AT!
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.  Now I have to go stop him.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Empire's plans and we will give him a new identity.  I hope you get stepped on by an AT-AT!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.  Your family is safe from me.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Monster!
			string_id message = new string_id (c_stringFile, "s_110");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fine, you won't be able to catch him anyway.  He's taking a last trip out to show a new pilot his route to Kashyyyk.  Then, in exchange for his life, he will tell us everything about the Empire's plans and we will give him a new identity.  I hope you get stepped on by an AT-AT!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.  Now I have to go stop him.
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: You will never succeed!
			string_id message = new string_id (c_stringFile, "s_118");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I heard what happened.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me another chance to bring Handro back!
	if (response == "s_180")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Should I? Perhaps I should. We managed to hang on to Handro despite what happened.
			string_id message = new string_id (c_stringFile, "s_181");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_182");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Should I? Perhaps I should. We managed to hang on to Handro despite what happened.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_182")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_giveSecondQuest (player, npc);

			//-- NPC: You're welcome.  Get back out there and bring him back!
			string_id message = new string_id (c_stringFile, "s_183");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you find out where Cal is?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Officer M'Kae knows, but won't tell me.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I know who he is!  I'll bet that his superiors wouldn't be too happy that one of his pilots was a rebel spy.
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But he betrayed us also.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ah.  Blackmail then.
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know who he is!  I'll bet that his superiors wouldn't be too happy that one of his pilots was a rebel spy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But he betrayed us also.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, but they don't know that...if you can get the proof from his records.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How should I do that?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ah.  Blackmail then.
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, if you can get the proof from his records. 
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How should I do that?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, but they don't know that...if you can get the proof from his records.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How should I do that?
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I got the access codes to his home base.  I want you to go in there, and cause some chaos.  Kill the boss and then find some kind of incriminating evidence.  It will probably be in a computer terminal there. 
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I find it?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I got the access codes to his home base.  I want you to go in there, and cause some chaos.  Kill the boss and then find some kind of incriminating evidence.  It will probably be in a computer terminal there. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I find it?
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_rebSignal1 (player, npc);

			//-- NPC: I'll give you a waypoint.  Hurry!  If they change the access codes, we're sunk.
			string_id message = new string_id (c_stringFile, "s_142");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, if you can get the proof from his records. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How should I do that?
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I got the access codes to his home base.  I want you to go in there, and cause some chaos.  Kill the boss and then find some kind of incriminating evidence.  It will probably be in a computer terminal there. 
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do I find it?
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.  I take it you won?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I destroyed his ship.
	if (response == "s_151")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great work!  I'm sorry for the unpleasantness of this mission.
			string_id message = new string_id (c_stringFile, "s_153");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It's for the good of the Alliance!
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am expecting a reward. 
			boolean hasResponse1 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_155");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 43);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  I failed to destroy the ship before it went into hyperspace.
	if (response == "s_171")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: This is going to cripple us!  Wait, give me a moment... it looks like you may have another chance.  Handro's hyperdrive malfunctioned.  I would have to assume that he has fixed it now, but 
			string_id message = new string_id (c_stringFile, "s_173");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will go now!
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Handro is in space and I haven't been up there yet.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_up");

			//-- NPC: Get going!  He has secrets that could destroy us!
			string_id message = new string_id (c_stringFile, "s_196");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great work!  I'm sorry for the unpleasantness of this mission.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's for the good of the Alliance!
	if (response == "s_155")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_rebSignal2 (player, npc);

			//-- NPC: And such good work deserves a reward.   I have a new weapon.  I believe you should have it.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Great!  Thank you!
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_159");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 44);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am expecting a reward. 
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_rebSignal2 (player, npc);

			//-- NPC: And I will provide one.   I have a new weapon.  I believe you should have it.
			string_id message = new string_id (c_stringFile, "s_165");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_167");

				utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 46);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And such good work deserves a reward.   I have a new weapon.  I believe you should have it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Great!  Thank you!
	if (response == "s_159")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_finishThisQuest (player, npc);

			//-- NPC: No, thank YOU.  Come back to me soon and hopefully I will have more information for you so we can finish this.
			string_id message = new string_id (c_stringFile, "s_161");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And I will provide one.   I have a new weapon.  I believe you should have it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_167")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_finishThisQuest (player, npc);

			//-- NPC: No, thank YOU.  Come back to me soon and hopefully I will have more information for you so we can finish this.
			string_id message = new string_id (c_stringFile, "s_169");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is going to cripple us!  Wait, give me a moment... it looks like you may have another chance.  Handro's hyperdrive malfunctioned.  I would have to assume that he has fixed it now, but 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will go now!
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			c_story1_4_reb_contact_action_rebGrantSpace (player, npc);

			//-- NPC: May the Force be with you!
			string_id message = new string_id (c_stringFile, "s_177");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_reb_contact_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't see Cal with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have not acquired him yet.
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please get on that.
			string_id message = new string_id (c_stringFile, "s_194");
			utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_story1_4_reb_contact");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Wolff Kalos");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Wolff Kalos");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_story1_4_reb_contact");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerCanMakeChoice (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: You wouldn't happen to know a Cal Handro, would you?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Actually, I do.  I have come to tell you where he is.
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition_playerisRebel (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't know who you are talking about.
		boolean hasResponse1 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have come to tell you where he is.
		boolean hasResponse2 = false;
		if (!c_story1_4_reb_contact_condition_playerisRebel (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_44");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 1);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerOnImpQuestFirst (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: What do you want, Imperial swine? 
		string_id message = new string_id (c_stringFile, "s_56");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I want to know what you did with Cal Handro.
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_58");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 14);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerOnImpQuestSecond (player, npc))
	{
		doAnimationAction (npc, "shoo");

		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Leave me alone. You won't get what you want from me.
		string_id message = new string_id (c_stringFile, "s_94");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: If you won't tell me, perhaps your sister might. 
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition_playerImpReadyToStrongarm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 24);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerFinishedImpStep (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Imperial scum, leave me alone!
		string_id message = new string_id (c_stringFile, "s_184");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerFailedRebQuest (player, npc))
	{
		//-- NPC: I heard what happened.
		string_id message = new string_id (c_stringFile, "s_179");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Give me another chance to bring Handro back!
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_180");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 32);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerOnRebelQuestFirst (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Did you find out where Cal is?
		string_id message = new string_id (c_stringFile, "s_126");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Officer M'Kae knows, but won't tell me.
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_128");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 35);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerIsRebelCompletedQuest (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Good to see you. It looks like this isn't over. I'm gathering information now and should have something for you soon.
		string_id message = new string_id (c_stringFile, "s_186");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerOnRebelQuestSecond (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Welcome back.  I take it you won?
		string_id message = new string_id (c_stringFile, "s_149");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Well, I destroyed his ship.
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition_playerWonSpace (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No.  I failed to destroy the ship before it went into hyperspace.
		boolean hasResponse1 = false;
		if (c_story1_4_reb_contact_condition_playerLostSpace (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Handro is in space and I haven't been up there yet.
		boolean hasResponse2 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_151");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_171");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_195");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 42);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerisRebel (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Greetings!  You wouldn't happen to have been sent by...never mind.  I know that you are not. 
		string_id message = new string_id (c_stringFile, "s_188");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition_playerIsRebelQuestActive (player, npc))
	{
		//-- NPC: I don't see Cal with you.
		string_id message = new string_id (c_stringFile, "s_190");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have not acquired him yet.
		boolean hasResponse0 = false;
		if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_192");

			utils.setScriptVar (player, "conversation.c_story1_4_reb_contact.branchId", 52);

			npcStartConversation (player, npc, "c_story1_4_reb_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_reb_contact_condition__defaultCondition (player, npc))
	{
		c_story1_4_reb_contact_action_facePlayer (player, npc);

		//-- NPC: Good day.
		string_id message = new string_id (c_stringFile, "s_198");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_story1_4_reb_contact")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

	if (branchId == 1 && c_story1_4_reb_contact_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_story1_4_reb_contact_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_story1_4_reb_contact_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_story1_4_reb_contact_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_story1_4_reb_contact_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_story1_4_reb_contact_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_story1_4_reb_contact_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_story1_4_reb_contact_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && c_story1_4_reb_contact_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && c_story1_4_reb_contact_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && c_story1_4_reb_contact_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && c_story1_4_reb_contact_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && c_story1_4_reb_contact_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && c_story1_4_reb_contact_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && c_story1_4_reb_contact_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && c_story1_4_reb_contact_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && c_story1_4_reb_contact_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && c_story1_4_reb_contact_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && c_story1_4_reb_contact_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && c_story1_4_reb_contact_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && c_story1_4_reb_contact_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && c_story1_4_reb_contact_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && c_story1_4_reb_contact_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && c_story1_4_reb_contact_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && c_story1_4_reb_contact_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && c_story1_4_reb_contact_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && c_story1_4_reb_contact_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && c_story1_4_reb_contact_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && c_story1_4_reb_contact_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && c_story1_4_reb_contact_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && c_story1_4_reb_contact_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && c_story1_4_reb_contact_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_story1_4_reb_contact.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

