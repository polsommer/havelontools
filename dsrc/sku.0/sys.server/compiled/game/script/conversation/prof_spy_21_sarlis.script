// ======================================================================
//
// prof_spy_21_sarlis.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/prof_spy_21_sarlis";

// ======================================================================
// Script Conditions
// ======================================================================

boolean prof_spy_21_sarlis_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean prof_spy_21_sarlis_condition_onGotoQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/prof_spy_21");
	int prof_spy_21_goto_e2 = groundquests.getTaskId(questId1, "prof_spy_21_goto_e2"); 
	
	boolean onTask = questIsTaskActive(questId1, prof_spy_21_goto_e2, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean prof_spy_21_sarlis_condition_GotoComplete (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/prof_spy_21");
	
	boolean OnTask = 	(questIsQuestComplete(questId1, player));
	
	return OnTask;
}

// ----------------------------------------------------------------------

boolean prof_spy_21_sarlis_condition_mission21Reward (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/prof_spy_21a");
	int spy_mission_2_e6 = groundquests.getTaskId(questId1, "spy_mission_2_e6"); 
	
	boolean onTask = questIsTaskActive(questId1, spy_mission_2_e6, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean prof_spy_21_sarlis_condition_mission21Complete (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/prof_spy_21a");
	
	boolean OnTask = 	(questIsQuestComplete(questId1, player));
	
	return OnTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void prof_spy_21_sarlis_action_grantMission21 (obj_id player, obj_id npc)
{
    int questId = questGetQuestId("quest/prof_spy_21a");
    groundquests.grantQuest(questId, player, npc, true);	
}

// ----------------------------------------------------------------------

void prof_spy_21_sarlis_action_signalGoto (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_spy_21_goto_e2");
}

// ----------------------------------------------------------------------

void prof_spy_21_sarlis_action_signalMissionReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spy_mission_2_e6");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int prof_spy_21_sarlis_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must finish the job.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to know the information again.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			prof_spy_21_sarlis_action_grantMission21 (player, npc);

			//-- NPC: Here is the data you need.
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Kaesii says I can rely on you. I hope so, because to be quite frank all the spies I have sent before you have failed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Failed at what?
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have a contract from an influential member of the Incom corporation. It seems one of their courier ships was hijacked by some pirates. The pirates were only after general cargo, but they ended up getting much more.
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would that be?
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have a contract from an influential member of the Incom corporation. It seems one of their courier ships was hijacked by some pirates. The pirates were only after general cargo, but they ended up getting much more.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would that be?
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: An encrypted storage device with information about a new product they are developing. I'm banking that the pirates don't know what to do with it, or even what they have, but I am sure people who do know what to do with it will find out eventually and do anything to get their hands on it. 
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So what do you need me to do?
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: An encrypted storage device with information about a new product they are developing. I'm banking that the pirates don't know what to do with it, or even what they have, but I am sure people who do know what to do with it will find out eventually and do anything to get their hands on it. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what do you need me to do?
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: You need to contact this group and try to recover the data key. It's similar to a datapad, but highly encrypted. We have located the group of thugs and forcing them to cooperate shouldn't be much of a problem.
			string_id message = new string_id (c_stringFile, "s_21");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can do this. Just download the information.
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Do they have any contacts to the local criminal organizations?
			boolean hasResponse1 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_31");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You need to contact this group and try to recover the data key. It's similar to a datapad, but highly encrypted. We have located the group of thugs and forcing them to cooperate shouldn't be much of a problem.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can do this. Just download the information.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must hurry. It's only a matter of time before the encryption is sliced.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will.
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do they have any contacts to the local criminal organizations?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: No. These guys are just a pirate gang. They have refused an offer to work for Valarian, and Jabba considers them to be amateurs. They have minor connections with Black Sun, but that organization won't lift a finger if these guys need help. You won't have any long-term problems from them.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good to know. I will take the job. Download the information.
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must hurry. It's only a matter of time before the encryption is sliced.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will.
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			prof_spy_21_sarlis_action_grantMission21 (player, npc);

			//-- NPC: Good luck.
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No. These guys are just a pirate gang. They have refused an offer to work for Valarian, and Jabba considers them to be amateurs. They have minor connections with Black Sun, but that organization won't lift a finger if these guys need help. You won't have any long-term problems from them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good to know. I will take the job. Download the information.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: You must hurry. It's only a matter of time before the encryption is sliced.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will.
			boolean hasResponse0 = false;
			if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_spy_21_sarlis_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't believe the prices on the bazaar lately. How did things get so expensive?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I agree. It's ridiculous.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, maybe things will settle down soon.
			string_id message = new string_id (c_stringFile, "s_46");
			utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.prof_spy_21_sarlis");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.prof_spy_21_sarlis");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (prof_spy_21_sarlis_condition_mission21Complete (player, npc))
	{
		//-- NPC: The contact is very happy with your work. I will let you know when I have another job for you.
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_spy_21_sarlis_condition_mission21Reward (player, npc))
	{
		prof_spy_21_sarlis_action_signalMissionReward (player, npc);

		//-- NPC: The contact has confirmed the data. I have your pay. They also wanted me to give you this. I am sure you will find use for it.
		string_id message = new string_id (c_stringFile, "s_38");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_spy_21_sarlis_condition_GotoComplete (player, npc))
	{
		//-- NPC: You must finish the job.
		string_id message = new string_id (c_stringFile, "s_35");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need to know the information again.
		boolean hasResponse0 = false;
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 3);

			npcStartConversation (player, npc, "prof_spy_21_sarlis", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_spy_21_sarlis_condition_onGotoQuest (player, npc))
	{
		prof_spy_21_sarlis_action_signalGoto (player, npc);

		//-- NPC: Kaesii says I can rely on you. I hope so, because to be quite frank all the spies I have sent before you have failed.
		string_id message = new string_id (c_stringFile, "s_9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Failed at what?
		boolean hasResponse0 = false;
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 5);

			npcStartConversation (player, npc, "prof_spy_21_sarlis", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
	{
		//-- NPC: I can't believe the prices on the bazaar lately. How did things get so expensive?
		string_id message = new string_id (c_stringFile, "s_42");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I agree. It's ridiculous.
		boolean hasResponse0 = false;
		if (prof_spy_21_sarlis_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_44");

			utils.setScriptVar (player, "conversation.prof_spy_21_sarlis.branchId", 12);

			npcStartConversation (player, npc, "prof_spy_21_sarlis", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "prof_spy_21_sarlis")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

	if (branchId == 3 && prof_spy_21_sarlis_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && prof_spy_21_sarlis_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && prof_spy_21_sarlis_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && prof_spy_21_sarlis_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && prof_spy_21_sarlis_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && prof_spy_21_sarlis_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && prof_spy_21_sarlis_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && prof_spy_21_sarlis_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.prof_spy_21_sarlis.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

