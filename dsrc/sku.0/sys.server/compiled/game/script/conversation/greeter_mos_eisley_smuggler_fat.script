// ======================================================================
//
// greeter_mos_eisley_smuggler_fat.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/greeter_mos_eisley_smuggler_fat";

// ======================================================================
// Script Conditions
// ======================================================================

boolean greeter_mos_eisley_smuggler_fat_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_remembersPlayer (obj_id player, obj_id npc)
{
	return ( utils.hasScriptVar( player, "metNewbiePilot" ));
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_isAnImperialPilot (obj_id player, obj_id npc)
{
	return space_flags.isImperialPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_isARebelPilot (obj_id player, obj_id npc)
{
	return space_flags.isRebelPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_isPrivateerPilot (obj_id player, obj_id npc)
{
	return space_flags.isNeutralPilot(player);
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_hasSpaceExpansion (obj_id player, obj_id npc)
{
	return ( features.isSpaceEdition( player ) );
}

// ----------------------------------------------------------------------

boolean greeter_mos_eisley_smuggler_fat_condition_hasSpaceShip (obj_id player, obj_id npc)
{
	return ( space_quest.hasShip( player ) );
}

// ======================================================================
// Script Actions
// ======================================================================

void greeter_mos_eisley_smuggler_fat_action_rememberPlayer (obj_id player, obj_id npc)
{
	utils.setScriptVar( player, "metNewbiePilot", true );
}

// ----------------------------------------------------------------------

void greeter_mos_eisley_smuggler_fat_action_grantQuestOne (obj_id player, obj_id npc)
{
	space_quest.grantQuest ( player, "delivery", "tatooine_newbie_1");
	space_quest.grantNewbieShip( player, "rebel");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int greeter_mos_eisley_smuggler_fat_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey kid, c'mere. When you arrived, did you happen to see a human pilot with a thick beard? He's an associate of ours, and he's overdue.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Overdue? For what?
	if (response == "s_6795b6ad")
	{
		//-- [NOTE] 
		if (greeter_mos_eisley_smuggler_fat_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: My associates and I all went in together on a business venture of sorts. Needless to say, we eagerly await his return with, I'm quite certain, good news about the outcome of the this venture. The thing is, though, that our friend has apparently been delayed. He's a number of days overdue, and we're quite concerned. About our friend, of course, as well as our potential profits.
			string_id message = new string_id (c_stringFile, "s_9a679691");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. I hope he arrives safely and soon.
			boolean hasResponse0 = false;
			if (greeter_mos_eisley_smuggler_fat_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3d5a0af7");

				utils.setScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int greeter_mos_eisley_smuggler_fat_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My associates and I all went in together on a business venture of sorts. Needless to say, we eagerly await his return with, I'm quite certain, good news about the outcome of the this venture. The thing is, though, that our friend has apparently been delayed. He's a number of days overdue, and we're quite concerned. About our friend, of course, as well as our potential profits.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. I hope he arrives safely and soon.
	if (response == "s_3d5a0af7")
	{
		//-- [NOTE] 
		if (greeter_mos_eisley_smuggler_fat_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_cackle");

			//-- NPC: Thank you for the kind words.
			string_id message = new string_id (c_stringFile, "s_8ae971c3");
			utils.removeScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.greeter_mos_eisley_smuggler_fat");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "Vincie Kalhoon (a freelance pilot)");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	//setName (self, "Vincie Kalhoon (a freelance pilot)");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable(self, true);
	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	setCondition( self, CONDITION_SPACE_INTERESTING );
	
	detachScript (self, "conversation.greeter_mos_eisley_smuggler_fat");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (greeter_mos_eisley_smuggler_fat_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "beckon");

		//-- NPC: Hey kid, c'mere. When you arrived, did you happen to see a human pilot with a thick beard? He's an associate of ours, and he's overdue.
		string_id message = new string_id (c_stringFile, "s_db81b074");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Overdue? For what?
		boolean hasResponse0 = false;
		if (greeter_mos_eisley_smuggler_fat_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6795b6ad");

			utils.setScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId", 1);

			npcStartConversation (player, npc, "greeter_mos_eisley_smuggler_fat", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "greeter_mos_eisley_smuggler_fat")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId");

	if (branchId == 1 && greeter_mos_eisley_smuggler_fat_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && greeter_mos_eisley_smuggler_fat_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.greeter_mos_eisley_smuggler_fat.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

