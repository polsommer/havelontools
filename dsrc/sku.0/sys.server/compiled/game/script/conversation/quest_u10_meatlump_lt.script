// ======================================================================
//
// quest_u10_meatlump_lt.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/quest_u10_meatlump_lt";

// ======================================================================
// Script Conditions
// ======================================================================

boolean quest_u10_meatlump_lt_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean quest_u10_meatlump_lt_condition_quest_u10_02_01_complete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "quest_u10_02", "quest_u10_02_01");
}

// ----------------------------------------------------------------------

boolean quest_u10_meatlump_lt_condition_quest_u10_02_01_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_u10_02", "quest_u10_02_01");
}

// ======================================================================
// Script Actions
// ======================================================================

void quest_u10_meatlump_lt_action_quest_u10_02_01_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "quest_u10_02_01");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int quest_u10_meatlump_lt_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you looking for Louis? Louis Bender?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am.
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			quest_u10_meatlump_lt_action_quest_u10_02_01_signal (player, npc);

			//-- NPC: Someone took him. A big trandoshan. I think his name was Box. Or Bosch. Or, no, I got it...it was Bossk. He said he as a bounty hunter. He took Louis.
			string_id message = new string_id (c_stringFile, "s_34");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why did he take Louis?
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Someone took him. A big trandoshan. I think his name was Box. Or Bosch. Or, no, I got it...it was Bossk. He said he as a bounty hunter. He took Louis.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why did he take Louis?
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: He said that someone named Lucien had placed a bounty on Louis. On his brothers too. 
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So Bossk plans to collect that bounty?
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He said that someone named Lucien had placed a bounty on Louis. On his brothers too. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So Bossk plans to collect that bounty?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, actually Bossk also said that there's a much larger bounty on Lucien. He intends to force Hraykken and Draykken to handle Lucien for him so he can collect that much more substantial bounty. If they do that, he said he'll let Louis go.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You don't think Bossk will try to collect both bounties?
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, actually Bossk also said that there's a much larger bounty on Lucien. He intends to force Hraykken and Draykken to handle Lucien for him so he can collect that much more substantial bounty. If they do that, he said he'll let Louis go.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You don't think Bossk will try to collect both bounties?
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lucien is the one who put the bounty on Louis and his brothers. If Lucien is out of the picture, then there's no way for him to pay the bounty.
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm guessing it will be up to me to go take care of Lucien.
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lucien is the one who put the bounty on Louis and his brothers. If Lucien is out of the picture, then there's no way for him to pay the bounty.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm guessing it will be up to me to go take care of Lucien.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			quest_u10_meatlump_lt_action_quest_u10_02_01_signal (player, npc);

			//-- NPC: Hraykken and Draykken would probably send you to do it anyway. Bossk told me where to find him. It's nearby.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why didn't you go after Bossk and free Louis yourself?
			boolean hasResponse1 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hraykken and Draykken would probably send you to do it anyway. Bossk told me where to find him. It's nearby.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh, sure.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why didn't you go after Bossk and free Louis yourself?
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: Louis told me to wait here.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wait here? For what?
			boolean hasResponse0 = false;
			if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int quest_u10_meatlump_lt_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Louis told me to wait here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait here? For what?
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			//-- NPC: He didn't say.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.quest_u10_meatlump_lt");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.quest_u10_meatlump_lt");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (quest_u10_meatlump_lt_condition_quest_u10_02_01_complete (player, npc))
	{
		//-- NPC: If you find Louis, please ask him to let me know what I'm waiting for?
		string_id message = new string_id (c_stringFile, "s_37");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_meatlump_lt_condition_quest_u10_02_01_active (player, npc))
	{
		//-- NPC: Are you looking for Louis? Louis Bender?
		string_id message = new string_id (c_stringFile, "s_8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am.
		boolean hasResponse0 = false;
		if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			utils.setScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId", 2);

			npcStartConversation (player, npc, "quest_u10_meatlump_lt", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (quest_u10_meatlump_lt_condition__defaultCondition (player, npc))
	{
		//-- NPC: I wonder how long I'm going to have to wait here.
		string_id message = new string_id (c_stringFile, "s_29");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "quest_u10_meatlump_lt")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

	if (branchId == 2 && quest_u10_meatlump_lt_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && quest_u10_meatlump_lt_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && quest_u10_meatlump_lt_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && quest_u10_meatlump_lt_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && quest_u10_meatlump_lt_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && quest_u10_meatlump_lt_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && quest_u10_meatlump_lt_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.quest_u10_meatlump_lt.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

