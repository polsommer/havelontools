// ======================================================================
//
// gate_keeper_quarantine_zone.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.buff;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/gate_keeper_quarantine_zone";

// ======================================================================
// Script Conditions
// ======================================================================

boolean gate_keeper_quarantine_zone_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean gate_keeper_quarantine_zone_condition_hasQuestOne (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.isQuestActive(player, "outbreak_quest_01_imperial")
	|| groundquests.isQuestActive(player, "outbreak_quest_01_neutral")
	|| groundquests.isQuestActive(player, "outbreak_quest_01_rebel")
	|| isGod(player)
	);
}

// ----------------------------------------------------------------------

boolean gate_keeper_quarantine_zone_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_imperial")
	|| groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_rebel")
	|| groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_neutral"));
}

// ----------------------------------------------------------------------

boolean gate_keeper_quarantine_zone_condition_hasQuestTwo (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.isQuestActive(player, "quest/outbreak_quest_02_imperial")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_02_rebel")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_02_neutral")
	);
}

// ----------------------------------------------------------------------

boolean gate_keeper_quarantine_zone_condition_hasFoundContingent (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, "outbreak_quest_02_imeprial")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_02_neutral")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_02_rebel")	
	);
}

// ======================================================================
// Script Actions
// ======================================================================

void gate_keeper_quarantine_zone_action_warpPlayerIn (obj_id player, obj_id npc)
{
	if(groundquests.isTaskActive(player, "outbreak_quest_01_imperial", "goEntrance")
	|| groundquests.isTaskActive(player, "outbreak_quest_01_rebel", "goEntrance")
	|| groundquests.isTaskActive(player, "outbreak_quest_01_neutral", "goEntrance"))
	{
		groundquests.sendSignal(player, "gainedAccess"); 
	}
	
	messageTo(player, "death_troopers_apply_virus", null, 10.0f, false);
	
	setObjVar(player, "outbreak.usedGate", 1);
	buff.applyBuff(player, "death_troopers_no_vehicle");
	
	warpPlayer(player, "dathomir", -5786, 510, -6556, null, -5786, 510, -6556, null, true);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int gate_keeper_quarantine_zone_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I heard that you found a contingent of Imperial Stormtroopers in the original research center. This is going to be great for recruitment!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me in.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			gate_keeper_quarantine_zone_action_warpPlayerIn (player, npc);

			//-- NPC: Of course. Open the gate!
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int gate_keeper_quarantine_zone_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I hear you received the anti-virus. I personally wouldn't trust anything created in the quarantine zone...but you seem to be fine. I hope it lasts, for your sake...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me in.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			gate_keeper_quarantine_zone_action_warpPlayerIn (player, npc);

			//-- NPC: Of course. Open the gate!
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int gate_keeper_quarantine_zone_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes, %TU, I didn't expect to see you again. Well, not alive that is.  Do you want to enter the quarantine zone?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			gate_keeper_quarantine_zone_action_warpPlayerIn (player, npc);

			//-- NPC: Of course. Open the gate!
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int gate_keeper_quarantine_zone_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The quarantine zone is a restricted area, citizen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have authorization to enter.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			//-- NPC: What? Let me see your authorization code.
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Here...
			boolean hasResponse0 = false;
			if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int gate_keeper_quarantine_zone_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What? Let me see your authorization code.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here...
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I see. Everything checks out. I can't say that I envy you, but I certainly appreciate what you are doing for the Empire...whatever you are doing.
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I go?
			boolean hasResponse0 = false;
			if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int gate_keeper_quarantine_zone_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I see. Everything checks out. I can't say that I envy you, but I certainly appreciate what you are doing for the Empire...whatever you are doing.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I go?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			gate_keeper_quarantine_zone_action_warpPlayerIn (player, npc);

			//-- NPC: Of course. Open the gate!
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.gate_keeper_quarantine_zone");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.gate_keeper_quarantine_zone");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (gate_keeper_quarantine_zone_condition_hasFoundContingent (player, npc))
	{
		//-- NPC: I heard that you found a contingent of Imperial Stormtroopers in the original research center. This is going to be great for recruitment!
		string_id message = new string_id (c_stringFile, "s_27");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Let me in.
		boolean hasResponse0 = false;
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_28");

			utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 1);

			npcStartConversation (player, npc, "gate_keeper_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (gate_keeper_quarantine_zone_condition_hasQuestTwo (player, npc))
	{
		//-- NPC: I hear you received the anti-virus. I personally wouldn't trust anything created in the quarantine zone...but you seem to be fine. I hope it lasts, for your sake...
		string_id message = new string_id (c_stringFile, "s_21");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Let me in.
		boolean hasResponse0 = false;
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 2);

			npcStartConversation (player, npc, "gate_keeper_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (gate_keeper_quarantine_zone_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: Ah yes, %TU, I didn't expect to see you again. Well, not alive that is.  Do you want to enter the quarantine zone?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 3);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "gate_keeper_quarantine_zone", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (gate_keeper_quarantine_zone_condition_hasQuestOne (player, npc))
	{
		//-- NPC: The quarantine zone is a restricted area, citizen.
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have authorization to enter.
		boolean hasResponse0 = false;
		if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			utils.setScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId", 4);

			npcStartConversation (player, npc, "gate_keeper_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (gate_keeper_quarantine_zone_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "shoo");

		//-- NPC: Sorry citizen.This is a quarantined area. Please keep moving.
		string_id message = new string_id (c_stringFile, "s_30");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "gate_keeper_quarantine_zone")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

	if (branchId == 1 && gate_keeper_quarantine_zone_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && gate_keeper_quarantine_zone_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && gate_keeper_quarantine_zone_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && gate_keeper_quarantine_zone_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && gate_keeper_quarantine_zone_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && gate_keeper_quarantine_zone_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.gate_keeper_quarantine_zone.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

