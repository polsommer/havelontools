// ======================================================================
//
// c_tutorial_rm6.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_tutorial_rm6";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_tutorial_rm6_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm6_condition_playerOnQuest (obj_id player, obj_id npc)
{	
	int questId = questGetQuestId("quest/c_newbie_hall_range01");
	int explainWeapons = groundquests.getTaskId(questId, "explainWeapons"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainWeapons, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm6_condition_taskComplete (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_range01");
	int explainWeapons = groundquests.getTaskId(questId, "explainWeapons"); 
	
	boolean onTask = questIsTaskComplete(questId, explainWeapons, player);
	
	return onTask;

}

// ----------------------------------------------------------------------

boolean c_tutorial_rm6_condition_playerOnQuestStep0502 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainRadar = groundquests.getTaskId(questId, "explainRadar"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainRadar, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm6_condition_playerOnQuestStep05 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_02");
	int explainWaypoint = groundquests.getTaskId(questId, "explainWaypoint");
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainWaypoint, player);
	
	return onTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_tutorial_rm6_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_tutorial_rm6_action_actionSendSignal (obj_id player, obj_id npc)
{
	obj_id knife = utils.getItemPlayerHasByTemplate(player, "object/weapon/melee/knife/knife_survival.iff");
    obj_id pistol = utils.getItemPlayerHasByTemplate(player, "object/weapon/ranged/pistol/pistol_cdef.iff");
	obj_id playerInventory = utils.getInventoryContainer( player );
	
    if (knife == null)
		{	
			string templateName = "object/weapon/melee/knife/knife_survival.iff";
			createObject( templateName, playerInventory, "" );		
		}
	
    if (pistol == null)
		{	
			string templateName1 = "object/weapon/ranged/pistol/pistol_cdef.iff";
			createObject( templateName1, playerInventory, "" );		
		}

	groundquests.sendSignal(player, "explainWeapons");
}

// ----------------------------------------------------------------------

void c_tutorial_rm6_action_Repeat (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_range02");

	groundquests.grantQuest(questId, player, npc, true);


}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_tutorial_rm6_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They've raised the threat level to Extreme. We need to make sure you are properly equipped!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Threat level?
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Yes, and it's all thanks to you. There have been threats made against you and this station. We can't have you running around unarmed. In your inventory you should find several weapons. Our practice droideka is over there on the platform.  Take a few shots at it.  Try different weapons if you like. 
			string_id message = new string_id (c_stringFile, "s_67");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, Thank you.
			boolean hasResponse0 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Finally, now give me a weapon!
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I'd have equipped you the moment you arrived, but we had to process the papers, you understand.  Now, in your inventory you should find several weapons. Our practice droideka is over there on the platform.  Take a few shots at it.  Try different weapons if you like.
			string_id message = new string_id (c_stringFile, "s_71");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, Thank you.
			boolean hasResponse0 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_94");

				utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, and it's all thanks to you. There have been threats made against you and this station. We can't have you running around unarmed. In your inventory you should find several weapons. Our practice droideka is over there on the platform.  Take a few shots at it.  Try different weapons if you like. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, Thank you.
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			c_tutorial_rm6_action_actionSendSignal (player, npc);

			//-- NPC: Let me know if you have any questions.
			string_id message = new string_id (c_stringFile, "s_103");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'd have equipped you the moment you arrived, but we had to process the papers, you understand.  Now, in your inventory you should find several weapons. Our practice droideka is over there on the platform.  Take a few shots at it.  Try different weapons if you like.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, Thank you.
	if (response == "s_94")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			c_tutorial_rm6_action_actionSendSignal (player, npc);

			//-- NPC: Let me know if you have any questions.
			string_id message = new string_id (c_stringFile, "s_95");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How are those weapons working for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Good, well then you need to move on to the next room. They are waiting for you. They will want to ask you a few questions before you see the Commander.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Commander?
			boolean hasResponse0 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They are terrible! I'm not sure I understand how to use them.
	if (response == "s_81")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm... let me take a look. The weapons look fine.  I guess you need a bit of work on how to use them. Do you want to take a look at the manual again?
			string_id message = new string_id (c_stringFile, "s_83");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes I would.
			boolean hasResponse0 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks, I just want to get out of here.
			boolean hasResponse1 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, well then you need to move on to the next room. They are waiting for you. They will want to ask you a few questions before you see the Commander.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Commander?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			//-- NPC: Yes.  They have more information in the next room.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm... let me take a look. The weapons look fine.  I guess you need a bit of work on how to use them. Do you want to take a look at the manual again?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes I would.
	if (response == "s_85")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			c_tutorial_rm6_action_Repeat (player, npc);

			//-- NPC: All right then, here you are.
			string_id message = new string_id (c_stringFile, "s_87");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks, I just want to get out of here.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Suit yourself. They are waiting for you in the next room. They have a few questions for you before you see the Commander.
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The Commander?
			boolean hasResponse0 = false;
			if (c_tutorial_rm6_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93");

				utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm6_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Suit yourself. They are waiting for you in the next room. They have a few questions for you before you see the Commander.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Commander?
	if (response == "s_93")
	{
		//-- [NOTE] 
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			//-- NPC: Yes.  They have more information in the next room.
			string_id message = new string_id (c_stringFile, "s_97");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_tutorial_rm6");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Warrant Officer Snopell");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Warrant Officer Snopell");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_tutorial_rm6");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_tutorial_rm6_condition_playerOnQuest (player, npc))
	{
		doAnimationAction (npc, "explain");

		c_tutorial_rm6_action_facePlayer (player, npc);

		//-- NPC: They've raised the threat level to Extreme. We need to make sure you are properly equipped!
		string_id message = new string_id (c_stringFile, "s_63");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Threat level?
		boolean hasResponse0 = false;
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Finally, now give me a weapon!
		boolean hasResponse1 = false;
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_65");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 1);

			npcStartConversation (player, npc, "c_tutorial_rm6", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm6_condition_taskComplete (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		doAnimationAction (player, "point_right");

		c_tutorial_rm6_action_facePlayer (player, npc);

		//-- NPC: How are those weapons working for you?
		string_id message = new string_id (c_stringFile, "s_75");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Fine.
		boolean hasResponse0 = false;
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: They are terrible! I'm not sure I understand how to use them.
		boolean hasResponse1 = false;
		if (c_tutorial_rm6_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_77");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_81");

			utils.setScriptVar (player, "conversation.c_tutorial_rm6.branchId", 6);

			npcStartConversation (player, npc, "c_tutorial_rm6", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm6_condition_playerOnQuestStep05 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm6_action_facePlayer (player, npc);

		//-- NPC: You need to see Captain Bailie in the break room.
		string_id message = new string_id (c_stringFile, "s_99");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm6_condition_playerOnQuestStep0502 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm6_action_facePlayer (player, npc);

		//-- NPC: You need to meet with Captain Bailie in the break room.
		string_id message = new string_id (c_stringFile, "s_101");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_tutorial_rm6")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_tutorial_rm6.branchId");

	if (branchId == 1 && c_tutorial_rm6_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_tutorial_rm6_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_tutorial_rm6_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_tutorial_rm6_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_tutorial_rm6_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_tutorial_rm6_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_tutorial_rm6_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_tutorial_rm6.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

