// ======================================================================
//
// c_story1_4_imp_guard.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.34 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_story1_4_imp_guard";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_story1_4_imp_guard_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_guard_condition_onQuestBeforeAttack (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imp_headguard = groundquests.getTaskId(questId1, "imp_headguard"); 
	
	return questIsTaskActive(questId1, imp_headguard, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_guard_condition_onQuestAfterAttack (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imp_headguard2 = groundquests.getTaskId(questId1, "imp_headguard2"); 
	
	return questIsTaskActive(questId1, imp_headguard2, player);
}

// ----------------------------------------------------------------------

boolean c_story1_4_imp_guard_condition_doneWithGuard (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_story1_4b_imperial");
	int imp_headguard2 = groundquests.getTaskId(questId1, "imp_headguard2"); 
	
	return questIsTaskComplete(questId1, imp_headguard2, player);
}

// ======================================================================
// Script Actions
// ======================================================================

void c_story1_4_imp_guard_action_facePlayer (obj_id player, obj_id npc)
{
		faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_story1_4_imp_guard_action_signalStartAttack (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_imperial_guard1");
}

// ----------------------------------------------------------------------

void c_story1_4_imp_guard_action_signalGuardDone (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_story1_4b_imperial_guard2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_story1_4_imp_guard_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm glad to see you, %TU.  Officer M'kae said that you would be here soon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the situation?
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have him confined, but he barricaded the door.  It shouldn't be long for us to subdue him.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Excellent.  That's what I like to hear.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: It's taking too long.  Send in the guards!
			boolean hasResponse1 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_guard_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have him confined, but he barricaded the door.  It shouldn't be long for us to subdue him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Excellent.  That's what I like to hear.
	if (response == "s_10")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			c_story1_4_imp_guard_action_signalStartAttack (player, npc);

			//-- NPC: Hey, what's that?  I think we're being attacked!
			string_id message = new string_id (c_stringFile, "s_12");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's taking too long.  Send in the guards!
	if (response == "s_14")
	{
		doAnimationAction (player, "point_away");

		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "gesticulate_wildly");

			c_story1_4_imp_guard_action_signalStartAttack (player, npc);

			//-- NPC: Hey, what's that?  I think we're being attacked!
			string_id message = new string_id (c_stringFile, "s_12");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_guard_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Report!!  What did you say?!  He's gotten away? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happened?
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_guard_action_facePlayer (player, npc);

			//-- NPC: My guards are reporting that the attack was a diversion and that the pilot is gone!  While we were busy, another group of Rebels smuggled him out!  This is a disaster! 
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Calm down, I think I know of someone that can tell me where he is going.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No wonder you aren't in the Navy.  You always need a Plan B.
			boolean hasResponse1 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_guard_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My guards are reporting that the attack was a diversion and that the pilot is gone!  While we were busy, another group of Rebels smuggled him out!  This is a disaster! 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Calm down, I think I know of someone that can tell me where he is going.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			//-- NPC: You do?  Who?
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm going to have a chat with a rebel named Wolff Kalos.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No wonder you aren't in the Navy.  You always need a Plan B.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			//-- NPC: What's Plan B? 
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm going to have a chat with a rebel named Wolff Kalos.
			boolean hasResponse0 = false;
			if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_guard_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You do?  Who?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm going to have a chat with a rebel named Wolff Kalos.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_guard_action_signalGuardDone (player, npc);

			//-- NPC: Good luck with that!
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_story1_4_imp_guard_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What's Plan B? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm going to have a chat with a rebel named Wolff Kalos.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			c_story1_4_imp_guard_action_signalGuardDone (player, npc);

			//-- NPC: Good luck with that!
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_story1_4_imp_guard");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Head Guard");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Head Guard");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_story1_4_imp_guard");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_story1_4_imp_guard_condition_onQuestBeforeAttack (player, npc))
	{
		//-- NPC: I'm glad to see you, %TU.  Officer M'kae said that you would be here soon.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is the situation?
		boolean hasResponse0 = false;
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "c_story1_4_imp_guard", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_guard_condition_onQuestAfterAttack (player, npc))
	{
		doAnimationAction (npc, "gesticulate_wildly");

		//-- NPC: Report!!  What did you say?!  He's gotten away? 
		string_id message = new string_id (c_stringFile, "s_16");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What happened?
		boolean hasResponse0 = false;
		if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_18");

			utils.setScriptVar (player, "conversation.c_story1_4_imp_guard.branchId", 4);

			npcStartConversation (player, npc, "c_story1_4_imp_guard", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_guard_condition_doneWithGuard (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		//-- NPC: This is such a mess. Go talk to whomever you need to.
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_story1_4_imp_guard_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm sorry, I'm very busy right now.
		string_id message = new string_id (c_stringFile, "s_36");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_story1_4_imp_guard")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

	if (branchId == 1 && c_story1_4_imp_guard_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_story1_4_imp_guard_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_story1_4_imp_guard_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_story1_4_imp_guard_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_story1_4_imp_guard_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && c_story1_4_imp_guard_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_story1_4_imp_guard.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

