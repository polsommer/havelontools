// ======================================================================
//
// collections_ice_cream_part_one.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/collections_ice_cream_part_one";

// ======================================================================
// Script Conditions
// ======================================================================

boolean collections_ice_cream_part_one_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean collections_ice_cream_part_one_condition_hasActiveTask (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, "chapter9_ice_cream"))
		return groundquests.isTaskActive(player, "chapter9_ice_cream", "meet_hunde_decan");
		
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void collections_ice_cream_part_one_action_signalNextTask (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "col_fried_icecream_part_01", 1);
	groundquests.sendSignal(player, "meet_hunde_decan"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int collections_ice_cream_part_one_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm a tired old man living the simple life.  How are you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm fine.  I found this fryer...
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wow.  Where did you find that old thing?  Talk about old.  I'd be surprised if that still works.
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It doesn't.  Can you help me fix it?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_one.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_one.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_one_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wow.  Where did you find that old thing?  Talk about old.  I'd be surprised if that still works.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It doesn't.  Can you help me fix it?
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh no.  I'm no repair man. Oh but look.  You can probably still use this fryer basket.  It belongs to the fryer anyway.  I was just using it as a waste basket anyway.
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Gee...thanks.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_one.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_one.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_one_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh no.  I'm no repair man. Oh but look.  You can probably still use this fryer basket.  It belongs to the fryer anyway.  I was just using it as a waste basket anyway.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Gee...thanks.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
		{
			collections_ice_cream_part_one_action_signalNextTask (player, npc);

			//-- NPC: You know what?  You can go see Amyva.  She's an acquaintance of mine and used to work with fryers just like this one.  I'll put her location in your datapad.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.collections_ice_cream_part_one.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.collections_ice_cream_part_one");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.collections_ice_cream_part_one");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (collections_ice_cream_part_one_condition_hasActiveTask (player, npc))
	{
		//-- NPC: I'm a tired old man living the simple life.  How are you?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm fine.  I found this fryer...
		boolean hasResponse0 = false;
		if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			utils.setScriptVar (player, "conversation.collections_ice_cream_part_one.branchId", 1);

			npcStartConversation (player, npc, "collections_ice_cream_part_one", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (collections_ice_cream_part_one_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm a tired old man living the simple life.  Always glad to say 'Hi' to travelers.  Be careful out there.
		string_id message = new string_id (c_stringFile, "s_17");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "collections_ice_cream_part_one")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.collections_ice_cream_part_one.branchId");

	if (branchId == 1 && collections_ice_cream_part_one_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && collections_ice_cream_part_one_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && collections_ice_cream_part_one_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.collections_ice_cream_part_one.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

