// ======================================================================
//
// house_packup_reward_npc.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.chat;
include library.conversation;
include library.player_structure;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/house_packup_reward_npc";

// ======================================================================
// Script Conditions
// ======================================================================

boolean house_packup_reward_npc_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean house_packup_reward_npc_condition_hasPoints (obj_id player, obj_id npc)
{
	if (hasObjVar (player, "housePackup"))
	{
		int[] packupObjVar = getIntArrayObjVar (player, "housePackup");
		
		if (packupObjVar != null && packupObjVar.length > 0)
		{
			if (packupObjVar[0] > 0)
			{
				return true;
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean house_packup_reward_npc_condition_badgeMasterRecipient (obj_id player, obj_id npc)
{
	return (badge.hasBadge (player, "house_packup_badge_master"));
}

// ----------------------------------------------------------------------

boolean house_packup_reward_npc_condition_badgeMogulRecipient (obj_id player, obj_id npc)
{
	return (badge.hasBadge (player, "house_packup_badge_mogul"));
}

// ----------------------------------------------------------------------

boolean house_packup_reward_npc_condition_badgePackupRecipient (obj_id player, obj_id npc)
{
	return (badge.hasBadge (player, "house_packup_badge"));
}

// ----------------------------------------------------------------------

boolean house_packup_reward_npc_condition_isInventoryFull (obj_id player, obj_id npc)
{
	obj_id inv = utils.getInventoryContainer(player);
	if(!isIdValid(inv) || !exists(inv))
		return true;
	if(getVolumeFree(inv) < 1)
			return true;
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void house_packup_reward_npc_action_rewardCouch (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_couch_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_couch_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardDesk (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_desk_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_desk_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardTable (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_table_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_table_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardDeskLamp (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_desk_lamp_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_desk_lamp_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardRug (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_rug_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_rug_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardRecliner (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_xeno_recliner_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_xeno_recliner_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardRebPainting (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_painting_rebel_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_painting_rebel_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardImpPainting (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_painting_imperial_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_painting_imperial_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardCle004 (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_holopet_cle004_data_cube_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_holopet_cle004_data_cube_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardIns444 (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_holopet_ins444_data_cube_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_holopet_ins444_data_cube_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardEmperorDesk (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_emperor_desk_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_emperor_desk_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardEmperorChair (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_emperor_chair_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_emperor_chair_01_01");
}

// ----------------------------------------------------------------------

void house_packup_reward_npc_action_rewardEmperorLamp (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	player_structure.housePackingPointDecrease (player);
	static_item.createNewItemFunction ("item_housepack_emperor_desk_lamp_01_01", pInv);
	CustomerServiceLog("HOUSE_PACKUP_REWARDS", player + "purchased a item_housepack_emperor_desk_lamp_01_01");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

int house_packup_reward_npc_tokenDI_availMeritPts (obj_id player, obj_id npc)
{
	return player_structure.getPlayerPackUpMeritPoints(player);
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int house_packup_reward_npc_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wrecking Crew Mogul %TU, it is my honor to be of service. Are you here to redeem even more rewards?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I sure am, what do you have in stock?
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_258");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks to the generous donations of other demolition enthusiasts and of the Affodies Crafthouse of Pure Neimoidia, this is what's currently in store.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
	if (response == "s_247")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Your current Merit value is %DI.
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, great. Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_249");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 72);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get access to the rewards again?
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.
			string_id message = new string_id (c_stringFile, "s_257");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And if it is vacant?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_272");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I was just in the neighborhood.
	if (response == "s_244")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: And you thought of little old me? How kind of you %NU. It's always a pleasure to see you.
			string_id message = new string_id (c_stringFile, "s_246");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Extraordinaire Wrecking Crew Manager %TU, it is my honor to be of service. Are you here to redeem even more rewards?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I sure am, what do you have in stock?
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_258");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks to the generous donations of other demolition enthusiasts and of the Affodies Crafthouse of Pure Neimoidia, this is what's currently in store.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
	if (response == "s_247")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Your current Merit value is %DI.
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, great. Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_249");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 72);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get access to the rewards again?
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.
			string_id message = new string_id (c_stringFile, "s_257");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And if it is vacant?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_272");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I was just in the neighborhood.
	if (response == "s_244")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: And you thought of little old me? How kind of you %NU. It's always a pleasure to see you.
			string_id message = new string_id (c_stringFile, "s_246");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Junior Wrecking Crew Worker %TU, it is good to see you again. Are you here to redeem even more rewards?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I sure am, what do you have in stock?
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_258");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks to the generous donations of other demolition enthusiasts and of the Affodies Crafthouse of Pure Neimoidia, this is what's currently in store.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
	if (response == "s_247")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Your current Merit value is %DI.
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, great. Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_249");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 72);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get access to the rewards again?
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.
			string_id message = new string_id (c_stringFile, "s_257");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And if it is vacant?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_272");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I was just in the neighborhood.
	if (response == "s_244")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: And you thought of little old me? How kind of you %NU. It's always a pleasure to see you.
			string_id message = new string_id (c_stringFile, "s_246");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great to see you %TU! Are you here to claim the rewards for your efforts?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I sure am, what do you have in stock?
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_258");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks to the generous donations of other demolition enthusiasts and of the Affodies Crafthouse of Pure Neimoidia, this is what's currently in store.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
	if (response == "s_247")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Your current Merit value is %DI.
			string_id message = new string_id (c_stringFile, "s_248");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, great. Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_249");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 72);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = house_packup_reward_npc_tokenDI_availMeritPts (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get access to the rewards again?
	if (response == "s_242")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.
			string_id message = new string_id (c_stringFile, "s_257");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And if it is vacant?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_272");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No I was just in the neighborhood.
	if (response == "s_244")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: And you thought of little old me? How kind of you %NU. It's always a pleasure to see you.
			string_id message = new string_id (c_stringFile, "s_246");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thanks to the generous donations of other demolition enthusiasts and of the Affodies Crafthouse of Pure Neimoidia, this is what's currently in store.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardEmperorDesk (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 9);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_161")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_167");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_162")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardEmperorChair (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_168");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_177");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 14);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_169");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_177")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_164")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardEmperorLamp (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 19);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_171");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_179")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_46")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardCouch (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_181");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 24);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_52")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_54");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_181")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_61")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardDesk (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_183");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 29);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_67")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_69");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_183")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_76")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardTable (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_185");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 34);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_82")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_84");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_185")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_186");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_91")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardDeskLamp (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_93");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_187");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 39);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_97")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_187")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch40 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch41 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch43 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_106")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardRug (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_108");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_189");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 44);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_112")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_189")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_121")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardRecliner (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_191");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 49);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_127")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_191")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_136")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardRebPainting (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_193");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 54);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_142")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_193")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch58 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_151")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardImpPainting (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_196");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 59);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_200")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch59 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_196")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_198");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_209")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardCle004 (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_211");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_213");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 64);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_217")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_219");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch64 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_213")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_215");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch65 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes thank you, I'm sure.
	if (response == "s_226")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			house_packup_reward_npc_action_rewardIns444 (player, npc);

			//-- NPC: Very well %TU. As always a pleasure to do business with you.
			string_id message = new string_id (c_stringFile, "s_228");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can I get another reward?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 69);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no. What were the options again?
	if (response == "s_234")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's a list of our current inventory.
			string_id message = new string_id (c_stringFile, "s_236");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch69 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well %TU. As always a pleasure to do business with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I get another reward?
	if (response == "s_230")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly.
			string_id message = new string_id (c_stringFile, "s_232");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Certainly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a list of our current inventory.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your current Merit value is %DI.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, great. Can I get another reward?
	if (response == "s_249")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course.
			string_id message = new string_id (c_stringFile, "s_250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Emperor's Senate Office Desk
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Emperor's Senate Office Chair
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Emperor's Senate Office Lamp
			boolean hasResponse2 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 'Xeno Line' Couch
			boolean hasResponse3 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk
			boolean hasResponse4 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 'Xeno Line' Table
			boolean hasResponse5 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 'Xeno Line' Desk Lamp
			boolean hasResponse6 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: 'Xeno Line' Rug
			boolean hasResponse7 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: 'Xeno Line' Recliner
			boolean hasResponse8 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: 'The War Phoenix' Painting
			boolean hasResponse9 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: 'Birth of a Death Star' Painting
			boolean hasResponse10 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: CLE-004 Holo-pet Data Cube
			boolean hasResponse11 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			//-- PLAYER: INS-444 Holo-pet Data Cube
			boolean hasResponse12 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse12 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_71");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_131");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_146");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_204");

				if (hasResponse12)
					responses [responseIndex++] = new string_id (c_stringFile, "s_221");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch73 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Desk
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_157");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_161");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Chair
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_158");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 13);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Emperor's Senate Office Lamp
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_260");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_164");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 18);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Couch
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_261");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 23);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_59");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 28);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Table
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_263");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 33);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Desk Lamp
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_89");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 38);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Rug
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_265");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_104");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 43);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Xeno Line' Recliner
	if (response == "s_116")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_121");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 48);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'The War Phoenix' Painting
	if (response == "s_131")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_267");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 53);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 'Birth of a Death Star' Painting
	if (response == "s_146")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_268");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_149");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 58);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: CLE-004 Holo-pet Data Cube
	if (response == "s_204")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_269");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_217");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 63);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: INS-444 Holo-pet Data Cube
	if (response == "s_221")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition_isInventoryFull (player, npc))
		{
			//-- NPC: You seem to be carrying a lot of stuff in your pack. Maybe you should come back when you have more room.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent choice %NU. Are you sure though? We have many other fine choices.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes thank you, I'm sure.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition_hasPoints (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no. What were the options again?
			boolean hasResponse1 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 68);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good day to you citizen and welcome to the reward store for the Galactic Vacant Building Demolishing Movement. Here at G.V.B.D.M we reward those that like blowing up empty building as much as we do and that's why I'm here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get access to these rewards?
	if (response == "s_254")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.
			string_id message = new string_id (c_stringFile, "s_257");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And if it is vacant?
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_272");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. Well enjoy your day then.
	if (response == "s_280")
	{
		doAnimationAction (player, "goodbye");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: You as well Citizen.
			string_id message = new string_id (c_stringFile, "s_282");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch76 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A fine question and one to which I luckily have the answer. As you travel around the different planets in the Galaxy you will come across buildings owned by citizens as yourself. If you take a close look at the sign outside the building, you will be able to tell if the house is vacant or not.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And if it is vacant?
	if (response == "s_272")
	{
		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then you have the option to call in one of our demolishing space crafts that are always on stand by in the atmosphere of most larger planets in the Galaxy. After they have demolished the building, you can return to me and choose rewards for your assistance. If you go even further and help us a lot, you may even be awarded a title.
			string_id message = new string_id (c_stringFile, "s_274");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see, thank you for the explanation.
			boolean hasResponse0 = false;
			if (house_packup_reward_npc_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_276");

				utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 77);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int house_packup_reward_npc_handleBranch77 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Then you have the option to call in one of our demolishing space crafts that are always on stand by in the atmosphere of most larger planets in the Galaxy. After they have demolished the building, you can return to me and choose rewards for your assistance. If you go even further and help us a lot, you may even be awarded a title.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see, thank you for the explanation.
	if (response == "s_276")
	{
		doAnimationAction (player, "goodbye");

		//-- [NOTE] 
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow2");

			//-- NPC: My pleasure citizen, have a splendid day.
			string_id message = new string_id (c_stringFile, "s_278");
			utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.house_packup_reward_npc");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.house_packup_reward_npc");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (house_packup_reward_npc_condition_badgeMogulRecipient (player, npc))
	{
		doAnimationAction (npc, "bow5");

		doAnimationAction (player, "pose_proudly");

		//-- NPC: Wrecking Crew Mogul %TU, it is my honor to be of service. Are you here to redeem even more rewards?
		string_id message = new string_id (c_stringFile, "s_172");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I sure am, what do you have in stock?
		boolean hasResponse0 = false;
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
		boolean hasResponse1 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: How do I get access to the rewards again?
		boolean hasResponse2 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No I was just in the neighborhood.
		boolean hasResponse3 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_247");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_242");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_244");

			utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "house_packup_reward_npc", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (house_packup_reward_npc_condition_badgeMasterRecipient (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "greet");

		//-- NPC: Extraordinaire Wrecking Crew Manager %TU, it is my honor to be of service. Are you here to redeem even more rewards?
		string_id message = new string_id (c_stringFile, "s_152");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I sure am, what do you have in stock?
		boolean hasResponse0 = false;
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
		boolean hasResponse1 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: How do I get access to the rewards again?
		boolean hasResponse2 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No I was just in the neighborhood.
		boolean hasResponse3 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_247");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_242");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_244");

			utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "house_packup_reward_npc", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (house_packup_reward_npc_condition_badgePackupRecipient (player, npc))
	{
		doAnimationAction (npc, "wave2");

		doAnimationAction (player, "bow");

		//-- NPC: Junior Wrecking Crew Worker %TU, it is good to see you again. Are you here to redeem even more rewards?
		string_id message = new string_id (c_stringFile, "s_173");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I sure am, what do you have in stock?
		boolean hasResponse0 = false;
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
		boolean hasResponse1 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: How do I get access to the rewards again?
		boolean hasResponse2 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No I was just in the neighborhood.
		boolean hasResponse3 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_247");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_242");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_244");

			utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "house_packup_reward_npc", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (house_packup_reward_npc_condition_hasPoints (player, npc))
	{
		doAnimationAction (npc, "bow2");

		doAnimationAction (player, "greet");

		//-- NPC: Great to see you %TU! Are you here to claim the rewards for your efforts?
		string_id message = new string_id (c_stringFile, "s_12");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I sure am, what do you have in stock?
		boolean hasResponse0 = false;
		if (house_packup_reward_npc_condition_hasPoints (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: How many merit points do I currently have to use toward claiming rewards?
		boolean hasResponse1 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: How do I get access to the rewards again?
		boolean hasResponse2 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: No I was just in the neighborhood.
		boolean hasResponse3 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_247");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_242");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_244");

			utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "house_packup_reward_npc", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (house_packup_reward_npc_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "bow2");

		doAnimationAction (player, "greet");

		//-- NPC: Good day to you citizen and welcome to the reward store for the Galactic Vacant Building Demolishing Movement. Here at G.V.B.D.M we reward those that like blowing up empty building as much as we do and that's why I'm here.
		string_id message = new string_id (c_stringFile, "s_252");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: How do I get access to these rewards?
		boolean hasResponse0 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I see. Well enjoy your day then.
		boolean hasResponse1 = false;
		if (house_packup_reward_npc_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_254");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_280");

			utils.setScriptVar (player, "conversation.house_packup_reward_npc.branchId", 75);

			npcStartConversation (player, npc, "house_packup_reward_npc", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "house_packup_reward_npc")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.house_packup_reward_npc.branchId");

	if (branchId == 1 && house_packup_reward_npc_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && house_packup_reward_npc_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && house_packup_reward_npc_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && house_packup_reward_npc_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && house_packup_reward_npc_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && house_packup_reward_npc_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && house_packup_reward_npc_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && house_packup_reward_npc_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && house_packup_reward_npc_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && house_packup_reward_npc_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && house_packup_reward_npc_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && house_packup_reward_npc_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && house_packup_reward_npc_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && house_packup_reward_npc_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && house_packup_reward_npc_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && house_packup_reward_npc_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && house_packup_reward_npc_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && house_packup_reward_npc_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && house_packup_reward_npc_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && house_packup_reward_npc_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && house_packup_reward_npc_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && house_packup_reward_npc_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && house_packup_reward_npc_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && house_packup_reward_npc_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && house_packup_reward_npc_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && house_packup_reward_npc_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && house_packup_reward_npc_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && house_packup_reward_npc_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && house_packup_reward_npc_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && house_packup_reward_npc_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && house_packup_reward_npc_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 40 && house_packup_reward_npc_handleBranch40 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 41 && house_packup_reward_npc_handleBranch41 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 43 && house_packup_reward_npc_handleBranch43 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && house_packup_reward_npc_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && house_packup_reward_npc_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && house_packup_reward_npc_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && house_packup_reward_npc_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && house_packup_reward_npc_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && house_packup_reward_npc_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && house_packup_reward_npc_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && house_packup_reward_npc_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && house_packup_reward_npc_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && house_packup_reward_npc_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && house_packup_reward_npc_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 58 && house_packup_reward_npc_handleBranch58 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 59 && house_packup_reward_npc_handleBranch59 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && house_packup_reward_npc_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && house_packup_reward_npc_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && house_packup_reward_npc_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 64 && house_packup_reward_npc_handleBranch64 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 65 && house_packup_reward_npc_handleBranch65 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && house_packup_reward_npc_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && house_packup_reward_npc_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 69 && house_packup_reward_npc_handleBranch69 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && house_packup_reward_npc_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && house_packup_reward_npc_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && house_packup_reward_npc_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 73 && house_packup_reward_npc_handleBranch73 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && house_packup_reward_npc_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 76 && house_packup_reward_npc_handleBranch76 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 77 && house_packup_reward_npc_handleBranch77 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.house_packup_reward_npc.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

