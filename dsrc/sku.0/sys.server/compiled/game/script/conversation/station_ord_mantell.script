// ======================================================================
//
// station_ord_mantell.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.space_combat;
include library.space_crafting;
include library.space_quest;
include library.space_transition;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_ord_mantell";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_ord_mantell_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_ord_mantell_condition_isTooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	location stationLoc = getLocation(npc);
	location playerLoc = getLocation(space_transition.getContainingShip(player));
return ( getDistance(stationLoc, playerLoc) > space_transition.STATION_COMM_MAX_DISTANCE );}

// ----------------------------------------------------------------------

boolean station_ord_mantell_condition_canAfford100 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

boolean station_ord_mantell_condition_canAfford25 (obj_id player, obj_id npc)
{
	return ( space_crafting.canAffordShipRepairs(player, npc, .25f) && space_crafting.isDamaged( player ) );
}

// ----------------------------------------------------------------------

boolean station_ord_mantell_condition_canAfford50 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

boolean station_ord_mantell_condition_canAfford75 (obj_id player, obj_id npc)
{
	return space_crafting.canAffordShipRepairs(player, npc, .75f);
}

// ======================================================================
// Script Actions
// ======================================================================

void station_ord_mantell_action_land (obj_id player, obj_id npc)
{
	location stationLoc = getLocation(npc);
	location playerLoc = getLocation(space_transition.getContainingShip(player));
	float fltDistance = getDistance(stationLoc, playerLoc);
	if (fltDistance > 350.0f)
	{
		string_id strSpam = new string_id("space/space_interaction", "too_far");
		sendSystemMessage(player, strSpam);

	}
	else
	{
		npe.movePlayerFromOrdMantellSpaceToSharedStation(player);
		groundquests.sendSignal(player, "leave_station");
	}
}

// ----------------------------------------------------------------------

void station_ord_mantell_action_fix100 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

void station_ord_mantell_action_fix50 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .50f);
}

// ----------------------------------------------------------------------

void station_ord_mantell_action_fix75 (obj_id player, obj_id npc)
{
	space_crafting.doStationToShipRepairs(player, npc, .75f);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

int station_ord_mantell_tokenDI_getStationCost100 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, 1.0f);
}

// ----------------------------------------------------------------------

int station_ord_mantell_tokenDI_getStationCost25 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .25f);
}

// ----------------------------------------------------------------------

int station_ord_mantell_tokenDI_getStationCost50 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .50f);
}

// ----------------------------------------------------------------------

int station_ord_mantell_tokenDI_getStationCost75 (obj_id player, obj_id npc)
{
	return space_crafting.getStationRepairCost(player, npc, .75f);
}

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_ord_mantell_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is Tansarii Point Station control, please state your business.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Requesting permission to land.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			station_ord_mantell_action_land (player, npc);

			//-- NPC: Roger. You are cleared to land. Please make your way to the first available hangar.
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Requesting repairs.
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Repair a little of the damage.
			boolean hasResponse0 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Repair half the damage.
			boolean hasResponse1 = false;
			if (station_ord_mantell_condition_canAfford50 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Repair most of the damage.
			boolean hasResponse2 = false;
			if (station_ord_mantell_condition_canAfford75 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Repair all of the damage.
			boolean hasResponse3 = false;
			if (station_ord_mantell_condition_canAfford100 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Nevermind.
			boolean hasResponse4 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_88");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_112");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 4);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_ord_mantell_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger, %TU.  We are a fully functional station and can provide you with whatever level of repairs that are necessary.  Please indicate your status.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair a little of the damage.
	if (response == "s_88")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger, %TU.  For a fee of %DI credits we'll repair just enough to get you underway.  Please confirm.
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do it.
			boolean hasResponse0 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 5);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost25 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost25 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair half the damage.
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Affirmative, %TU.  Repairing half your current damage will cost %DI credits. Are you ready to transfer the funds?
			string_id message = new string_id (c_stringFile, "s_102");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost50 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost50 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair most of the damage.
	if (response == "s_112")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Roger that, %TU.  We can repair three-fourths of your ship's damage at a fee of %DI credits.  Are you ready to transfer the funds?
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_116");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_120");

				utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 11);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost75 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost75 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Repair all of the damage.
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: A complete repair of your ship will cost %DI credits, %TU.  Are you sure?
			string_id message = new string_id (c_stringFile, "s_126");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (station_ord_mantell_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 14);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost100 (player, npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);
				pp.digitInteger = station_ord_mantell_tokenDI_getStationCost100 (player, npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nevermind.
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Copy that, %TU.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_ord_mantell_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger, %TU.  For a fee of %DI credits we'll repair just enough to get you underway.  Please confirm.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do it.
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: 25% of your ship damage has been fixed. Please clear the area for other traffic.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please clear the area for other traffic.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_98");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_ord_mantell_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Affirmative, %TU.  Repairing half your current damage will cost %DI credits. Are you ready to transfer the funds?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_104")
	{
		station_ord_mantell_action_fix50 (player, npc);

		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Received, %TU.  Half of your ship damage has been fixed.  You are clear to leave the area.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_106");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please clear the area for other traffic.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_110");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_ord_mantell_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Roger that, %TU.  We can repair three-fourths of your ship's damage at a fee of %DI credits.  Are you ready to transfer the funds?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_116")
	{
		station_ord_mantell_action_fix75 (player, npc);

		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Funds received, %TU... Repairs complete.  You are clear to leave the station.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_118");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_120")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please clear the area for other traffic.  Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_122");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_ord_mantell_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A complete repair of your ship will cost %DI credits, %TU.  Are you sure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_128")
	{
		station_ord_mantell_action_fix100 (player, npc);

		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: Repairs complete!  You are clear to leave Tansarii Point Station, out.
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish, %TU.  Please leave the area to make room for incoming traffic.  Out.
			string_id message = new string_id (c_stringFile, "s_134");
			utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.station_ord_mantell");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_ord_mantell");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_ord_mantell_condition_isTooFar (player, npc))
	{
		//-- NPC: You are too far out for us to get a lock on you pilot.  Come in closer.
		string_id message = new string_id (c_stringFile, "s_70");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_ord_mantell_condition__defaultCondition (player, npc))
	{
		//-- NPC: This is Tansarii Point Station control, please state your business.
		string_id message = new string_id (c_stringFile, "s_73");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Requesting permission to land.
		boolean hasResponse0 = false;
		if (station_ord_mantell_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Requesting repairs.
		boolean hasResponse1 = false;
		if (station_ord_mantell_condition_canAfford25 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_76");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_84");

			utils.setScriptVar (player, "conversation.station_ord_mantell.branchId", 2);

			npcStartConversation (player, npc, "station_ord_mantell", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_ord_mantell")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_ord_mantell.branchId");

	if (branchId == 2 && station_ord_mantell_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && station_ord_mantell_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && station_ord_mantell_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && station_ord_mantell_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && station_ord_mantell_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && station_ord_mantell_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_ord_mantell.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

