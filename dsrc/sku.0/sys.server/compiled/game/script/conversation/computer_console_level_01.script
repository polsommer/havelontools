// ======================================================================
//
// computer_console_level_01.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/computer_console_level_01";

// ======================================================================
// Script Conditions
// ======================================================================

boolean computer_console_level_01_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_hasFixedAll (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_quest_facility_01", "reactivateMainframePower")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_01", "reconfigureSystems");
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_consoleInquisitorKey5 (obj_id player, obj_id npc)
{
//sendSystemMessageTestingOnly(player, "inquisitor");
	return groundquests.isQuestActive(player, "outbreak_quest_facility_01")
	&& (groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_imperial_05") 
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_rebel_05")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_neutral_05"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_mainPowerStillOff (obj_id player, obj_id npc)
{
	//sendSystemMessageTestingOnly(player, "mainPowerStillOff");
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
	{
		//sendSystemMessageTestingOnly(player, "no scriptvar");
		return true;
	}
	boolean mainPwr = utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
	//sendSystemMessageTestingOnly(player, "status: "+mainPwr);
	if(mainPwr)
	{
		//sendSystemMessageTestingOnly(player, "power on returning false");
		return false;  //the power is now on, return false
	}	
	return true;
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_mainPwrOn (obj_id player, obj_id npc)
{
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
	{
		return false;
	}
	return utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_hasReconfigured (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_quest_facility_01", "findCryogenicsLaboratoryConsole")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_facility_01");
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_dmgControlOnline (obj_id player, obj_id npc)
{
	if(!utils.hasScriptVar(player, "consoleMiniGame.dmgCtl"))
		return false;
		
	return utils.getBooleanScriptVar(player, "consoleMiniGame.dmgCtl");
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_commSysOnline (obj_id player, obj_id npc)
{
	if(!utils.hasScriptVar(player, "consoleMiniGame.commSys"))
	{
		return false;
	}
	return utils.getBooleanScriptVar(player, "consoleMiniGame.commSys");
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_consoleOfficerKey1 (obj_id player, obj_id npc)
{
	return	groundquests.isQuestActive(player, "outbreak_quest_facility_01")
	&& (groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_imperial_01") 
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_rebel_01")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_neutral_01"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_backUpSysOnline (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_consoleScoutKey4 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "outbreak_quest_facility_01")
	&& (groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_imperial_04") 
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_rebel_04")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_neutral_04"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_consoleStormKey3 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "outbreak_quest_facility_01")
	&& (groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_imperial_03") 
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_rebel_03")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_neutral_03"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_consoleScientistKey2 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "outbreak_quest_facility_01")
	&& (groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_imperial_02") 
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_rebel_02")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_administrative_building_neutral_02"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_hasDeletedQuest (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "outbreak_quest_facility_01")
	&& !groundquests.isQuestActiveOrComplete(player, "outbreak_quest_facility_02"));
}

// ----------------------------------------------------------------------

boolean computer_console_level_01_condition_hasntFixedConsoles (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_quest_facility_01", "findAConsole")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_01", "waitForRepairTasks")
	|| groundquests.isTaskActive(player, "outbreak_quest_facility_01", "repairWaitForTasks")
	;
}

// ======================================================================
// Script Actions
// ======================================================================

void computer_console_level_01_action_sendSignalFixStuff (obj_id player, obj_id npc)
{
	if(groundquests.isTaskActive(player, "outbreak_quest_facility_01", "findAConsole"))
	{
		groundquests.sendSignal(player, "hasFoundAConsole"); 
	}
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnMainPwrOn (obj_id player, obj_id npc)
{

	utils.setScriptVar(player, "consoleMiniGame.mainPower", true);
	sendSystemMessage(player, SID_MAIN_PWR_ON);
	if(groundquests.isTaskActive(player, "outbreak_quest_facility_01", "reactivateMainframePower"))
	{
		groundquests.sendSignal(player, "mainframePowerActivated"); 
	}
	else
	{	
		computer_console_level_01_action_checkForCorrectConfig(player,npc);	
	}
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnBkUpOff (obj_id player, obj_id npc)
{
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}
	
	boolean mainPwr = utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
	if(!mainPwr)
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}
	if(!utils.hasScriptVar(player, "consoleMiniGame.commSys"))
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}
		
	if(!utils.getBooleanScriptVar(player, "consoleMiniGame.commSys"))
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}
	if(!utils.hasScriptVar(player, "consoleMiniGame.dmgCtl"))
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}
	if(!utils.getBooleanScriptVar(player, "consoleMiniGame.dmgCtl"))
	{
		sendSystemMessage(player, SID_ACCESS_DENIED);
		return;
	}		
	utils.setScriptVar(player, "consoleMiniGame.bkUp", false);
	sendSystemMessage(player, SID_BKUP_PWR_OFF);
	computer_console_level_01_action_checkForCorrectConfig(player,npc);
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnCommSysOn (obj_id player, obj_id npc)
{
	if(utils.hasScriptVar(player, "consoleMiniGame.bkUp") && !utils.getBooleanScriptVar(player, "consoleMiniGame.bkUp"))
	{
		sendSystemMessage(player, SID_NO_BKUP_PWR);
		return;
	}
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
	{
		//sendSystemMessageTestingOnly(player, "shows no main scriptvar");	
		sendSystemMessage(player, SID_NOT_ENOUGH_POWER);
		return;
	}
	
	boolean mainPwr = utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
	if(!mainPwr)
	{
		//sendSystemMessageTestingOnly(player, "shows main off");	
		sendSystemMessage(player, SID_NOT_ENOUGH_POWER);
		return;
	}
	
	utils.setScriptVar(player, "consoleMiniGame.commSys", true);
	sendSystemMessage(player, SID_COMM_SYS_ON);
	computer_console_level_01_action_checkForCorrectConfig(player,npc);	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnDmgCtlOn (obj_id player, obj_id npc)
{
	if(utils.hasScriptVar(player, "consoleMiniGame.bkUp") && !utils.getBooleanScriptVar(player, "consoleMiniGame.bkUp"))
	{
		sendSystemMessage(player, SID_NO_BKUP_PWR);
		return;
	}
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
	{
		//sendSystemMessageTestingOnly(player, "shows no main scriptvar");		
		sendSystemMessage(player, SID_NOT_ENOUGH_POWER);
		return;
	}
	
	boolean mainPwr = utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
	if(!mainPwr)
	{
		//sendSystemMessageTestingOnly(player, "shows main off");
		sendSystemMessage(player, SID_NOT_ENOUGH_POWER);
		return;
	}
	
	utils.setScriptVar(player, "consoleMiniGame.dmgCtl", true);
	sendSystemMessage(player, SID_DMG_CTRL_SYS_ON);
	computer_console_level_01_action_checkForCorrectConfig(player,npc);	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnMainPwrOff (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "consoleMiniGame.mainPower", false);
	sendSystemMessage(player, SID_MAIN_PWR_OFF);	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnBkUpOn (obj_id player, obj_id npc)
{
	//sendSystemMessage(player, SID_ACCESS_DENIED);
	//return;
	utils.setScriptVar(player, "consoleMiniGame.bkUp", true);
	sendSystemMessage(player, SID_BKUP_PWR_ON);	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnCommSysOff (obj_id player, obj_id npc)
{
	//sendSystemMessage(player, SID_ACCESS_DENIED);
	//return;
	
	utils.setScriptVar(player, "consoleMiniGame.commSys", false);
	sendSystemMessage(player, SID_COMM_SYS_OFF);	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_turnDmgCtlOff (obj_id player, obj_id npc)
{
	sendSystemMessage(player, SID_ACCESS_DENIED);
	return;
	//utils.setScriptVar(player, "consoleMiniGame.dmgCtl", false);
	//sendSystemMessage(player, SID_DMG_CTRL_SYS_OFF);
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_checkForCorrectConfig (obj_id player, obj_id npc)
{
	//sendSystemMessageTestingOnly(player, "checkForCorrectConfig");
	if(!groundquests.isTaskActive(player, "outbreak_quest_facility_01", "reconfigureSystems"))
		return;
	if(!utils.hasScriptVar(player, "consoleMiniGame.bkUp"))
		return;
	if(!utils.hasScriptVar(player, "consoleMiniGame.mainPower"))
		return;
	if(!utils.hasScriptVar(player, "consoleMiniGame.dmgCtl"))
		return;			
	if(!utils.hasScriptVar(player, "consoleMiniGame.commSys"))
		return;	


	boolean mainPwr = utils.getBooleanScriptVar(player, "consoleMiniGame.mainPower");
	if(!mainPwr) //if false means main pwr still off
		return;	
	//sendSystemMessageTestingOnly(player, "mainPwr on");	
	
	//sendSystemMessageTestingOnly(player, "has all scriptvars");			
	boolean bkUp = utils.getBooleanScriptVar(player, "consoleMiniGame.bkUp");
	if(bkUp) //if true means back up is still on
		return;	

	//sendSystemMessageTestingOnly(player, "bkUp off");
	
	boolean dmgCtrl = utils.getBooleanScriptVar(player, "consoleMiniGame.dmgCtl");
	if(!dmgCtrl) //if false means system still not on
		return;	

	//sendSystemMessageTestingOnly(player, "dmgCtrl on");		
	boolean commSys = utils.getBooleanScriptVar(player, "consoleMiniGame.commSys");
	if(!commSys) //if false means system still not on
		return;	
	//sendSystemMessageTestingOnly(player, "commSys on");		
	groundquests.sendSignal(player, "systemsReconfigured"); 	
	
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_signalFoundCryogenics (obj_id player, obj_id npc)
{
	if(!groundquests.isTaskActive(player, "outbreak_quest_facility_01", "findCryogenicsLaboratoryConsole"))
		return;
	groundquests.sendSignal(player, "foundCryogenicsLaboratoryConsole"); 
}

// ----------------------------------------------------------------------

void computer_console_level_01_action_fixDeletedQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_quest_facility_02"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string computer_console_level_01_tokenTO_tokenTO0001 (obj_id player, obj_id npc)
{
	if(computer_console_level_01_condition_consoleInquisitorKey5(player, npc))
	{
		//sendSystemMessageTestingOnly(player, "consoleInquisitorKey5");
		return "Inquisitor Maxon Starr";	
	}
	else if(computer_console_level_01_condition_consoleOfficerKey1(player,npc))
	{
		//sendSystemMessageTestingOnly(player, "consoleOfficerKey1");	
		return "Captain Jol Lohgun";
	}
	else if(computer_console_level_01_condition_consoleScientistKey2(player,npc))
	{
		//sendSystemMessageTestingOnly(player, "consoleScientistKey2");	
		return "Dr. Cal Varss";	
	}
	else if(computer_console_level_01_condition_consoleScoutKey4(player,npc))
	{
		//sendSystemMessageTestingOnly(player, "consoleScoutKey4");	
		return "FC-942";	
	}
		//sendSystemMessageTestingOnly(player, "consoleStormKey3");	
	return "TK-348";		
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int computer_console_level_01_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Key authorization detected. Hello, %TO. Please select option.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Select Personnel Type

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to root directory
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Security
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Security Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Science Staff
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Science Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Support Staff
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Support Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Redirecting

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Security Select Name/Designation:

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Redirecting

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to root directory
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Security
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Security Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Science Staff
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Science Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Support Staff
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Support Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Lieutenant - Security Officer

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Prison Guard - Live prisoner escort (topside)

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Lieutenant - Security Officer

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Lieutenant - Security Officer

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Prison Guard - Live prisoner escort (topside)

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Lieutenant - Security Officer

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: BT-413
	if (response == "s_104")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 12, Level 1
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Flinn Boster
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_138");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Torkin Doha
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Captain Lenders Ennada
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Jecht Eris
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_143");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: FR-351
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Roving Inspection and Patrol Duty, Level 3
			string_id message = new string_id (c_stringFile, "s_139");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Derin Hans
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Prison Guard - Live prisoner escort (topside)
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: DS-378
	if (response == "s_105")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 22, Level 2
			string_id message = new string_id (c_stringFile, "s_136");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-108
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 3, Level 1
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: TK-217 
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Stormtrooper - Assigned Security Post 32, Level 2
			string_id message = new string_id (c_stringFile, "s_113");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lieutenant Arwen Zherooh
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Lieutenant - Security Officer
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Science Staff Select Name/Designation:

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Redirecting

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to root directory
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Security
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Security Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Science Staff
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Science Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Support Staff
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Support Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Epidemiologist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Microbiologist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Clinical Biochemist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Microbiologist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Surgical Pathologist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Molecular Pathologist - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_163")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Ziris Enz
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Epidemiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_114");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Pram Dramango
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_119");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Griffax Jin
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chief Virologist - Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_68");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Piodas Ray
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Clinical Biochemist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_115");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Nomi Rhane
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Microbiologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Tare Sal
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Surgical Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_117");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Dr. Stane Tritan
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Molecular Pathologist - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_123");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Support Staff Select Name/Designation:

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Redirecting

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to root directory
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Security
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Imperial Security Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_91");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: BT-413
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Lieutenant Flinn Boster
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Torkin Doha
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Captain Lenders Ennada
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Lieutenant Jecht Eris
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: FR-351
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Derin Hans
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: DS-378
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			//-- PLAYER: TK-108
			boolean hasResponse9 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse9 = true;
			}

			//-- PLAYER: TK-217 
			boolean hasResponse10 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse10 = true;
			}

			//-- PLAYER: Lieutenant Arwen Zherooh
			boolean hasResponse11 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse11 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_104");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_109");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_105");

				if (hasResponse9)
					responses [responseIndex++] = new string_id (c_stringFile, "s_106");

				if (hasResponse10)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse11)
					responses [responseIndex++] = new string_id (c_stringFile, "s_110");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Science Staff
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Science Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_49");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Dr. Ziris Enz
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Dr. Pram Dramango
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Dr. Griffax Jin
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Dr. Piodas Ray
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Dr. Nomi Rhane
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Dr. Tare Sal
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Dr. Stane Tritan
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Support Staff
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Support Staff Select Name/Designation:
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lab Assistant - Level 2, Research Laboratory

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Creature Handler - Level 3, Holding Areas

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Creature Handler - Level 3, Holding Areas

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Back to Personnel Type
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Redirecting
			string_id message = new string_id (c_stringFile, "s_166");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pit Cornburr
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Maintenance - Assigned to Level 3, Maintenance Room.
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Marpo Glenfik
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Assigned to Level 2, Cryogenics Laboratory
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Skrat Horle
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lab Assistant - Level 2, Research Laboratory
			string_id message = new string_id (c_stringFile, "s_127");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yerkys Neir
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_128");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tyris Santorini
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Creature Handler - Level 3, Holding Areas
			string_id message = new string_id (c_stringFile, "s_145");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to Personnel Type
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Pit Cornburr
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Marpo Glenfik
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Skrat Horle
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Yerkys Neir
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Tyris Santorini
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_99");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: OFFLINE

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Select Department:

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Creature Holding Cells
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 3
			string_id message = new string_id (c_stringFile, "s_149");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Cryogenics Laboratory
	if (response == "s_84")
	{
		computer_console_level_01_action_signalFoundCryogenics (player, npc);

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_signalFoundCryogenics (player, npc);

			//-- NPC: Level 2
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maintenance
	if (response == "s_97")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 3
			string_id message = new string_id (c_stringFile, "s_150");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Research Laboratory
	if (response == "s_95")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 2
			string_id message = new string_id (c_stringFile, "s_146");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Security Offices
	if (response == "s_98")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 1
			string_id message = new string_id (c_stringFile, "s_151");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sickbay
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 2
			string_id message = new string_id (c_stringFile, "s_148");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Systems Control
	if (response == "s_152")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 1
			string_id message = new string_id (c_stringFile, "s_154");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Storage 2
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 2
			string_id message = new string_id (c_stringFile, "s_162");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Storage 3
	if (response == "s_168")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Level 3
			string_id message = new string_id (c_stringFile, "s_170");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Level 2

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: OFFLINE

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch46 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No further configuration needed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: System damaged or no power.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Low power

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Power On

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Power Off

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No further configuration needed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: System damaged or no power.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch53 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Low power

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Power On

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Power Off

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No further configuration needed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Power loss detected, main power offline.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch58 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Main Power On

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch59 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Main Power Off

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No further configuration needed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Critical System. Access Denied

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch62 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Critical system, access denied.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int computer_console_level_01_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Turn Off

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please give 'Research Facility, Level 2' quest
	if (response == "s_219")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			computer_console_level_01_action_fixDeletedQuest (player, npc);

			//-- NPC: Done
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Personnel Directory
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Personnel Type
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Back to root directory
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Imperial Security
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Science Staff
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Support Staff
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Departments
	if (response == "s_133")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: Select Department:
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Creature Holding Cells
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Cryogenics Laboratory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Maintenance
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Research Laboratory
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Security Offices
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Sickbay
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Systems Control
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: Storage 2
			boolean hasResponse7 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			//-- PLAYER: Storage 3
			boolean hasResponse8 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse8 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_96");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_156");

				if (hasResponse8)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: OFFLINE
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Damage Control Information Systems 
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_178");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_182");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_dmgControlOnline (player, npc))
		{
			computer_console_level_01_action_turnDmgCtlOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_184");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Internal Communication Systems
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: System damaged or no power.
			string_id message = new string_id (c_stringFile, "s_190");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Low power
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOn (player, npc);

			//-- NPC: Power On
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_commSysOnline (player, npc))
		{
			computer_console_level_01_action_turnCommSysOff (player, npc);

			//-- NPC: Power Off
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Main Power
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			computer_console_level_01_action_sendSignalFixStuff (player, npc);

			//-- NPC: Power loss detected, main power offline.
			string_id message = new string_id (c_stringFile, "s_202");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOn (player, npc);

			//-- NPC: Main Power On
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnMainPwrOff (player, npc);

			//-- NPC: Main Power Off
			string_id message = new string_id (c_stringFile, "s_206");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Backup Systems
	if (response == "s_208")
	{
		//-- [NOTE] 
		if (computer_console_level_01_condition_hasReconfigured (player, npc))
		{
			//-- NPC: No further configuration needed.
			string_id message = new string_id (c_stringFile, "s_210");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_hasntFixedConsoles (player, npc))
		{
			//-- NPC: Critical System. Access Denied
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPowerStillOff (player, npc))
		{
			//-- NPC: Critical system, access denied.
			string_id message = new string_id (c_stringFile, "s_214");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (computer_console_level_01_condition_mainPwrOn (player, npc))
		{
			computer_console_level_01_action_turnBkUpOff (player, npc);

			//-- NPC: Turn Off
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please give 'Research Facility, Level 2' quest
			boolean hasResponse0 = false;
			if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Personnel Directory
			boolean hasResponse1 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Departments
			boolean hasResponse2 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Damage Control Information Systems 
			boolean hasResponse3 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Internal Communication Systems
			boolean hasResponse4 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: Main Power
			boolean hasResponse5 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: Backup Systems
			boolean hasResponse6 = false;
			if (computer_console_level_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_219");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_133");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_208");

				utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

const string MENU_STRING_FILE			= "theme_park/outbreak/outbreak";
const string_id SID_NOT_ENOUGH_POWER		= new string_id(MENU_STRING_FILE, "not_enough_power");
const string_id SID_MAIN_PWR_ON				= new string_id(MENU_STRING_FILE, "main_power_on");
const string_id SID_MAIN_PWR_OFF			= new string_id(MENU_STRING_FILE, "main_power_off");
const string_id SID_BKUP_PWR_ON				= new string_id(MENU_STRING_FILE, "backup_power_on");
const string_id SID_BKUP_PWR_OFF			= new string_id(MENU_STRING_FILE, "backup_power_off");
const string_id SID_DMG_CTRL_SYS_ON			= new string_id(MENU_STRING_FILE, "damage_control_info_sys_on");
const string_id SID_DMG_CTRL_SYS_OFF		= new string_id(MENU_STRING_FILE, "damage_control_info_sys_off");
const string_id SID_COMM_SYS_ON				= new string_id(MENU_STRING_FILE, "internal_communications_sys_on");
const string_id SID_COMM_SYS_OFF			= new string_id(MENU_STRING_FILE, "internal_communications_sys_off");
const string_id SID_ACCESS_DENIED			= new string_id(MENU_STRING_FILE, "access_denied");
const string_id SID_NO_BKUP_PWR				= new string_id(MENU_STRING_FILE, "no_bkup_power");

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.computer_console_level_01");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.computer_console_level_01");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (computer_console_level_01_condition__defaultCondition (player, npc))
	{
		//-- NPC: Key authorization detected. Hello, %TO. Please select option.
		string_id message = new string_id (c_stringFile, "s_66");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Please give 'Research Facility, Level 2' quest
		boolean hasResponse0 = false;
		if (computer_console_level_01_condition_hasDeletedQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Personnel Directory
		boolean hasResponse1 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Departments
		boolean hasResponse2 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Damage Control Information Systems 
		boolean hasResponse3 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: Internal Communication Systems
		boolean hasResponse4 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: Main Power
		boolean hasResponse5 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		//-- PLAYER: Backup Systems
		boolean hasResponse6 = false;
		if (computer_console_level_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse6 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_219");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_132");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_133");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_174");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_186");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_198");

			if (hasResponse6)
				responses [responseIndex++] = new string_id (c_stringFile, "s_208");

			utils.setScriptVar (player, "conversation.computer_console_level_01.branchId", 1);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (computer_console_level_01_tokenTO_tokenTO0001 (player, npc));

			npcStartConversation (player, npc, "computer_console_level_01", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);
			pp.other.set (computer_console_level_01_tokenTO_tokenTO0001 (player, npc));

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (computer_console_level_01_condition__defaultCondition (player, npc))
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- NPC: Unauthorized access detected.
		string_id message = new string_id (c_stringFile, "s_218");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "computer_console_level_01")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.computer_console_level_01.branchId");

	if (branchId == 1 && computer_console_level_01_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && computer_console_level_01_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && computer_console_level_01_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && computer_console_level_01_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && computer_console_level_01_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && computer_console_level_01_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && computer_console_level_01_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && computer_console_level_01_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && computer_console_level_01_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && computer_console_level_01_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && computer_console_level_01_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && computer_console_level_01_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && computer_console_level_01_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && computer_console_level_01_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && computer_console_level_01_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && computer_console_level_01_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && computer_console_level_01_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && computer_console_level_01_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && computer_console_level_01_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && computer_console_level_01_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && computer_console_level_01_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && computer_console_level_01_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && computer_console_level_01_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && computer_console_level_01_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && computer_console_level_01_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && computer_console_level_01_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && computer_console_level_01_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && computer_console_level_01_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && computer_console_level_01_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && computer_console_level_01_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && computer_console_level_01_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && computer_console_level_01_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && computer_console_level_01_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && computer_console_level_01_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && computer_console_level_01_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && computer_console_level_01_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 46 && computer_console_level_01_handleBranch46 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && computer_console_level_01_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && computer_console_level_01_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && computer_console_level_01_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && computer_console_level_01_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && computer_console_level_01_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && computer_console_level_01_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 53 && computer_console_level_01_handleBranch53 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && computer_console_level_01_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && computer_console_level_01_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && computer_console_level_01_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && computer_console_level_01_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 58 && computer_console_level_01_handleBranch58 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 59 && computer_console_level_01_handleBranch59 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && computer_console_level_01_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && computer_console_level_01_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 62 && computer_console_level_01_handleBranch62 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && computer_console_level_01_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.computer_console_level_01.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

