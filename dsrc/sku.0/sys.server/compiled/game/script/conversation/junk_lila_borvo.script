// ======================================================================
//
// junk_lila_borvo.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.smuggler;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/junk_lila_borvo";

// ======================================================================
// Script Conditions
// ======================================================================

boolean junk_lila_borvo_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean junk_lila_borvo_condition_check_inv (obj_id player, obj_id npc)
{
	return smuggler.checkInventory(player, npc);
}

// ======================================================================
// Script Actions
// ======================================================================

void junk_lila_borvo_action_start_dealing (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	params.put("player", player);
	
	messageTo(npc, "startDealing", params, 1.0f, false);
}

// ----------------------------------------------------------------------

void junk_lila_borvo_action_face_to (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int junk_lila_borvo_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well aren't you a fine specimen. Hmmmm....I gather that you are not here for the pleasure of my company. Speak up now, what is it that I can do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hear that you are the person to see if one has something they need to move.
	if (response == "s_a16cfd3b")
	{
		//-- [NOTE] 
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			//-- NPC: People talk to much. Loose talk has a way of getting them into trouble of the worse sort. But you strike me as being the discreet sort. My employer has been known to buying certain goods, as long as they are untraceable.
			string_id message = new string_id (c_stringFile, "s_113dbce8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I believe that I have just what your employer is looking for.
			boolean hasResponse0 = false;
			if (junk_lila_borvo_condition_check_inv (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: This seems a little shady. I don't think I want to be involved.
			boolean hasResponse1 = false;
			if (junk_lila_borvo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1875d09c");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e8b03c7c");

				utils.setScriptVar (player, "conversation.junk_lila_borvo.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.junk_lila_borvo.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think that there is anything that I need help with.
	if (response == "s_210d33b4")
	{
		//-- [NOTE] 
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Isn't that a shame. Perhaps some other time.
			string_id message = new string_id (c_stringFile, "s_98d18f02");
			utils.removeScriptVar (player, "conversation.junk_lila_borvo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int junk_lila_borvo_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: People talk to much. Loose talk has a way of getting them into trouble of the worse sort. But you strike me as being the discreet sort. My employer has been known to buying certain goods, as long as they are untraceable.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I believe that I have just what your employer is looking for.
	if (response == "s_1875d09c")
	{
		//-- [NOTE] 
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			junk_lila_borvo_action_start_dealing (player, npc);

			//-- NPC: Why don't you let me take a look at what you have to offer. If the goods are what my employer is after I am more then willing to take them off of your hands. Of course you understand that this deal is strictly confidential. If you break that confidence you will not live long enough to regret it.
			string_id message = new string_id (c_stringFile, "s_7edb783c");
			utils.removeScriptVar (player, "conversation.junk_lila_borvo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This seems a little shady. I don't think I want to be involved.
	if (response == "s_e8b03c7c")
	{
		//-- [NOTE] 
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			//-- NPC: How sweet. Aren't you just the little hero.
			string_id message = new string_id (c_stringFile, "s_a83a2e6b");
			utils.removeScriptVar (player, "conversation.junk_lila_borvo.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.junk_lila_borvo");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.junk_lila_borvo");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (junk_lila_borvo_condition__defaultCondition (player, npc))
	{
		junk_lila_borvo_action_face_to (player, npc);

		//-- NPC: Well aren't you a fine specimen. Hmmmm....I gather that you are not here for the pleasure of my company. Speak up now, what is it that I can do for you?
		string_id message = new string_id (c_stringFile, "s_ea90afa0");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I hear that you are the person to see if one has something they need to move.
		boolean hasResponse0 = false;
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't think that there is anything that I need help with.
		boolean hasResponse1 = false;
		if (junk_lila_borvo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_a16cfd3b");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_210d33b4");

			utils.setScriptVar (player, "conversation.junk_lila_borvo.branchId", 1);

			npcStartConversation (player, npc, "junk_lila_borvo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "junk_lila_borvo")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.junk_lila_borvo.branchId");

	if (branchId == 1 && junk_lila_borvo_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && junk_lila_borvo_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.junk_lila_borvo.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

