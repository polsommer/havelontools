// ======================================================================
//
// ep3_forest_meust.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_forest_meust";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_forest_meust_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_isGoodGuy (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_3", 0) ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_3") ||
	        groundquests.hasCompletedQuest(player, "ep3_forest_kerritamba_epic_7"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_isBadGuy (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_forest_wirartu_epic_2", 0) ||
		    groundquests.hasCompletedQuest(player, "ep3_forest_wirartu_epic_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_isTaskOneActive (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_meust_quest_1", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_1", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedTaskOne (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_1", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_1");
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_isTaskTwoActive (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_meust_quest_2", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_2", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedTaskTwo (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_2", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_2"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedQuestTwo (obj_id player, obj_id npc)
{
		return groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_2");
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_isTaskThreeActive (obj_id player, obj_id npc)
{	
	if (groundquests.isTaskActive(player, "ep3_forest_meust_quest_3", 0) ||
	    groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_3", 0))
	    
	    return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedTaskThree (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask(player, "ep3_forest_meust_quest_3", 0) &&
		   !groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_3"));
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasCompletedQuestThree (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_forest_meust_quest_3");
}

// ----------------------------------------------------------------------

boolean ep3_forest_meust_condition_hasLanguage (obj_id player, obj_id npc)
{
	return utils.canSpeakWookiee(player, npc);
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_forest_meust_action_giveQuestOne (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_meust_quest_1");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_giveQuestTwo (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_meust_quest_2");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_giveSignalOne (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "mouf");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_giveSignalTwo (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "steelhoof");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_giveSignalThree (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "sayormi");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_giveQuestThree (obj_id player, obj_id npc)
{
	// Apply the first quest to the player here
	groundquests.grantQuest(player, "ep3_forest_meust_quest_3");
}

// ----------------------------------------------------------------------

void ep3_forest_meust_action_Language (obj_id player, obj_id npc)
{
	utils.emoteWookieeConfusion (player, npc);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_forest_meust_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have returned my young warrior. The Kerritamba people speak highly of you these days. I'm glad to see you're doing well.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I try my best, Headhunter.
	if (response == "s_2032")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: Continue to do so. I wish I had more for you to do.
			string_id message = new string_id (c_stringFile, "s_2034");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The attacks have stopped. You must have been successful, young warrior.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It is true. I have the necklaces here.
	if (response == "s_2038")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveSignalThree (player, npc);

			//-- NPC: It is a good day for the Kerritamba people. Thank you. [Meust nods his head low.] You have passed all of your tests, my friend. I have nothing else for you.
			string_id message = new string_id (c_stringFile, "s_2040");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I learned many things from my tests.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2042");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is a good day for the Kerritamba people. Thank you. [Meust nods his head low.] You have passed all of your tests, my friend. I have nothing else for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I learned many things from my tests.
	if (response == "s_2042")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Please speak with the others in the village. Surely, there's more for you to do.
			string_id message = new string_id (c_stringFile, "s_2044");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Meust raises a hand to silence you.] I do not want to speak with you unless you've been successful against the Sayormi. We've had another attack while you were away. Now, get out there and do your test.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry. I'll go back out there.
	if (response == "s_2048")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: I expect you to return soon, young warrior.
			string_id message = new string_id (c_stringFile, "s_2050");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have decided on your final test, young warrior. Do you remember my warnings regarding the Sayormi?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I do.
	if (response == "s_2054")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: It is them you must hunt now. By the day, their actions become bolder and it is threatening our way of life. Just earlier today, our hunting scouts were attacked by the Sayormi. Luckily, our people managed to get away. We must strike back. The situation opens a perfect opportunity for you to show us your prowess in battle. Therefore, I want you to collect 7 Sayormi necklaces as proof of your good deeds.
			string_id message = new string_id (c_stringFile, "s_2056");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do as you bid, Headhunter.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't complete this test right now.
			boolean hasResponse1 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2058");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2062");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is them you must hunt now. By the day, their actions become bolder and it is threatening our way of life. Just earlier today, our hunting scouts were attacked by the Sayormi. Luckily, our people managed to get away. We must strike back. The situation opens a perfect opportunity for you to show us your prowess in battle. Therefore, I want you to collect 7 Sayormi necklaces as proof of your good deeds.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do as you bid, Headhunter.
	if (response == "s_2058")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveQuestThree (player, npc);

			//-- NPC: [Meust nods.] Good. Go then. The Sayormi can be found in the Dead Forest. Be safe in knowing that the spirit of Nyenthi'Oris is with you.
			string_id message = new string_id (c_stringFile, "s_2060");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't complete this test right now.
	if (response == "s_2062")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Meust sterns his jaw.] Fine, then.
			string_id message = new string_id (c_stringFile, "s_2064");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is good to see you, young warrior. How did the hunt go?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have Steelclaw's ear.
	if (response == "s_2068")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveSignalTwo (player, npc);

			//-- NPC: You have proven yourself well, warrior. You have but one more test that I must give you. Return soon. I must tell the tribe of your great successes.
			string_id message = new string_id (c_stringFile, "s_2070");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you, Headhunter.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2072");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have proven yourself well, warrior. You have but one more test that I must give you. Return soon. I must tell the tribe of your great successes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, Headhunter.
	if (response == "s_2072")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: May the spirit of Nyenthi'Oris guide you.
			string_id message = new string_id (c_stringFile, "s_2074");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Kerritamba people hold great pride in 'the hunt'. It is time you show the tribe that you too hold such passion and skill. For this test, you must search Kkowir Forest and find the infamous Steelclaw. He is a brave Mouf and has caught the eye of the Kerritamba people. Slay him and bring back his ear as proof.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will find him and bring back the proof of my deed.
	if (response == "s_2080")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveQuestTwo (player, npc);

			//-- NPC: You are brave. I await your return warrior.
			string_id message = new string_id (c_stringFile, "s_2082");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not up to this challenge yet.
	if (response == "s_2084")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Meust frowns.] Then go... and return when you feel you are up to my challenge.
			string_id message = new string_id (c_stringFile, "s_2086");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Warrior... [Meust nods.] I see that you have come home victorious. Let me take those Mouf Hides from you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, Headhunter.
	if (response == "s_2090")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveSignalOne (player, npc);

			//-- NPC: I see that you'll need a more challenging test. Let me think on the possibilities. Come speak with me in a moment.
			string_id message = new string_id (c_stringFile, "s_2092");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome home, warrior.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm still working on the Mouf Hides.
	if (response == "s_2096")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you should warrior. As a new member of the tribe, I expect you to go slower than others. But you mustn't wander for long. Complete your test and return soon.
			string_id message = new string_id (c_stringFile, "s_2098");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [You nod.]
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2100");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As you should warrior. As a new member of the tribe, I expect you to go slower than others. But you mustn't wander for long. Complete your test and return soon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [You nod.]
	if (response == "s_2100")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: May the spirit of Nyenthi'Oris guide you.
			string_id message = new string_id (c_stringFile, "s_2102");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Meust looks you over.] Your heart is pure and your will strong. You must be a warrior. We, the Kerritamba, honor you as brethren. [Meust bows.]

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. And who are you?
	if (response == "s_2106")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Meust, Headhunter of Kerritamba village. I set forth challenging goals for fellow warriors so that they may prove their worth to the tribe. [Meust stands proud.]
			string_id message = new string_id (c_stringFile, "s_2108");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's nice. I'm going to go look around.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am ready to be tested.
			boolean hasResponse1 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2110");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2114");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am Meust, Headhunter of Kerritamba village. I set forth challenging goals for fellow warriors so that they may prove their worth to the tribe. [Meust stands proud.]

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's nice. I'm going to go look around.
	if (response == "s_2110")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Meust nods.] May the spirit of Nyenthi'Oris guide you.
			string_id message = new string_id (c_stringFile, "s_2112");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am ready to be tested.
	if (response == "s_2114")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Meust arches a furry brow.] Only those of the Kerritamba tribe are tested.
			string_id message = new string_id (c_stringFile, "s_2116");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am considered of the Tribe now. I should be tested.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2118");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: [Meust arches a furry brow.] Only those of the Kerritamba tribe are tested.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am considered of the Tribe now. I should be tested.
	if (response == "s_2118")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am skeptical, but if what you say is true, then I have no choice but to test your will and your honor. Fine, then. You will be tested. [Meust nods.] First, you must collect 8 Mouf Hides for the tribe. We use them to make clothes and to help us insulate our homes.
			string_id message = new string_id (c_stringFile, "s_2120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I accept your test.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not willing to accept your test now.
			boolean hasResponse1 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2122");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2130");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am skeptical, but if what you say is true, then I have no choice but to test your will and your honor. Fine, then. You will be tested. [Meust nods.] First, you must collect 8 Mouf Hides for the tribe. We use them to make clothes and to help us insulate our homes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept your test.
	if (response == "s_2122")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			ep3_forest_meust_action_giveQuestOne (player, npc);

			//-- NPC: Good. You will find the Mouf grazing in the Dead Forest, just east of here. But beware, the Sayormi lurk there, hoping to feast on the souls of the fallen.
			string_id message = new string_id (c_stringFile, "s_2124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you. I will be wary.
			boolean hasResponse0 = false;
			if (ep3_forest_meust_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2126");

				utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not willing to accept your test now.
	if (response == "s_2130")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: [Meust frowns.] You disappoint me.
			string_id message = new string_id (c_stringFile, "s_2132");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_forest_meust_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. You will find the Mouf grazing in the Dead Forest, just east of here. But beware, the Sayormi lurk there, hoping to feast on the souls of the fallen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you. I will be wary.
	if (response == "s_2126")
	{
		//-- [NOTE] 
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			//-- NPC: May the spirit of Nyenthi'Oris guide you.
			string_id message = new string_id (c_stringFile, "s_2128");
			utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_forest_meust");

	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "meust" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName (self, new string_id( "ep3/npc_names", "meust" ));
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_forest_meust");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasLanguage (player, npc))
	{
		ep3_forest_meust_action_Language (player, npc);

		//-- NPC: Rrworr!
		string_id message = new string_id (c_stringFile, "s_1619");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedQuestThree (player, npc))
	{
		//-- NPC: You have returned my young warrior. The Kerritamba people speak highly of you these days. I'm glad to see you're doing well.
		string_id message = new string_id (c_stringFile, "s_2030");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I try my best, Headhunter.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2032");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 2);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedTaskThree (player, npc))
	{
		//-- NPC: The attacks have stopped. You must have been successful, young warrior.
		string_id message = new string_id (c_stringFile, "s_2036");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It is true. I have the necklaces here.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2038");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 4);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_isTaskThreeActive (player, npc))
	{
		//-- NPC: [Meust raises a hand to silence you.] I do not want to speak with you unless you've been successful against the Sayormi. We've had another attack while you were away. Now, get out there and do your test.
		string_id message = new string_id (c_stringFile, "s_2046");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm sorry. I'll go back out there.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2048");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 7);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedQuestTwo (player, npc))
	{
		//-- NPC: I have decided on your final test, young warrior. Do you remember my warnings regarding the Sayormi?
		string_id message = new string_id (c_stringFile, "s_2052");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I do.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2054");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 9);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedTaskTwo (player, npc))
	{
		//-- NPC: It is good to see you, young warrior. How did the hunt go?
		string_id message = new string_id (c_stringFile, "s_2066");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have Steelclaw's ear.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2068");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 13);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_isTaskTwoActive (player, npc))
	{
		//-- NPC: Steelclaw still roams the Kkowir Forest, young warrior. Do not return until you have slain him.
		string_id message = new string_id (c_stringFile, "s_2076");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: The Kerritamba people hold great pride in 'the hunt'. It is time you show the tribe that you too hold such passion and skill. For this test, you must search Kkowir Forest and find the infamous Steelclaw. He is a brave Mouf and has caught the eye of the Kerritamba people. Slay him and bring back his ear as proof.
		string_id message = new string_id (c_stringFile, "s_2078");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will find him and bring back the proof of my deed.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not up to this challenge yet.
		boolean hasResponse1 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2080");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2084");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 17);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_hasCompletedTaskOne (player, npc))
	{
		//-- NPC: Warrior... [Meust nods.] I see that you have come home victorious. Let me take those Mouf Hides from you.
		string_id message = new string_id (c_stringFile, "s_2088");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you, Headhunter.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2090");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 20);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_isTaskOneActive (player, npc))
	{
		//-- NPC: Welcome home, warrior.
		string_id message = new string_id (c_stringFile, "s_2094");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm still working on the Mouf Hides.
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2096");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 22);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_isGoodGuy (player, npc))
	{
		//-- NPC: [Meust looks you over.] Your heart is pure and your will strong. You must be a warrior. We, the Kerritamba, honor you as brethren. [Meust bows.]
		string_id message = new string_id (c_stringFile, "s_2104");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you. And who are you?
		boolean hasResponse0 = false;
		if (ep3_forest_meust_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2106");

			utils.setScriptVar (player, "conversation.ep3_forest_meust.branchId", 25);

			npcStartConversation (player, npc, "ep3_forest_meust", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition_isBadGuy (player, npc))
	{
		//-- NPC: [Meust seems taken aback by your presence.] One of the 'Misguided'... Your presence pains me. Leave now!
		string_id message = new string_id (c_stringFile, "s_2134");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_forest_meust_condition__defaultCondition (player, npc))
	{
		//-- NPC: [Meust frowns.] You're not a warrior. Leave this place immediately. We, the Kerritamba, only welcome strong warriors into our homes.
		string_id message = new string_id (c_stringFile, "s_2136");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_forest_meust")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_forest_meust.branchId");

	if (branchId == 2 && ep3_forest_meust_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_forest_meust_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_forest_meust_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && ep3_forest_meust_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && ep3_forest_meust_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && ep3_forest_meust_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && ep3_forest_meust_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && ep3_forest_meust_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && ep3_forest_meust_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && ep3_forest_meust_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && ep3_forest_meust_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && ep3_forest_meust_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && ep3_forest_meust_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && ep3_forest_meust_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && ep3_forest_meust_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && ep3_forest_meust_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && ep3_forest_meust_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_forest_meust.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

