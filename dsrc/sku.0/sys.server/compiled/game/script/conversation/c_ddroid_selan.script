// ======================================================================
//
// c_ddroid_selan.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_ddroid_selan";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_ddroid_selan_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_ddroid_selan_condition_selanStepReady (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_darndroid1");

	int selan = groundquests.getTaskId(questId, "selan"); 
	
	boolean onQuest = false;
	onQuest = questIsTaskActive(questId, selan, player);

	return onQuest;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_ddroid_selan_action_passalong (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_darndroid1_selan");

	obj_id top=getTopMostContainer(player);
	location loc = getLocation(top);
	loc.x = -5026;
	loc.y = 0;
	loc.z = -2259;
	loc.area = "corellia";
	obj_id waypoint = createWaypointInDatapad(player, loc);
	setObjVar(player, "quest.general.quest/c_darndroid1.amarent", waypoint);	
	setWaypointName(waypoint, "Amarent Loren");
	setWaypointActive(waypoint, true);

	obj_id waypoint1 = getObjIdObjVar(player, "quest.general.quest/c_darndroid1.moeniastarport");
	if (waypoint1 != null)
    {
       destroyWaypointInDatapad(waypoint1, player);
    }
	removeObjVar(player, "quest.general.quest/c_darndroid1.moeniastarport");
}

// ----------------------------------------------------------------------

void c_ddroid_selan_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_ddroid_selan_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You appear to be looking for someone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you know of a late ship from Corellia?
	if (response == "s_215")
	{
		//-- [NOTE] 
		if (c_ddroid_selan_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, I did hear that a ship had 'trouble' on the way here, but there isn't much information from the Port Authority.  I think that there's a good reason to worry.
			string_id message = new string_id (c_stringFile, "s_219");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That isn't good.  I need to find one of the passengers on that ship.
			boolean hasResponse0 = false;
			if (c_ddroid_selan_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_223");

				utils.setScriptVar (player, "conversation.c_ddroid_selan.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_ddroid_selan.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_ddroid_selan_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, I did hear that a ship had 'trouble' on the way here, but there isn't much information from the Port Authority.  I think that there's a good reason to worry.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That isn't good.  I need to find one of the passengers on that ship.
	if (response == "s_223")
	{
		//-- [NOTE] 
		if (c_ddroid_selan_condition__defaultCondition (player, npc))
		{
			//-- NPC: Perhaps I could help?
			string_id message = new string_id (c_stringFile, "s_227");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If you can, I would appreciate it.
			boolean hasResponse0 = false;
			if (c_ddroid_selan_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_231");

				utils.setScriptVar (player, "conversation.c_ddroid_selan.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_ddroid_selan.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_ddroid_selan_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perhaps I could help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If you can, I would appreciate it.
	if (response == "s_231")
	{
		//-- [NOTE] 
		if (c_ddroid_selan_condition__defaultCondition (player, npc))
		{
			c_ddroid_selan_action_passalong (player, npc);

			//-- NPC: I have a friend who works for the Port Authority in Tyrena, on Corellia.  His name is Amarent Loren.  Just tell him that Selan Ellison sent you.
			string_id message = new string_id (c_stringFile, "s_235");
			utils.removeScriptVar (player, "conversation.c_ddroid_selan.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_ddroid_selan");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Selan Ellison");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Selan Ellison");	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_ddroid_selan");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_ddroid_selan_condition_selanStepReady (player, npc))
	{
		c_ddroid_selan_action_faceplayer (player, npc);

		//-- NPC: You appear to be looking for someone.
		string_id message = new string_id (c_stringFile, "s_211");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you know of a late ship from Corellia?
		boolean hasResponse0 = false;
		if (c_ddroid_selan_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_215");

			utils.setScriptVar (player, "conversation.c_ddroid_selan.branchId", 1);

			npcStartConversation (player, npc, "c_ddroid_selan", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!c_ddroid_selan_condition_selanStepReady (player, npc))
	{
		c_ddroid_selan_action_faceplayer (player, npc);

		//-- NPC: Lovely day at the Starport, isn't it?
		string_id message = new string_id (c_stringFile, "s_239");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_ddroid_selan")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_ddroid_selan.branchId");

	if (branchId == 1 && c_ddroid_selan_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_ddroid_selan_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_ddroid_selan_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_ddroid_selan.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

