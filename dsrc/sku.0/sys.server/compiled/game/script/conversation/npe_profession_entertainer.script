// ======================================================================
//
// npe_profession_entertainer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_profession_entertainer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_profession_entertainer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onTrainingQuest (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "npe_pointer_entertainer")||
			groundquests.isQuestActive(player, "npe_entertainer_1"));
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_finishedTrainingQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_entertainer_1");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_isEntertainer (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	if(pTemplate.indexOf("entertainer") > -1 )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onEntertainer1quest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_prof_entertainer1");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_finishedEntertainer1Quest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_prof_entertainer1");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onEntertainer1Task (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_prof_entertainer1", "returntomira");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onEntertainer2Task (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_prof_entertainer2", "returntomira");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onEntertainer2quest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_prof_entertainer2");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_finishedEntertainer2Quest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_prof_entertainer2");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_onOrCompletedEnt2Quest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "npe_prof_entertainer2");
}

// ----------------------------------------------------------------------

boolean npe_profession_entertainer_condition_needsHorn (obj_id player, obj_id npc)
{
	boolean needsItem = false;
	boolean hasItem = false;
	obj_id[] playerStuff = getInventoryAndEquipment(player);
	//loop thru players inventory, make sure they dont have the item already.
	for(int i =0; i < playerStuff.length; i++)
	{
		string templateName = static_item.getStaticItemName(playerStuff[i]);
		if(templateName != null)
		{
			if(templateName == "item_npe_smooth_slitherhorn_01_01")
				hasItem = true;
		}
	}
	if(groundquests.isTaskActive(player, "npe_prof_entertainer2", 0) && hasItem == false)
		needsItem = true;
	return needsItem;
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_profession_entertainer_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_dance (obj_id player, obj_id npc)
{
	ai_lib.setMood (npc, "themepark_oola");
	dictionary webster=new dictionary();
	webster.put ("npc", npc);
	messageTo( npc, "stopDancing", webster, 9, false );
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_givePointerAnvar (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_pointer_entertainer");
	groundquests.sendSignal(player, "found_entertainer");	
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_signalEnt1Quest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_prof_entertainer1_return");
	
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_giveEntertainerQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_prof_entertainer1");
	npe.giveEntXpPopUp(player);
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_giveSecretaryPointer (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_pointer_secretary");
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_giveHanPointer (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_job_pointer_han");
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_signalEnt2Quest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_prof_entertainer2_done");

	setObjVar(player, "npe.finishedTemplate", 1);
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_giveEntertainer2Quest (obj_id player, obj_id npc)
{
	groundquests.requestGrantQuest(player, "npe_prof_entertainer2");

	newbieTutorialSetToolbarElement (player, 7, "/StartMusic" );
	newbieTutorialSetToolbarElement (player, 8, "/StopMusic" );
	newbieTutorialHighlightUIElement (player, "/GroundHUD.Toolbar.volume.7", 5.0f);
	newbieTutorialHighlightUIElement (player, "/GroundHUD.Toolbar.volume.8", 5.0f);
}

// ----------------------------------------------------------------------

void npe_profession_entertainer_action_giveNewHorn (obj_id player, obj_id npc)
{
		obj_id horn = static_item.createNewItemFunction("item_npe_smooth_slitherhorn_01_01", player);
		obj_id[] items = new obj_id[1];
		items[0] = horn;
		showLootBox(player, items);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_profession_entertainer_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This is all that I have for you now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But what about getting off the station?
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Han Solo sent me a message and he will be able to get you off the station, but he needs something done first. Go talk to him.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go see him then.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd love another gig.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "clap_rousing");

			//-- NPC: Wonderful! Take that slitherhorn that I gave you and play for the wounded in the Medical Center. The morale has been so bad recently...anyway, they could use some cheering up. You can double-click the slitherhorn in your inventory to equip it.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do that.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you perform for the patients in the Medical Center?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did. I can't tell if they actually liked me, though.
	if (response == "s_55")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I'm sure they did, whether they responded or not. Music is both soothing and inspiring at the same time. As I said, morale has been pretty low here with all the attacks.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why do people stay here then?
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sure they did, whether they responded or not. Music is both soothing and inspiring at the same time. As I said, morale has been pretty low here with all the attacks.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why do people stay here then?
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			//-- NPC: It's home for a lot of us. Some are waiting for loved ones to return from Station Gamma. Some are too hurt to travel well. And some of us just love Tansarii Point Station too much to flee.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I understand.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_59");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's home for a lot of us. Some are waiting for loved ones to return from Station Gamma. Some are too hurt to travel well. And some of us just love Tansarii Point Station too much to flee.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand.
	if (response == "s_59")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "feed_creature_medium");

			npe_profession_entertainer_action_signalEnt2Quest (player, npc);

			//-- NPC: Here is a reward for your hard work. You have a bright future ahead of you. I just know it!
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But what about getting off the station?
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd love another gig.
			boolean hasResponse1 = false;
			if (!npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is a reward for your hard work. You have a bright future ahead of you. I just know it!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But what about getting off the station?
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Han Solo sent me a message and he will be able to get you off the station, but he needs something done first. Go talk to him.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go see him then.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd love another gig.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "clap_rousing");

			//-- NPC: Wonderful! Take that slitherhorn that I gave you and play for the wounded in the Medical Center. The morale has been so bad recently...anyway, they could use some cheering up. You can double-click the slitherhorn in your inventory to equip it.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do that.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What is it, %TU?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've lost my slitherhorn.
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			npe_profession_entertainer_action_giveNewHorn (player, npc);

			//-- NPC: It just so happens I have another. Please hold on to this one.
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, %NU, are you ready for another show?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I'd love another gig.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "clap_rousing");

			//-- NPC: Wonderful! Take that slitherhorn that I gave you and play for the wounded in the Medical Center. The morale has been so bad recently...anyway, they could use some cheering up. You can double-click the slitherhorn in your inventory to equip it.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do that.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wonderful! Take that slitherhorn that I gave you and play for the wounded in the Medical Center. The morale has been so bad recently...anyway, they could use some cheering up. You can double-click the slitherhorn in your inventory to equip it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do that.
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			npe_profession_entertainer_action_giveEntertainer2Quest (player, npc);

			//-- NPC: Excellent! Just head over to the Medical Center when you are ready. Two minutes of music will cheer them up greatly.
			string_id message = new string_id (c_stringFile, "s_50");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What did you learn?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He told me about a shipment of some interest.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hm. That's not exactly what I expected, but it does make sense with the other rumors that I have heard. Well done!  I have a gift for you.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hm. That's not exactly what I expected, but it does make sense with the other rumors that I have heard. Well done!  I have a gift for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "feed_creature_medium");

			npe_profession_entertainer_action_signalEnt1Quest (player, npc);

			//-- NPC: I'll bet you're pretty good on the slitherhorn. If you need another gig, all you need to do is ask.
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: But what about getting off the station?
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd love another gig.
			boolean hasResponse1 = false;
			if (!npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll bet you're pretty good on the slitherhorn. If you need another gig, all you need to do is ask.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But what about getting off the station?
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Han Solo sent me a message and he will be able to get you off the station, but he needs something done first. Go talk to him.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll go see him then.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd love another gig.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "clap_rousing");

			//-- NPC: Wonderful! Take that slitherhorn that I gave you and play for the wounded in the Medical Center. The morale has been so bad recently...anyway, they could use some cheering up. You can double-click the slitherhorn in your inventory to equip it.
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do that.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Han Solo sent me a message and he will be able to get you off the station, but he needs something done first. Go talk to him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll go see him then.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			npe_profession_entertainer_action_giveHanPointer (player, npc);

			//-- NPC: Very well. Tell him hello for me!
			string_id message = new string_id (c_stringFile, "s_66");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Anvar was right...you looked great up there! I have a job for someone that is in touch with the power of an Entertainer.

	//-- [RESPONSE NOTE] 
	//-- PLAYER:  What kind of power are you talking about?
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: The power of information. People like good Entertainers. Throughout the galaxy, we entertain and inspire the masses. They feel special being around us. They will sometimes tell us things that they wouldn't tell other people. Interested in hearing more?
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Definitely. What do you have in mind?
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The power of information. People like good Entertainers. Throughout the galaxy, we entertain and inspire the masses. They feel special being around us. They will sometimes tell us things that they wouldn't tell other people. Interested in hearing more?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Definitely. What do you have in mind?
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well, for the first time in a long time, we have an Imperial presence on the Station. I want to know why. The Imperial Officer in Hangar Bay 1 wouldn't talk to me, but he might talk to you. Try dancing for him and see if his tongue loosens.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well. I'd be happy to help a fellow Entertainer.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, for the first time in a long time, we have an Imperial presence on the Station. I want to know why. The Imperial Officer in Hangar Bay 1 wouldn't talk to me, but he might talk to you. Try dancing for him and see if his tongue loosens.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well. I'd be happy to help a fellow Entertainer.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			npe_profession_entertainer_action_giveEntertainerQuest (player, npc);

			//-- NPC: Oh, thank you! Come back when you are done. Remember that you get better when you flourish!
			string_id message = new string_id (c_stringFile, "s_82");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome. You are %TU, aren't you? What are you doing out here on Tansarii Point Station?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's a long story. My friend's ship needs repair, though.
	if (response == "s_88")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, my friend Anvar needs some dancing talent here at the Cantina. If you need the credits, I'm sure that he would be happy to have you!
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will go there now.
			boolean hasResponse0 = false;
			if (npe_profession_entertainer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_profession_entertainer_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, my friend Anvar needs some dancing talent here at the Cantina. If you need the credits, I'm sure that he would be happy to have you!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will go there now.
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			npe_profession_entertainer_action_givePointerAnvar (player, npc);

			//-- NPC: Outstanding! Please come back to me when you are done.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_profession_entertainer");

	setCondition (self, CONDITION_CONVERSABLE);
	//setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Mira T'rani(Entertainer)");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	//setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Mira T'rani(Entertainer)");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_profession_entertainer");

	return SCRIPT_CONTINUE;
}

messageHandler stopDancing()
{
	obj_id npc=params.getObjId ("npc");
	ai_lib.setMood (npc, "default");
	return SCRIPT_CONTINUE;
}	

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_finishedEntertainer2Quest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: This is all that I have for you now.
		string_id message = new string_id (c_stringFile, "s_61");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: But what about getting off the station?
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'd love another gig.
		boolean hasResponse1 = false;
		if (!npe_profession_entertainer_condition_onOrCompletedEnt2Quest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_44");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_89");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 14);

			npcStartConversation (player, npc, "npe_profession_entertainer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_onEntertainer2Task (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Did you perform for the patients in the Medical Center?
		string_id message = new string_id (c_stringFile, "s_54");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I did. I can't tell if they actually liked me, though.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_55");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 2);

			npcStartConversation (player, npc, "npe_profession_entertainer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_needsHorn (player, npc))
	{
		//-- NPC: What is it, %TU?
		string_id message = new string_id (c_stringFile, "s_63");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I've lost my slitherhorn.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_65");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 6);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "npe_profession_entertainer", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_onEntertainer2quest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Please go play for the folks in the Medical Center.
		string_id message = new string_id (c_stringFile, "s_53");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_finishedEntertainer1Quest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Ah, %NU, are you ready for another show?
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. I'd love another gig.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 9);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "npe_profession_entertainer", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_onEntertainer1Task (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: What did you learn?
		string_id message = new string_id (c_stringFile, "s_29");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: He told me about a shipment of some interest.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 12);

			npcStartConversation (player, npc, "npe_profession_entertainer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_onEntertainer1quest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Come back when you are done with the Imperial Officer. I put his location in your journal.
		string_id message = new string_id (c_stringFile, "s_68");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_finishedTrainingQuest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Anvar was right...you looked great up there! I have a job for someone that is in touch with the power of an Entertainer.
		string_id message = new string_id (c_stringFile, "s_70");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER:  What kind of power are you talking about?
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_72");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 18);

			npcStartConversation (player, npc, "npe_profession_entertainer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_onTrainingQuest (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: You have style in your movement. I'd love to see you dance. Finish the job for Anvar and then come back to me.
		string_id message = new string_id (c_stringFile, "s_84");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition_isEntertainer (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: Welcome. You are %TU, aren't you? What are you doing out here on Tansarii Point Station?
		string_id message = new string_id (c_stringFile, "s_86");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It's a long story. My friend's ship needs repair, though.
		boolean hasResponse0 = false;
		if (npe_profession_entertainer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_88");

			utils.setScriptVar (player, "conversation.npe_profession_entertainer.branchId", 23);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "npe_profession_entertainer", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_profession_entertainer_condition__defaultCondition (player, npc))
	{
		npe_profession_entertainer_action_facePlayer (player, npc);

		//-- NPC: You aren't an Entertainer, are you? Oh well. Enjoy the show. The band is playing a cover of a popular song from Tatooine.
		string_id message = new string_id (c_stringFile, "s_96");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_profession_entertainer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_profession_entertainer.branchId");

	if (branchId == 1 && npe_profession_entertainer_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && npe_profession_entertainer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && npe_profession_entertainer_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_profession_entertainer_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_profession_entertainer_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_profession_entertainer_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_profession_entertainer_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && npe_profession_entertainer_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && npe_profession_entertainer_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && npe_profession_entertainer_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && npe_profession_entertainer_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && npe_profession_entertainer_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && npe_profession_entertainer_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && npe_profession_entertainer_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && npe_profession_entertainer_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && npe_profession_entertainer_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && npe_profession_entertainer_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_profession_entertainer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

