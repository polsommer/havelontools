include library.ai_lib;
include library.utils;
include library.anims;
include library.chat;

const string CONVO = "conversation/biogenic_random";

// doAnimationAction(npc, anims.PLAYER_WAVE1);
// setAnimationMood(self, "neutral");

trigger OnAttach() {

	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);
	attachScript(self, "npc.converse.npc_converse_menu");
	
	return SCRIPT_CONTINUE;
}	


trigger OnStartNpcConversation(obj_id speaker) {

	/*
	string_id greeting = new string_id (CONVO,"npc_dialogue_start_angry");
	string_id response[] = new string_id [1];
	response[0] = new string_id (CONVO, "ply_forget_me");
	npcStartConversation (speaker, self, CONVO, greeting, response);
	*/
	string mood = chat.MOOD_NONE;
	
	switch(rand(0,8)) {
	
		case 0: mood = chat.MOOD_NONE;
			break;
		case 1: mood = chat.MOOD_DEPRESSED;
			break;
		case 2: mood = chat.MOOD_DISMAYED;
			break;
		case 3: mood = chat.MOOD_DISTRACTED;
			break;
		case 4: mood = chat.MOOD_NERVOUS;
			break;
		case 5: mood = chat.MOOD_SCARED;
			break;
		case 6: mood = chat.MOOD_TERRIFIED;
			break;
		case 7: mood = chat.MOOD_PANICKED;
			break;
		case 8: mood = chat.MOOD_FEARFUL;
			break;
	}
	
	int phrase_num = rand(0, 20);
	
	string_id phrase = new string_id(CONVO, "phrase_" + phrase_num);
	chat.setChatMood(self, mood);
	chat.chat(self, chat.CHAT_SAY, mood, phrase);
	
	return SCRIPT_CONTINUE;
}

trigger OnNpcConversationResponse (string convo, obj_id speaker, string_id response) {

	return SCRIPT_CONTINUE;
}
