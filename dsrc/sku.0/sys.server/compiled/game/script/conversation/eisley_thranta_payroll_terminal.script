// ======================================================================
//
// eisley_thranta_payroll_terminal.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/eisley_thranta_payroll_terminal";

// ======================================================================
// Script Conditions
// ======================================================================

boolean eisley_thranta_payroll_terminal_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean eisley_thranta_payroll_terminal_condition_onPayroll (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "tatooine_eisley_drensbounty_v2", "tat_eisley_drensbounty_e2") ||
			groundquests.hasCompletedTask(player, "tatooine_eisley_drensbounty_v2", "tat_eisley_drensbounty_e2"));
}

// ----------------------------------------------------------------------

boolean eisley_thranta_payroll_terminal_condition_canStealFunds (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "tatooine_eisley_drensbounty_v2", "tat_eisley_drensbounty_e2a");
}

// ======================================================================
// Script Actions
// ======================================================================

void eisley_thranta_payroll_terminal_action_grantAppFunds (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "tatooine_eisley_appropriating_funds");
}

// ----------------------------------------------------------------------

void eisley_thranta_payroll_terminal_action_signalPayroll (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "tat_eisley_drensbounty_e2");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int eisley_thranta_payroll_terminal_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: White Thranta Payroll Terminal. Please enter employee code to access your account.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Enter Durr's Employee Code]
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Greetings Durr Roddack, please select from the following actions.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Edit Personal Records]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Check Pay Balance]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Make Bank Transfer]
			boolean hasResponse2 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Enter Your Employee Code]
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Employee code not found. Please try again.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings Durr Roddack, please select from the following actions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Edit Personal Records]
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			eisley_thranta_payroll_terminal_action_signalPayroll (player, npc);

			//-- NPC: Durr Roddack
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Return to Previous Menu]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Check Pay Balance]
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: All payments recieved.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Return to Previous Menu]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Make Bank Transfer]
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Please enter the account ID funds will be transferred to.
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Enter Your Account ID]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Return to Previous Menu]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Durr Roddack

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Return to Previous Menu]
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Greetings Durr Roddack, please select from the following actions.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Edit Personal Records]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Check Pay Balance]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Make Bank Transfer]
			boolean hasResponse2 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All payments recieved.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Return to Previous Menu]
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Greetings Durr Roddack, please select from the following actions.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Edit Personal Records]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Check Pay Balance]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Make Bank Transfer]
			boolean hasResponse2 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Please enter the account ID funds will be transferred to.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Enter Your Account ID]
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition_canStealFunds (player, npc))
		{
			//-- NPC: Enter amount to be transferred.
			string_id message = new string_id (c_stringFile, "s_28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Transfer All Available Funds]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Cancel]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Account ID not recognized. Access denied.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Return to Previous Menu]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Return to Previous Menu]
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Greetings Durr Roddack, please select from the following actions.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Edit Personal Records]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Check Pay Balance]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Make Bank Transfer]
			boolean hasResponse2 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Enter amount to be transferred.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Transfer All Available Funds]
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			eisley_thranta_payroll_terminal_action_grantAppFunds (player, npc);

			//-- NPC: Funds transfer initiated. Confirmation will be sent shortly.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Cancel]
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: Greetings Durr Roddack, please select from the following actions.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Edit Personal Records]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Check Pay Balance]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: [Make Bank Transfer]
			boolean hasResponse2 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int eisley_thranta_payroll_terminal_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Account ID not recognized. Access denied.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Return to Previous Menu]
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			//-- NPC: White Thranta Payroll Terminal. Please enter employee code to access your account.
			string_id message = new string_id (c_stringFile, "s_4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Enter Durr's Employee Code]
			boolean hasResponse0 = false;
			if (eisley_thranta_payroll_terminal_condition_onPayroll (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Enter Your Employee Code]
			boolean hasResponse1 = false;
			if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_40");

				utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.eisley_thranta_payroll_terminal");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.eisley_thranta_payroll_terminal");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
	{
		//-- NPC: White Thranta Payroll Terminal. Please enter employee code to access your account.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: [Enter Durr's Employee Code]
		boolean hasResponse0 = false;
		if (eisley_thranta_payroll_terminal_condition_onPayroll (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: [Enter Your Employee Code]
		boolean hasResponse1 = false;
		if (eisley_thranta_payroll_terminal_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			utils.setScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId", 1);

			npcStartConversation (player, npc, "eisley_thranta_payroll_terminal", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "eisley_thranta_payroll_terminal")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

	if (branchId == 1 && eisley_thranta_payroll_terminal_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && eisley_thranta_payroll_terminal_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && eisley_thranta_payroll_terminal_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && eisley_thranta_payroll_terminal_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && eisley_thranta_payroll_terminal_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && eisley_thranta_payroll_terminal_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && eisley_thranta_payroll_terminal_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.eisley_thranta_payroll_terminal.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

