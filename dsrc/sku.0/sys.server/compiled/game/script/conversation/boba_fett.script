// ======================================================================
//
// boba_fett.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.groundquests;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/boba_fett";

// ======================================================================
// Script Conditions
// ======================================================================

boolean boba_fett_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_AcknowledgeCheck (obj_id player, obj_id npc)
{
	if (hasObjVar(player, "mand.acknowledge") )
		return true;

return false;
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_dungeonInactive (obj_id player, obj_id npc)
{
	 string isDungeonActive = getConfigSetting("Dungeon", "Death_Watch");
	 if ( isDungeonActive == null || isDungeonActive == "false" || isDungeonActive == "0")
		 return true;
		
	 return false;
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	if (!groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7") &&
		groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_1"))
		
		return true;
	
	else if (groundquests.isQuestActive(player, "ep3_clone_relics_boba_fett_1"))
	
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_hasCompletedQuestThree (obj_id player, obj_id npc)
{
	return (space_quest.hasWonQuest(player, "destroy_surpriseattack", "ep3_clone_relics_boba_fett_3") &&
			!groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestFourTaskFive (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_clone_relics_boba_fett_4", "haveGun"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_hasCompletedQuestFour (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_4") &&
			!groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestSixTaskTwo (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_clone_relics_boba_fett_6", 1));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestFiveOrSix (obj_id player, obj_id npc)
{
	if (groundquests.isQuestActive(player, "ep3_clone_relics_boba_fett_5") ||
	groundquests.isQuestActive(player, "ep3_clone_relics_boba_fett_6"))
	
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_completedQuestSix (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_6") &&
			!groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestSevenTaskNine (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_clone_relics_boba_fett_7", "returned"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestSeven (obj_id player, obj_id npc)
{
	return	(groundquests.isQuestActive(player, "ep3_clone_relics_boba_fett_7"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_completedQuestSeven (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_onQuestFour (obj_id player, obj_id npc)
{
	return	(groundquests.isQuestActive(player, "ep3_clone_relics_boba_fett_4"));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_isGm (obj_id player, obj_id npc)
{
	return (hasObjVar(player, "gm" ));
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_hasEp3 (obj_id player, obj_id npc)
{
	return features.hasEpisode3Expansion(player);
}

// ----------------------------------------------------------------------

boolean boba_fett_condition_hasCompletetedQuestFive (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_5") &&
		!groundquests.hasCompletedQuest(player, "ep3_clone_relics_boba_fett_7");
}

// ======================================================================
// Script Actions
// ======================================================================

void boba_fett_action_Acknowledge (obj_id player, obj_id npc)
{
setObjVar(player, "mand.acknowledge", true);
faceTo(npc, player);
}

// ----------------------------------------------------------------------

void boba_fett_action_face_to (obj_id player, obj_id npc)
{
faceTo(npc, player);
}

// ----------------------------------------------------------------------

void boba_fett_action_grantQuestOne (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_clone_relics_boba_fett_1");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalTalkedFett (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedToFett");
}

// ----------------------------------------------------------------------

void boba_fett_action_grantQuestFive (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_clone_relics_boba_fett_5");
}

// ----------------------------------------------------------------------

void boba_fett_action_reGrantQuestSix (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_clone_relics_boba_fett_6");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalDatapad (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "datapadReturned");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalCarbine (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "carbine");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalRifle (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rifle");
}

// ----------------------------------------------------------------------

void boba_fett_action_grantQuestSeven (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_clone_relics_boba_fett_7");
}

// ----------------------------------------------------------------------

void boba_fett_action_clearQuestSeven (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_7");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalHelmet (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "receivedReward");
}

// ----------------------------------------------------------------------

void boba_fett_action_signalReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "receivedReward");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest1 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_1");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_2");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_3");
	space_quest.clearQuestFlags(player, "recovery", "ep3_clone_relics_boba_fett_2");
	space_quest.clearQuestFlags(player, "destroy_surpriseattack", "ep3_clone_relics_boba_fett_3");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest2 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_2");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest3 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_3");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest4 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_4");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest5 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_5");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest6 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_6");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuest7 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_7");
}

// ----------------------------------------------------------------------

void boba_fett_action_removeQuestAll (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_1");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_2");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_3");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_4");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_5");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_6");
	groundquests.clearQuest(player, "ep3_clone_relics_boba_fett_7");
	space_quest.clearQuestFlags(player, "recovery", "ep3_clone_relics_boba_fett_2");
	space_quest.clearQuestFlags(player, "destroy_surpriseattack", "ep3_clone_relics_boba_fett_3");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

float boba_fett_tokenDF_tokenDF0001 (obj_id player, obj_id npc)
{
	return 0.f;
}

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int boba_fett_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It is done.
	if (response == "s_462")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Durge won't become a nuisance again?
			string_id message = new string_id (c_stringFile, "s_464");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can guarantee it.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_466");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_482")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Durge won't become a nuisance again?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can guarantee it.
	if (response == "s_466")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I doubt it. Did you bring anything back or am I to just take your word for it?
			string_id message = new string_id (c_stringFile, "s_468");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have his helmet. < hand Durge's helmet to Fett >
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_470");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I doubt it. Did you bring anything back or am I to just take your word for it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have his helmet. < hand Durge's helmet to Fett >
	if (response == "s_470")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_signalReward (player, npc);

			//-- NPC: That indeed looks like Durge's. I'll accept this as proof. I assume you know better than to try and trick me. For holding your end of the bargain you can have this. It used to serve an assassin well, just not well enough I suppose.
			string_id message = new string_id (c_stringFile, "s_472");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It's been a pleasure working with you Fett.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: A pistol?! Do you know what I had to go through?!
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_474");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_478");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That indeed looks like Durge's. I'll accept this as proof. I assume you know better than to try and trick me. For holding your end of the bargain you can have this. It used to serve an assassin well, just not well enough I suppose.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's been a pleasure working with you Fett.
	if (response == "s_474")
	{
		doAnimationAction (player, "bow3");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I've had worse associates as well %TU.
			string_id message = new string_id (c_stringFile, "s_476");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A pistol?! Do you know what I had to go through?!
	if (response == "s_478")
	{
		doAnimationAction (player, "stamp_feet");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just leave, before I change my mind.
			string_id message = new string_id (c_stringFile, "s_480");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing back?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just some final preparations.
	if (response == "s_486")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get to work.
			string_id message = new string_id (c_stringFile, "s_488");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Something else came up. I have to postpone.
	if (response == "s_490")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_clearQuestSeven (player, npc);

			//-- NPC: You're testing my patience.
			string_id message = new string_id (c_stringFile, "s_492");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_494")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Time to track down and put an end to the nuisance that is Durge. The criminal organization 'The Claw' runs their business out of the Dearic hotel on Talus. Their leader never leaves his office but the provided firepower should grant you a pass to have a word with him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will start my hunt there then.
	if (response == "s_498")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_grantQuestSeven (player, npc);

			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_500");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I assume he will have a lot of bodyguards though...
	if (response == "s_502")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes.
			string_id message = new string_id (c_stringFile, "s_504");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh well, for their sake, they better be good. I'm off.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think I have what it takes to do this alone.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_506");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_510");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_514")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh well, for their sake, they better be good. I'm off.
	if (response == "s_506")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_grantQuestSeven (player, npc);

			//-- NPC: Good
			string_id message = new string_id (c_stringFile, "s_508");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think I have what it takes to do this alone.
	if (response == "s_510")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: You are probably right.
			string_id message = new string_id (c_stringFile, "s_512");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What have you found out?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Durge was indeed in the lab. Check this datapad.
	if (response == "s_518")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: < Boba Fett looks through the information on the datapad > Interesting turn of events... You should get some rest. For the next part you will need it, as well as some serious firepower. Do you prefer Carbines or Rifles?
			string_id message = new string_id (c_stringFile, "s_520");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Carbines.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Rifles.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_522");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_526");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_530")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: < Boba Fett looks through the information on the datapad > Interesting turn of events... You should get some rest. For the next part you will need it, as well as some serious firepower. Do you prefer Carbines or Rifles?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Carbines.
	if (response == "s_522")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		boba_fett_action_signalDatapad (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_signalCarbine (player, npc);

			//-- NPC: This one is old but powerful, should suit the occasion.
			string_id message = new string_id (c_stringFile, "s_524");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Rifles.
	if (response == "s_526")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		boba_fett_action_signalDatapad (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_signalRifle (player, npc);

			//-- NPC: This one is old but powerful, should suit the occasion.
			string_id message = new string_id (c_stringFile, "s_528");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just some final preparations.
	if (response == "s_534")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get to work.
			string_id message = new string_id (c_stringFile, "s_536");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_542")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why are you back here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My datapad is fried, I need to know my next location
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_reGrantQuestSix (player, npc);

			//-- NPC: You are supposed to be at the mining outpost on Dantooine.
			string_id message = new string_id (c_stringFile, "s_155");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just some final preparations.
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get to work.
			string_id message = new string_id (c_stringFile, "s_157");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I've done some research on this person that claims he's Durge. The track ends at a research facility called the Warren on Dantooine. Go there and find clues to who this person is and possibly where he's at now.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You say, claims he's Durge. You don't think he's who he says?
	if (response == "s_546")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Probably not.
			string_id message = new string_id (c_stringFile, "s_548");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So who was Durge?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_550");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Say please?
	if (response == "s_562")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: And that will conclude our business together.
			string_id message = new string_id (c_stringFile, "s_564");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_566")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Probably not.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So who was Durge?
	if (response == "s_550")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: You don't have to worry about that. Now will you do your part?
			string_id message = new string_id (c_stringFile, "s_552");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't like being kept in the dark, so no, not without answers.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_554");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_558");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You don't have to worry about that. Now will you do your part?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course.
	if (response == "s_554")
	{
		doAnimationAction (player, "nod_head_once");

		boba_fett_action_grantQuestFive (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Last I heard, the Warren was in a bit of turmoil so keep that in mind.
			string_id message = new string_id (c_stringFile, "s_556");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't like being kept in the dark, so no, not without answers.
	if (response == "s_558")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then it's a no.
			string_id message = new string_id (c_stringFile, "s_560");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Is it done?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes it's done but with a twist.
	if (response == "s_570")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: How so?
			string_id message = new string_id (c_stringFile, "s_572");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: There was another person there when Wogo died.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I didn't kill Wogo.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_574");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_600");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_606")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How so?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: There was another person there when Wogo died.
	if (response == "s_574")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Go on.
			string_id message = new string_id (c_stringFile, "s_576");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: After I killed Wogo, someone named Durge entered the room.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Wogo was already dead when I found him.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_578");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_594");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I didn't kill Wogo.
	if (response == "s_600")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: He did have a lot of enemies.
			string_id message = new string_id (c_stringFile, "s_602");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well the killer was still there. Someone named Durge.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_604");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go on.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: After I killed Wogo, someone named Durge entered the room.
	if (response == "s_578")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Durge? You sure about the name?
			string_id message = new string_id (c_stringFile, "s_580");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. He told me, to tell you, that 'he's coming for you'.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_582");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wogo was already dead when I found him.
	if (response == "s_594")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: He did have a lot of enemies.
			string_id message = new string_id (c_stringFile, "s_596");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well the killer was still there. Someone named Durge.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_598");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 37);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Durge? You sure about the name?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. He told me, to tell you, that 'he's coming for you'.
	if (response == "s_582")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright. Let me see Wogo's gun.
			string_id message = new string_id (c_stringFile, "s_584");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. So do you know this Durge?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_586");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 34);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alright. Let me see Wogo's gun.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. So do you know this Durge?
	if (response == "s_586")
	{
		doAnimationAction (player, "nod_head_once");

		boba_fett_action_signalTalkedFett (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Possibly. Here's your share of the bounty and the gun back, I don't want it.
			string_id message = new string_id (c_stringFile, "s_588");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So what happens now?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_590");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 35);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch35 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Possibly. Here's your share of the bounty and the gun back, I don't want it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what happens now?
	if (response == "s_590")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I may have use for you again. Come back later.
			string_id message = new string_id (c_stringFile, "s_592");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He did have a lot of enemies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well the killer was still there. Someone named Durge.
	if (response == "s_598")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Durge? You sure about the name?
			string_id message = new string_id (c_stringFile, "s_580");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. He told me, to tell you, that 'he's coming for you'.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_582");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He did have a lot of enemies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well the killer was still there. Someone named Durge.
	if (response == "s_604")
	{
		doAnimationAction (player, "explain");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Durge? You sure about the name?
			string_id message = new string_id (c_stringFile, "s_580");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. He told me, to tell you, that 'he's coming for you'.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_582");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What now?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just some final preparations.
	if (response == "s_610")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Get to work.
			string_id message = new string_id (c_stringFile, "s_612");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Something else came up. I have to postpone.
	if (response == "s_614")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest4 (player, npc);

			//-- NPC: You're testing my patience.
			string_id message = new string_id (c_stringFile, "s_616");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_618")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you have the gun?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm still working on it. < Give Fett the details >
	if (response == "s_622")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Have you ever been to the labor outpost on Yavin 4? Wasn't that where your droid said the pirates came from? I don't have time to teach you the job.
			string_id message = new string_id (c_stringFile, "s_624");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Something came up. I can't do this right now.
	if (response == "s_626")
	{
		doAnimationAction (player, "apologize");

		boba_fett_action_removeQuest1 (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not a very wise decision...
			string_id message = new string_id (c_stringFile, "s_628");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_630")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here? I thought I made it clear what you needed to do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes of course, my apologies.
	if (response == "s_634")
	{
		doAnimationAction (player, "apologize");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Apologies won't get you far.
			string_id message = new string_id (c_stringFile, "s_636");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Something came up. I can't do this right now.
	if (response == "s_638")
	{
		doAnimationAction (player, "apologize");

		boba_fett_action_removeQuest1 (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not a very wise decision...
			string_id message = new string_id (c_stringFile, "s_640");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_642")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I've no time for the likes of you. I have more pressing matters to deal with.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_646")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're back again?  Didn't we already have this discussion?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you tell me again about the Death Watch?
	if (response == "s_650")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Death Watch can be a formidable opponent and shouldn't be taken lightly. Be careful fighting against them.
			string_id message = new string_id (c_stringFile, "s_652");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like you've dealt with them before.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Do I get a reward for completing this mission?
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_654");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_662");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've heard Jabba is working you hard. Maybe you could use some help?
	if (response == "s_666")
	{
		doAnimationAction (player, "nervous");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Help?
			string_id message = new string_id (c_stringFile, "s_728");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Um... maybe not help. Do you have some job for me?
			boolean hasResponse0 = false;
			if (boba_fett_condition_hasEp3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yeah! You know, we could be partners.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_730");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_758");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a developer/tester and want to clear quests.
	if (response == "s_668")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which quest?
			string_id message = new string_id (c_stringFile, "s_670");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: 1
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: 2
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: 3
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: 4
			boolean hasResponse3 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: 5
			boolean hasResponse4 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: 6
			boolean hasResponse5 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: 7
			boolean hasResponse6 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			//-- PLAYER: All
			boolean hasResponse7 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse7 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_672");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_676");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_680");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_684");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_688");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_692");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_696");

				if (hasResponse7)
					responses [responseIndex++] = new string_id (c_stringFile, "s_700");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Death Watch can be a formidable opponent and shouldn't be taken lightly. Be careful fighting against them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like you've dealt with them before.
	if (response == "s_654")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Mind your business. The Hutt wants this Death Watch and their leader dead before they cut into his business.  My informants tell me they're cutting a deal with Black Sun even as we speak.
			string_id message = new string_id (c_stringFile, "s_656");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Are you sure that's all there is to it?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_658");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 51);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do I get a reward for completing this mission?
	if (response == "s_662")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: The experience itself will be its own reward.  Don't come to me or the Hutt looking for a hand out, you're likely to end up on the wrong end of a blaster if you keep that up.
			string_id message = new string_id (c_stringFile, "s_664");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mind your business. The Hutt wants this Death Watch and their leader dead before they cut into his business.  My informants tell me they're cutting a deal with Black Sun even as we speak.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are you sure that's all there is to it?
	if (response == "s_658")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't usually give my opinion to braves like you, but in this case I'll make an exception.  All I have to say is, the Mandalorians are dead and nobody is bringin' them back. Now go.
			string_id message = new string_id (c_stringFile, "s_660");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which quest?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 1
	if (response == "s_672")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest1 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_674");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 2
	if (response == "s_676")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest2 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_678");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 3
	if (response == "s_680")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest3 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_682");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 4
	if (response == "s_684")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest4 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_686");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 5
	if (response == "s_688")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest5 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_690");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 6
	if (response == "s_692")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest6 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_694");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: 7
	if (response == "s_696")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuest7 (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_698");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All
	if (response == "s_700")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			boba_fett_action_removeQuestAll (player, npc);

			//-- NPC: Okay
			string_id message = new string_id (c_stringFile, "s_702");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Another of Jabba's little toys... You may want to make yourself useful by checking something out when you get a chance. You're of no use wandering around the palace aimlessly. There's a rumor that Death Watch operatives can be found on Endor somewhere in the northwestern area of the planet.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can't somebody else do it?
	if (response == "s_706")
	{
		boba_fett_action_Acknowledge (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: You won't make any friends around here by passing on what's sure to be a lucrative job like this.
			string_id message = new string_id (c_stringFile, "s_708");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay. Anything else you can tell me?
	if (response == "s_710")
	{
		boba_fett_action_Acknowledge (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Death Watch can be a formidable opponent and shouldn't be taken lightly. Be careful fighting against them.
			string_id message = new string_id (c_stringFile, "s_712");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like you've dealt with them before.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Do I get a reward for completing this mission?
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_714");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_722");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 65);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've heard Jabba is working you hard. Maybe you could use some help?
	if (response == "s_726")
	{
		doAnimationAction (player, "nervous");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Help?
			string_id message = new string_id (c_stringFile, "s_728");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Um... maybe not help. Do you have some job for me?
			boolean hasResponse0 = false;
			if (boba_fett_condition_hasEp3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yeah! You know, we could be partners.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_730");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_758");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 69);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch65 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Death Watch can be a formidable opponent and shouldn't be taken lightly. Be careful fighting against them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like you've dealt with them before.
	if (response == "s_714")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Mind your business. The Hutt wants this Death Watch and their leader dead before they cut into his business.  My informants tell me they're cutting a deal with Black Sun even as we speak.
			string_id message = new string_id (c_stringFile, "s_716");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Are you sure that's all there is to it?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_718");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 66);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do I get a reward for completing this mission?
	if (response == "s_722")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: The experience itself will be its own reward.  Don't come to me or the Hutt looking for a handout -- you're likely to end up on the wrong end of a blaster if you keep that up.
			string_id message = new string_id (c_stringFile, "s_724");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mind your business. The Hutt wants this Death Watch and their leader dead before they cut into his business.  My informants tell me they're cutting a deal with Black Sun even as we speak.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are you sure that's all there is to it?
	if (response == "s_718")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't usually give my opinion to braves like you, but in this case I'll make an exception.  All I have to say is, the Mandalorians are dead and nobody is bringin' them back. Now go.
			string_id message = new string_id (c_stringFile, "s_720");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch69 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Um... maybe not help. Do you have some job for me?
	if (response == "s_730")
	{
		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: You are %TU right? I've seen you around the halls. I suppose I could have some use for you.
			string_id message = new string_id (c_stringFile, "s_732");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Excellent. What do you have in mind?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Really?! That's so cool! Working with Boba Fett!
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_734");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_754");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 70);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah! You know, we could be partners.
	if (response == "s_758")
	{
		doAnimationAction (player, "thumbs_up");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's a good idea for you to leave now.
			string_id message = new string_id (c_stringFile, "s_760");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are %TU right? I've seen you around the halls. I suppose I could have some use for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Excellent. What do you have in mind?
	if (response == "s_734")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need you to collect a mark for me. The target is Uff Wogo. He's of the Marauder species. Grey hair, pony tail, dark brown skin and a heavy drinker. Last seen in the city of Restuss on Rori before it blew up. I have a contact in the refugee camp north of Restuss. Deliver this message to him and he should assist you in finding the mark. The employer of the contract has no interest in the mark staying alive.
			string_id message = new string_id (c_stringFile, "s_736");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What kind of proof should I bring back to collect the bounty?
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I have to kill him? I can't do that.
			boolean hasResponse1 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I was hoping it would be local. I can't go to Rori right now.
			boolean hasResponse2 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_738");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_746");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_750");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Really?! That's so cool! Working with Boba Fett!
	if (response == "s_754")
	{
		doAnimationAction (player, "thumbs_up");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: On second thought, the only job I have for you is to leave... now.
			string_id message = new string_id (c_stringFile, "s_756");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need you to collect a mark for me. The target is Uff Wogo. He's of the Marauder species. Grey hair, pony tail, dark brown skin and a heavy drinker. Last seen in the city of Restuss on Rori before it blew up. I have a contact in the refugee camp north of Restuss. Deliver this message to him and he should assist you in finding the mark. The employer of the contract has no interest in the mark staying alive.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of proof should I bring back to collect the bounty?
	if (response == "s_738")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: The mark uses an exotic weapon, a Needler Carbine. It has some Marauder inscriptions on the stock. That should suffice.
			string_id message = new string_id (c_stringFile, "s_740");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I will be back shortly.
			boolean hasResponse0 = false;
			if (boba_fett_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_742");

				utils.setScriptVar (player, "conversation.boba_fett.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.boba_fett.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have to kill him? I can't do that.
	if (response == "s_746")
	{
		doAnimationAction (player, "taken_aback");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just leave... now.
			string_id message = new string_id (c_stringFile, "s_748");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping it would be local. I can't go to Rori right now.
	if (response == "s_750")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Fine.
			string_id message = new string_id (c_stringFile, "s_752");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int boba_fett_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The mark uses an exotic weapon, a Needler Carbine. It has some Marauder inscriptions on the stock. That should suffice.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. I will be back shortly.
	if (response == "s_742")
	{
		doAnimationAction (player, "nod_head_once");

		boba_fett_action_grantQuestOne (player, npc);

		//-- [NOTE] 
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_744");
			utils.removeScriptVar (player, "conversation.boba_fett.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.boba_fett");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	faceTo (self, player);
	
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.boba_fett");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (boba_fett_condition_onQuestSevenTaskNine (player, npc))
	{
		//-- NPC: Well?
		string_id message = new string_id (c_stringFile, "s_460");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It is done.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse1 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_462");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_482");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 1);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_onQuestSeven (player, npc))
	{
		//-- NPC: What are you doing back?
		string_id message = new string_id (c_stringFile, "s_484");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just some final preparations.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Something else came up. I have to postpone.
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_486");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_490");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_494");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 7);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_completedQuestSix (player, npc))
	{
		//-- NPC: Time to track down and put an end to the nuisance that is Durge. The criminal organization 'The Claw' runs their business out of the Dearic hotel on Talus. Their leader never leaves his office but the provided firepower should grant you a pass to have a word with him.
		string_id message = new string_id (c_stringFile, "s_496");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I will start my hunt there then.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I assume he will have a lot of bodyguards though...
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_498");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_502");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_514");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 10);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_onQuestSixTaskTwo (player, npc))
	{
		//-- NPC: What have you found out?
		string_id message = new string_id (c_stringFile, "s_516");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Durge was indeed in the lab. Check this datapad.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse1 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_518");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_530");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 15);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_onQuestFiveOrSix (player, npc))
	{
		//-- NPC: What are you doing here?
		string_id message = new string_id (c_stringFile, "s_532");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just some final preparations.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse1 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_534");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_542");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 19);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_hasCompletetedQuestFive (player, npc))
	{
		//-- NPC: Why are you back here?
		string_id message = new string_id (c_stringFile, "s_153");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: My datapad is fried, I need to know my next location
		boolean hasResponse0 = false;
		if (!boba_fett_condition_completedQuestSix (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Just some final preparations.
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_154");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_156");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 21);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_hasCompletedQuestFour (player, npc))
	{
		//-- NPC: I've done some research on this person that claims he's Durge. The track ends at a research facility called the Warren on Dantooine. Go there and find clues to who this person is and possibly where he's at now.
		string_id message = new string_id (c_stringFile, "s_544");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You say, claims he's Durge. You don't think he's who he says?
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Say please?
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_546");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_562");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_566");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 24);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_onQuestFourTaskFive (player, npc))
	{
		//-- NPC: Is it done?
		string_id message = new string_id (c_stringFile, "s_568");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes it's done but with a twist.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse1 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_570");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_606");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 30);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_onQuestFour (player, npc))
	{
		//-- NPC: What now?
		string_id message = new string_id (c_stringFile, "s_608");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Just some final preparations.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Something else came up. I have to postpone.
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_610");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_614");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_618");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 39);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_hasCompletedQuestThree (player, npc))
	{
		//-- NPC: Do you have the gun?
		string_id message = new string_id (c_stringFile, "s_620");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, I'm still working on it. < Give Fett the details >
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Something came up. I can't do this right now.
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_622");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_626");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_630");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 42);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: What are you doing here? I thought I made it clear what you needed to do.
		string_id message = new string_id (c_stringFile, "s_632");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes of course, my apologies.
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Something came up. I can't do this right now.
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_634");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_638");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_642");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 45);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_dungeonInactive (player, npc))
	{
		//-- NPC: I've no time for the likes of you. I have more pressing matters to deal with.
		string_id message = new string_id (c_stringFile, "s_644");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse0 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_646");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 48);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition_AcknowledgeCheck (player, npc))
	{
		boba_fett_action_face_to (player, npc);

		//-- NPC: You're back again?  Didn't we already have this discussion?
		string_id message = new string_id (c_stringFile, "s_648");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Can you tell me again about the Death Watch?
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I've heard Jabba is working you hard. Maybe you could use some help?
		boolean hasResponse1 = false;
		if (!boba_fett_condition_completedQuestSeven (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a developer/tester and want to clear quests.
		boolean hasResponse2 = false;
		if (boba_fett_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_650");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_666");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_668");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 49);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (boba_fett_condition__defaultCondition (player, npc))
	{
		//-- NPC: Another of Jabba's little toys... You may want to make yourself useful by checking something out when you get a chance. You're of no use wandering around the palace aimlessly. There's a rumor that Death Watch operatives can be found on Endor somewhere in the northwestern area of the planet.
		string_id message = new string_id (c_stringFile, "s_704");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Can't somebody else do it?
		boolean hasResponse0 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Okay. Anything else you can tell me?
		boolean hasResponse1 = false;
		if (boba_fett_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I've heard Jabba is working you hard. Maybe you could use some help?
		boolean hasResponse2 = false;
		if (!boba_fett_condition_completedQuestSeven (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_706");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_710");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_726");

			utils.setScriptVar (player, "conversation.boba_fett.branchId", 63);

			npcStartConversation (player, npc, "boba_fett", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "boba_fett")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.boba_fett.branchId");

	if (branchId == 1 && boba_fett_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && boba_fett_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && boba_fett_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && boba_fett_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && boba_fett_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && boba_fett_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && boba_fett_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && boba_fett_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && boba_fett_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && boba_fett_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && boba_fett_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && boba_fett_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && boba_fett_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && boba_fett_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && boba_fett_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && boba_fett_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && boba_fett_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && boba_fett_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && boba_fett_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 35 && boba_fett_handleBranch35 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && boba_fett_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && boba_fett_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && boba_fett_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && boba_fett_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && boba_fett_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && boba_fett_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && boba_fett_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && boba_fett_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && boba_fett_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && boba_fett_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && boba_fett_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 65 && boba_fett_handleBranch65 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && boba_fett_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 69 && boba_fett_handleBranch69 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && boba_fett_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && boba_fett_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && boba_fett_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.boba_fett.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

