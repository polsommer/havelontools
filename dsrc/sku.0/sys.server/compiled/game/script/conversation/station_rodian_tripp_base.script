// ======================================================================
//
// station_rodian_tripp_base.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.space_battlefield;
include library.space_combat;
include library.space_content;
include library.space_crafting;
include library.space_flags;
include library.space_quest;
include library.space_transition;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/station_rodian_tripp_base";

// ======================================================================
// Script Conditions
// ======================================================================

boolean station_rodian_tripp_base_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean station_rodian_tripp_base_condition_hasWon_assassinations (obj_id player, obj_id npc)
{
	// Has the player won any of the three ASSASSINATION missions he can take at this point?
	return ( space_quest.hasReceivedReward(player, "assassinate", "ep3_kash_station_assassinate_neutral") ||
			space_quest.hasReceivedReward(player, "assassinate", "ep3_kash_station_assassinate_rebel") ||
			space_quest.hasReceivedReward(player, "assassinate", "ep3_kash_station_assassinate_imperial"));
}

// ----------------------------------------------------------------------

boolean station_rodian_tripp_base_condition_isTooFar (obj_id player, obj_id npc)
{
	space_combat.playCombatTauntSound( player );
	obj_id containingShip = space_transition.getContainingShip(player);
	return ( getDistance( npc, containingShip ) > space_transition.STATION_COMM_MAX_DISTANCE );
}

// ======================================================================
// Script Actions
// ======================================================================

void station_rodian_tripp_base_action_grantDuty_destroy (obj_id player, obj_id npc)
{
	space_quest.grantQuest(player, "destroy_duty", "ep3_kash_station_destroy_duty_rodian_tripp");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int station_rodian_tripp_base_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello? This is the security chief... are you here for a job or something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. What've you got?
	if (response == "s_180")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition_hasWon_assassinations (player, npc))
		{
			//-- NPC: We have trouble with the Chiss. Stupid poachers! Tripp has ordered me to offer seek-and-destroy contracts to any willing pilot of sufficient standing.
			string_id message = new string_id (c_stringFile, "s_185");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good.
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Wait. Um. No. There's nothing I can give you right now. Tripp has laid out specific orders. Only the Civilian Protection Guild gets our contracts. They are the only ones we can trust.
			string_id message = new string_id (c_stringFile, "s_199");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You can trust me!
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_200");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have trouble with the Chiss. Stupid poachers! Tripp has ordered me to offer seek-and-destroy contracts to any willing pilot of sufficient standing.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good.
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Chiss are polluting our hunting grounds on Kashyyyk! They have already landed a number of settler ships on the planet surface. We cannot allow them to land any more!
			string_id message = new string_id (c_stringFile, "s_188");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do I do about it?
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks.
			boolean hasResponse1 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_190");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_191");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Chiss are polluting our hunting grounds on Kashyyyk! They have already landed a number of settler ships on the planet surface. We cannot allow them to land any more!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do about it?
	if (response == "s_190")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will upload coordinates of Chiss settlers and their landing craft. You intercept them and destroy every last one of them. Sound good?
			string_id message = new string_id (c_stringFile, "s_193");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll take it.
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What's it worth to you?
			boolean hasResponse1 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_195");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_196");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks.
	if (response == "s_191")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: What? Are you kidding?
			string_id message = new string_id (c_stringFile, "s_192");
			utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I will upload coordinates of Chiss settlers and their landing craft. You intercept them and destroy every last one of them. Sound good?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take it.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			station_rodian_tripp_base_action_grantDuty_destroy (player, npc);

			//-- NPC: Good! Don't let me down, pilot!
			string_id message = new string_id (c_stringFile, "s_198");
			utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's it worth to you?
	if (response == "s_196")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Three hundred and fifty cred per lousy, worthless Chiss Poacher starship you bring down! How does that sound?
			string_id message = new string_id (c_stringFile, "s_197");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good.
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll skip this.
			boolean hasResponse1 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Three hundred and fifty cred per lousy, worthless Chiss Poacher starship you bring down! How does that sound?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			station_rodian_tripp_base_action_grantDuty_destroy (player, npc);

			//-- NPC: Uploading mission package now!
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll skip this.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well... okay...
			string_id message = new string_id (c_stringFile, "s_27");
			utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Wait. Um. No. There's nothing I can give you right now. Tripp has laid out specific orders. Only the Civilian Protection Guild gets our contracts. They are the only ones we can trust.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can trust me!
	if (response == "s_200")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah. Oh, yeah. I trust you just fine. That's not the thing. Tripp wants it this way. He's the boss. If it were up to me, I'd give you the contract right now! But, it's not up to me. You see?
			string_id message = new string_id (c_stringFile, "s_201");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I become a Civilian Protector?
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_203");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah. Oh, yeah. I trust you just fine. That's not the thing. Tripp wants it this way. He's the boss. If it were up to me, I'd give you the contract right now! But, it's not up to me. You see?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I become a Civilian Protector?
	if (response == "s_203")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Go to the Kashyyyk space station. There you will find a human named Rian Ry. She commands the Civilian Protection Guild space fleet. Work for her a bit then come see us again.
			string_id message = new string_id (c_stringFile, "s_207");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will.
			boolean hasResponse0 = false;
			if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_209");

				utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int station_rodian_tripp_base_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Go to the Kashyyyk space station. There you will find a human named Rian Ry. She commands the Civilian Protection Guild space fleet. Work for her a bit then come see us again.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will.
	if (response == "s_209")
	{
		//-- [NOTE] 
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good! I'll see you later!
			string_id message = new string_id (c_stringFile, "s_211");
			utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.station_rodian_tripp_base");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (station_rodian_tripp_base_condition_isTooFar (player, npc))
	{
		//-- NPC: What? You're breaking up! Come closer if you want to do business!
		string_id message = new string_id (c_stringFile, "s_204");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello? This is the security chief... are you here for a job or something?
		string_id message = new string_id (c_stringFile, "s_578");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. What've you got?
		boolean hasResponse0 = false;
		if (station_rodian_tripp_base_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_180");

			utils.setScriptVar (player, "conversation.station_rodian_tripp_base.branchId", 2);

			npcStartConversation (player, npc, "station_rodian_tripp_base", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "station_rodian_tripp_base")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

	if (branchId == 2 && station_rodian_tripp_base_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && station_rodian_tripp_base_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && station_rodian_tripp_base_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && station_rodian_tripp_base_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && station_rodian_tripp_base_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && station_rodian_tripp_base_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && station_rodian_tripp_base_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && station_rodian_tripp_base_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.station_rodian_tripp_base.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

