// ======================================================================
//
// c_newbie_melee_combat_client_3.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_newbie_melee_combat_client_3";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_newbie_melee_combat_client_3_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_onTaskTalk (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_3", "talkClient1"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_onTaskEscort (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_3", "onEscort1"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_completedEscort (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask (player, "c_newbie_melee_quest_3", "onEscort1"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_defeatedFirstEncounter (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask (player, "c_newbie_melee_quest_3", "timer1"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_defeatedSecondEncounter (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask (player, "c_newbie_melee_quest_3", "encounter2"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_onTaskEscortTwo (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_3", "onEscort2"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_3_condition_completedTaskEscortTwo (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedTask (player, "c_newbie_melee_quest_3", "onEscort2"));
}

// ======================================================================
// Script Actions
// ======================================================================

void c_newbie_melee_combat_client_3_action_signalTalked (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedClient1");
}

// ----------------------------------------------------------------------

void c_newbie_melee_combat_client_3_action_signalTalkedTwo (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedClient2");
}

// ----------------------------------------------------------------------

void c_newbie_melee_combat_client_3_action_signalTalkedThree (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedClient3");
}

// ----------------------------------------------------------------------

void c_newbie_melee_combat_client_3_action_signalEndEscort (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "escortComplete");
	groundquests.completeTask(player, "c_newbie_melee_quest_3", "escortTask");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_newbie_melee_combat_client_3_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alright, give me a few seconds and keep your eyes open for those wretched Tuskens.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it you need to do?
	if (response == "s_262")
	{
		//-- [NOTE] 
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "smack_self");

			c_newbie_melee_combat_client_3_action_signalTalkedTwo (player, npc);

			//-- NPC: Well someone forgot to remove the serial numbers from these harvesters so anyone can now find out that they were put here by... why am I talking to you about this? Just let me do what I have to and you do your job!
			string_id message = new string_id (c_stringFile, "s_264");
			utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_melee_combat_client_3_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't believe they forgot to remove these things. Some of my boss' employees are so dumb...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What things?
	if (response == "s_268")
	{
		//-- [NOTE] 
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Oh nothing, let's go.
			string_id message = new string_id (c_stringFile, "s_270");
			utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_newbie_melee_combat_client_3_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are my protection? I hope you are good.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We should be fine, don't worry.
	if (response == "s_274")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			c_newbie_melee_combat_client_3_action_signalTalked (player, npc);

			//-- NPC: Alright. The harvesters are just up ahead, lead on.
			string_id message = new string_id (c_stringFile, "s_276");
			utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_newbie_melee_combat_client_3");
	setInvulnerable (self, false);
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, new string_id( "npc_name", "tobo" ));
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setInvulnerable (self, false);
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, new string_id( "npc_name", "tobo" ));
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_newbie_melee_combat_client_3");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_completedTaskEscortTwo (player, npc))
	{
		doAnimationAction (npc, "goodbye");

		doAnimationAction (player, "goodbye");

		c_newbie_melee_combat_client_3_action_signalEndEscort (player, npc);

		//-- NPC: Alright, I will be fine from here. Now if that big fat smelly sod sends me on a mission like this again... Anyway, thanks for the help, you did well.
		string_id message = new string_id (c_stringFile, "s_252");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_onTaskEscortTwo (player, npc))
	{
		//-- NPC: No time for small talk, we need to get out of here!
		string_id message = new string_id (c_stringFile, "s_254");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_defeatedSecondEncounter (player, npc))
	{
		c_newbie_melee_combat_client_3_action_signalTalkedThree (player, npc);

		//-- NPC: Alright I'm done! Let's get the heck out of here! Take me back closer to town and I should be fine from there.
		string_id message = new string_id (c_stringFile, "s_256");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_defeatedFirstEncounter (player, npc))
	{
		doAnimationAction (npc, "stamp_feet");

		//-- NPC: I knew the Tuskens would come, it's just my luck! Keep them off me so I can finish this!
		string_id message = new string_id (c_stringFile, "s_258");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_completedEscort (player, npc))
	{
		//-- NPC: Alright, give me a few seconds and keep your eyes open for those wretched Tuskens.
		string_id message = new string_id (c_stringFile, "s_260");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is it you need to do?
		boolean hasResponse0 = false;
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_262");

			utils.setScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId", 5);

			npcStartConversation (player, npc, "c_newbie_melee_combat_client_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_onTaskEscort (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		//-- NPC: I can't believe they forgot to remove these things. Some of my boss' employees are so dumb...
		string_id message = new string_id (c_stringFile, "s_266");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What things?
		boolean hasResponse0 = false;
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_268");

			utils.setScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId", 7);

			npcStartConversation (player, npc, "c_newbie_melee_combat_client_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition_onTaskTalk (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		//-- NPC: You are my protection? I hope you are good.
		string_id message = new string_id (c_stringFile, "s_272");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: We should be fine, don't worry.
		boolean hasResponse0 = false;
		if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_274");

			utils.setScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId", 9);

			npcStartConversation (player, npc, "c_newbie_melee_combat_client_3", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_3_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		doAnimationAction (player, "greet");

		//-- NPC: Are you my bodyguard? No you can't be...
		string_id message = new string_id (c_stringFile, "s_278");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_newbie_melee_combat_client_3")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId");

	if (branchId == 5 && c_newbie_melee_combat_client_3_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_newbie_melee_combat_client_3_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_newbie_melee_combat_client_3_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_3.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

