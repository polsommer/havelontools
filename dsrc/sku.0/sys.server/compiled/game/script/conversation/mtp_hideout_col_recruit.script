// ======================================================================
//
// mtp_hideout_col_recruit.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_hideout_col_recruit";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_hideout_col_recruit_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_recruit_condition_collectionNotComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_recruiter_01") || hasCompletedCollectionSlot(player, "meatlump_recruiter_starter"))
	{
		return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_recruit_condition_checkNeedMoreBooks (obj_id player, obj_id npc)
{
	long maxSlotValue = 20;
	
	if(hasCompletedCollectionSlot(player, "meatlump_recruiter_starter") && !hasCompletedCollection(player, "col_meatlump_recruiter_01"))
	{
		obj_id playerBooks = utils.getStaticItemInInventory(player, "col_meatlump_recruit_manual_02_01");
		if(isIdValid(playerBooks))
		{
			long numberFinished = getCollectionSlotValue(player, "meatlump_recruiter_01");
			long remainingSlots = maxSlotValue - numberFinished;
			int itemCount = getCount(playerBooks);
			if(itemCount == remainingSlots)
			{
				return false;
			}
			else
			{
				return true;
			}
		}
		else
		{
			return true;
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void mtp_hideout_col_recruit_action_grantBooks (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer(player);
	
	if(!hasCompletedCollection(player, "col_meatlump_recruiter_01"))
	{
		//Grant the books//
		obj_id books = static_item.createNewItemFunction("col_meatlump_recruit_manual_02_01", pInv);
		//err...make that 20 books 
		setCount(books, 20);
	}
	if(!hasCompletedCollectionSlot(player, "meatlump_recruiter_starter"))
	{
		modifyCollectionSlotValue(player, "meatlump_recruiter_starter", 1);
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_recruit_action_giveMoreBooks (obj_id player, obj_id npc)
{
	int itemCount = 0;
	long maxSlotValue = 20;
	obj_id pInv = utils.getInventoryContainer(player);
	
	if(!hasCompletedCollection(player, "meatlump_recruiter_01") && hasCompletedCollectionSlot(player, "meatlump_recruiter_starter"))
	{
		obj_id playerBooks = utils.getStaticItemInInventory(player, "col_meatlump_recruit_manual_02_01");
		if(isIdValid(playerBooks))
		{
			itemCount = getCount(playerBooks);
		}
		//get the number of recruits they've recruited
		long numberFinished = getCollectionSlotValue(player, "meatlump_recruiter_01");
		//subtract the recruits they've done so far from the max. (this leaves the remaining)
		long remainingSlots = maxSlotValue - numberFinished;
		long numberToCreate = remainingSlots - (long)itemCount;
		if(numberToCreate > 0)
		{
			//Grant the books//
			obj_id books = static_item.createNewItemFunction("col_meatlump_recruit_manual_02_01", pInv);
			//err...make that 20 books 
			setCount(books, (int)numberToCreate);
		}	
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_hideout_col_recruit_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As an organization, the Meatlumps are growing in numbers daily.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've noticed, there are a lot of people running around these sewers.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition_collectionNotComplete (player, npc))
		{
			//-- NPC: There could be more.  You think you could give me a hand?
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure, what do you have in mind?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks, I'm pretty busy right now.  Maybe some other time?
			boolean hasResponse1 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hopefully all the people I've had helping recruit others will bring in even more.
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There could be more.  You think you could give me a hand?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure, what do you have in mind?
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have a stack of books, the Meatlump Manifesto, that need to be handed out to people across the Galaxy.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why don't we just use a mailing list?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: You're not getting me to play a door-to-door salesman.  Good luck, I'm out of here.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks, I'm pretty busy right now.  Maybe some other time?
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sure, drop by anytime.  I could always use some help.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have a stack of books, the Meatlump Manifesto, that need to be handed out to people across the Galaxy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why don't we just use a mailing list?
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: The entity that controls the mail ensures these manifestos don't reach their destination.  It's happened multiple times before.
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see, so you want me to deliver them?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're not getting me to play a door-to-door salesman.  Good luck, I'm out of here.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: No worries, I'll find someone else. 
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The entity that controls the mail ensures these manifestos don't reach their destination.  It's happened multiple times before.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see, so you want me to deliver them?
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, to whom, it does not matter.  Just make sure it's someone you've never met before.
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good.  Give me the books and I'll be on my way.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, to whom, it does not matter.  Just make sure it's someone you've never met before.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good.  Give me the books and I'll be on my way.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: As a warning, please be careful, there are many organizations that oppose us.  If they see you handing out recruitment materials, they are liable to attack.
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll make sure I'm super-sneaky.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As a warning, please be careful, there are many organizations that oppose us.  If they see you handing out recruitment materials, they are liable to attack.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll make sure I'm super-sneaky.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_recruit_action_grantBooks (player, npc);

			//-- NPC: Here are the books, good luck!
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks, however, I do have an issue.  I have lost the stack of Meatlump Manifestos you gave me.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lost them?  Hmm...well, I can give you a few more, but please don't waste them.
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good, I'll be more careful this time.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_recruit_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Lost them?  Hmm...well, I can give you a few more, but please don't waste them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good, I'll be more careful this time.
	if (response == "s_42")
	{
		mtp_hideout_col_recruit_action_giveMoreBooks (player, npc);

		//-- [NOTE] 
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here's enough to finish what you started. 
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_hideout_col_recruit");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_hideout_col_recruit");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!mtp_hideout_col_recruit_condition_checkNeedMoreBooks (player, npc))
	{
		//-- NPC: As an organization, the Meatlumps are growing in numbers daily.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I've noticed, there are a lot of people running around these sewers.
		boolean hasResponse0 = false;
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 1);

			npcStartConversation (player, npc, "mtp_hideout_col_recruit", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_col_recruit_condition_checkNeedMoreBooks (player, npc))
	{
		//-- NPC: Welcome back.
		string_id message = new string_id (c_stringFile, "s_39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thanks, however, I do have an issue.  I have lost the stack of Meatlump Manifestos you gave me.
		boolean hasResponse0 = false;
		if (mtp_hideout_col_recruit_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			utils.setScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId", 11);

			npcStartConversation (player, npc, "mtp_hideout_col_recruit", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_hideout_col_recruit")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

	if (branchId == 1 && mtp_hideout_col_recruit_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && mtp_hideout_col_recruit_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && mtp_hideout_col_recruit_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && mtp_hideout_col_recruit_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && mtp_hideout_col_recruit_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && mtp_hideout_col_recruit_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && mtp_hideout_col_recruit_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && mtp_hideout_col_recruit_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_hideout_col_recruit.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

