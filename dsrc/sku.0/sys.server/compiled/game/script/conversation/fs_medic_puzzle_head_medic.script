// ======================================================================
//
// fs_medic_puzzle_head_medic.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.fs_quests;
include library.quests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/fs_medic_puzzle_head_medic";

// ======================================================================
// Script Conditions
// ======================================================================

boolean fs_medic_puzzle_head_medic_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_ableToDoMedicQuest (obj_id player, obj_id npc)
{
	return fs_quests.hasQuestAccepted(player);
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_CanTalkToVillagers (obj_id player, obj_id npc)
{
	return fs_quests.isVillageEligible(player);
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_hasCompleted1 (obj_id player, obj_id npc)
{
	if (quests.canActivate(MEDIC_QUEST_NAME_TWO,player) && quests.isComplete(MEDIC_QUEST_NAME_ONE,player) )
	{
		return true;
	}
	else return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_hasCompleted2 (obj_id player, obj_id npc)
{
	if (quests.canActivate(MEDIC_QUEST_NAME_THREE,player) && quests.isComplete(MEDIC_QUEST_NAME_TWO,player) )
	{
		return true;
	}
	else return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_Finished (obj_id player, obj_id npc)
{
	return quests.isComplete("fs_medic_puzzle_quest_finish",player);
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_inProgress (obj_id player, obj_id npc)
{
	//quest logic if in progress
	//if (healing quest in progress) return true;
	if (hasObjVar(player,"fs.numberHealed"))
	{
		if ( utils.getIntObjVar(player,"fs.numberHealed") < FIRST_SET && !quests.isComplete(MEDIC_QUEST_NAME_ONE,player)) 
			return true;
		if ( utils.getIntObjVar(player,"fs.numberHealed") < SECOND_SET && !quests.isComplete(MEDIC_QUEST_NAME_TWO,player) && quests.isActive(MEDIC_QUEST_NAME_TWO,player)) 
			return true;
		if ( utils.getIntObjVar(player,"fs.numberHealed") < THIRD_SET && !quests.isComplete(MEDIC_QUEST_NAME_THREE,player) && quests.isActive(MEDIC_QUEST_NAME_THREE,player))
			return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_healedFirstSet (obj_id player, obj_id npc)
{
	if (hasObjVar(player,"fs.numberHealed"))
	{
		if ( utils.getIntObjVar(player,"fs.numberHealed") >= FIRST_SET && quests.isActive(MEDIC_QUEST_NAME_ONE,player)) return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_healedSecondSet (obj_id player, obj_id npc)
{
	if (hasObjVar(player,"fs.numberHealed"))
	{
		if ( utils.getIntObjVar(player,"fs.numberHealed") >= SECOND_SET && quests.isActive(MEDIC_QUEST_NAME_TWO,player) ) return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_healedThirdSet (obj_id player, obj_id npc)
{
	if (hasObjVar(player,"fs.numberHealed"))
	{
		if ( utils.getIntObjVar(player,"fs.numberHealed") >= THIRD_SET && quests.isActive(MEDIC_QUEST_NAME_THREE,player) ) return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_InventoryCheck (obj_id player, obj_id npc)
{
	obj_id inv = utils.getInventoryContainer(player);
	int freeSpace = getVolumeFree(inv);
	if (freeSpace<1)
	{
		if (hasObjVar(player,"fs.numberHealed"))
		{
			if ( utils.getIntObjVar(player,"fs.numberHealed") >= FIRST_SET && !quests.isComplete(MEDIC_QUEST_NAME_ONE,player)) return true;
			if ( utils.getIntObjVar(player,"fs.numberHealed") >= SECOND_SET && !quests.isComplete(MEDIC_QUEST_NAME_TWO,player)) return true;
			if ( utils.getIntObjVar(player,"fs.numberHealed") >= THIRD_SET && !quests.isComplete(MEDIC_QUEST_NAME_THREE,player)) return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean fs_medic_puzzle_head_medic_condition_haveMedicSkill (obj_id player, obj_id npc)
{
	return hasSkill(player, "science_medic_master");
}

// ======================================================================
// Script Actions
// ======================================================================

void fs_medic_puzzle_head_medic_action_GiveQuest1 (obj_id player, obj_id npc)
{
	quests.activate(MEDIC_QUEST_NAME_ONE,player,npc);
	fs_quests.setQuestAccepted(player);
	attachScript(player, "systems.fs_quest.fs_medic_puzzle_cleanup");
	setObjVar(player,"fs.numberHealed",0);
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_GiveDraftSchematic (obj_id player, obj_id npc)
{
	//add code to grant limited use draft schematic
	grantSchematic(player, "object/draft_schematic/item/quest_item/fs_medic_puzzle_heal_pack.iff");
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_Complete1 (obj_id player, obj_id npc)
{
	fs_quests.unlockBranch(player, "force_sensitive_heightened_senses_persuasion");
	quests.complete(MEDIC_QUEST_NAME_ONE,player,true);
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_Complete2 (obj_id player, obj_id npc)
{
	obj_id playerInventory = utils.getInventoryContainer(player);
	obj_id createdObject = createObject(REWARD_PART_TWO, playerInventory, "");	
	quests.complete(MEDIC_QUEST_NAME_TWO,player,true);
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_Complete3 (obj_id player, obj_id npc)
{
	obj_id playerInventory = utils.getInventoryContainer(player);
	obj_id createdObject = createObject(REWARD_PART_THREE, playerInventory, "");	
	quests.complete(MEDIC_QUEST_NAME_THREE,player,true);
	detachScript(player, "systems.fs_quest.fs_medic_puzzle_cleanup");
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_GiveQuest2 (obj_id player, obj_id npc)
{
	quests.activate(MEDIC_QUEST_NAME_TWO,player,npc);
}

// ----------------------------------------------------------------------

void fs_medic_puzzle_head_medic_action_GiveQuest3 (obj_id player, obj_id npc)
{
	quests.activate(MEDIC_QUEST_NAME_THREE,player,npc);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string fs_medic_puzzle_head_medic_tokenTO_NumberLeftToHeal (obj_id player, obj_id npc)
{
	int peopleHealed = 0;
	if (utils.hasObjVar(player,"fs.numberHealed"))
		peopleHealed = utils.getIntObjVar(player,"fs.numberHealed");
	if (peopleHealed >=10)
		peopleHealed = peopleHealed - 10;
	if (peopleHealed >=5)
		peopleHealed = peopleHealed - 5;
	peopleHealed = 5 - peopleHealed;
	return "" + peopleHealed;
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

const string MEDIC_QUEST_NAME_ONE				= "fs_medic_puzzle_quest_01";
const string MEDIC_QUEST_NAME_TWO				= "fs_medic_puzzle_quest_02";
const string MEDIC_QUEST_NAME_THREE				= "fs_medic_puzzle_quest_03";
const string REWARD_PART_THREE					= "object/tangible/loot/plant_grow/plant_stage_1.iff";
const string REWARD_PART_TWO					= "object/tangible/wearables/necklace/necklace_ice_pendant.iff";
const int FIRST_SET		=5;
const int SECOND_SET	=10;
const int THIRD_SET		=15;

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.fs_medic_puzzle_head_medic");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.fs_medic_puzzle_head_medic");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!fs_medic_puzzle_head_medic_condition_CanTalkToVillagers (player, self))
	{
		//-- NPC: I'm sorry, I don't know you. I only work with people I know.
		string_id message = new string_id (c_stringFile, "s_3b984995");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_Finished (player, self))
	{
		//-- NPC: You've already done more than anyone ever expected, please take some time to rest, everyone needs to take a moment to rest.
		string_id message = new string_id (c_stringFile, "s_3496f642");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_InventoryCheck (player, self))
	{
		//-- NPC: You seem to have a few too many items in your bag there, why don't you free up some room, then come talk to me again.
		string_id message = new string_id (c_stringFile, "s_36b08dde");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_healedThirdSet (player, self))
	{
		fs_medic_puzzle_head_medic_action_Complete3 (player, self);

		//-- NPC: My, you are tenacious. Well, I have something that will prove useful to you, this plant is rather difficult to grow, but if you are up to the challenge, and it seems you are, the fruit is... well, you will see.
		string_id message = new string_id (c_stringFile, "s_cc506105");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_healedSecondSet (player, self))
	{
		fs_medic_puzzle_head_medic_action_Complete2 (player, self);

		//-- NPC: Splendid! Here, I think you may find some use of this, I know it's not much, but it should help. We still have more to do if you are interested, just let me know.
		string_id message = new string_id (c_stringFile, "s_a7afcfea");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_healedFirstSet (player, self))
	{
		fs_medic_puzzle_head_medic_action_Complete1 (player, self);

		//-- NPC: Wonderful! You are well under way into understanding your potential. You may wish to talk to Noldan to learn more. If you are looking for more work, let me know.
		string_id message = new string_id (c_stringFile, "s_fc604056");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_inProgress (player, self))
	{
		//-- NPC: Hmmm? Oh, talk to the medical droids if you are stuck. Medical records show you have %TO more to go.
		string_id message = new string_id (c_stringFile, "s_2fee0236");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Okay
		boolean hasResponse0 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3c93827f");

			setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 7);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (self);
			pp.other.set (fs_medic_puzzle_head_medic_tokenTO_NumberLeftToHeal (player, self));

			npcStartConversation (player, self, "fs_medic_puzzle_head_medic", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (self);
			pp.other.set (fs_medic_puzzle_head_medic_tokenTO_NumberLeftToHeal (player, self));

			chat.chat (self, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_hasCompleted2 (player, self))
	{
		//-- NPC: Back again are we? Well I have a special plant you may find useful, but you will need to prove you are worthy. Go heal at least another five patients then come talk to me again.
		string_id message = new string_id (c_stringFile, "s_e15eb34d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I would like to continue.
		boolean hasResponse0 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I have some other things to take care of.
		boolean hasResponse1 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_86129116");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69ab9125");

			setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 9);

			npcStartConversation (player, self, "fs_medic_puzzle_head_medic", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_hasCompleted1 (player, self))
	{
		//-- NPC: Oh, you are still here? well if you like, go ahead and heal at least five more patients then come talk to me again, I have a little trinket you might find useful.
		string_id message = new string_id (c_stringFile, "s_ddb49891");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I would like to continue.
		boolean hasResponse0 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I have some other things to take care of.
		boolean hasResponse1 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_86129116");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69ab9125");

			setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 12);

			npcStartConversation (player, self, "fs_medic_puzzle_head_medic", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!fs_medic_puzzle_head_medic_condition_haveMedicSkill (player, self))
	{
		//-- NPC: You don't seem to have enough medical training. I'm sorry, but I don't think you are going to be able to help me. I need at least a Master Medic, if not someone with more experience.
		string_id message = new string_id (c_stringFile, "s_47a32bb0");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition_ableToDoMedicQuest (player, self))
	{
		//-- NPC: You look to be rather busy at the moment, come back to me when you aren't so busy.
		string_id message = new string_id (c_stringFile, "s_8a54510d");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
	{
		//-- NPC: Hello, I'm the head physician here. Are you one of the new Medics sent to help out?
		string_id message = new string_id (c_stringFile, "s_d46bb0c5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I'm here to help
		boolean hasResponse0 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, sorry I'm in the wrong place.
		boolean hasResponse1 = false;
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1024d197");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3228a43d");

			setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 17);

			npcStartConversation (player, self, "fs_medic_puzzle_head_medic", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "fs_medic_puzzle_head_medic")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Hmmm? Oh, talk to the medical droids if you are stuck. Medical records show you have %TO more to go.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay
	if (branchId == 7 && response == "s_3c93827f")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Thanks!
			string_id message = new string_id (c_stringFile, "s_c4682ea6");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hmmm? Oh, talk to the medical droids if you are stuck. Medical records show you have %TO more to go.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Back again are we? Well I have a special plant you may find useful, but you will need to prove you are worthy. Go heal at least another five patients then come talk to me again.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I would like to continue.
	if (branchId == 9 && response == "s_86129116")
	{
		fs_medic_puzzle_head_medic_action_GiveQuest3 (player, self);

		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Good, Please talk to the medical droids again and they will help you.
			string_id message = new string_id (c_stringFile, "s_464f7bf4");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Back again are we? Well I have a special plant you may find useful, but you will need to prove you are worthy. Go heal at least another five patients then come talk to me again.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Back again are we? Well I have a special plant you may find useful, but you will need to prove you are worthy. Go heal at least another five patients then come talk to me again.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I have some other things to take care of.
	if (branchId == 9 && response == "s_69ab9125")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: I'm sorry to hear that, I will do my best here. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_bef6939f");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Back again are we? Well I have a special plant you may find useful, but you will need to prove you are worthy. Go heal at least another five patients then come talk to me again.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, you are still here? well if you like, go ahead and heal at least five more patients then come talk to me again, I have a little trinket you might find useful.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I would like to continue.
	if (branchId == 12 && response == "s_86129116")
	{
		fs_medic_puzzle_head_medic_action_GiveQuest2 (player, self);

		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Good, Please talk to the medical droids again and they will help you.
			string_id message = new string_id (c_stringFile, "s_464f7bf4");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, you are still here? well if you like, go ahead and heal at least five more patients then come talk to me again, I have a little trinket you might find useful.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Oh, you are still here? well if you like, go ahead and heal at least five more patients then come talk to me again, I have a little trinket you might find useful.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I have some other things to take care of.
	if (branchId == 12 && response == "s_69ab9125")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: I'm sorry to hear that, I will do my best here. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_bef6939f");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Oh, you are still here? well if you like, go ahead and heal at least five more patients then come talk to me again, I have a little trinket you might find useful.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hello, I'm the head physician here. Are you one of the new Medics sent to help out?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I'm here to help
	if (branchId == 17 && response == "s_1024d197")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Good. Before we get started, I should let you know that you will be too busy to help out any of the other villagers. Also, I will talk with Noldan and he can help you out with some persuasion techniques if you help out. Are you sure you would like to help?
			string_id message = new string_id (c_stringFile, "s_1718c6ed");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, let's get started
			boolean hasResponse0 = false;
			if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, no thanks.
			boolean hasResponse1 = false;
			if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cc64464a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2e7eb20b");

				setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello, I'm the head physician here. Are you one of the new Medics sent to help out?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hello, I'm the head physician here. Are you one of the new Medics sent to help out?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, sorry I'm in the wrong place.
	if (branchId == 17 && response == "s_3228a43d")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, I wouldn't loiter around here. Too many sick people.
			string_id message = new string_id (c_stringFile, "s_db216f5");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello, I'm the head physician here. Are you one of the new Medics sent to help out?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Good. Before we get started, I should let you know that you will be too busy to help out any of the other villagers. Also, I will talk with Noldan and he can help you out with some persuasion techniques if you help out. Are you sure you would like to help?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, let's get started
	if (branchId == 18 && response == "s_cc64464a")
	{
		fs_medic_puzzle_head_medic_action_GiveQuest1 (player, self);

		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			fs_medic_puzzle_head_medic_action_GiveDraftSchematic (player, self);

			//-- NPC: Great! Let me explain what has happened. It seems in the last attack there were multiple uses of some rather potent chemical weapons. Those you see lying around here are still sick. Unfortunately, normal medicines are not helping them.
			string_id message = new string_id (c_stringFile, "s_728f65ee");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How are you treating them?
			boolean hasResponse0 = false;
			if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7857c2a9");

				setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Good. Before we get started, I should let you know that you will be too busy to help out any of the other villagers. Also, I will talk with Noldan and he can help you out with some persuasion techniques if you help out. Are you sure you would like to help?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Good. Before we get started, I should let you know that you will be too busy to help out any of the other villagers. Also, I will talk with Noldan and he can help you out with some persuasion techniques if you help out. Are you sure you would like to help?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, no thanks.
	if (branchId == 18 && response == "s_2e7eb20b")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Sorry to hear that. I know everyone here can use some help.
			string_id message = new string_id (c_stringFile, "s_41e66cca");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Good. Before we get started, I should let you know that you will be too busy to help out any of the other villagers. Also, I will talk with Noldan and he can help you out with some persuasion techniques if you help out. Are you sure you would like to help?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Great! Let me explain what has happened. It seems in the last attack there were multiple uses of some rather potent chemical weapons. Those you see lying around here are still sick. Unfortunately, normal medicines are not helping them.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: How are you treating them?
	if (branchId == 19 && response == "s_7857c2a9")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, I devised a highly potent, yet also highly dangerous counteragent to many of the symptoms. The only problem is that it has some side effects that are almost as bad as what they currently have. However, through multiple treatments, I've been able to cure some. Here, this draft schematic will allow you to work with the medical droids to help.
			string_id message = new string_id (c_stringFile, "s_94d417d1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do I do with this?
			boolean hasResponse0 = false;
			if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks!
			boolean hasResponse1 = false;
			if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d17142db");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c4682ea6");

				setObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Great! Let me explain what has happened. It seems in the last attack there were multiple uses of some rather potent chemical weapons. Those you see lying around here are still sick. Unfortunately, normal medicines are not helping them.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, I devised a highly potent, yet also highly dangerous counteragent to many of the symptoms. The only problem is that it has some side effects that are almost as bad as what they currently have. However, through multiple treatments, I've been able to cure some. Here, this draft schematic will allow you to work with the medical droids to help.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do with this?
	if (branchId == 20 && response == "s_d17142db")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: With the use of high and lower quality components, and careful experimentation, you can specialize the treatment to cure specific symptoms. You should also be able to change what sort of side effects it produces. See if you can treat five patients, and good luck with that. Talk to the medical droids. They will help you administer the medicine.
			string_id message = new string_id (c_stringFile, "s_17db6d3c");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, I devised a highly potent, yet also highly dangerous counteragent to many of the symptoms. The only problem is that it has some side effects that are almost as bad as what they currently have. However, through multiple treatments, I've been able to cure some. Here, this draft schematic will allow you to work with the medical droids to help.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, I devised a highly potent, yet also highly dangerous counteragent to many of the symptoms. The only problem is that it has some side effects that are almost as bad as what they currently have. However, through multiple treatments, I've been able to cure some. Here, this draft schematic will allow you to work with the medical droids to help.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks!
	if (branchId == 20 && response == "s_c4682ea6")
	{
		//-- [NOTE] 
		if (fs_medic_puzzle_head_medic_condition__defaultCondition (player, self))
		{
			//-- NPC: Good luck. Talk with the medical droids for help.
			string_id message = new string_id (c_stringFile, "s_d08f8eb6");
			removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, I devised a highly potent, yet also highly dangerous counteragent to many of the symptoms. The only problem is that it has some side effects that are almost as bad as what they currently have. However, through multiple treatments, I've been able to cure some. Here, this draft schematic will allow you to work with the medical droids to help.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.fs_medic_puzzle_head_medic.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

