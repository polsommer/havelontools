// ======================================================================
//
// prof_medic_21_mia.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/prof_medic_21_mia";

// ======================================================================
// Script Conditions
// ======================================================================

boolean prof_medic_21_mia_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean prof_medic_21_mia_condition_playerOnCorrectStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_medic_21", "talktomia");
}

// ----------------------------------------------------------------------

boolean prof_medic_21_mia_condition_playercompletedTask (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "prof_medic_21", "talktomia");
}

// ----------------------------------------------------------------------

boolean prof_medic_21_mia_condition_playerOnFirstStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_medic_21", "mia1");
}

// ======================================================================
// Script Actions
// ======================================================================

void prof_medic_21_mia_action_givePassSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_medic_21_mia");
}

// ----------------------------------------------------------------------

void prof_medic_21_mia_action_giveFirstSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_medic_21_mia_failed");
}

// ----------------------------------------------------------------------

void prof_medic_21_mia_action_healParticles1 (obj_id player, obj_id npc)
{
	playClientEffectObj(player, "clienteffect/prof_medic_21_heal1.cef", npc, "");
}

// ----------------------------------------------------------------------

void prof_medic_21_mia_action_healParticles2 (obj_id player, obj_id npc)
{
	playClientEffectObj(player, "clienteffect/prof_medic_21_heal2.cef", npc, "");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int prof_medic_21_mia_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I...can't see too well. Is it night out?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Mia, listen to me. I'm going to give you a shot.
	if (response == "s_20")
	{
		doAnimationAction (player, "feed_creature_low");

		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			prof_medic_21_mia_action_healParticles2 (player, npc);

			//-- NPC: No. No more blasters. Don't like the sound of... OUCH!
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You should rest for about a week. Then you will be better.
			boolean hasResponse0 = false;
			if (prof_medic_21_mia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8");

				utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_mia_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No. No more blasters. Don't like the sound of... OUCH!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You should rest for about a week. Then you will be better.
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			prof_medic_21_mia_action_givePassSignal (player, npc);

			//-- NPC: Thank you, doctor.
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_mia_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Who are you? What are you doing here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've been sent to help you, Mia. How are you feeling?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			//-- NPC: I feel...cold. My leg hurts terribly and the room is spinning. Can't...walk. Who are you?
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What happened to you?
			boolean hasResponse0 = false;
			if (prof_medic_21_mia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_mia_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I feel...cold. My leg hurts terribly and the room is spinning. Can't...walk. Who are you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happened to you?
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Heard howling. Jowy and I went outside to check. Terrible pain. Screaming. Mine? No...no no!  No more!
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Hmm. Some delerium and a severely infected leg. Hold still.
			boolean hasResponse0 = false;
			if (prof_medic_21_mia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_mia_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Heard howling. Jowy and I went outside to check. Terrible pain. Screaming. Mine? No...no no!  No more!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hmm. Some delerium and a severely infected leg. Hold still.
	if (response == "s_27")
	{
		doAnimationAction (player, "feed_creature_low");

		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			prof_medic_21_mia_action_healParticles1 (player, npc);

			//-- NPC: Ow! That hurt! There's a burning in my leg!
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, let's see how you respond. No...that's not good enough.
			boolean hasResponse0 = false;
			if (prof_medic_21_mia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_medic_21_mia_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ow! That hurt! There's a burning in my leg!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, let's see how you respond. No...that's not good enough.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			prof_medic_21_mia_action_giveFirstSignal (player, npc);

			//-- NPC: I don't feel much better.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.prof_medic_21_mia");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setPosture (self, POSTURE_SITTING);
	setInvulnerable (self, true);
	setName (self, "Mia Zaprin");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setPosture (self, POSTURE_SITTING);
	setInvulnerable (self, true);
	setName (self, "Mia Zaprin");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.prof_medic_21_mia");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (prof_medic_21_mia_condition_playercompletedTask (player, npc))
	{
		//-- NPC: The room is still spinning a bit. I'll just sit here until I can stand up.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_mia_condition_playerOnCorrectStep (player, npc))
	{
		//-- NPC: I...can't see too well. Is it night out?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Mia, listen to me. I'm going to give you a shot.
		boolean hasResponse0 = false;
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 2);

			npcStartConversation (player, npc, "prof_medic_21_mia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_mia_condition_playerOnFirstStep (player, npc))
	{
		//-- NPC: Who are you? What are you doing here?
		string_id message = new string_id (c_stringFile, "s_14");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I've been sent to help you, Mia. How are you feeling?
		boolean hasResponse0 = false;
		if (prof_medic_21_mia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			utils.setScriptVar (player, "conversation.prof_medic_21_mia.branchId", 5);

			npcStartConversation (player, npc, "prof_medic_21_mia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_medic_21_mia_condition__defaultCondition (player, npc))
	{
		//-- NPC: So....cold. The room...spinning. Father? Is that you? Mommy?
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "prof_medic_21_mia")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.prof_medic_21_mia.branchId");

	if (branchId == 2 && prof_medic_21_mia_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && prof_medic_21_mia_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && prof_medic_21_mia_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && prof_medic_21_mia_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && prof_medic_21_mia_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && prof_medic_21_mia_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.prof_medic_21_mia.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

