// ======================================================================
//
// npe_resource_vendor.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.money;
include library.npe;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_resource_vendor";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_resource_vendor_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_resource_vendor_condition_has100credits (obj_id player, obj_id npc)
{
	int cash = getTotalMoney (player);
		if (cash >= 100)
		{
			return true;
		}
	return false;	
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_resource_vendor_action_sellMetal (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "steel_smelted", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellFlowers (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "fruit_flowers_naboo", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellFiberplast (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "fiberplast_corellia", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellGemstones (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "gemstone_mixed_low_quality", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellWater (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "water_vapor_rori", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellCereal (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	obj_id[] myResources = new obj_id[1];
	myResources[0] = npe.grantNpeResourceStack(player, "processed_cereal", 40);
	showLootBox(player, myResources);
}

// ----------------------------------------------------------------------

void npe_resource_vendor_action_sellCraftingTool (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	money.requestPayment(player, npc, 100, "pass_fail", params, true);
	
	obj_id[] myTool = new obj_id[1];
	myTool[0] = createObjectInInventoryAllowOverload("object/tangible/crafting/station/generic_tool.iff", player);
	showLootBox(player, myTool);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_resource_vendor_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: May I help you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need resources.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Let me tell you how my prices work. I have a flat fee of 100 credits for 40 units of resources. What do you need?
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I need metal.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would like some flowers.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I would like water.
			boolean hasResponse2 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I need gemstones.
			boolean hasResponse3 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I need fiberplast.
			boolean hasResponse4 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I need cereal.
			boolean hasResponse5 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_36");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need a new crafting tool.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: I can't sell it to you unless you have 100 credits.
			string_id message = new string_id (c_stringFile, "s_110");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Very well. I can sell you a new crafting tool for 100 credits. Would you like one?
			string_id message = new string_id (c_stringFile, "s_112");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_114");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_118");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well. Let me tell you how my prices work. I have a flat fee of 100 credits for 40 units of resources. What do you need?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need metal.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: I'm sorry. You don't have 100 credits. Please come back to me when you do.
			string_id message = new string_id (c_stringFile, "s_69");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: You will get 40 units of metal for 100 credits. Is this acceptable?
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like some flowers.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: I'm sorry. You don't have 100 credits. Please come back to me when can afford my goods.
			string_id message = new string_id (c_stringFile, "s_70");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: For 100 credits, you will get 40 units of flowers. Would you like to complete this transaction?
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like water.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: You need 100 credits before I can sell you water.
			string_id message = new string_id (c_stringFile, "s_71");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can sell you 40 units of water for 100 credits.
			string_id message = new string_id (c_stringFile, "s_39");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need gemstones.
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: You cannot afford the genstones. Talk to me again when you have 100 credits.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, gemstones. I can sell you 40 units of gemstones for 100 credits. Would you like them?
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need fiberplast.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: I'm sorry, but you do not appear to have the credits needed.
			string_id message = new string_id (c_stringFile, "s_73");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can sell you 40 units of fiberplast for 100 credits. Would you like them?
			string_id message = new string_id (c_stringFile, "s_65");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need cereal.
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (!npe_resource_vendor_condition_has100credits (player, npc))
		{
			//-- NPC: I can't sell them to you unless you have 100 credits.
			string_id message = new string_id (c_stringFile, "s_82");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can sell you 40 units of cereal for 100 credits. Would you like them?
			string_id message = new string_id (c_stringFile, "s_84");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes.
			boolean hasResponse0 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (npe_resource_vendor_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You will get 40 units of metal for 100 credits. Is this acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellMetal (player, npc);

			//-- NPC: Here are your 40 units of metal.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Understood. If you change your mind, let me know.
			string_id message = new string_id (c_stringFile, "s_23");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For 100 credits, you will get 40 units of flowers. Would you like to complete this transaction?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellFlowers (player, npc);

			//-- NPC: Enjoy your 40 units of flowers.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. I will be here if you need resources.
			string_id message = new string_id (c_stringFile, "s_34");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can sell you 40 units of water for 100 credits.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellWater (player, npc);

			//-- NPC: Here's your 40 units of water.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: I  understand. 
			string_id message = new string_id (c_stringFile, "s_47");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, gemstones. I can sell you 40 units of gemstones for 100 credits. Would you like them?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellGemstones (player, npc);

			//-- NPC: Here are your gemstones.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good enough.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can sell you 40 units of fiberplast for 100 credits. Would you like them?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_67")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellFiberplast (player, npc);

			//-- NPC: Enjoy the fiberplast.
			string_id message = new string_id (c_stringFile, "s_74");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. I will be here if you change your mind.
			string_id message = new string_id (c_stringFile, "s_78");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can sell you 40 units of cereal for 100 credits. Would you like them?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellCereal (player, npc);

			//-- NPC: Make something delicious with these!
			string_id message = new string_id (c_stringFile, "s_88");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very Well. I will be here if you change your mind.
			string_id message = new string_id (c_stringFile, "s_92");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_resource_vendor_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. Very well. I can sell you a new crafting tool for 100 credits. Would you like one?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			npe_resource_vendor_action_sellCraftingTool (player, npc);

			//-- NPC: Very good.  Enjoy your crafting tool!
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You should look at my resources!
			string_id message = new string_id (c_stringFile, "s_120");
			utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_resource_vendor");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Jesi (Resource Vendor)");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Jesi (Resource Vendor)");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_resource_vendor");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_resource_vendor_condition__defaultCondition (player, npc))
	{
		//-- NPC: May I help you?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I need resources.
		boolean hasResponse0 = false;
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I need a new crafting tool.
		boolean hasResponse1 = false;
		if (npe_resource_vendor_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_108");

			utils.setScriptVar (player, "conversation.npe_resource_vendor.branchId", 1);

			npcStartConversation (player, npc, "npe_resource_vendor", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_resource_vendor")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_resource_vendor.branchId");

	if (branchId == 1 && npe_resource_vendor_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && npe_resource_vendor_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_resource_vendor_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_resource_vendor_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && npe_resource_vendor_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && npe_resource_vendor_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && npe_resource_vendor_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && npe_resource_vendor_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && npe_resource_vendor_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_resource_vendor.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

