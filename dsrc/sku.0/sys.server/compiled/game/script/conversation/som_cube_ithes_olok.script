// ======================================================================
//
// som_cube_ithes_olok.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_cube_ithes_olok";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_cube_ithes_olok_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_cube_ithes_olok_condition_isOnQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "som_jenha_tar_cube");
}

// ----------------------------------------------------------------------

boolean som_cube_ithes_olok_condition_hasNotes (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "som_jenha_tar_cube", "take_notes");
}

// ----------------------------------------------------------------------

boolean som_cube_ithes_olok_condition_completedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "som_jenha_tar_cube");
}

// ----------------------------------------------------------------------

boolean som_cube_ithes_olok_condition_lostCube (obj_id player, obj_id npc)
{
	if(utils.playerHasItemByTemplateInBankOrInventory(player, "object/tangible/container/loot/som_cube.iff"))
		return false;
	
	return true;
}

// ======================================================================
// Script Actions
// ======================================================================

void som_cube_ithes_olok_action_grantCubeQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_jenha_tar_cube");
}

// ----------------------------------------------------------------------

void som_cube_ithes_olok_action_sendCompleteSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "somCubeSuccess");
}

// ----------------------------------------------------------------------

void som_cube_ithes_olok_action_giveAnotherCube (obj_id player, obj_id npc)
{
	createObjectInInventoryAllowOverload("object/tangible/container/loot/som_cube.iff", player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_cube_ithes_olok_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, what brings you back here, my friend? Do you need another explanation on how to work the cube?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I lost the cube.
	if (response == "s_193")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			som_cube_ithes_olok_action_giveAnotherCube (player, npc);

			//-- NPC: Seriously? Well, since you were so kind as to help me out, I suppose I can let you have another. But be careful with this one. These are delicate Jedi artifacts!
			string_id message = new string_id (c_stringFile, "s_194");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_195");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please.
	if (response == "s_141")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course! Just open the cube like you might any other container and place three items inside.
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. Then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I've got it figured out.
	if (response == "s_142")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent. Take care then!
			string_id message = new string_id (c_stringFile, "s_143");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Seriously? Well, since you were so kind as to help me out, I suppose I can let you have another. But be careful with this one. These are delicate Jedi artifacts!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_195")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Now, do you need another explanation on how to work the cube?
			string_id message = new string_id (c_stringFile, "s_196");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, please.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I've got it figured out.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_198");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_202");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now, do you need another explanation on how to work the cube?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please.
	if (response == "s_198")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course! Just open the cube like you might any other container and place three items inside.
			string_id message = new string_id (c_stringFile, "s_200");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. Then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I've got it figured out.
	if (response == "s_202")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent. Take care then!
			string_id message = new string_id (c_stringFile, "s_204");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course! Just open the cube like you might any other container and place three items inside.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. Then what?
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Once the items are inside, close the cube and then activate it using the radial interface there on the cube.
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK, then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks. I'll figure out the rest myself.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish. Thank you for your help. Come back if you need assistance!
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course! Just open the cube like you might any other container and place three items inside.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. Then what?
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Once the items are inside, close the cube and then activate it using the radial interface there on the cube.
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK, then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks. I'll figure out the rest myself.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish. Thank you for your help. Come back if you need assistance!
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, the intrepid archaeologist has returned! Were you able to find the Old Republic ruins? Did you take the notes from the symbol stones?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I have them for you right here.
	if (response == "s_119")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			som_cube_ithes_olok_action_sendCompleteSignal (player, npc);

			//-- NPC: Excellent! Let me see. Hmm, now to compare it to the scroll. Ah...of course, that's what that means. It all makes sense now. Would you like to see how it works? Let me show you. Take this cube. You can keep it. I have plenty others. Oh, and these three objects.
			string_id message = new string_id (c_stringFile, "s_122");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. What do I do?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks, but I'll figure it out myself later.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_123");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_124");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm still working on it.
	if (response == "s_120")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well then, go finish up! Make haste!
			string_id message = new string_id (c_stringFile, "s_121");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent! Let me see. Hmm, now to compare it to the scroll. Ah...of course, that's what that means. It all makes sense now. Would you like to see how it works? Let me show you. Take this cube. You can keep it. I have plenty others. Oh, and these three objects.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. What do I do?
	if (response == "s_123")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I've initialized the cube so that it can be opened. Just open it like you might any other container and place the items that I gave you inside.
			string_id message = new string_id (c_stringFile, "s_126");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. Then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_127");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks, but I'll figure it out myself later.
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish. Thank you for your help. Come back if you need assistance!
			string_id message = new string_id (c_stringFile, "s_125");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I've initialized the cube so that it can be opened. Just open it like you might any other container and place the items that I gave you inside.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. Then what?
	if (response == "s_127")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Once the items are inside, close the cube and then activate it using the radial interface there on the cube.
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK, then what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thanks. I'll figure out the rest myself.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks. I'll figure out the rest myself.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish. Thank you for your help. Come back if you need assistance!
			string_id message = new string_id (c_stringFile, "s_130");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Once the items are inside, close the cube and then activate it using the radial interface there on the cube.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK, then what?
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then you should have a brand-new item inside! Significantly different from the original items that you put in there. Isn't that marvelous!
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there anything else I should know?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_145");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks. I'll figure out the rest myself.
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: As you wish. Thank you for your help. Come back if you need assistance!
			string_id message = new string_id (c_stringFile, "s_136");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Then you should have a brand-new item inside! Significantly different from the original items that you put in there. Isn't that marvelous!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything else I should know?
	if (response == "s_145")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just remember that you must combine exactly three items in the cube. It won't work with only one or two. And you will not be able to combine every single item. Only certain items that have an appropriate Force alignment will work in the cube. Does that make sense?
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. Thank you for the explanation.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just remember that you must combine exactly three items in the cube. It won't work with only one or two. And you will not be able to combine every single item. Only certain items that have an appropriate Force alignment will work in the cube. Does that make sense?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. Thank you for the explanation.
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: No, thank you for all your help! Good luck out there!
			string_id message = new string_id (c_stringFile, "s_150");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What? Oh, you must be the new courier. Just put the papers over there. I'll look at them later.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I'm not a courier.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, never mind about the papers then. What can I do for you? Make it quick though. I'm quite busy.
			string_id message = new string_id (c_stringFile, "s_42");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it you're doing here?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll be on my way.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_186");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh... OK, I guess.
	if (response == "s_190")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well? Why are you just standing there? Is there anything else? I paid in advance, you know.
			string_id message = new string_id (c_stringFile, "s_192");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it you're doing here?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'll be on my way.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_199");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_206");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 51);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. Well, never mind about the papers then. What can I do for you? Make it quick though. I'm quite busy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it you're doing here?
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah. You are interested in the research of the famous Dr. Olok, are you? I knew you had a keen mind as soon as you walked in. Of course, I would be happy to explain it all to you in full detail. If you have a couple of hours we could...
			string_id message = new string_id (c_stringFile, "s_46");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Famous Doctor Olok?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just a quick overview is fine.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse2 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_178");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_182");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll be on my way.
	if (response == "s_186")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_188");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah. You are interested in the research of the famous Dr. Olok, are you? I knew you had a keen mind as soon as you walked in. Of course, I would be happy to explain it all to you in full detail. If you have a couple of hours we could...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Famous Doctor Olok?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, that's right. Doctor Ithes Olok. The foremost researcher whenever Jedi and Force-related artifacts are involved.
			string_id message = new string_id (c_stringFile, "s_50");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh...uh, the FAMOUS Dr. Olok, right.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just a quick overview is fine.
	if (response == "s_178")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: You see there are many...oh. Ah, right. Overview. I'm sure you've heard of the legend of Chu-Gon Dar, correct?
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Refresh my memory.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse2 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_170");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_182")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmm? Yes, perhaps we don't have the time now. Come back tomorrow!
			string_id message = new string_id (c_stringFile, "s_184");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, that's right. Doctor Ithes Olok. The foremost researcher whenever Jedi and Force-related artifacts are involved.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh...uh, the FAMOUS Dr. Olok, right.
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Right. Now, I'm sure you've heard of the legend of Chu-Gon Dar, correct?
			string_id message = new string_id (c_stringFile, "s_54");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Refresh my memory.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse2 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_170");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_174")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Certainly. I would feel overwhelmed in my presence too. Good day to you.
			string_id message = new string_id (c_stringFile, "s_176");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right. Now, I'm sure you've heard of the legend of Chu-Gon Dar, correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Refresh my memory.
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar and his knowledge and understanding of the Physical Force was unmatched by any other.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar, and his knowledge and understanding of the Physical Force was unmatched by any other.
			string_id message = new string_id (c_stringFile, "s_168");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_170")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_172");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar and his knowledge and understanding of the Physical Force was unmatched by any other.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, you see, the legend goes on to say that using his vast understanding, he created a device. A device designed to channel and manipulate the Physical Force.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does the device do?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_162")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_164");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, you see, the legend goes on to say that using his vast understanding, he created a device. A device designed to channel and manipulate the Physical Force.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does the device do?
	if (response == "s_65")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: The details are a little fuzzy there, but from what I can tell, it was meant to alter the physical properties of the items that were placed inside of it. Apparently, this sometimes produced interesting results.
			string_id message = new string_id (c_stringFile, "s_69");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting results?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_154");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_160");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The details are a little fuzzy there, but from what I can tell, it was meant to alter the physical properties of the items that were placed inside of it. Apparently, this sometimes produced interesting results.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting results?
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: The device is said to have worked off the principle that the Force flows through all things, both animate and inanimate. If the proper items are placed in the device, and the Physical Force altered in a certain way, it is theoretically possible to merge those items into something entirely new!
			string_id message = new string_id (c_stringFile, "s_75");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does any of this have to do with your research?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_149");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_154")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_156");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The device is said to have worked off the principle that the Force flows through all things, both animate and inanimate. If the proper items are placed in the device, and the Physical Force altered in a certain way, it is theoretically possible to merge those items into something entirely new!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does any of this have to do with your research?
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah yes, the exciting part. After the fall of the Old Republic, the Jedi Temple was abandoned. Eventually, it collapsed due to the violent nature of this planet, and the device and its secrets were lost.
			string_id message = new string_id (c_stringFile, "s_83");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, and?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_135");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_149")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_152");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes, the exciting part. After the fall of the Old Republic, the Jedi Temple was abandoned. Eventually, it collapsed due to the violent nature of this planet, and the device and its secrets were lost.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, and?
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: And...a recent excavation of the Jedi Temple ruins revealed a hidden underground storage chamber. It was filled with hundreds of these small cubes you see here. I believe that these cubes are duplicates of the device that Chu-Gon Dar created so many years ago.
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Really? Do they work?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: That's a fascinating story, but I really must go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_91");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_113");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 29);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_135")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_139");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And...a recent excavation of the Jedi Temple ruins revealed a hidden underground storage chamber. It was filled with hundreds of these small cubes you see here. I believe that these cubes are duplicates of the device that Chu-Gon Dar created so many years ago.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Really? Do they work?
	if (response == "s_91")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: To be honest, I don't know. These cubes do radiate strongly with the power of the Physical Force, and they do seem hollow inside. I just can't seem to get any of them open. However...
			string_id message = new string_id (c_stringFile, "s_94");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: However what?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Well, good luck with all that, but I really must go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_101");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's a fascinating story, but I really must go.
	if (response == "s_113")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I... well. I suppose if you must. Come back any time, though.
			string_id message = new string_id (c_stringFile, "s_129");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: To be honest, I don't know. These cubes do radiate strongly with the power of the Physical Force, and they do seem hollow inside. I just can't seem to get any of them open. However...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: However what?
	if (response == "s_95")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: We did find some ancient scrolls in the temple ruins along with the cubes. I think that they may provide the information that we need, but there are a couple of symbols used that I don't quite understand. I need to know more about these symbols in order to read the scrolls.
			string_id message = new string_id (c_stringFile, "s_99");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is there anything that I can do to help?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Well, good luck with all that, but I really must go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_103");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, good luck with all that, but I really must go.
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I...well. I suppose if you must. Come back any time, though.
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We did find some ancient scrolls in the temple ruins along with the cubes. I think that they may provide the information that we need, but there are a couple of symbols used that I don't quite understand. I need to know more about these symbols in order to read the scrolls.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything that I can do to help?
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, there is. I've seen symbols like these before, while surveying some Old Republic ruins to the south of this facility. I didn't think much about it at the time, but I believe if I could get some notes about the symbols there, we might understand more about this scroll.
			string_id message = new string_id (c_stringFile, "s_106");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you need me to do?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, I don't think I can help.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_107");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_108");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, good luck with all that, but I really must go.
	if (response == "s_103")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I...well. I suppose if you must. Come back any time, though.
			string_id message = new string_id (c_stringFile, "s_105");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, there is. I've seen symbols like these before, while surveying some Old Republic ruins to the south of this facility. I didn't think much about it at the time, but I believe if I could get some notes about the symbols there, we might understand more about this scroll.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you need me to do?
	if (response == "s_107")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm no spry hatchling anymore. I can't quite get around as well as I used to, and all my assistants are out in the field already. I need you to go take some notes from three of the symbol stones at the Old Republic ruins down to the south.
			string_id message = new string_id (c_stringFile, "s_110");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I think I can do that.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, I don't think I can help.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_111");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_114");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, I don't think I can help.
	if (response == "s_108")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh really? That's too bad. I guess I keep at it on my own then. Do come back if you change your mind.
			string_id message = new string_id (c_stringFile, "s_109");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm no spry hatchling anymore. I can't quite get around as well as I used to, and all my assistants are out in the field already. I need you to go take some notes from three of the symbol stones at the Old Republic ruins down to the south.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I can do that.
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			som_cube_ithes_olok_action_grantCubeQuest (player, npc);

			//-- NPC: That's excellent news! If I can make sense of what you bring back, I'll make sure you share in the findings! 
			string_id message = new string_id (c_stringFile, "s_117");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, I don't think I can help.
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh really? That's too bad. I guess I keep at it on my own then. Do come back if you change your mind.
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar, and his knowledge and understanding of the Physical Force was unmatched by any other.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (response == "s_61")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, you see, the legend goes on to say that using his vast understanding, he created a device. A device designed to channel and manipulate the Physical Force.
			string_id message = new string_id (c_stringFile, "s_64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does the device do?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_158");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_162")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_164");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You see there are many...oh. Ah, right. Overview. I'm sure you've heard of the legend of Chu-Gon Dar, correct?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Refresh my memory.
	if (response == "s_56")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar and his knowledge and understanding of the Physical Force was unmatched by any other.
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Chu-Gon Dar was a Jedi Master that lived thousands of years ago during the era of the Old Republic. He resided at the Jedi Temple here on Mustafar, and his knowledge and understanding of the Physical Force was unmatched by any other.
			string_id message = new string_id (c_stringFile, "s_168");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_61");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_170")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Does this not interest you? Ah, very well. Some other time perhaps.
			string_id message = new string_id (c_stringFile, "s_172");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch51 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well? Why are you just standing there? Is there anything else? I paid in advance, you know.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it you're doing here?
	if (response == "s_199")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah. You are interested in the research of the famous Dr. Olok, are you? I knew you had a keen mind as soon as you walked in. Of course, I would be happy to explain it all to you in full detail. If you have a couple of hours, we could...
			string_id message = new string_id (c_stringFile, "s_203");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Famous Doctor Olok?
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Just a quick overview is fine.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse2 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_178");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_182");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll be on my way.
	if (response == "s_206")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.
			string_id message = new string_id (c_stringFile, "s_208");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_cube_ithes_olok_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah. You are interested in the research of the famous Dr. Olok, are you? I knew you had a keen mind as soon as you walked in. Of course, I would be happy to explain it all to you in full detail. If you have a couple of hours, we could...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Famous Doctor Olok?
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, that's right. Doctor Ithes Olok. The foremost researcher whenever Jedi and Force-related artifacts are involved.
			string_id message = new string_id (c_stringFile, "s_50");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh...uh, the FAMOUS Dr. Olok, right.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_174");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Just a quick overview is fine.
	if (response == "s_178")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: You see there are many...oh. Ah, right. Overview. I'm sure you've heard of the legend of Chu-Gon Dar, correct?
			string_id message = new string_id (c_stringFile, "s_180");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Refresh my memory.
			boolean hasResponse0 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Sorry, I've got to go.
			boolean hasResponse2 = false;
			if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_56");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_170");

				utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I've got to go.
	if (response == "s_182")
	{
		//-- [NOTE] 
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmm? Yes, perhaps we don't have the time now. Come back tomorrow!
			string_id message = new string_id (c_stringFile, "s_184");
			utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_cube_ithes_olok");

	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, "Ithes Olok");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, "Ithes Olok");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_cube_ithes_olok");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_cube_ithes_olok_condition_completedQuest (player, npc))
	{
		//-- NPC: Ah, what brings you back here, my friend? Do you need another explanation on how to work the cube?
		string_id message = new string_id (c_stringFile, "s_140");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Actually, I lost the cube.
		boolean hasResponse0 = false;
		if (som_cube_ithes_olok_condition_lostCube (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes, please.
		boolean hasResponse1 = false;
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: No, I've got it figured out.
		boolean hasResponse2 = false;
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_193");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_141");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_142");

			utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 1);

			npcStartConversation (player, npc, "som_cube_ithes_olok", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_cube_ithes_olok_condition_isOnQuest (player, npc))
	{
		//-- NPC: Ah, the intrepid archaeologist has returned! Were you able to find the Old Republic ruins? Did you take the notes from the symbol stones?
		string_id message = new string_id (c_stringFile, "s_118");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. I have them for you right here.
		boolean hasResponse0 = false;
		if (som_cube_ithes_olok_condition_hasNotes (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I'm still working on it.
		boolean hasResponse1 = false;
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_119");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_120");

			utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 8);

			npcStartConversation (player, npc, "som_cube_ithes_olok", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
	{
		//-- NPC: What? Oh, you must be the new courier. Just put the papers over there. I'll look at them later.
		string_id message = new string_id (c_stringFile, "s_38");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sorry, I'm not a courier.
		boolean hasResponse0 = false;
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Oh... OK, I guess.
		boolean hasResponse1 = false;
		if (som_cube_ithes_olok_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_190");

			utils.setScriptVar (player, "conversation.som_cube_ithes_olok.branchId", 19);

			npcStartConversation (player, npc, "som_cube_ithes_olok", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_cube_ithes_olok")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

	if (branchId == 1 && som_cube_ithes_olok_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && som_cube_ithes_olok_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && som_cube_ithes_olok_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && som_cube_ithes_olok_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_cube_ithes_olok_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && som_cube_ithes_olok_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && som_cube_ithes_olok_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && som_cube_ithes_olok_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && som_cube_ithes_olok_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_cube_ithes_olok_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && som_cube_ithes_olok_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && som_cube_ithes_olok_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && som_cube_ithes_olok_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && som_cube_ithes_olok_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && som_cube_ithes_olok_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && som_cube_ithes_olok_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && som_cube_ithes_olok_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && som_cube_ithes_olok_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && som_cube_ithes_olok_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && som_cube_ithes_olok_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && som_cube_ithes_olok_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && som_cube_ithes_olok_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && som_cube_ithes_olok_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && som_cube_ithes_olok_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && som_cube_ithes_olok_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && som_cube_ithes_olok_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && som_cube_ithes_olok_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && som_cube_ithes_olok_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 51 && som_cube_ithes_olok_handleBranch51 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && som_cube_ithes_olok_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_cube_ithes_olok.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

