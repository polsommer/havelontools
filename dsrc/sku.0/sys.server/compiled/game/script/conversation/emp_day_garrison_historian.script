// ======================================================================
//
// emp_day_garrison_historian.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.31 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/emp_day_garrison_historian";

// ======================================================================
// Script Conditions
// ======================================================================

boolean emp_day_garrison_historian_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasTask2or3 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task2 = groundquests.getTaskId(questId, "killRebels");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	int task3b = groundquests.getTaskId(questId, "diskGuy2");
	int task3c = groundquests.getTaskId(questId, "diskGuy3");

	return (questIsTaskActive(questId, task2, player) && !questIsTaskComplete(questId, task3c, player) )	||
	(questIsTaskActive(questId, task3a, player)	&& !questIsTaskComplete(questId, task2, player) )			||
	(questIsTaskActive(questId, task3b, player) && !questIsTaskComplete(questId, task2, player) )			||
	(questIsTaskActive(questId, task3c, player) && !questIsTaskComplete(questId, task2, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_pastMyTasks (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task1 = groundquests.getTaskId(questId, "converseHistorian");
	int task2 = groundquests.getTaskId(questId, "killRebels");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	int task3b = groundquests.getTaskId(questId, "diskGuy2");
	int task3c = groundquests.getTaskId(questId, "diskGuy3");
	int task4 = groundquests.getTaskId(questId, "disksToHistorian");
	
	return questIsQuestComplete(questId, player) ||
	(!questIsTaskActive(questId, task1, player) && 
	!questIsTaskActive(questId, task2, player) && 
	!questIsTaskActive(questId, task3a, player) && 
	!questIsTaskActive(questId, task3b, player) && 
	!questIsTaskActive(questId, task3c, player) && 
	!questIsTaskActive(questId, task4, player) &&
	questIsQuestActive(questId, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasDisks (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task2 = groundquests.getTaskId(questId, "killRebels");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	int task3b = groundquests.getTaskId(questId, "diskGuy2");
	int task3c = groundquests.getTaskId(questId, "diskGuy3");

	return questIsTaskComplete(questId, task2, player)	||
	(questIsTaskComplete(questId, task3a, player) 	&&
	questIsTaskComplete(questId, task3b, player) 	&&
	questIsTaskComplete(questId, task3c, player) 	);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasStartingTask (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	return questIsTaskActive(questId, 0, player);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasTask2 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task2 = groundquests.getTaskId(questId, "killRebels");
	return questIsTaskActive(questId, task2, player);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasTask3a (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	return questIsTaskActive(questId, task3a, player);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasTask3b (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task3b = groundquests.getTaskId(questId, "diskGuy2");
	return questIsTaskActive(questId, task3b, player);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_hasTask3c (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task3c = groundquests.getTaskId(questId, "diskGuy3");
	return questIsTaskActive(questId, task3c, player);
}

// ----------------------------------------------------------------------

boolean emp_day_garrison_historian_condition_isNeutral (obj_id player, obj_id npc)
{
	int factionHashCode = pvpGetAlignedFaction(player);

	if (factionHashCode==0)
		return true;

	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void emp_day_garrison_historian_action_historianConversed (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "historian_conversed");
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_diskGuy1Wp (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-1006, 10, -3527, "tatooine");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Cantina Contact");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_dataUplinkWp (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-92, 18, -1630, "dathomir");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Data Officer");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_diskGuy3Wp (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(4912, 362, -1498, "naboo");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Theater Contact");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_diskGuy2Wp (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(6711, 330, -5940, "corellia");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Med Center Contact");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_disksToHistorian (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_imperial");
	int task2 = groundquests.getTaskId(questId, "killRebels");
	int task3a = groundquests.getTaskId(questId, "diskGuy1");
	int task3b = groundquests.getTaskId(questId, "diskGuy2");
	int task3c = groundquests.getTaskId(questId, "diskGuy3");

	groundquests.sendSignal(player, "disk_to_historian");

	if(questIsTaskActive(questId, task2, player) );
		questCompleteTask(questId, task2, player);

	if(questIsTaskActive(questId, task3a, player) );
		questCompleteTask(questId, task3a, player);

	if(questIsTaskActive(questId, task3b, player) );
		questCompleteTask(questId, task3b, player);

	if(questIsTaskActive(questId, task3c, player) );
		questCompleteTask(questId, task3c, player);
}

// ----------------------------------------------------------------------

void emp_day_garrison_historian_action_dataOfficerWp (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-92, 18, -1630, "dathomir");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Data Officer");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int emp_day_garrison_historian_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing back here? You need to get those disks for me!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am interested in fighting Rebels. What do I need to do again?
	if (response == "s_101")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: In order to legally fight against Rebels you must be a member of the Imperial Faction. Eliminate as many rebels as you can until you find all three of my missing disks. Or if you prefer to avoid combat you can pick up those historical datadisks from my colleagues.
			string_id message = new string_id (c_stringFile, "s_105");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
	if (response == "s_109")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_diskGuy1Wp (player, npc);

			//-- NPC: You'll find your contact in one of the cantinas in Bestine. I've uploaded the information to your datapad.
			string_id message = new string_id (c_stringFile, "s_112");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_diskGuy2Wp (player, npc);

			//-- NPC: Your contact should be in the Bela Vistal medical center. I've uploaded the information to your datapad.
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_diskGuy3Wp (player, npc);

			//-- NPC: Your contact should be in the theater in Deeja Peak. I've uploaded the information to your datapad.
			string_id message = new string_id (c_stringFile, "s_120");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh. Um. Hello there. I'm sorry, I'm a bit mixed up at the moment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's wrong?
	if (response == "s_124")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh. Nothing. It turns out that my research assistant was spying for the Rebels, so he was just arrested. So sad. He had such potential.
			string_id message = new string_id (c_stringFile, "s_126");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I was told to come see you by the Public Relations Officer. 
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_128");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh. Nothing. It turns out that my research assistant was spying for the Rebels, so he was just arrested. So sad. He had such potential.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was told to come see you by the Public Relations Officer. 
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: He did? Excellent! I certainly need the help after all this. Let's see what I can have you do... hmmm. Are you a scholar or a fighter? I have need for both.
			string_id message = new string_id (c_stringFile, "s_130");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I prefer to not get into any fights.
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm always looking for a good fight.
			boolean hasResponse1 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I'm not interested in any assignments at the moment.
			boolean hasResponse2 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_140");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_152");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He did? Excellent! I certainly need the help after all this. Let's see what I can have you do... hmmm. Are you a scholar or a fighter? I have need for both.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I prefer to not get into any fights.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. A being of words, not strength. I understand. I need you to pick up some historical datadisks from some colleagues.
			string_id message = new string_id (c_stringFile, "s_134");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can do that. Where should I go?
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm always looking for a good fight.
	if (response == "s_140")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. Most commendable. Before my assistant was arrested he stole three historical datadisks. I need them back.
			string_id message = new string_id (c_stringFile, "s_142");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Weren't they confiscated when he was arrested?
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in any assignments at the moment.
	if (response == "s_152")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. Come see me if you change your mind.
			string_id message = new string_id (c_stringFile, "s_154");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. A being of words, not strength. I understand. I need you to pick up some historical datadisks from some colleagues.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can do that. Where should I go?
	if (response == "s_136")
	{
		emp_day_garrison_historian_action_historianConversed (player, npc);

		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_diskGuy1Wp (player, npc);

			//-- NPC: I have three disks awaiting pickup. I'll add the first location to your datapad. Gather all three then return here.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. Most commendable. Before my assistant was arrested he stole three historical datadisks. I need them back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Weren't they confiscated when he was arrested?
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: No. He managed to smuggle them out before he was... well, honestly, before he was killed trying to escape.
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So how will I find them?
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No. He managed to smuggle them out before he was... well, honestly, before he was killed trying to escape.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So how will I find them?
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (!emp_day_garrison_historian_condition_isNeutral (player, npc))
		{
			emp_day_garrison_historian_action_historianConversed (player, npc);

			//-- NPC: It must have been passed to his Rebel friends. I suggest you eliminate as many as you can until you find all three disks.
			string_id message = new string_id (c_stringFile, "s_89");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (emp_day_garrison_historian_condition_isNeutral (player, npc))
		{
			//-- NPC: It must have been passed to his Rebel friends. Unfortunately, it seems you're not a member of the Imperial Faction so you are not authorized to hunt Rebels. However, you can pick up historical datadisks from some colleagues of mine.
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can do that. Where should I go?
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It must have been passed to his Rebel friends. Unfortunately, it seems you're not a member of the Imperial Faction so you are not authorized to hunt Rebels. However, you can pick up historical datadisks from some colleagues of mine.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can do that. Where should I go?
	if (response == "s_136")
	{
		emp_day_garrison_historian_action_historianConversed (player, npc);

		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_diskGuy1Wp (player, npc);

			//-- NPC: I have three disks awaiting pickup. I'll add the first location to your datapad. Gather all three then return here.
			string_id message = new string_id (c_stringFile, "s_138");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My disks! Excellent. Well done. These contain some little known facts about how Jedi Knights were trying to overthrow the Republic. Fascinating stuff. Say, would you do me one more favor?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Name it.
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I'm due at an Empire Day formal gala, and I don't have time now to deliver these disks to the upload center. Do you think you could drop them off for me?
			string_id message = new string_id (c_stringFile, "s_160");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course.
			boolean hasResponse0 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not interested in any assignments at the moment.
			boolean hasResponse1 = false;
			if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_166");

				utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_garrison_historian_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I'm due at an Empire Day formal gala, and I don't have time now to deliver these disks to the upload center. Do you think you could drop them off for me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course.
	if (response == "s_162")
	{
		emp_day_garrison_historian_action_disksToHistorian (player, npc);

		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			emp_day_garrison_historian_action_dataOfficerWp (player, npc);

			//-- NPC: Excellent. Just take these disks to the Uplink Officer. You can find him at the science outpost on Dathomir. I've uploaded his location to your datapad.
			string_id message = new string_id (c_stringFile, "s_164");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in any assignments at the moment.
	if (response == "s_166")
	{
		//-- [NOTE] 
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmmph. I see how it is. The Empire provides so much for you, and this is how you repay their protection. Well, come find me if you decide to pull your weight.
			string_id message = new string_id (c_stringFile, "s_168");
			utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.emp_day_garrison_historian");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.emp_day_garrison_historian");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (emp_day_garrison_historian_condition_pastMyTasks (player, npc))
	{
		//-- NPC: Ah. You're back. Thank you for your assistance. Good Empire Day to you. Let's hope the next year proves better than the last. 
		string_id message = new string_id (c_stringFile, "s_95");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_garrison_historian_condition_hasTask2or3 (player, npc))
	{
		//-- NPC: What are you doing back here? You need to get those disks for me!
		string_id message = new string_id (c_stringFile, "s_97");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am interested in fighting Rebels. What do I need to do again?
		boolean hasResponse0 = false;
		if (emp_day_garrison_historian_condition_hasTask2 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
		boolean hasResponse1 = false;
		if (emp_day_garrison_historian_condition_hasTask3a (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
		boolean hasResponse2 = false;
		if (emp_day_garrison_historian_condition_hasTask3b (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
		boolean hasResponse3 = false;
		if (emp_day_garrison_historian_condition_hasTask3c (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_101");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_109");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_114");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_118");

			utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 2);

			npcStartConversation (player, npc, "emp_day_garrison_historian", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_garrison_historian_condition_hasStartingTask (player, npc))
	{
		//-- NPC: Oh. Um. Hello there. I'm sorry, I'm a bit mixed up at the moment.
		string_id message = new string_id (c_stringFile, "s_122");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What's wrong?
		boolean hasResponse0 = false;
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_124");

			utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 7);

			npcStartConversation (player, npc, "emp_day_garrison_historian", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_garrison_historian_condition_hasDisks (player, npc))
	{
		//-- NPC: My disks! Excellent. Well done. These contain some little known facts about how Jedi Knights were trying to overthrow the Republic. Fascinating stuff. Say, would you do me one more favor?
		string_id message = new string_id (c_stringFile, "s_156");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. Name it.
		boolean hasResponse0 = false;
		if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_158");

			utils.setScriptVar (player, "conversation.emp_day_garrison_historian.branchId", 17);

			npcStartConversation (player, npc, "emp_day_garrison_historian", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_garrison_historian_condition__defaultCondition (player, npc))
	{
		//-- NPC: I'm sorry. I don't have time for this at the moment. All queries should be processed thru the garrison's Public Relations officer
		string_id message = new string_id (c_stringFile, "s_170");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "emp_day_garrison_historian")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

	if (branchId == 2 && emp_day_garrison_historian_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && emp_day_garrison_historian_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && emp_day_garrison_historian_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && emp_day_garrison_historian_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && emp_day_garrison_historian_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && emp_day_garrison_historian_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && emp_day_garrison_historian_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && emp_day_garrison_historian_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && emp_day_garrison_historian_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && emp_day_garrison_historian_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.emp_day_garrison_historian.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

