// ======================================================================
//
// c_newbie_melee_combat_client_2.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_newbie_melee_combat_client_2";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_newbie_melee_combat_client_2_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_2_condition_onTaskTalk (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_2", "talkCourier1"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_2_condition_onTaskEscort (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_2", "escort"));
}

// ----------------------------------------------------------------------

boolean c_newbie_melee_combat_client_2_condition_completedEscort (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "c_newbie_melee_quest_2", "talkCourier2"));
}

// ======================================================================
// Script Actions
// ======================================================================

void c_newbie_melee_combat_client_2_action_signalTalked (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedCourier1");
}

// ----------------------------------------------------------------------

void c_newbie_melee_combat_client_2_action_signalTalked2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedCourier2");
	groundquests.completeTask(player, "c_newbie_melee_quest_2", "escortTask");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_newbie_melee_combat_client_2_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You must be my protection.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Indeed I am. We are heading for the star port right?
	if (response == "s_288")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (c_newbie_melee_combat_client_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			c_newbie_melee_combat_client_2_action_signalTalked (player, npc);

			//-- NPC: Yes. Let's get going. Stay alert, this city is full of scum.
			string_id message = new string_id (c_stringFile, "s_290");
			utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_newbie_melee_combat_client_2");
	setInvulnerable (self, false);
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, new string_id( "npc_name", "walter_orvett" ));
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setInvulnerable (self, false);
	setCondition (self, CONDITION_CONVERSABLE);
	setName(self, new string_id( "npc_name", "walter_orvett" ));
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_newbie_melee_combat_client_2");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_2_condition_completedEscort (player, npc))
	{
		doAnimationAction (npc, "goodbye");

		doAnimationAction (player, "goodbye");

		c_newbie_melee_combat_client_2_action_signalTalked2 (player, npc);

		//-- NPC: Alright I will be okay from here. Good job fending off those thugs. I'm glad my boss decided to hire you.
		string_id message = new string_id (c_stringFile, "s_282");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_2_condition_onTaskEscort (player, npc))
	{
		//-- NPC: No time for small talk!
		string_id message = new string_id (c_stringFile, "s_284");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_2_condition_onTaskTalk (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		//-- NPC: You must be my protection.
		string_id message = new string_id (c_stringFile, "s_286");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Indeed I am. We are heading for the star port right?
		boolean hasResponse0 = false;
		if (c_newbie_melee_combat_client_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_288");

			utils.setScriptVar (player, "conversation.c_newbie_melee_combat_client_2.branchId", 3);

			npcStartConversation (player, npc, "c_newbie_melee_combat_client_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_newbie_melee_combat_client_2_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		doAnimationAction (player, "greet");

		//-- NPC: Step aside, I'm on official business!
		string_id message = new string_id (c_stringFile, "s_292");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_newbie_melee_combat_client_2")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_newbie_melee_combat_client_2.branchId");

	if (branchId == 3 && c_newbie_melee_combat_client_2_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_newbie_melee_combat_client_2.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

