// ======================================================================
//
// som_exploration_marker.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.chat;
include library.create;
include library.groundquests;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_exploration_marker";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_exploration_marker_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_miningFacility (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_mining");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_crystalFlats (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_crystal");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_smokingForest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_smoking");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_centralVolcano (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_volcano");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_burningPlains (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_burning");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_berkensFlow (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_berken");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_tulrusNesting (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "som_exploration_tulrus");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_completeAll (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "som_exploration_volcano") && groundquests.hasCompletedQuest(player, "som_exploration_burning") &&
		groundquests.hasCompletedQuest(player, "som_exploration_berken") && groundquests.hasCompletedQuest(player, "som_exploration_tulrus") &&
		groundquests.hasCompletedQuest(player, "som_exploration_smoking") && groundquests.hasCompletedQuest(player, "som_exploration_crystal") &&
		groundquests.hasCompletedQuest(player, "som_exploration_mining");
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_completedReward (obj_id player, obj_id npc)
{
	return hasObjVar(player, "mustafar.tanray_heart"); 
}

// ----------------------------------------------------------------------

boolean som_exploration_marker_condition_hasAcceptedOne (obj_id player, obj_id npc)
{
	if (groundquests.isQuestActiveOrComplete(player, "som_exploration_volcano") || groundquests.isQuestActiveOrComplete(player, "som_exploration_burning"))
		return true;
		
	if (groundquests.isQuestActiveOrComplete(player, "som_exploration_berken") || groundquests.isQuestActiveOrComplete(player, "som_exploration_tulrus"))
		return true;
		
	if (groundquests.isQuestActiveOrComplete(player, "som_exploration_smoking") || groundquests.isQuestActiveOrComplete(player, "som_exploration_crystal"))
		return true;
	
	if (groundquests.isQuestActiveOrComplete(player, "som_exploration_mining"))
		return true;
		
	else
		return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void som_exploration_marker_action_grantCentral (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_volcano");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantBurning (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_burning");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantBerken (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_berken");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantTulrus (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_tulrus");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantSmoking (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_smoking");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantCrystal (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_crystal");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantMining (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "som_exploration_mining");
}

// ----------------------------------------------------------------------

void som_exploration_marker_action_grantReward (obj_id player, obj_id npc)
{
	obj_id pInv = utils.getInventoryContainer( player );
	static_item.createNewItemFunction("item_tow_trophey_02_05", pInv);
	setObjVar(player, "mustafar.tanray_heart", 1);
	badge.grantBadge(player, "bdg_must_mustafar_exploration");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_exploration_marker_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello again, my friend. You certainly have done a wonderful job and saved me all sorts of trouble trying to check all of those markers out. And as promised, here is your Tanray Heart Crystal. Thank you again.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_41")
	{
		som_exploration_marker_action_grantReward (player, npc);

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow4");

			//-- NPC: A deal is a deal. Safe travels to you, my friend.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. It is good to see you are in good health. Are you back to check on some more markers for me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, I will check a few more areas for you.
	if (response == "s_38")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bounce");

			//-- NPC: That is most excellent news. Same deal as before, five thousand credits per area completed and if you complete them all, I will give you a Tanray Heart Crystal. Which area would you like to search for markers in?
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you have any markers around this facility?
			boolean hasResponse0 = false;
			if (!som_exploration_marker_condition_miningFacility (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How about in the Crystal Flats?
			boolean hasResponse1 = false;
			if (!som_exploration_marker_condition_crystalFlats (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I would like to search the Smoking Forest.
			boolean hasResponse2 = false;
			if (!som_exploration_marker_condition_smokingForest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Perhaps I could search the Central Volcano.
			boolean hasResponse3 = false;
			if (!som_exploration_marker_condition_centralVolcano (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What about searching the Burning Plains?
			boolean hasResponse4 = false;
			if (!som_exploration_marker_condition_burningPlains (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I will search the area called Berken's Flow.
			boolean hasResponse5 = false;
			if (!som_exploration_marker_condition_berkensFlow (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: The Tulrus Nesting Grounds is a good spot.
			boolean hasResponse6 = false;
			if (!som_exploration_marker_condition_tulrusNesting (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. Maybe later.
	if (response == "s_39")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course. I wouldn't want to impose on you too much.
			string_id message = new string_id (c_stringFile, "s_78");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is most excellent news. Same deal as before, five thousand credits per area completed and if you complete them all, I will give you a Tanray Heart Crystal. Which area would you like to search for markers in?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any markers around this facility?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantMining (player, npc);

			//-- NPC: Sure do. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How about in the Crystal Flats?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantCrystal (player, npc);

			//-- NPC: Of course. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_52");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to search the Smoking Forest.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantSmoking (player, npc);

			//-- NPC: That is a good choice. Remember, you will receive five thousand credits per area searched and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps I could search the Central Volcano.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantCentral (player, npc);

			//-- NPC: Always a nice decision. Remember, you will receive five thousand credits per area searched and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What about searching the Burning Plains?
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantBurning (player, npc);

			//-- NPC: I hear it is nice this time of year...well as nice as Mustafar gets, anyways. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will search the area called Berken's Flow.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantBerken (player, npc);

			//-- NPC: Ah, Berken's Flow...I learned how to mine there. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Tulrus Nesting Grounds is a good spot.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantTulrus (player, npc);

			//-- NPC: A very fine valley. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome to our fiery moon. I have noticed you around and was hoping for a chance to speak with you. You seem very interested in helping others and I was wondering if you would be willing to perform a small task for me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. What is it you need?
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well, I have put up a number of markers around the planet. They are very helpful to keep track of certain important areas. Our world has a tendency to shift unexpectedly and it is important that we carefully mark different areas. Naturally, the markers also shift, so we occasionally have to manually check them out to make sure they are still valid.
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Naturally. So what is it I can do for you?
			boolean hasResponse0 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now. Maybe later.
	if (response == "s_76")
	{
		doAnimationAction (player, "refuse_offer_affection");

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course. I wouldn't want to impose on you too much.
			string_id message = new string_id (c_stringFile, "s_78");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I have put up a number of markers around the planet. They are very helpful to keep track of certain important areas. Our world has a tendency to shift unexpectedly and it is important that we carefully mark different areas. Naturally, the markers also shift, so we occasionally have to manually check them out to make sure they are still valid.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Naturally. So what is it I can do for you?
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Well, recent events have left me extremely short-handed, and I was hoping that you would check out these markers for me. The job is really simple. All you need to do is find the markers and activate them to make sure they still have valid information on them.
			string_id message = new string_id (c_stringFile, "s_23");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That seems easy enough.
			boolean hasResponse0 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, recent events have left me extremely short-handed, and I was hoping that you would check out these markers for me. The job is really simple. All you need to do is find the markers and activate them to make sure they still have valid information on them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That seems easy enough.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: It would be, except that due to the shifting of our moon's surface, I cannot give you precise locations. All I can do is give you general directions to where each one should be. Each of Mustafar's main areas has several of these markers scattered throughout them. I will need you to activate each area's markers individually.
			string_id message = new string_id (c_stringFile, "s_27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would this sort of job pay?
			boolean hasResponse0 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It would be, except that due to the shifting of our moon's surface, I cannot give you precise locations. All I can do is give you general directions to where each one should be. Each of Mustafar's main areas has several of these markers scattered throughout them. I will need you to activate each area's markers individually.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would this sort of job pay?
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmmmm... How about this? For each area you complete, I will pay you five thousand credits. And as a bonus, if you check all the markers in all the areas, I will give you a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is a Tanray Heart Crystal?
			boolean hasResponse0 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_33");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmmmm... How about this? For each area you complete, I will pay you five thousand credits. And as a bonus, if you check all the markers in all the areas, I will give you a Tanray Heart Crystal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a Tanray Heart Crystal?
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: It is a fabulous crystal formed under intense heat and pressure that is...well, it is shaped like the heart of a tanray. They can be worth a hefty sum to certain collectors, but most people just use them as decoration. So do we have a deal?
			string_id message = new string_id (c_stringFile, "s_35");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay, we have a deal.
			boolean hasResponse0 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks. I think I will pass on this job.
			boolean hasResponse1 = false;
			if (som_exploration_marker_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is a fabulous crystal formed under intense heat and pressure that is...well, it is shaped like the heart of a tanray. They can be worth a hefty sum to certain collectors, but most people just use them as decoration. So do we have a deal?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, we have a deal.
	if (response == "s_37")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Excellent. So what area would you like to search for markers in? We have markers near the mining facility, in the Crystal Flats, up in the Smoking Forest, around the Central Volcano, in the Burning Plains, all over Berken's Flow, and, of course, in the Tulrus Nesting Grounds.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you have any markers around this facility?
			boolean hasResponse0 = false;
			if (!som_exploration_marker_condition_miningFacility (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: How about in the Crystal Flats?
			boolean hasResponse1 = false;
			if (!som_exploration_marker_condition_crystalFlats (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I would like to search the Smoking Forest.
			boolean hasResponse2 = false;
			if (!som_exploration_marker_condition_smokingForest (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Perhaps I could search the Central Volcano.
			boolean hasResponse3 = false;
			if (!som_exploration_marker_condition_centralVolcano (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What about searching the Burning Plains?
			boolean hasResponse4 = false;
			if (!som_exploration_marker_condition_burningPlains (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I will search the area called Berken's Flow.
			boolean hasResponse5 = false;
			if (!som_exploration_marker_condition_berkensFlow (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: The Tulrus Nesting Grounds is a good spot.
			boolean hasResponse6 = false;
			if (!som_exploration_marker_condition_tulrusNesting (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70");

				utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I think I will pass on this job.
	if (response == "s_74")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course. I wouldn't want to impose on you too much.
			string_id message = new string_id (c_stringFile, "s_78");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int som_exploration_marker_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent. So what area would you like to search for markers in? We have markers near the mining facility, in the Crystal Flats, up in the Smoking Forest, around the Central Volcano, in the Burning Plains, all over Berken's Flow, and, of course, in the Tulrus Nesting Grounds.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any markers around this facility?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantMining (player, npc);

			//-- NPC: Sure do. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How about in the Crystal Flats?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantCrystal (player, npc);

			//-- NPC: Of course. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_52");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to search the Smoking Forest.
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantSmoking (player, npc);

			//-- NPC: That is a good choice. Remember, you will receive five thousand credits per area searched and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps I could search the Central Volcano.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantCentral (player, npc);

			//-- NPC: Always a nice decision. Remember, you will receive five thousand credits per area searched and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What about searching the Burning Plains?
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantBurning (player, npc);

			//-- NPC: I hear it is nice this time of year...well as nice as Mustafar gets, anyways. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will search the area called Berken's Flow.
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantBerken (player, npc);

			//-- NPC: Ah, Berken's Flow...I learned how to mine there. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Tulrus Nesting Grounds is a good spot.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			som_exploration_marker_action_grantTulrus (player, npc);

			//-- NPC: A very fine valley. Remember, you will receive five thousand credits per area searched, and if you complete them all, I will toss in a Tanray Heart Crystal.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_exploration_marker");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition( self, CONDITION_INTERESTING );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition( self, CONDITION_INTERESTING );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_exploration_marker");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_exploration_marker_condition_completedReward (player, npc))
	{
		doAnimationAction (npc, "bow");

		//-- NPC: Ah, it is my good friend again. I hope everything is going well for you. Unfortunately, I cannot chat today. My boss has asked me to pull a double shift and I really need to get back to work. Take care.
		string_id message = new string_id (c_stringFile, "s_4");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_exploration_marker_condition_completeAll (player, npc))
	{
		doAnimationAction (npc, "thank");

		//-- NPC: Hello again, my friend. You certainly have done a wonderful job and saved me all sorts of trouble trying to check all of those markers out. And as promised, here is your Tanray Heart Crystal. Thank you again.
		string_id message = new string_id (c_stringFile, "s_6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you.
		boolean hasResponse0 = false;
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 2);

			npcStartConversation (player, npc, "som_exploration_marker", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_exploration_marker_condition_hasAcceptedOne (player, npc))
	{
		doAnimationAction (npc, "wave1");

		//-- NPC: Welcome back. It is good to see you are in good health. Are you back to check on some more markers for me?
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah, I will check a few more areas for you.
		boolean hasResponse0 = false;
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thanks. Maybe later.
		boolean hasResponse1 = false;
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 4);

			npcStartConversation (player, npc, "som_exploration_marker", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (som_exploration_marker_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "bow4");

		//-- NPC: Welcome to our fiery moon. I have noticed you around and was hoping for a chance to speak with you. You seem very interested in helping others and I was wondering if you would be willing to perform a small task for me?
		string_id message = new string_id (c_stringFile, "s_15");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. What is it you need?
		boolean hasResponse0 = false;
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not right now. Maybe later.
		boolean hasResponse1 = false;
		if (som_exploration_marker_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_17");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_76");

			utils.setScriptVar (player, "conversation.som_exploration_marker.branchId", 6);

			npcStartConversation (player, npc, "som_exploration_marker", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_exploration_marker")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_exploration_marker.branchId");

	if (branchId == 2 && som_exploration_marker_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && som_exploration_marker_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && som_exploration_marker_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && som_exploration_marker_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && som_exploration_marker_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && som_exploration_marker_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && som_exploration_marker_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && som_exploration_marker_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && som_exploration_marker_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && som_exploration_marker_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_exploration_marker.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

