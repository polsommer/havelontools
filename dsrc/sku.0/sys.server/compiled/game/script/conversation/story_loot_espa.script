// ======================================================================
//
// story_loot_espa.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.features;
include library.money;
include library.prose;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/story_loot_espa";

// ======================================================================
// Script Conditions
// ======================================================================

boolean story_loot_espa_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkAll (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("all"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkTatooine (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("tatooine"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkNaboo (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("naboo"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkCorellia (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("corellia"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkLok (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("lok"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkDantooine (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("dantooine"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkYavin4 (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("yavin4"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkEndor (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("endor"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkDathomir (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.planet"))
	{
		string planet = utils.getStringScriptVar(player, "story_loot.planet");
		
		if(planet.equals("dathomir"))
			return true;
	}
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_hasSpaceExp (obj_id player, obj_id npc)
{
	return features.isSpaceEdition(player);

}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_checkRem (obj_id player, obj_id npc)
{
	if (utils.hasScriptVar (player, "story_loot.rem"))
		return true;
		
return false;
}

// ----------------------------------------------------------------------

boolean story_loot_espa_condition_hasQuest (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuestRecursive( player, "destroy_surpriseattack", "sidequest_jabba_attack" ) ||
		 space_quest.hasAbortedQuestRecursive( player, "destroy_surpriseattack", "sidequest_jabba_attack" ) ||
		 space_quest.hasCompletedQuestRecursive( player, "destroy_surpriseattack", "sidequest_jabba_attack") )
		 {
		 	return true;
		 }
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void story_loot_espa_action_Tatooine (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Naboo (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Corellia (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 1500;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Dantooine (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Lok (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Yavin4 (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 3000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Endor (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 4000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_Dathomir (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 4000;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_All (obj_id player, obj_id npc)
{
	obj_id item = utils.getObjIdScriptVar(player, "story_loot.item");
	
	if(!isIdValid(item))
		return;
	
	destroyObject(item);
	
	utils.removeScriptVar(player, "story_loot.planet");
	utils.removeScriptVar(player, "story_loot.item");

	int amount = 150;

	prose_package pp = prose.getPackage(new string_id("space/story_loot_d", "systemmessage"), amount);
	sendSystemMessageProse(player, pp);
	
	money.systemPayout(money.ACCT_RELIC_DEALER, player, amount, "noHandler", null);
	return;	
}

// ----------------------------------------------------------------------

void story_loot_espa_action_animBow (obj_id player, obj_id npc)
{
	doAnimationAction( npc, "bow" );
}

// ----------------------------------------------------------------------

void story_loot_espa_action_storyLoot (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "story_loot.rem", true);
}

// ----------------------------------------------------------------------

void story_loot_espa_action_giveQuest (obj_id player, obj_id npc)
{
	// Mission grant.
	space_quest.grantQuest( player, "destroy_surpriseattack", "sidequest_jabba_attack" );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

string story_loot_espa_tokenTO_species (obj_id player, obj_id npc)
{
	int speciesNum = getSpecies(player);
	string speciesName = "name_human";
	switch (speciesNum)
	{
		case SPECIES_HUMAN:
			speciesName = "name_human";
			break;
		case SPECIES_ZABRAK:
			speciesName = "name_zabrak";
			break;
		case SPECIES_WOOKIEE:
			speciesName = "name_wookie";
			break;
		case SPECIES_TWILEK:
			speciesName = "name_twilek";
			break;
		case SPECIES_TRANDOSHAN:
			speciesName = "name_trandoshan";
			break;
		case SPECIES_ITHORIAN:
			speciesName = "name_ithorian";
			break;
		case SPECIES_SULLUSTAN:
			speciesName = "name_sullustan";
			break;
		case SPECIES_MON_CALAMARI:
			speciesName = "name_moncal";
			break;
		case SPECIES_RODIAN:
			speciesName = "name_rodian";
			break;
		case SPECIES_BOTHAN:
			speciesName = "name_bothan";
			break;
			
	}
			
	return new string(utils.packStringId(new string_id ("player_species", speciesName)));
}

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.story_loot_espa");
		
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName (self, "Rakkim Warstai");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName (self, "Rakkim Warstai");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.story_loot_espa");

	return SCRIPT_CONTINUE;
}

trigger OnGiveItem(obj_id item, obj_id player)
{
	if (hasObjVar(item, "story_loot.planet"))
	{
		string planet = getStringObjVar(item, "story_loot.planet");
		
		utils.setScriptVar(player, "story_loot.planet", planet);
		utils.setScriptVar(player, "story_loot.item", item);
		
		OnStartNpcConversation(self, player);
	}
	
	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (story_loot_espa_condition_checkAll (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_espa_action_All (player, self);

		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkCorellia (player, self))
	{
		doAnimationAction (self, "point_away");

		story_loot_espa_action_Corellia (player, self);

		//-- NPC: Corellia.. weak place! Get better information!
		string_id message = new string_id (c_stringFile, "s_eb89c5e8");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkDantooine (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_espa_action_Dantooine (player, self);

		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkDathomir (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_espa_action_Dathomir (player, self);

		//-- NPC: Dathomir... another strong place. Jabba will be happy.
		string_id message = new string_id (c_stringFile, "s_e8d7669c");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkEndor (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_espa_action_Endor (player, self);

		//-- NPC: Endor... strong place. Here good pay.
		string_id message = new string_id (c_stringFile, "s_d92b587c");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkLok (player, self))
	{
		doAnimationAction (self, "nod_head_once");

		story_loot_espa_action_Lok (player, self);

		//-- NPC: ...
		string_id message = new string_id (c_stringFile, "s_9208410d");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkNaboo (player, self))
	{
		doAnimationAction (self, "point_accusingly");

		story_loot_espa_action_Naboo (player, self);

		//-- NPC: Naboo place where weak humans go. Here pay. Go get more.
		string_id message = new string_id (c_stringFile, "s_dda5f48c");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkTatooine (player, self))
	{
		doAnimationAction (self, "pound_fist_palm");

		story_loot_espa_action_Tatooine (player, self);

		//-- NPC: Tatooine provide little information. Jabba on Tatooine. But, pay anyway. Here.
		string_id message = new string_id (c_stringFile, "s_a01d56d5");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkYavin4 (player, self))
	{
		doAnimationAction (self, "wave_on_dismissing");

		story_loot_espa_action_Yavin4 (player, self);

		//-- NPC: Yavin 4 provide good information. Here. Go away.
		string_id message = new string_id (c_stringFile, "s_526a8baa");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_checkRem (player, self))
	{
		doAnimationAction (self, "pound_fist_chest");

		//-- NPC: You find information for Jabba? Drag object on me for pay.
		string_id message = new string_id (c_stringFile, "s_85a47567");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition_hasSpaceExp (player, self))
	{
		doAnimationAction (self, "pound_fist_palm");

		//-- NPC: You are a pilot. I need information and you will help me.
		string_id message = new string_id (c_stringFile, "s_59bbb156");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Can you be anymore rude? What if I don't want to help you?
		boolean hasResponse0 = false;
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I have something else to do.
		boolean hasResponse1 = false;
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_bad36576");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b7dcdcb5");

			setObjVar (player, "conversation.story_loot_espa.branchId", 11);

			npcStartConversation (player, self, "story_loot_espa", message, responses);
		}
		else
		{
			chat.chat (self, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_loot_espa_condition__defaultCondition (player, self))
	{
		doAnimationAction (self, "point_away");

		//-- NPC: You are not a pilot. Leave now.
		string_id message = new string_id (c_stringFile, "s_d00fd861");
		chat.chat (self, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "story_loot_espa")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.story_loot_espa.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: You are a pilot. I need information and you will help me.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you be anymore rude? What if I don't want to help you?
	if (branchId == 11 && response == "s_bad36576")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			//-- NPC: I feed you to Jabba's sarlacc.
			string_id message = new string_id (c_stringFile, "s_33ae86cf");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Hm. Fair enough. What do you need help with?
			boolean hasResponse0 = false;
			if (story_loot_espa_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not afraid of you or Jabba.
			boolean hasResponse1 = false;
			if (story_loot_espa_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e7b0189e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aa27fded");

				setObjVar (player, "conversation.story_loot_espa.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_espa.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You are a pilot. I need information and you will help me.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You are a pilot. I need information and you will help me.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have something else to do.
	if (branchId == 11 && response == "s_b7dcdcb5")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			//-- NPC: ...
			string_id message = new string_id (c_stringFile, "s_9208410d");
			removeObjVar (player, "conversation.story_loot_espa.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You are a pilot. I need information and you will help me.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I feed you to Jabba's sarlacc.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hm. Fair enough. What do you need help with?
	if (branchId == 12 && response == "s_e7b0189e")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			//-- NPC: Jabba needs information from space systems. Go, fight and bring back data disks and logs. You find one, you will know what I talk about.
			string_id message = new string_id (c_stringFile, "s_c234a75b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay. By the way, your Basic is pretty good.
			boolean hasResponse0 = false;
			if (story_loot_espa_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_abaa5f2c");

				setObjVar (player, "conversation.story_loot_espa.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_espa.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I feed you to Jabba's sarlacc.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I feed you to Jabba's sarlacc.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not afraid of you or Jabba.
	if (branchId == 12 && response == "s_aa27fded")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition_hasQuest (player, self))
		{
			//-- NPC: So be it.
			string_id message = new string_id (c_stringFile, "s_bf137a50");
			removeObjVar (player, "conversation.story_loot_espa.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			doAnimationAction (self, "threaten_combat");

			story_loot_espa_action_giveQuest (player, self);

			//-- NPC: I advise you to steer clear of Jabba's men, then, little %TO.
			string_id message = new string_id (c_stringFile, "s_e13ea287");
			removeObjVar (player, "conversation.story_loot_espa.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (self);
			pp.other.set (story_loot_espa_tokenTO_species (player, self));

			npcSpeak (player, pp);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I feed you to Jabba's sarlacc.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Jabba needs information from space systems. Go, fight and bring back data disks and logs. You find one, you will know what I talk about.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay. By the way, your Basic is pretty good.
	if (branchId == 13 && response == "s_abaa5f2c")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			//-- NPC: ...
			string_id message = new string_id (c_stringFile, "s_9208410d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What are you, anyway?
			boolean hasResponse0 = false;
			if (story_loot_espa_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9a1df5f5");

				setObjVar (player, "conversation.story_loot_espa.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.story_loot_espa.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Jabba needs information from space systems. Go, fight and bring back data disks and logs. You find one, you will know what I talk about.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: ...
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are you, anyway?
	if (branchId == 14 && response == "s_9a1df5f5")
	{
		//-- [NOTE] 
		if (story_loot_espa_condition__defaultCondition (player, self))
		{
			story_loot_espa_action_storyLoot (player, self);

			//-- NPC: Weequay, servant to Jabba. Now go.
			string_id message = new string_id (c_stringFile, "s_518aa438");
			removeObjVar (player, "conversation.story_loot_espa.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch '...' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.story_loot_espa.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

