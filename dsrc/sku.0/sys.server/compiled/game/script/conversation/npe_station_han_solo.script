// ======================================================================
//
// npe_station_han_solo.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_station_han_solo";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_station_han_solo_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_playerOnQuest (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "npe_main_quest")&&
			!groundquests.isTaskActive(player, "npe_main_quest", "talktohan1"));
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_playerOnLastHanStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest", "talktohan2");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_playerCompletedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_main_quest");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_playeronFirstHanStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest", "talktohan1");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_playerOnQuest_2 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_main_quest_2");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2onInaldrastep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest_2", "inaldra1");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2onHanStep1 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest_2", "han1");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2onInfoStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest_2", "getinfo");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2onPerformStep (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_main_quest_2", "perform");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2onTarandQuest (obj_id player, obj_id npc)
{
	return 	groundquests.isTaskActive(player, "npe_main_quest_2", "tarand")||
			groundquests.isQuestActive(player, "npe_side_smuggle");
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2FinishedTarandQuest (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "npe_main_quest_2", "han2")&&
			groundquests.hasCompletedQuest(player, "npe_side_smuggle"));
}

// ----------------------------------------------------------------------

boolean npe_station_han_solo_condition_Main2Complete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_main_quest_2");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_station_han_solo_action_signalHan1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_main_han1");
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_signalHan2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_main_han2");
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_giveMainQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_main_quest");
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_giveMainQuest_2 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_main_quest_2");
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_signalMain2Han1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_main2_han_reply");
}

// ----------------------------------------------------------------------

void npe_station_han_solo_action_signalMain2Han2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_main2_han_final");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_station_han_solo_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How's it going?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't talked to Inaldra yet
	if (response == "s_68")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you want to get off this station, you should.
			string_id message = new string_id (c_stringFile, "s_86");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: She wants nothing to do with you.
	if (response == "s_69")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: I'm not suprised. Perhaps the direct approach wasn't the best idea. There may be something in the data terminals that would help. Would you go and check through the station's databank and transmit the information to me?
			string_id message = new string_id (c_stringFile, "s_74");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure.
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_75");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to go to the dock and get information on Inaldra.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wouldn't say that too loudly, but good luck!
			string_id message = new string_id (c_stringFile, "s_71");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to go play music in the Cantina.
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great! Break a leg, kid.
			string_id message = new string_id (c_stringFile, "s_73");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to get dirt on Tarand Crowe.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah. He's bad news. Just record everything that you do for him and bring that to me.
			string_id message = new string_id (c_stringFile, "s_78");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have the information that you need.
	if (response == "s_79")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "expect_tip");

			//-- NPC: Let me see it.
			string_id message = new string_id (c_stringFile, "s_80");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Crowe is trying to replace Inaldra. 
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_81");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm not suprised. Perhaps the direct approach wasn't the best idea. There may be something in the data terminals that would help. Would you go and check through the station's databank and transmit the information to me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure.
	if (response == "s_75")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			npe_station_han_solo_action_signalMain2Han1 (player, npc);

			//-- NPC: Thanks, kid.
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Crowe is trying to replace Inaldra. 
	if (response == "s_81")
	{
		doAnimationAction (player, "feed_creature_medium");

		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			npe_station_han_solo_action_signalMain2Han2 (player, npc);

			//-- NPC: Interesting. He's gutsy. Stupid, but gutsy. This should bring Inaldra around. After that, I give up.
			string_id message = new string_id (c_stringFile, "s_82");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey kid, thanks for your help with that shipment. I have another job for you, if you want it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Jobs with you tend to be profitable.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: This may be less profitable now, but worthwhile.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Less profitable? Then why should I do the job?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm in. What do you want me to do?
			boolean hasResponse1 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This may be less profitable now, but worthwhile.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Less profitable? Then why should I do the job?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Think ahead. Contacts are everything in my business. A good contact made now will help you later.
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see. What do you want me to do?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_49");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm in. What do you want me to do?
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: This trip here reminded me that I need to repair things with Inaldra. She's not a good enemy to have. Go talk to her and see if there's something that I can do to make it up to her.
			string_id message = new string_id (c_stringFile, "s_53");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why am I the one talking to her?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Think ahead. Contacts are everything in my business. A good contact made now will help you later.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see. What do you want me to do?
	if (response == "s_49")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: This trip here reminded me that I need to repair things with Inaldra. She's not a good enemy to have. Go talk to her and see if there's something that I can do to make it up to her.
			string_id message = new string_id (c_stringFile, "s_53");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why am I the one talking to her?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: This trip here reminded me that I need to repair things with Inaldra. She's not a good enemy to have. Go talk to her and see if there's something that I can do to make it up to her.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why am I the one talking to her?
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			npe_station_han_solo_action_giveMainQuest_2 (player, npc);

			//-- NPC: You made her money. She's not likely to try to have you spaced.
			string_id message = new string_id (c_stringFile, "s_55");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How's it going, kid?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't gotten it moved yet.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well get on it! The faster we get out of here, the more money we can make elsewhere!
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Everything has been taken care of. You will get your money soon.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thank");

			npe_station_han_solo_action_signalHan2 (player, npc);

			//-- NPC: I knew that it would work out. Thanks, kid. Here's your share. Are you intereted in more work?
			string_id message = new string_id (c_stringFile, "s_41");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course! I can use the credits.
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Not right now.
			boolean hasResponse1 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew that it would work out. Thanks, kid. Here's your share. Are you intereted in more work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course! I can use the credits.
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: This may be less profitable now, but worthwhile.
			string_id message = new string_id (c_stringFile, "s_45");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Less profitable? Then why should I do the job?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm in. What do you want me to do?
			boolean hasResponse1 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now.
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. See ya around.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey kid, thanks for the help up there. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm happy to help.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I have a business proposal for you. I have a bunch of goods on my ship but no cash and I am not on the best terms with the locals here. If you can get my stuff sold, I'll cut you in on the profit.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So, I do all the work and you get most of the profit?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds good to me. What do I do now?
			boolean hasResponse1 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_88");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Save the thanks. I'll take a reward.
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: I knew there was something that I liked about you, kid. There's a problem with a reward though.
			string_id message = new string_id (c_stringFile, "s_98");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I knew there would be.
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_100");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have a business proposal for you. I have a bunch of goods on my ship but no cash and I am not on the best terms with the locals here. If you can get my stuff sold, I'll cut you in on the profit.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So, I do all the work and you get most of the profit?
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Work? This is the easy part. The work is getting the stuff. You will help me, I know you will. If you don't, you won't get off this station.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Guess I don't have a choice. What do I do now?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good to me. What do I do now?
	if (response == "s_88")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: That's the spirit! The woman that you need to talk to is Inaldra. She spends most of her time in her office. Oh, and kid?
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Work? This is the easy part. The work is getting the stuff. You will help me, I know you will. If you don't, you won't get off this station.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Guess I don't have a choice. What do I do now?
	if (response == "s_85")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: That's the spirit! The woman that you need to talk to is Inaldra. She spends most of her time in her office. Oh, and kid?
			string_id message = new string_id (c_stringFile, "s_90");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's the spirit! The woman that you need to talk to is Inaldra. She spends most of her time in her office. Oh, and kid?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes?
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "cough_polite");

			npe_station_han_solo_action_signalHan1 (player, npc);

			//-- NPC: Don't believe anything she says about me.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_station_han_solo_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I knew there was something that I liked about you, kid. There's a problem with a reward though.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I knew there would be.
	if (response == "s_100")
	{
		//-- [NOTE] 
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I have a business proposal for you. I have a bunch of goods on my ship but no cash and I am not on the best terms with the locals here. If you can get my stuff sold, I'll cut you in on the profit.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So, I do all the work and you get most of the profit?
			boolean hasResponse0 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds good to me. What do I do now?
			boolean hasResponse1 = false;
			if (npe_station_han_solo_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_88");

				utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_station_han_solo");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Han Solo");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName (self, "Han Solo");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_station_han_solo");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_station_han_solo_condition_Main2Complete (player, npc))
	{
		npe_station_han_solo_action_facePlayer (player, npc);

		//-- NPC: Thanks for all the help kid. Too bad it didn't turn out better.
		string_id message = new string_id (c_stringFile, "s_83");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_station_han_solo_condition_playerOnQuest_2 (player, npc))
	{
		npe_station_han_solo_action_facePlayer (player, npc);

		//-- NPC: How's it going?
		string_id message = new string_id (c_stringFile, "s_67");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I haven't talked to Inaldra yet
		boolean hasResponse0 = false;
		if (npe_station_han_solo_condition_Main2onInaldrastep (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: She wants nothing to do with you.
		boolean hasResponse1 = false;
		if (npe_station_han_solo_condition_Main2onHanStep1 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I need to go to the dock and get information on Inaldra.
		boolean hasResponse2 = false;
		if (npe_station_han_solo_condition_Main2onInfoStep (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I'm off to go play music in the Cantina.
		boolean hasResponse3 = false;
		if (npe_station_han_solo_condition_Main2onPerformStep (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I need to get dirt on Tarand Crowe.
		boolean hasResponse4 = false;
		if (npe_station_han_solo_condition_Main2onTarandQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: I have the information that you need.
		boolean hasResponse5 = false;
		if (npe_station_han_solo_condition_Main2FinishedTarandQuest (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_68");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_69");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_70");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_72");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_77");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_79");

			utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 2);

			npcStartConversation (player, npc, "npe_station_han_solo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_station_han_solo_condition_playerCompletedQuest (player, npc))
	{
		doAnimationAction (npc, "thank");

		npe_station_han_solo_action_facePlayer (player, npc);

		//-- NPC: Hey kid, thanks for your help with that shipment. I have another job for you, if you want it.
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Sure. Jobs with you tend to be profitable.
		boolean hasResponse0 = false;
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_43");

			utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 11);

			npcStartConversation (player, npc, "npe_station_han_solo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_station_han_solo_condition_playerOnQuest (player, npc))
	{
		npe_station_han_solo_action_facePlayer (player, npc);

		//-- NPC: How's it going, kid?
		string_id message = new string_id (c_stringFile, "s_32");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I haven't gotten it moved yet.
		boolean hasResponse0 = false;
		if (!npe_station_han_solo_condition_playerOnLastHanStep (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Everything has been taken care of. You will get your money soon.
		boolean hasResponse1 = false;
		if (npe_station_han_solo_condition_playerOnLastHanStep (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 16);

			npcStartConversation (player, npc, "npe_station_han_solo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_station_han_solo_condition_playeronFirstHanStep (player, npc))
	{
		npe_station_han_solo_action_facePlayer (player, npc);

		//-- NPC: Hey kid, thanks for the help up there. 
		string_id message = new string_id (c_stringFile, "s_58");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm happy to help.
		boolean hasResponse0 = false;
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Save the thanks. I'll take a reward.
		boolean hasResponse1 = false;
		if (npe_station_han_solo_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_60");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96");

			utils.setScriptVar (player, "conversation.npe_station_han_solo.branchId", 20);

			npcStartConversation (player, npc, "npe_station_han_solo", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_station_han_solo_condition__defaultCondition (player, npc))
	{
		npe_station_han_solo_action_giveMainQuest (player, npc);

		//-- NPC: You need the main quest, don't you?
		string_id message = new string_id (c_stringFile, "s_102");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_station_han_solo")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_station_han_solo.branchId");

	if (branchId == 2 && npe_station_han_solo_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_station_han_solo_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && npe_station_han_solo_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && npe_station_han_solo_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && npe_station_han_solo_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && npe_station_han_solo_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && npe_station_han_solo_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && npe_station_han_solo_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && npe_station_han_solo_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && npe_station_han_solo_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && npe_station_han_solo_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && npe_station_han_solo_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && npe_station_han_solo_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && npe_station_han_solo_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_station_han_solo.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

