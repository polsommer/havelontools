// ======================================================================
//
// jedi_robe_collection_giver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/jedi_robe_collection_giver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean jedi_robe_collection_giver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean jedi_robe_collection_giver_condition_isEligible_JediRobeCollection (obj_id player, obj_id npc)
{
	if ( utils.isProfession(player, utils.FORCE_SENSITIVE) )
	{
		if ( getLevel(player) >= 85 )
		{
			if ( !hasCompletedCollectionSlot(player, "jedi_robe_01_01") )
			{
				return true;
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_collection_giver_condition_isActive_jediRobeCollection (obj_id player, obj_id npc)
{
	return hasCompletedCollectionSlot(player, "jedi_robe_01_01");
}

// ----------------------------------------------------------------------

boolean jedi_robe_collection_giver_condition_ineligibleJedi (obj_id player, obj_id npc)
{
	if ( utils.isProfession(player, utils.FORCE_SENSITIVE) )
	{
		if ( getLevel(player) < 85 )
		{
			return true;
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean jedi_robe_collection_giver_condition_isComplete_jediRobeCollection (obj_id player, obj_id npc)
{
	return hasCompletedCollection(player, "jedi_robe_01");
}

// ======================================================================
// Script Actions
// ======================================================================

void jedi_robe_collection_giver_action_activateJediRobeCollection (obj_id player, obj_id npc)
{
	// jedi robe collection
	if ( !hasCompletedCollectionSlot(player, "jedi_robe_01_01") )
	{
		modifyCollectionSlotValue(player, "jedi_robe_01_01", 1);
	}
	
	// fifth generation one-hand lightsager collection
	if ( !hasCompletedCollectionSlot(player, "col_lightsaber_1h_01_01") )
	{
		modifyCollectionSlotValue(player, "col_lightsaber_1h_01_01", 1);
	}
	
	// fifth generation two-hand lightsager collection
	if ( !hasCompletedCollectionSlot(player, "col_lightsaber_2h_01_01") )
	{
		modifyCollectionSlotValue(player, "col_lightsaber_2h_01_01", 1);
	}
	
	// fifth generation polearm lightsager collection
	if ( !hasCompletedCollectionSlot(player, "col_lightsaber_polearm_01_01") )
	{
		modifyCollectionSlotValue(player, "col_lightsaber_polearm_01_01", 1);
	}
	
	// check to see if they've already completed the Meditative Discipline collection
	if ( hasCompletedCollection(player, "inv_holocron_collection_02") )
	{
		modifyCollectionSlotValue(player, "jedi_robe_01_02", 1);
	}
	
	// check to see if they've already completed the Belt of Bodo Baas collection
	if ( hasCompletedCollection(player, "inv_holocron_collection_01") )
	{
		modifyCollectionSlotValue(player, "jedi_robe_01_03", 1);
	}	
	
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int jedi_robe_collection_giver_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Come closer, my friend. I have important news for you. For, you see, there are boundless opportunities for those who possess the wisdom to perceive them. Are you one such individual?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "worship");

			jedi_robe_collection_giver_action_activateJediRobeCollection (player, npc);

			//-- NPC: I knew from the moment that I saw you! Ah, but this is only the beginning. You must venture forth and complete this undertaking to fulfill your destiny and achieve the rewards that it offers.
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.jedi_robe_collection_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am not.
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "taken_aback");

			//-- NPC: Ah, perhaps not. Perhaps I was mistaken in my initial impression of you. I am disappointed, though fear not...I shall recover my composure in time.
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.jedi_robe_collection_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't know.
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Look within yourself and discover what you can. It's a fearful adventure, to be sure, but one worthy of taking.
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.jedi_robe_collection_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.jedi_robe_collection_giver");

	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior(self, ai_lib.BEHAVIOR_SENTINEL);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.jedi_robe_collection_giver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (jedi_robe_collection_giver_condition_isComplete_jediRobeCollection (player, npc))
	{
		doAnimationAction (npc, "bow5");

		//-- NPC: The victorious Jedi returns! I've heard tales regaling your adventures and must say that I am impressed.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_collection_giver_condition_isActive_jediRobeCollection (player, npc))
	{
		doAnimationAction (npc, "greet");

		jedi_robe_collection_giver_action_activateJediRobeCollection (player, npc);

		//-- NPC: My friend, how wonderful to see you again. I trust you fare well in your endeavours?
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_collection_giver_condition_isEligible_JediRobeCollection (player, npc))
	{
		doAnimationAction (npc, "beckon");

		//-- NPC: Come closer, my friend. I have important news for you. For, you see, there are boundless opportunities for those who possess the wisdom to perceive them. Are you one such individual?
		string_id message = new string_id (c_stringFile, "s_7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am.
		boolean hasResponse0 = false;
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I am not.
		boolean hasResponse1 = false;
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I don't know.
		boolean hasResponse2 = false;
		if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_18");

			utils.setScriptVar (player, "conversation.jedi_robe_collection_giver.branchId", 3);

			npcStartConversation (player, npc, "jedi_robe_collection_giver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_collection_giver_condition_ineligibleJedi (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Greetings, friend. May the Force be with you.
		string_id message = new string_id (c_stringFile, "s_22");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (jedi_robe_collection_giver_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		//-- NPC: Greetings, friend. May your journey lead to the destination you seek.
		string_id message = new string_id (c_stringFile, "s_24");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "jedi_robe_collection_giver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.jedi_robe_collection_giver.branchId");

	if (branchId == 3 && jedi_robe_collection_giver_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.jedi_robe_collection_giver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

