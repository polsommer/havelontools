// ======================================================================
//
// radio_delivery_deathtrooper_conversation.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.features;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/radio_delivery_deathtrooper_conversation";

// ======================================================================
// Script Conditions
// ======================================================================

boolean radio_delivery_deathtrooper_conversation_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasDeliveryQuestActive (obj_id player, obj_id npc)
{
	boolean returnVal = false;
	
	for(int i = 1; i <= 3; i++)
	{	
		if(groundquests.isTaskActive(player, "outbreak_radio_delivery_0"+i, "findCamp")
		|| groundquests.isTaskActive(player, "outbreak_radio_delivery_0"+i, "hiddenSearchArea")
		|| groundquests.isTaskActive(player, "outbreak_radio_delivery_0"+i, "findBossInCharge")
		|| groundquests.isTaskActive(player, "outbreak_radio_delivery_0"+i, "goodWork"))
		{
			returnVal = true;
		}
		if(i == 3 && !returnVal)
		{
			if(groundquests.isTaskActive(player, "outbreak_radio_delivery_03", "findEpsilonContact")
			|| groundquests.isTaskActive(player, "outbreak_radio_delivery_03", "comGoodWork2"))
				returnVal = true;
		}
	}
	return returnVal;
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasRadioQuest1Complete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "outbreak_radio_delivery_01");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasNeverSpoken (obj_id player, obj_id npc)
{
	return !groundquests.isQuestActiveOrComplete(player, "outbreak_radio_delivery_01");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasRadioOneDelivered (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_radio_delivery_01", "talkToMaris");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasRadioTwoDelivered (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_radio_delivery_02", "talkToMaris");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasRadioQuest2Complete (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "outbreak_radio_delivery_02");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_noAntiVirus (obj_id player, obj_id npc)
{
	return !groundquests.hasCompletedQuest(player, "outbreak_quest_01_imperial")
	&& !groundquests.hasCompletedQuest(player, "outbreak_quest_01_rebel")
	&& !groundquests.hasCompletedQuest(player, "outbreak_quest_01_neutral");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasLastRadiosDelivered (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_radio_delivery_03", "talkToMaris");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasCompletedAll (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "outbreak_radio_delivery_03");
}

// ----------------------------------------------------------------------

boolean radio_delivery_deathtrooper_conversation_condition_hasHelmet (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "outbreak_bomber_helmet_hidden_content", "hasHelmet");
}

// ======================================================================
// Script Actions
// ======================================================================

void radio_delivery_deathtrooper_conversation_action_giveFirstDeliveryQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_radio_delivery_01"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_deliveryOneCompleted (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokenToZebMaris"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_giveSecondDeliveryQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_radio_delivery_02"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_giveThirdDeliveryQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "outbreak_radio_delivery_03"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_deliverTwoCompleted (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokenToZebMarisGamma"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_deliverThreeCompleted (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokenToZebMarisDelta"); 
}

// ----------------------------------------------------------------------

void radio_delivery_deathtrooper_conversation_action_hasDeliveredHelmet (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "hasDeliveredHelmet"); 
	if(!hasCompletedCollectionSlot(player, "hidden_content_tie_helmet"))
	{
			modifyCollectionSlotValue(player, "hidden_content_tie_helmet", 1);
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int radio_delivery_deathtrooper_conversation_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have something for you.
	if (response == "s_92")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate1");

			radio_delivery_deathtrooper_conversation_action_hasDeliveredHelmet (player, npc);

			//-- NPC: My helmet? Where did you find it. This is the best thing to happen since this nightmare started! Thank you, %TU!
			string_id message = new string_id (c_stringFile, "s_93");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, well. You did it. I guess I am a few thousand credits poorer, but it'll be worth it if we can save a few lives and coordinate supply drops.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You seem a little to altruistic for an Imperial.
	if (response == "s_71")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			radio_delivery_deathtrooper_conversation_action_deliverThreeCompleted (player, npc);

			//-- NPC: And you seem to care a lot about your credits or you wouldn't have come back. Good luck to you.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't want your credits. I just came back to see the look on your face.
	if (response == "s_73")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			radio_delivery_deathtrooper_conversation_action_deliverThreeCompleted (player, npc);

			//-- NPC: Well, too bad...you get the credits anyway. I don't plan on using them...maybe you can.
			string_id message = new string_id (c_stringFile, "s_74");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That is 2 for 2. You are really doing better than I expected.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks for the vote of confidence.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll tell you what. I'll give you the last two radios I have. Unfortunately I only have one other location that I know of, so you are on your own for finding the last camp. Trig Longo thinks it is in the research and prison facility...but I don't think anyone would have lived at that location long after the virus outbreak. 
			string_id message = new string_id (c_stringFile, "s_53");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So I don't have to come back here again? Great!
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll tell you what. I'll give you the last two radios I have. Unfortunately I only have one other location that I know of, so you are on your own for finding the last camp. Trig Longo thinks it is in the research and prison facility...but I don't think anyone would have lived at that location long after the virus outbreak. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So I don't have to come back here again? Great!
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh you don't have to, but if you want to be paid, then yeah...you might want to come back.
			string_id message = new string_id (c_stringFile, "s_65");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: ...
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh you don't have to, but if you want to be paid, then yeah...you might want to come back.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: ...
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			radio_delivery_deathtrooper_conversation_action_giveThirdDeliveryQuest (player, npc);

			//-- NPC: Here is the last location I know of. Happy hunting.
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you ready to deliver more radios?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_55")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay your next location is Camp Gamma. It should be North West of here.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I thought you said I'd get the rest of the radios.
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_57");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Okay your next location is Camp Gamma. It should be North West of here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I thought you said I'd get the rest of the radios.
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah, about that...it isn't that I don't trust you, it's just...these are the only radios I have. You understand right?
			string_id message = new string_id (c_stringFile, "s_58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You worry too much.
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_59");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah, about that...it isn't that I don't trust you, it's just...these are the only radios I have. You understand right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You worry too much.
	if (response == "s_59")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: You still want to do it right?  I'll sweeten the deal.
			string_id message = new string_id (c_stringFile, "s_60");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure.
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You still want to do it right?  I'll sweeten the deal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			radio_delivery_deathtrooper_conversation_action_giveSecondDeliveryQuest (player, npc);

			//-- NPC: I put the expected coordinates in your datapad. Hope you have an easier time with this one.
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You look new.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am, actually.
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: I lost count of the days I have been here. Gets harder to count when you don't sleep much.
			string_id message = new string_id (c_stringFile, "s_39");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Aren't you a pilot?
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I lost count of the days I have been here. Gets harder to count when you don't sleep much.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Aren't you a pilot?
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, a Tie-Bomber pilot to be exact.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How did you get here?
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, a Tie-Bomber pilot to be exact.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How did you get here?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: A rookie tie pilot clipped my wing and we lost altitude. I hate atmospheric flight...and gravity for that matter.
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What are you doing now, sending distress signals?
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A rookie tie pilot clipped my wing and we lost altitude. I hate atmospheric flight...and gravity for that matter.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are you doing now, sending distress signals?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually the Empire knows our location, and anyone else who is listening. I'm actually trying to establish a communication network with other hold out camps in the quarantine zone. That way if anyone else goes down, we can direct them to the closest defensive position.
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That is a good idea.
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually the Empire knows our location, and anyone else who is listening. I'm actually trying to establish a communication network with other hold out camps in the quarantine zone. That way if anyone else goes down, we can direct them to the closest defensive position.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That is a good idea.
	if (response == "s_77")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: I think so too. I have some radios but I can only get people on the outside of the quarantine zone. I want to talk to survivors in the quarantine zone.
			string_id message = new string_id (c_stringFile, "s_79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What makes you so certain there are other survivor camps?
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_81");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 25);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I think so too. I have some radios but I can only get people on the outside of the quarantine zone. I want to talk to survivors in the quarantine zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What makes you so certain there are other survivor camps?
	if (response == "s_81")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: Every once in a while a survivor will show up and report that there are other camps. Some of them are in bad shape and they send runners in search of medical and food supplies. It is really risky without knowing exact locations. Radio communication sure would help.
			string_id message = new string_id (c_stringFile, "s_83");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Would you like me to deliver the radios?
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Every once in a while a survivor will show up and report that there are other camps. Some of them are in bad shape and they send runners in search of medical and food supplies. It is really risky without knowing exact locations. Radio communication sure would help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Would you like me to deliver the radios?
	if (response == "s_85")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll tell you what. If you deliver this radio, I'll give you more. Between the two of us we could really save some lives.  Are you serious about this?
			string_id message = new string_id (c_stringFile, "s_87");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yeah, give me the first radio.
			boolean hasResponse0 = false;
			if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_89");

				utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int radio_delivery_deathtrooper_conversation_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll tell you what. If you deliver this radio, I'll give you more. Between the two of us we could really save some lives.  Are you serious about this?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, give me the first radio.
	if (response == "s_89")
	{
		//-- [NOTE] 
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			radio_delivery_deathtrooper_conversation_action_giveFirstDeliveryQuest (player, npc);

			//-- NPC: Here you go. The first location, I call it Camp Beta,  is south west of here. I gave you a waypoint of where I think it is. Good luck.
			string_id message = new string_id (c_stringFile, "s_94");
			utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasHelmet (player, npc))
	{
		//-- NPC: Hello.
		string_id message = new string_id (c_stringFile, "s_91");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have something for you.
		boolean hasResponse0 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_92");

			utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 1);

			npcStartConversation (player, npc, "radio_delivery_deathtrooper_conversation", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasCompletedAll (player, npc))
	{
		//-- NPC: All camps check in once an hour. We're coordinating high altitude supply drops.
		string_id message = new string_id (c_stringFile, "s_75");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasDeliveryQuestActive (player, npc))
	{
		//-- NPC: Come back when you are done delivering the radio. We'll talk then.
		string_id message = new string_id (c_stringFile, "s_31");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasLastRadiosDelivered (player, npc))
	{
		//-- NPC: Well, well. You did it. I guess I am a few thousand credits poorer, but it'll be worth it if we can save a few lives and coordinate supply drops.
		string_id message = new string_id (c_stringFile, "s_70");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You seem a little to altruistic for an Imperial.
		boolean hasResponse0 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't want your credits. I just came back to see the look on your face.
		boolean hasResponse1 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_73");

			utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 5);

			npcStartConversation (player, npc, "radio_delivery_deathtrooper_conversation", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasRadioQuest2Complete (player, npc))
	{
		//-- NPC: That is 2 for 2. You are really doing better than I expected.
		string_id message = new string_id (c_stringFile, "s_33");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thanks for the vote of confidence.
		boolean hasResponse0 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 8);

			npcStartConversation (player, npc, "radio_delivery_deathtrooper_conversation", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasRadioTwoDelivered (player, npc))
	{
		radio_delivery_deathtrooper_conversation_action_deliverTwoCompleted (player, npc);

		//-- NPC: Great work on delivering the radio to camp gamma. As promised, here is the same amount plus extra. Come back when you are ready to do the others.
		string_id message = new string_id (c_stringFile, "s_68");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasRadioQuest1Complete (player, npc))
	{
		//-- NPC: So you ready to deliver more radios?
		string_id message = new string_id (c_stringFile, "s_54");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_55");

			utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 13);

			npcStartConversation (player, npc, "radio_delivery_deathtrooper_conversation", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasRadioOneDelivered (player, npc))
	{
		radio_delivery_deathtrooper_conversation_action_deliveryOneCompleted (player, npc);

		//-- NPC: Great work on delivering that radio. Here is some credits to make the deal even sweeter. Come back when you are ready to do the others.
		string_id message = new string_id (c_stringFile, "s_61");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_noAntiVirus (player, npc))
	{
		//-- NPC: You should speak with Doctor Cody. She can get you the anti-virus.
		string_id message = new string_id (c_stringFile, "s_69");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition_hasNeverSpoken (player, npc))
	{
		//-- NPC: You look new.
		string_id message = new string_id (c_stringFile, "s_35");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am, actually.
		boolean hasResponse0 = false;
		if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_37");

			utils.setScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId", 20);

			npcStartConversation (player, npc, "radio_delivery_deathtrooper_conversation", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (radio_delivery_deathtrooper_conversation_condition__defaultCondition (player, npc))
	{
		//-- NPC: Sorry. I've got work to do.
		string_id message = new string_id (c_stringFile, "s_96");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "radio_delivery_deathtrooper_conversation")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

	if (branchId == 1 && radio_delivery_deathtrooper_conversation_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && radio_delivery_deathtrooper_conversation_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && radio_delivery_deathtrooper_conversation_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && radio_delivery_deathtrooper_conversation_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && radio_delivery_deathtrooper_conversation_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && radio_delivery_deathtrooper_conversation_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && radio_delivery_deathtrooper_conversation_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && radio_delivery_deathtrooper_conversation_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && radio_delivery_deathtrooper_conversation_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && radio_delivery_deathtrooper_conversation_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && radio_delivery_deathtrooper_conversation_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && radio_delivery_deathtrooper_conversation_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && radio_delivery_deathtrooper_conversation_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && radio_delivery_deathtrooper_conversation_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && radio_delivery_deathtrooper_conversation_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && radio_delivery_deathtrooper_conversation_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && radio_delivery_deathtrooper_conversation_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.radio_delivery_deathtrooper_conversation.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

