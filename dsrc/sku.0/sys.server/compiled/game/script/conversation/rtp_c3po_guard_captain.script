// ======================================================================
//
// rtp_c3po_guard_captain.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rtp_c3po_guard_captain";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rtp_c3po_guard_captain_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rtp_c3po_guard_captain_condition_c3poTaskActive (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_c3po_01", "rtp_c3po_01_02a");
}

// ======================================================================
// Script Actions
// ======================================================================

void rtp_c3po_guard_captain_action_sendc3poSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_c3po_01_02a");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rtp_c3po_guard_captain");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rtp_c3po_guard_captain");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rtp_c3po_guard_captain_condition_c3poTaskActive (player, npc))
	{
		rtp_c3po_guard_captain_action_sendc3poSignal (player, npc);

		//-- NPC: You're here with the medical supplies? Thank the Force! Our supply bag was stolen. If we saw any action, we'd have been in trouble without those supplies. Hand them to me.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_c3po_guard_captain_condition__defaultCondition (player, npc))
	{
		//-- NPC: Unless you're here to relieve one of my guards, I'll have to ask you to loiter somewhere else.
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rtp_c3po_guard_captain")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rtp_c3po_guard_captain.branchId");

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rtp_c3po_guard_captain.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

