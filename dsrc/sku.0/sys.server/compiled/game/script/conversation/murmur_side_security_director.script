// ======================================================================
//
// murmur_side_security_director.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/murmur_side_security_director";

// ======================================================================
// Script Conditions
// ======================================================================

boolean murmur_side_security_director_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean murmur_side_security_director_condition_onQuest (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "coronet_murmurs_side_1") ||
			groundquests.isQuestActive(player, "coronet_murmurs_side_2"));
}

// ----------------------------------------------------------------------

boolean murmur_side_security_director_condition_needs2ndQuest (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player, "coronet_murmurs_side_1") &&
			!groundquests.isQuestActiveOrComplete(player, "coronet_murmurs_side_2"));
}

// ----------------------------------------------------------------------

boolean murmur_side_security_director_condition_hasCompletedAll (obj_id player, obj_id npc)
{
	return (groundquests.hasCompletedQuest(player,"coronet_murmurs_side_1") &&
			groundquests.hasCompletedQuest(player,"coronet_murmurs_side_2"));
}

// ======================================================================
// Script Actions
// ======================================================================

void murmur_side_security_director_action_grantSideQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "coronet_murmurs_side_1");
}

// ----------------------------------------------------------------------

void murmur_side_security_director_action_regrant2ndQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "coronet_murmurs_side_2");
}

// ----------------------------------------------------------------------

void murmur_side_security_director_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int murmur_side_security_director_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Why aren't you at the lab?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My journal shorted out, and I lost my second objective.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (murmur_side_security_director_condition__defaultCondition (player, npc))
		{
			murmur_side_security_director_action_regrant2ndQuest (player, npc);

			//-- NPC: What? Let me see that, I will restore it for you.
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.murmur_side_security_director.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_security_director_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Psst! You looking for a job?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Only if it pays well.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (murmur_side_security_director_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh, it pays well. I was recently turned down for a Security Director position at this local lab. I don't agree with this decision. I was wondering if I could hire you to make them feel 'insecure' with their current selection.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Making security personnel 'insecure'? Sign me up.
			boolean hasResponse0 = false;
			if (murmur_side_security_director_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.murmur_side_security_director.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.murmur_side_security_director.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int murmur_side_security_director_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, it pays well. I was recently turned down for a Security Director position at this local lab. I don't agree with this decision. I was wondering if I could hire you to make them feel 'insecure' with their current selection.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Making security personnel 'insecure'? Sign me up.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (murmur_side_security_director_condition__defaultCondition (player, npc))
		{
			murmur_side_security_director_action_grantSideQuest (player, npc);

			//-- NPC: Good. Here is their location. Go there and do whatever it takes to make them regret their decision.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.murmur_side_security_director.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.murmur_side_security_director");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.murmur_side_security_director");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (murmur_side_security_director_condition_hasCompletedAll (player, npc))
	{
		murmur_side_security_director_action_facePlayer (player, npc);

		//-- NPC: Good work earlier. That will teach them to ignore my skills.
		string_id message = new string_id (c_stringFile, "s_12");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_security_director_condition_needs2ndQuest (player, npc))
	{
		murmur_side_security_director_action_facePlayer (player, npc);

		//-- NPC: Why aren't you at the lab?
		string_id message = new string_id (c_stringFile, "s_9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: My journal shorted out, and I lost my second objective.
		boolean hasResponse0 = false;
		if (murmur_side_security_director_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			utils.setScriptVar (player, "conversation.murmur_side_security_director.branchId", 2);

			npcStartConversation (player, npc, "murmur_side_security_director", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_security_director_condition_onQuest (player, npc))
	{
		murmur_side_security_director_action_facePlayer (player, npc);

		//-- NPC: What are you doing here? You should be at the lab.
		string_id message = new string_id (c_stringFile, "s_8");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (murmur_side_security_director_condition__defaultCondition (player, npc))
	{
		murmur_side_security_director_action_facePlayer (player, npc);

		//-- NPC: Psst! You looking for a job?
		string_id message = new string_id (c_stringFile, "s_14");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Only if it pays well.
		boolean hasResponse0 = false;
		if (murmur_side_security_director_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			utils.setScriptVar (player, "conversation.murmur_side_security_director.branchId", 5);

			npcStartConversation (player, npc, "murmur_side_security_director", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "murmur_side_security_director")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.murmur_side_security_director.branchId");

	if (branchId == 2 && murmur_side_security_director_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && murmur_side_security_director_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && murmur_side_security_director_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.murmur_side_security_director.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

