// ======================================================================
//
// bib_fortuna_mos_eisley.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.badge;
include library.buff;
include library.chat;
include library.collection;
include library.conversation;
include library.create;
include library.factions;
include library.groundquests;
include library.space_quest;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/bib_fortuna_mos_eisley";

// ======================================================================
// Script Conditions
// ======================================================================

boolean bib_fortuna_mos_eisley_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasComlinkQuest01Neut (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "quest_01_comlink_call_to_adventure_neut_faction");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasComlinkQuest01Pos (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "quest_01_comlink_call_to_adventure_pos_faction");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasComlinkQuest01Neg (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.isQuestActive(player, "quest_01_comlink_call_to_adventure_neg_faction");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasTheBiolabClue (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (
	(groundquests.isQuestActive(player, "quest_02_investigate_murder") 
	&& groundquests.isTaskActive(player, "quest_02_investigate_murder", "talkBibFortunaBiolabClue"))
	|| (groundquests.hasCompletedQuest(player, "quest_02_investigate_murder") 
	&& !groundquests.isQuestActiveOrComplete(player, "quest_03_investigate_biolab"))
	);
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasBiolabQuest (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "quest_02_investigate_murder") 
	&& groundquests.isQuestActive(player, "quest_03_investigate_biolab");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasCompletedBiolabQuest (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return groundquests.hasCompletedQuest(player, "quest_03_investigate_biolab")
	&& groundquests.isQuestActive(player, "quest_04_meet_cale_herron");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_needsToGatherClues (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "quest_02_investigate_murder", "speakHapper")
	|| groundquests.isTaskActive(player, "quest_02_investigate_murder", "identifyBody")
	|| groundquests.isTaskActive(player, "quest_02_investigate_murder", "getClues");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasQuestOneNotQuestTwo (obj_id player, obj_id npc)
{
	return (
	!groundquests.isQuestActiveOrComplete(player, "quest_02_investigate_murder") 
	&& (groundquests.hasCompletedQuest(player, "quest_01_comlink_call_to_adventure_pos_faction")
	|| groundquests.hasCompletedQuest(player, "quest_01_comlink_call_to_adventure_neg_faction")
	|| groundquests.hasCompletedQuest(player, "quest_01_comlink_call_to_adventure_neut_faction"))
	);
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasCompletedBiolabButCancelHerron (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest_03_investigate_biolab")
	&& !groundquests.isQuestActiveOrComplete(player, "quest_04_meet_cale_herron");
}

// ----------------------------------------------------------------------

boolean bib_fortuna_mos_eisley_condition_hasCompletedInvestigationCancelBiolab (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest_02_investigate_murder")
	&& !groundquests.isQuestActiveOrComplete(player, "quest_03_investigate_biolab");
}

// ======================================================================
// Script Actions
// ======================================================================

void bib_fortuna_mos_eisley_action_comlinkQuestOnceSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "bibWaitingForPlayer"); 
}

// ----------------------------------------------------------------------

void bib_fortuna_mos_eisley_action_grantQuest02Investigate (obj_id player, obj_id npc)
{
	bib_fortuna_mos_eisley_action_comlinkQuestOnceSignal(player, npc);
	groundquests.grantQuest(player, "quest_02_investigate_murder"); 
}

// ----------------------------------------------------------------------

void bib_fortuna_mos_eisley_action_sendSignalAndGrantQuest03Biolab (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "quest02PlayerHasClues"); 
}

// ----------------------------------------------------------------------

void bib_fortuna_mos_eisley_action_grantQuest03 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest_03_investigate_biolab"); 
}

// ----------------------------------------------------------------------

void bib_fortuna_mos_eisley_action_clearQuest03 (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "quest_03_investigate_biolab"); 
}

// ----------------------------------------------------------------------

void bib_fortuna_mos_eisley_action_clearThenGrantQuest03 (obj_id player, obj_id npc)
{
 	bib_fortuna_mos_eisley_action_clearQuest03(player, npc);
 	bib_fortuna_mos_eisley_action_grantQuest03(player, npc); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int bib_fortuna_mos_eisley_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you get lost?  You were supposed to be looking into Bera Jeza's previous employer.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh...right.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			bib_fortuna_mos_eisley_action_clearThenGrantQuest03 (player, npc);

			//-- NPC: Try again.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well, I found out your lab assistant was involved in the Spice Manufacturing.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: And do you have any new clues as to the identity of the killer? Witnesses? Anything new?
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Bera Jeza worked at a local biolab here in Mos Eisley.
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And do you have any new clues as to the identity of the killer? Witnesses? Anything new?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Bera Jeza worked at a local biolab here in Mos Eisley.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: Right. We know this already. Mos Eisley Biolab. Did the police have nothing else?
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No. I figured I would start by visiting the employer.
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right. We know this already. Mos Eisley Biolab. Did the police have nothing else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. I figured I would start by visiting the employer.
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			bib_fortuna_mos_eisley_action_sendSignalAndGrantQuest03Biolab (player, npc);

			//-- NPC: Very well. Check back with us as soon are you find more details. Keep a keen eye out for any information regarding a new drug.  Bera Jeza was in the middle of selling us some sort of super soldier drug and Jabba is very interested in getting his hands on the chemical makeup. Do not fail us, %TU.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm not sure why Jabba has called upon the likes of you, %TU, but I obey.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is going on here?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: A personal business associate of Jabba's has been murdered. Jabba is very interested in finding out who is responsible. 
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And this is where I come in...
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A new face is important to keep discreet here, %TU. Jabba appreciates that you have answered the call.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is going on here?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: A personal business associate of Jabba's has been murdered. Jabba is very interested in finding out who is responsible. 
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And this is where I come in...
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is good to see you again, %TU. I am glad that you have decided to answer Jabba's call.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is going on here?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: A personal business associate of Jabba's has been murdered. Jabba is very interested in finding out who is responsible. 
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And this is where I come in...
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A personal business associate of Jabba's has been murdered. Jabba is very interested in finding out who is responsible. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And this is where I come in...
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			//-- NPC: Correct. Start by identifying the body with the Mos Eisley Police. The dead female Aqualish is Bera Jeza, a lab assistant for some local lab. Claim that you are a close friend, then probe for information.
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I'll be back.
			boolean hasResponse0 = false;
			if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_39");

				utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Correct. Start by identifying the body with the Mos Eisley Police. The dead female Aqualish is Bera Jeza, a lab assistant for some local lab. Claim that you are a close friend, then probe for information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. I'll be back.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			bib_fortuna_mos_eisley_action_grantQuest02Investigate (player, npc);

			//-- NPC: Do so quickly. I need to report back to Jabba within the next few minutes.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int bib_fortuna_mos_eisley_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Start by identifying the body with the Mos Eisley Police. The dead female Aqualish is Bera Jeza, a lab assistant for some local lab. Claim that you are a close friend, then probe for information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. I'll be back.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			bib_fortuna_mos_eisley_action_grantQuest02Investigate (player, npc);

			//-- NPC: Do so quickly. I need to report back to Jabba within the next few minutes.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.bib_fortuna_mos_eisley");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.bib_fortuna_mos_eisley");

	return SCRIPT_CONTINUE;
}

trigger OnDetach ()
{
	clearCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasCompletedBiolabButCancelHerron (player, npc))
	{
		//-- NPC: Did you get lost?  You were supposed to be looking into Bera Jeza's previous employer.
		string_id message = new string_id (c_stringFile, "s_41");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Oh...right.
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_42");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 1);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasCompletedBiolabQuest (player, npc))
	{
		//-- NPC: Jabba gave you a job. Find Bera Jeza's killer so we may enact justice.
		string_id message = new string_id (c_stringFile, "s_21");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasBiolabQuest (player, npc))
	{
		//-- NPC: Find the bio-laboratory, %TU, then check in. Jabba is not patient about these things.
		string_id message = new string_id (c_stringFile, "s_19");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasCompletedInvestigationCancelBiolab (player, npc))
	{
		bib_fortuna_mos_eisley_action_grantQuest03 (player, npc);

		//-- NPC: You need to find the bio-laboratory, %TU, then check in. Jabba is not patient about these things.
		string_id message = new string_id (c_stringFile, "s_47");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasTheBiolabClue (player, npc))
	{
		//-- NPC: Well?
		string_id message = new string_id (c_stringFile, "s_22");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Well, I found out your lab assistant was involved in the Spice Manufacturing.
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 6);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_needsToGatherClues (player, npc))
	{
		//-- NPC: Are you one of those henchmen that can't follow simple instructions?  Speak with the Mos Eisley police and get some details.
		string_id message = new string_id (c_stringFile, "s_37");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasComlinkQuest01Neg (player, npc))
	{
		//-- NPC: I'm not sure why Jabba has called upon the likes of you, %TU, but I obey.
		string_id message = new string_id (c_stringFile, "s_201");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is going on here?
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 13);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasComlinkQuest01Neut (player, npc))
	{
		//-- NPC: A new face is important to keep discreet here, %TU. Jabba appreciates that you have answered the call.
		string_id message = new string_id (c_stringFile, "s_203");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is going on here?
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 13);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasComlinkQuest01Pos (player, npc))
	{
		//-- NPC: It is good to see you again, %TU. I am glad that you have decided to answer Jabba's call.
		string_id message = new string_id (c_stringFile, "s_205");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is going on here?
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 13);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition_hasQuestOneNotQuestTwo (player, npc))
	{
		//-- NPC: Start by identifying the body with the Mos Eisley Police. The dead female Aqualish is Bera Jeza, a lab assistant for some local lab. Claim that you are a close friend, then probe for information.
		string_id message = new string_id (c_stringFile, "s_46");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Alright. I'll be back.
		boolean hasResponse0 = false;
		if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			utils.setScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId", 15);

			npcStartConversation (player, npc, "bib_fortuna_mos_eisley", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (bib_fortuna_mos_eisley_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		//-- NPC: I'm waiting for someone at the moment and it isn't you.
		string_id message = new string_id (c_stringFile, "s_195");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "bib_fortuna_mos_eisley")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

	if (branchId == 1 && bib_fortuna_mos_eisley_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && bib_fortuna_mos_eisley_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && bib_fortuna_mos_eisley_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && bib_fortuna_mos_eisley_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && bib_fortuna_mos_eisley_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && bib_fortuna_mos_eisley_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && bib_fortuna_mos_eisley_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && bib_fortuna_mos_eisley_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && bib_fortuna_mos_eisley_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && bib_fortuna_mos_eisley_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.bib_fortuna_mos_eisley.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

