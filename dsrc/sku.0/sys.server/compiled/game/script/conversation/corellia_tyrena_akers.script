// ======================================================================
//
// corellia_tyrena_akers.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_tyrena_akers";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_tyrena_akers_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_akers_condition_onTalkAkers1 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_talk_akers");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_akers_condition_onTalkAkers2 (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_return_akers");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_akers_condition_onMedical (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_slice_med_comp") ||
			groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_get_medicine"));
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_akers_condition_onGotoVermon (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_tyrena_petty_resolve", "petty_return_vermon");
}

// ----------------------------------------------------------------------

boolean corellia_tyrena_akers_condition_completedPetty (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "corellia_tyrena_petty_resolve");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_tyrena_akers_action_signalTalkAkers1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "petty_talk_akers");
}

// ----------------------------------------------------------------------

void corellia_tyrena_akers_action_signalTalkAkers2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "petty_return_akers");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_tyrena_akers_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you found the medicine?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I have it right here.
	if (response == "s_24")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "thumb_up");

			//-- NPC: Good, give it to me. I want to make sure the guards haven't done anything to it.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Here you go. It's just as I found it.
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, give it to me. I want to make sure the guards haven't done anything to it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here you go. It's just as I found it.
	if (response == "s_26")
	{
		doAnimationAction (player, "manipulate_medium");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "manipulate_medium");

			//-- NPC: The seal is unbroken. This is the new package he came in with. Excellent work, friend.
			string_id message = new string_id (c_stringFile, "s_27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're welcome.
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The seal is unbroken. This is the new package he came in with. Excellent work, friend.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're welcome.
	if (response == "s_28")
	{
		doAnimationAction (player, "thumb_up");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_tyrena_akers_action_signalTalkAkers2 (player, npc);

			//-- NPC: Finish what you need to do here, I will get the medicine back to Vermon.
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you found Vermon's meds?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_19")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Check the medical computer in the sick bay.
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where is the sick bay?
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Check the medical computer in the sick bay.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is the sick bay?
	if (response == "s_21")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: I don't know. You'll have to look for it.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What's going on here? You're not supposed to be here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was sent to find you by a man named Vermon.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "explain");

			//-- NPC: Vermon? Is he ok? Did Kyran get him out?
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why are you concerned?
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Vermon? Is he ok? Did Kyran get him out?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why are you concerned?
	if (response == "s_38")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "explain");

			//-- NPC: Vermon has been through a lot. He's a good guy as long as he gets his medicine. I don't think Kyran had time to get it before they made their escape.
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Medicine? Vermon is sick?
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Vermon has been through a lot. He's a good guy as long as he gets his medicine. I don't think Kyran had time to get it before they made their escape.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Medicine? Vermon is sick?
	if (response == "s_42")
	{
		doAnimationAction (player, "wtf");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. He's mentally ill. He's ok as long as he takes his medication.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That explains a lot. Do you have his medication?
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. He's mentally ill. He's ok as long as he takes his medication.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That explains a lot. Do you have his medication?
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "explain");

			//-- NPC: No. I suppose you could check the slavers' medical computer and find out if the guards still have it.
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Do you know where this computer is?
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No. I suppose you could check the slavers' medical computer and find out if the guards still have it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you know where this computer is?
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "shrug_hands");

			//-- NPC: I would guess in the sick bay, but I have no idea where that is.
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ok, I will look for it.
			boolean hasResponse0 = false;
			if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_tyrena_akers_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I would guess in the sick bay, but I have no idea where that is.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok, I will look for it.
	if (response == "s_54")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "beckon");

			corellia_tyrena_akers_action_signalTalkAkers1 (player, npc);

			//-- NPC: Come back if you find his medicine.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_tyrena_akers");

    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
    setCondition (self, CONDITION_CONVERSABLE);
    setCondition (self, CONDITION_INTERESTING);
    setInvulnerable (self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_tyrena_akers");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition_completedPetty (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: You've done a good thing here, friend. I came back to make sure everyone can get out ok.
		string_id message = new string_id (c_stringFile, "s_31");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition_onGotoVermon (player, npc))
	{
		doAnimationAction (npc, "point_away");

		//-- NPC: Go see Vermon when you are done here.
		string_id message = new string_id (c_stringFile, "s_30");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition_onTalkAkers2 (player, npc))
	{
		doAnimationAction (npc, "shrug_hands");

		//-- NPC: Have you found the medicine?
		string_id message = new string_id (c_stringFile, "s_23");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I have it right here.
		boolean hasResponse0 = false;
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 3);

			npcStartConversation (player, npc, "corellia_tyrena_akers", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition_onMedical (player, npc))
	{
		doAnimationAction (npc, "shrug_hands");

		//-- NPC: Have you found Vermon's meds?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No.
		boolean hasResponse0 = false;
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 7);

			npcStartConversation (player, npc, "corellia_tyrena_akers", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition_onTalkAkers1 (player, npc))
	{
		doAnimationAction (player, "nervous");

		//-- NPC: What's going on here? You're not supposed to be here.
		string_id message = new string_id (c_stringFile, "s_32");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was sent to find you by a man named Vermon.
		boolean hasResponse0 = false;
		if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.corellia_tyrena_akers.branchId", 10);

			npcStartConversation (player, npc, "corellia_tyrena_akers", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_tyrena_akers_condition__defaultCondition (player, npc))
	{
		doAnimationAction (player, "nervous");

		//-- NPC: Might want to be a bit more stealthy, friend. The guards around here will make a slave out of you.
		string_id message = new string_id (c_stringFile, "s_58");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_tyrena_akers")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

	if (branchId == 3 && corellia_tyrena_akers_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_tyrena_akers_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && corellia_tyrena_akers_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_tyrena_akers_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && corellia_tyrena_akers_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && corellia_tyrena_akers_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && corellia_tyrena_akers_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && corellia_tyrena_akers_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && corellia_tyrena_akers_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && corellia_tyrena_akers_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && corellia_tyrena_akers_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_tyrena_akers.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

