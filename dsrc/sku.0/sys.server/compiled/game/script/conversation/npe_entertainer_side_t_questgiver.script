// ======================================================================
//
// npe_entertainer_side_t_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.34 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_entertainer_side_t_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_entertainer_side_t_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_entertainer_side_t_questgiver_condition_playerOnQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_entertainer_side_t");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_side_t_questgiver_condition_playerDoneWithQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_entertainer_side_t");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_side_t_questgiver_condition_playerOnThrawnTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_entertainer_side_t", "thrawnsignal");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_entertainer_side_t_questgiver_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_entertainer_side_t_questgiver_action_giveQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "npe_entertainer_side_t");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_entertainer_side_t_questgiver_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I assume that you return to me with information?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I overheard something about a cloaked figure that has been questioning passengers.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh...I see. It's probably nothing, but you should tell Captain Thrawn who said that.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am not done yet.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then do not bother me. I am very important, you understand.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_side_t_questgiver_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need research done. You will help me, right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of research?
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Captain Thrawn and I have recently come to this station in pursuit of...never mind why we are here. The fact is we are here and Captain Thrawn wants to make sure that things are in order. We need someone to listen to the local gossip and tell me what is going on around here.
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So, he needs a station spy?
			boolean hasResponse0 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I would be happy to help.
			boolean hasResponse1 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No thanks. I do not like spying on others.
			boolean hasResponse2 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course I will help you.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			npe_entertainer_side_t_questgiver_action_giveQuest (player, npc);

			//-- NPC: Good. I knew that I could count on you, %TU. Go to the Cantina and perform there. Bring back any interesting information. If there's something particularly...interesting...find out who said it too, would you?
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly.
			boolean hasResponse0 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				chat.chat (npc, player, pp);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't right now, I'm busy.
	if (response == "s_40")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shoo");

			//-- NPC: Very well. So am I. Go away.
			string_id message = new string_id (c_stringFile, "s_42");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_side_t_questgiver_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Captain Thrawn and I have recently come to this station in pursuit of...never mind why we are here. The fact is we are here and Captain Thrawn wants to make sure that things are in order. We need someone to listen to the local gossip and tell me what is going on around here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So, he needs a station spy?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Bite your tongue! Trying to discover if someone is planning to riot is hardly spying. It's self-preservation.
			string_id message = new string_id (c_stringFile, "s_24");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll do it!
			boolean hasResponse0 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No way. I can't do something so intrusive.
			boolean hasResponse1 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would be happy to help.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			npe_entertainer_side_t_questgiver_action_giveQuest (player, npc);

			//-- NPC: Good. I knew that I could count on you, %TU. Go to the Cantina and perform there. Bring back any interesting information. If there's something particularly...interesting...find out who said it too, would you?
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly.
			boolean hasResponse0 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				chat.chat (npc, player, pp);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I do not like spying on others.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wouldn't cross the Empire if I were you. But it is your choice.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_side_t_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bite your tongue! Trying to discover if someone is planning to riot is hardly spying. It's self-preservation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do it!
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			npe_entertainer_side_t_questgiver_action_giveQuest (player, npc);

			//-- NPC: Good. I knew that I could count on you, %TU. Go to the Cantina and perform there. Bring back any interesting information. If there's something particularly...interesting...find out who said it too, would you?
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Certainly.
			boolean hasResponse0 = false;
			if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_43");

				utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 8);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				chat.chat (npc, player, pp);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No way. I can't do something so intrusive.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I wouldn't cross the Empire if I were you. But it is your choice.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_side_t_questgiver_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. I knew that I could count on you, %TU. Go to the Cantina and perform there. Bring back any interesting information. If there's something particularly...interesting...find out who said it too, would you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Certainly.
	if (response == "s_43")
	{
		//-- [NOTE] 
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very good. See you when you are done.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_entertainer_side_t_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_entertainer_side_t_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_entertainer_side_t_questgiver_condition_playerDoneWithQuest (player, npc))
	{
		npe_entertainer_side_t_questgiver_action_facePlayer (player, npc);

		//-- NPC: You have been helpful, but I have too much to do to talk.
		string_id message = new string_id (c_stringFile, "s_23");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_side_t_questgiver_condition_playerOnQuest (player, npc))
	{
		npe_entertainer_side_t_questgiver_action_facePlayer (player, npc);

		//-- NPC: I assume that you return to me with information?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I overheard something about a cloaked figure that has been questioning passengers.
		boolean hasResponse0 = false;
		if (npe_entertainer_side_t_questgiver_condition_playerOnThrawnTask (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I am not done yet.
		boolean hasResponse1 = false;
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 2);

			npcStartConversation (player, npc, "npe_entertainer_side_t_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "implore");

		npe_entertainer_side_t_questgiver_action_facePlayer (player, npc);

		//-- NPC: I need research done. You will help me, right?
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of research?
		boolean hasResponse0 = false;
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Of course I will help you.
		boolean hasResponse1 = false;
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I can't right now, I'm busy.
		boolean hasResponse2 = false;
		if (npe_entertainer_side_t_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_40");

			utils.setScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId", 5);

			npcStartConversation (player, npc, "npe_entertainer_side_t_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_entertainer_side_t_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

	if (branchId == 2 && npe_entertainer_side_t_questgiver_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_entertainer_side_t_questgiver_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_entertainer_side_t_questgiver_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_entertainer_side_t_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_entertainer_side_t_questgiver_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_entertainer_side_t_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

