// ======================================================================
//
// npe_entertainer_1_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.npe;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_entertainer_1_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_entertainer_1_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_playerCompletedQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "npe_entertainer_1");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_playerStartedQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "npe_entertainer_1");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_playerFinishedMainTask (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_entertainer_1", "talktoqg2");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_playerOnOtherTraining (obj_id player, obj_id npc)
{
	return 	( groundquests.isQuestActive(player, "npe_new_artisan_quest")||
			groundquests.isQuestActive(player, "npe_brawler_1hand")||
			groundquests.isQuestActive(player, "npe_brawler_2hand")||
			groundquests.isQuestActive(player, "npe_brawler_polearm")||
			groundquests.isQuestActive(player, "npe_brawler_unarmed")||
			groundquests.isQuestActive(player, "npe_scout_1")||
			//groundquests.isQuestActive(player, "npe_entertainer_1")||
			groundquests.isQuestActive(player, "npe_marksman_carbine")||
			groundquests.isQuestActive(player, "npe_marksman_pistol")||
			groundquests.isQuestActive(player, "npe_marksman_rifle")||
			groundquests.isQuestActive(player, "npe_medic")||
			space_quest.hasQuest( player, "patrol", "npe_training_1" )||
			space_quest.hasQuest( player, "patrol", "npe_training_2" )||
			space_quest.hasQuest( player, "escort", "npe_training_3" )) &&
			
			groundquests.isQuestActive(player, "npe_solo_profession");
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_notEntertainer (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	if(pTemplate.indexOf("entertainer") > -1 )
		return false;
	else if (hasObjVar(player, "npe.finishedTemplate"))
		return false;
	else 
		return true;
	
}

// ----------------------------------------------------------------------

boolean npe_entertainer_1_questgiver_condition_startingconversation (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	if(pTemplate.indexOf("entertainer") > -1 )
		return true;
	else if (!hasObjVar(player, "npe.finishedTemplate"))
		return false;
	else 
		return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_entertainer_1_questgiver_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void npe_entertainer_1_questgiver_action_signalReward (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_ent1_reward");
	//npe.sendDelayed3poPopup(player, 3, 10, "sound/c3po_29.snd", "npe", "pop_credits", "npe.credits");
	//npe.giveCreditPopUp(player, npc);

	
	groundquests.grantQuest(player, "npe_han_comm_entertainer", false);
	
}

// ----------------------------------------------------------------------

void npe_entertainer_1_questgiver_action_giveQuest (obj_id player, obj_id npc)
{
	string pTemplate = getSkillTemplate(player);
	
	groundquests.grantQuest(player, "npe_entertainer_1");
	groundquests.sendSignal(player, "talked_to_anvar");
	npe.givePerformPopUp(player, npc);
	
	newbieTutorialSetToolbarElement (player, 9, "/StartDance" );
	newbieTutorialSetToolbarElement (player, 10, "/StopDance" );
	newbieTutorialHighlightUIElement (player, "/GroundHUD.Toolbar.volume.9", 5.0f);
	newbieTutorialHighlightUIElement (player, "/GroundHUD.Toolbar.volume.10", 5.0f);

	if(pTemplate.indexOf("entertainer") > -1 )
	{
		newbieTutorialSetToolbarElement (player, 4, "/flourish+1" );
		newbieTutorialSetToolbarElement (player, 5, "/flourish+2" );
		newbieTutorialSetToolbarElement (player, 6, "/flourish+3" );
		newbieTutorialSetToolbarElement (player, 7, "/flourish+4" );
		newbieTutorialSetToolbarElement (player, 16, "/flourish+5" );
		newbieTutorialSetToolbarElement (player, 17, "/flourish+6" );
		newbieTutorialSetToolbarElement (player, 18, "/flourish+7" );
		newbieTutorialSetToolbarElement (player, 19, "/flourish+8" );
		newbieTutorialHighlightUIElement (player, "/GroundHUD.Toolbar.volume.4", 5.0f);
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_entertainer_1_questgiver_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How did it go?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm done. The crowd was small, but they loved me. Did you watch?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "celebrate1");

			npe_entertainer_1_questgiver_action_signalReward (player, npc);

			//-- NPC: I did and you were great! I can't wait to see all the dances you will learn in the future. Maybe I'll run into you again. Thank you. Here is your payment.
			string_id message = new string_id (c_stringFile, "s_34");
			utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not done yet.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Well then get back up there. We've got a show to do!
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_1_questgiver_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are an entertainer, aren't you? I'm glad you're here! Do you have time for a quick dance set?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can always use the extra credits.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Great! I need to bring in customers and you are the person to do it! Please head onto the stage or into the crowd and dance. With your apparent grace, you should draw up a nice crowd.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What are the exact terms of the agreement?
			boolean hasResponse0 = false;
			if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_20");

				utils.setScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm busy right now.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			//-- NPC: I understand. This isn't the most glamorous cantina in the galaxy. Come back if you change your mind.
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_1_questgiver_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! I need to bring in customers and you are the person to do it! Please head onto the stage or into the crowd and dance. With your apparent grace, you should draw up a nice crowd.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are the exact terms of the agreement?
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: I can pay you 250 credits. If you would do two 20-second dance routines, I'd be grateful.
			string_id message = new string_id (c_stringFile, "s_22");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ok!  I'll do it.
			boolean hasResponse0 = false;
			if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_entertainer_1_questgiver_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can pay you 250 credits. If you would do two 20-second dance routines, I'd be grateful.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok!  I'll do it.
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			npe_entertainer_1_questgiver_action_giveQuest (player, npc);

			//-- NPC: Wonderful! Come back to me when you are done.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_entertainer_1_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	//setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Anvar Keyis");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	//setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Anvar Keyis");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_entertainer_1_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_entertainer_1_questgiver_condition_playerCompletedQuest (player, npc))
	{
		npe_entertainer_1_questgiver_action_facePlayer (player, npc);

		//-- NPC: Thank you for everything! You have some real potential, %TU!
		string_id message = new string_id (c_stringFile, "s_39");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_1_questgiver_condition_playerStartedQuest (player, npc))
	{
		npe_entertainer_1_questgiver_action_facePlayer (player, npc);

		//-- NPC: How did it go?
		string_id message = new string_id (c_stringFile, "s_30");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm done. The crowd was small, but they loved me. Did you watch?
		boolean hasResponse0 = false;
		if (npe_entertainer_1_questgiver_condition_playerFinishedMainTask (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not done yet.
		boolean hasResponse1 = false;
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			utils.setScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId", 2);

			npcStartConversation (player, npc, "npe_entertainer_1_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_1_questgiver_condition_notEntertainer (player, npc))
	{
		//-- NPC: Hello! Enjoy the entertainment!
		string_id message = new string_id (c_stringFile, "s_43");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_1_questgiver_condition_startingconversation (player, npc))
	{
		doAnimationAction (npc, "greet");

		npe_entertainer_1_questgiver_action_facePlayer (player, npc);

		//-- NPC: You are an entertainer, aren't you? I'm glad you're here! Do you have time for a quick dance set?
		string_id message = new string_id (c_stringFile, "s_14");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I can always use the extra credits.
		boolean hasResponse0 = false;
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thanks. I'm busy right now.
		boolean hasResponse1 = false;
		if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId", 6);

			npcStartConversation (player, npc, "npe_entertainer_1_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_entertainer_1_questgiver_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Welcome to the Cantina!
		string_id message = new string_id (c_stringFile, "s_46");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_entertainer_1_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

	if (branchId == 2 && npe_entertainer_1_questgiver_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_entertainer_1_questgiver_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && npe_entertainer_1_questgiver_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && npe_entertainer_1_questgiver_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_entertainer_1_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

