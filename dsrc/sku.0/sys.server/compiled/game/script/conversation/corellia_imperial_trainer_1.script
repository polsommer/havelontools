// ======================================================================
//
// corellia_imperial_trainer_1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.features;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;
include library.xp;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_imperial_trainer_1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_imperial_trainer_1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForMission1 (obj_id player, obj_id npc)
{
	if ( hasSkill( player, "pilot_imperial_navy_novice" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasFailedMission1 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "patrol", "corellia_imperial_1" ) ||
		 space_quest.hasAbortedQuest( player, "patrol", "corellia_imperial_1" ) ||
		 space_quest.hasFailedQuest( player, "destroy_surpriseattack", "corellia_imperial_1" ) ||
		 space_quest.hasAbortedQuest( player, "destroy_surpriseattack", "corellia_imperial_1" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasWonMission1 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "destroy_surpriseattack", "corellia_imperial_1" ))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_imperial_1" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasWonMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "destroy", "corellia_imperial_2" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasFailedMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "destroy", "corellia_imperial_2" ) ||
		 space_quest.hasAbortedQuest( player, "destroy", "corellia_imperial_2" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isOnMission (obj_id player, obj_id npc)
{
	return ( space_quest.hasQuest( player ) && corellia_imperial_trainer_1_condition_hasNoviceSkillBox(player, npc ) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "destroy", "corellia_imperial_2" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasFailedMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "patrol", "corellia_imperial_3" ) ||
		 space_quest.hasAbortedQuest( player, "patrol", "corellia_imperial_3" ) ||
		 space_quest.hasFailedQuest( player, "escort", "corellia_imperial_3" ) ||
		 space_quest.hasAbortedQuest( player, "escort", "corellia_imperial_3" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasWonMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "escort", "corellia_imperial_3" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "escort", "corellia_imperial_3" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasWonMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "assassinate", "corellia_imperial_4" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasFailedMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "assassinate", "corellia_imperial_4" ) ||
		 space_quest.hasAbortedQuest( player, "assassinate", "corellia_imperial_4" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForDuty (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_readyForSecondSkill (obj_id player, obj_id npc)
{
	//you're not here for training if you have all your skills!
	if (space_flags.hasCompletedTierOne( player ) )
		return false;

	//you're ready to buy training if you have your reward and enough xp for a new skill:
	if (!space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;

	//you're ready for free training if you have your reward and do not have ANY tier1 skill:
	if( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		!hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		!hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		!hasSkill( player, "pilot_imperial_navy_droid_01" ))
		 return true;
		
	if( space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_starships_01" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_weapons_01" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_procedures_01" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_droid_01" ) )
		 return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canBuySkill1 (obj_id player, obj_id npc)
{
	if ( !space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;
		
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		return true;
	}
	else if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_starships_01" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canBuySkill2 (obj_id player, obj_id npc)
{
	if ( !space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;
		
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		return true;
	}
	else if ( !hasSkill( player, "pilot_imperial_navy_weapons_01" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_weapons_01" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canBuySkill3 (obj_id player, obj_id npc)
{
	if ( !space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;
		
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		return true;
	}
	else if ( !hasSkill( player, "pilot_imperial_navy_procedures_01" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_procedures_01" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canBuySkill4 (obj_id player, obj_id npc)
{
	if ( !space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;
		
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		return true;
	}
	else if ( !hasSkill( player, "pilot_imperial_navy_droid_01" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_droid_01" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canBuySkill (obj_id player, obj_id npc)
{
	if ( !space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return false;
		
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		return true;
	}

	if (	space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_starships_01" ) ||
		 	space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_weapons_01" ) ||
		 	space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_procedures_01" ) ||
		  	space_quest.isPlayerQualifiedForSkill( player, "pilot_imperial_navy_droid_01" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasAllSkills (obj_id player, obj_id npc)
{
	/*
	if ( space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ) &&
		  hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		  hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		  hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		  hasSkill( player, "pilot_imperial_navy_droid_01" ) )
		return true;
	else
		return false;
	*/
	
	if(space_flags.hasCompletedTierOne(player) && space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasCompletedSeries (obj_id player, obj_id npc)
{
	return space_quest.hasCompletedQuestSeries( player, "imperial_corellia_1" );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isRebelPilot (obj_id player, obj_id npc)
{
	int playerFactionID = pvpGetAlignedFaction(player);
	if ( playerFactionID == ##"rebel" )
		return true;
	else if ( !space_flags.isImperialPilot( player ) && corellia_imperial_trainer_1_condition_hasNegativeFactionStanding( player, npc ) )
		return true;
	else
		return ( hasSkill( player, "pilot_rebel_navy_novice" ) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isNeutralPilot (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_neutral_novice" ) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isImperialNonMember (obj_id player, obj_id npc)
{
	return ( hasSkill( player, "pilot_imperial_navy_novice" ) && !space_flags.isSpaceTrack( player, space_flags.IMPERIAL_CORELLIA) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isWorkingForPrisk (obj_id player, obj_id npc)
{
	if(space_flags.hasSpaceFlag(player, "isWorkingForPrisk"))
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasAShip (obj_id player, obj_id npc)
{
	return !space_quest.canGrantNewbieShip(player);
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_lostShip (obj_id player, obj_id npc)
{
	return space_quest.canGrantNewbieShip(player) && hasSkill( player, "pilot_imperial_navy_novice" );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasVeryFirstQuest (obj_id player, obj_id npc)
{
	//You've got your assignment, and the control device for your ship in your datapad.  Go to the Starport and access the terminal to launch into space.
	if (!space_quest.hasCertifiedShip(player))
		return false; 
	else	
		return ( space_quest.hasQuest( player, "patrol", "corellia_imperial_1" ) ||
			  	 space_quest.hasQuest( player, "destroy_surpriseattack", "corellia_imperial_1" ) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_canFlyNonTrackDuty (obj_id player, obj_id npc)
{
	if((hasSkill( player, "pilot_imperial_navy_starships_01") || 
	    hasSkill( player, "pilot_imperial_navy_procedures_01") ||
	    hasSkill( player, "pilot_imperial_navy_weapons_01") ||
	    hasSkill( player, "pilot_imperial_navy_droid_01" )) && !space_quest.hasQuest(player))
	    return true;
	    
	return false;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isWookieeOrIthorian (obj_id player, obj_id npc)
{
	int plrSpecies = getSpecies( player );
	return ( plrSpecies == SPECIES_ITHORIAN || plrSpecies == SPECIES_WOOKIEE );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasNegativeFactionStanding (obj_id player, obj_id npc)
{
	return ( factions.getFactionStanding( player, factions.FACTION_IMPERIAL ) < 0.0f );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasWeirdHead (obj_id player, obj_id npc)
{
	int plrSpecies = getSpecies( player );
	
	if(plrSpecies == SPECIES_HUMAN || plrSpecies == SPECIES_ZABRAK)
		return false;
		
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasSpaceExp (obj_id player, obj_id npc)
{
	return features.isSpaceEdition(player);
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_hasNoviceSkillBox (obj_id player, obj_id npc)
{
	return ( space_quest.hasSkill( player, "pilot_imperial_navy_novice" ) );
}

// ----------------------------------------------------------------------

boolean corellia_imperial_trainer_1_condition_isNotImperial (obj_id player, obj_id npc)
{
	return !factions.isImperial(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_imperial_trainer_1_action_grantMission1 (obj_id player, obj_id npc)
{
	// Animation.
	faceTo( npc, player );
	doAnimationAction( npc, "conversation_1" );
	
	// Mission grant.
	space_quest.grantQuest( player, "patrol", "corellia_imperial_1" );
	space_flags.restoreClientPath( player );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animExplain (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "explain" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveRewardMission1 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "destroy_surpriseattack", "corellia_imperial_1" ) )
		return;
		
	// Animation.
	faceTo( npc, player );
	doAnimationAction( npc, "conversation_1" );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 25.0f );
	space_quest.giveReward( player, "destroy_surpriseattack", "corellia_imperial_1", 100 );

}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveMembershipBadge (obj_id player, obj_id npc)
{
	// Grant our faction membership badge.
	//badge.grantBadge( player, badge.BDG_SPACE_FACTION_IMPERIAL_TATOOINE );
	
	// Grant our novice pilot skill.
	space_flags.setSpaceTrack( player, space_flags.IMPERIAL_CORELLIA );
	skill.noisyGrantSkill( player, "pilot_imperial_navy_novice" );

	//remove this when the other convos no longer look for it:
	//setObjVar( player, "blackEpsilonAgent", 1 );

	// Salute.
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animNodHead (obj_id player, obj_id npc)
{
	// Temporary hack:
	setName( npc, "Hakasha Sireen" );
	setInvulnerable( npc, true );

	faceTo( npc, player );
	doAnimationAction( npc, "nod_head_once" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animConverse (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "conversation_1" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animBothSalute (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	doAnimationAction( player, "salute1" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animDisgust (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "shake_head_disgust" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animGestureWild (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "gesticulate_wildly" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animPoundFist (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "pound_fist_palm" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animRubChin (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "rub_chin_thoughtful" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animPoliteApplause (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( player, "salute1" );
	doAnimationAction( npc, "applause_polite" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantMission2 (obj_id player, obj_id npc)
{
	// Wave finger.
	faceTo( npc, player );
	doAnimationAction( npc, "wave_finger_warning" );
	
	// Assign mission.
	space_quest.grantQuest( player, "destroy", "corellia_imperial_2" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantMission2Again (obj_id player, obj_id npc)
{
	// Salute.
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	doAnimationAction( player, "salute1" );
	
	// Assign mission.
	space_quest.grantQuest( player, "destroy", "corellia_imperial_2" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveRewardMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "destroy", "corellia_imperial_2" ) )
		return;

	// Animation.
	faceTo( npc, player );
	doAnimationAction( npc, "nod_head_once" );
	
	// Give credits.
	factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 50.0f );
	space_quest.giveReward( player, "destroy", "corellia_imperial_2", 200 );
	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantMission3 (obj_id player, obj_id npc)
{
	// Assign mission.
	space_quest.grantQuest( player, "escort", "corellia_imperial_3" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveRewardMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "escort", "corellia_imperial_3" ) )
		return;

	// Animation.
	faceTo( npc, player );
	doAnimationAction( npc, "applause_polite" );
	
	// Give reward.
	factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 50.0f );
	if (!corellia_imperial_trainer_1_condition_isWookieeOrIthorian(player,npc))
		space_quest.giveReward( player, "escort", "corellia_imperial_3", 500, "object/tangible/wearables/bodysuit/bodysuit_tie_fighter.iff" );
	else if ( getSpecies( player ) != SPECIES_ITHORIAN )
		space_quest.giveReward( player, "escort", "corellia_imperial_3", 500, "object/tangible/wearables/bandolier/double_bandolier.iff" );
	else
		space_quest.giveReward( player, "escort", "corellia_imperial_3", 500, "object/tangible/wearables/bandolier/ith_double_bandolier.iff" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantMission4 (obj_id player, obj_id npc)
{
	// Wave finger.
	faceTo( npc, player );
	doAnimationAction( npc, "pound_fist_palm" );
	
	// Assign mission.
	space_quest.grantQuest( player, "assassinate", "corellia_imperial_4" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveRewardMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasReceivedReward( player, "assassinate", "corellia_imperial_4" ) )
		return;

	// Animation.
	faceTo( npc, player );
	doAnimationAction( npc, "explain" );
	
	// Give reward.
	factions.addFactionStanding( player, factions.FACTION_IMPERIAL, 75.0f );
	space_quest.giveReward( player, "assassinate", "corellia_imperial_4", 1000, "object/tangible/wearables/helmet/helmet_tie_fighter.iff" );
	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveSkill1 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	
	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		skill.noisyGrantSkill( player, "pilot_imperial_navy_starships_01" );
	}
	else
	{
		skill.purchaseSkill( player, "pilot_imperial_navy_starships_01" );
	}	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveSkill2 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );

	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		skill.noisyGrantSkill( player, "pilot_imperial_navy_weapons_01" );
	}
	else
	{
		skill.purchaseSkill( player, "pilot_imperial_navy_weapons_01" );
	}	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveSkill3 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );

	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		skill.noisyGrantSkill( player, "pilot_imperial_navy_procedures_01" );
	}
	else
	{
		skill.purchaseSkill( player, "pilot_imperial_navy_procedures_01" );
	}	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_giveSkill4 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );

	if ( !hasSkill( player, "pilot_imperial_navy_starships_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_weapons_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_procedures_01" ) &&
		 !hasSkill( player, "pilot_imperial_navy_droid_01" ) )
	{
		skill.noisyGrantSkill( player, "pilot_imperial_navy_droid_01" );
	}
	else
	{
		skill.purchaseSkill( player, "pilot_imperial_navy_droid_01" );
	}	
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_flagQuestSeriesComplete (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	doAnimationAction( player, "salute1" );

	space_quest.setQuestSeriesFlag( player, "imperial_corellia_1", space_quest.QUEST_SERIES_COMPLETED );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantDestroyDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "corellia_imperial_6" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantEscortDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "corellia_imperial_7" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_animLaugh (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "laugh" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_transferToPrisk (obj_id player, obj_id npc)
{
	space_flags.setSpaceFlag(player, "isWorkingForPrisk", 1);
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_grantTheNewbieShip (obj_id player, obj_id npc)
{
	space_quest.grantNewbieShip( player, "imperial" );
}

// ----------------------------------------------------------------------

void corellia_imperial_trainer_1_action_eraseClientPath (obj_id player, obj_id npc)
{
	space_flags.clearClientPath( player );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_imperial_trainer_1_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What do you need, hon? You've got your assignment, and the control device for your ship is set up in your datapad.  You need to go to the Starport and access the starship terminal to launch into space.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I find a space station?
	if (response == "s_4738e99f")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship navigation system will automatically create a 'launch waypoint' when you take off. Fly back to this point when your mission is over. However, if you're looking for a particular space station - open your space zone map. You'll find one there!
			string_id message = new string_id (c_stringFile, "s_f4547ad0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand.
	if (response == "s_9288900f")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_hands");

			//-- NPC: No doubt about that! What else can I tell you about?
			string_id message = new string_id (c_stringFile, "s_9f128498");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your ship navigation system will automatically create a 'launch waypoint' when you take off. Fly back to this point when your mission is over. However, if you're looking for a particular space station - open your space zone map. You'll find one there!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No doubt about that! What else can I tell you about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where should I go?
	if (response == "s_32c46e00")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: First you need to go to the starport. Once you get there, you will need to go inside and look for a 'starship terminal.' They tend to be in the big main area right past the foyer. When you find a terminal, use it to 'launch' your ship into space.
			string_id message = new string_id (c_stringFile, "s_59a0de2a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_away");

			//-- NPC: Well, sweetie - after you find the starport, and use the starship terminal to launch into space, you'll need to finish your mission... I thought we were clear on that, hon.
			string_id message = new string_id (c_stringFile, "s_16a81f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I get back?
	if (response == "s_85dd7d6c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the mission is over, and you're all safe and sound, go to the nearest space station. You'll need to get landing clearance from the space station - so comm the station commander and tell her you'd like to land.
			string_id message = new string_id (c_stringFile, "s_3b421b4c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I find a space station?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4738e99f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9288900f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is my ship?
	if (response == "s_4358efe9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Your ship is parked at a starport. I've given you the control codes for a basic TIE fighter by uploading them to your personal datapad. Check your datapad to review your ship status whenever you'd like, sweetie.
			string_id message = new string_id (c_stringFile, "s_4bb6ea28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where should I go?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What do I do?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: How do I get back?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Where is my ship?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Nice to see you again hon. Are you here for business or pleasure?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I...well you see...I sort of lost my ship.
	if (response == "s_ca2a7f20")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			//-- NPC: Business it is then. I can issue you a new TIE fighter, but only the basic model. Are you sure that is what you want?
			string_id message = new string_id (c_stringFile, "s_c4031ec5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: On second thought. No thanks.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please. I really need a new ship.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7f96a397");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67e76bed");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Business it is then. I can issue you a new TIE fighter, but only the basic model. Are you sure that is what you want?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought. No thanks.
	if (response == "s_7f96a397")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Very well. Take care hon.
			string_id message = new string_id (c_stringFile, "s_f02cd84d");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please. I really need a new ship.
	if (response == "s_67e76bed")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_grantTheNewbieShip (player, npc);

			//-- NPC: Here you are. Try not to lose this one.
			string_id message = new string_id (c_stringFile, "s_b1f72a19");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're an Imperial pilot? Too bad you're already assigned to another unit. I'd be sure you'd make a fine addition to the Epsilon. What brings you here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to request a mission.
	if (response == "s_29e5ec7")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_canFlyNonTrackDuty (player, npc))
		{
			//-- NPC: I'm sure you would, hon. As it so happens, I do have some elective duty missions, if you're interested.
			string_id message = new string_id (c_stringFile, "s_c1024ba1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm interested in a duty mission.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I'd rather not.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b789ed1e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1acdc4ba");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: And I'd like to give you one, but I'm afraid that I don't have anything you can do right now. Why don't you try speaking with your commanding officer?
			string_id message = new string_id (c_stringFile, "s_aff8083e");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sure you would, hon. As it so happens, I do have some elective duty missions, if you're interested.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a duty mission.
	if (response == "s_b789ed1e")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Good, I have plenty of work for you. Pirate activity in the area is still fairly high. There are plenty of pirates to hunt or you could help escort transports moving supplies.
			string_id message = new string_id (c_stringFile, "s_4dc7104e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Destroy Duty] I'm interested in hunting more B-Wing Prototypes.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Escort Duty] I'm interested in escorting transports.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to do this later.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13e807c3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79ab4bbe");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5ebce168");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'd rather not.
	if (response == "s_1acdc4ba")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Suit yourself, hon. Come and visit again sometime.
			string_id message = new string_id (c_stringFile, "s_3e935b51");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back. You might like to know that I have mentioned your name to one of my superiors and he is most interested in meeting you. But I would highly recommend that you do not go until you feel yourself ready to take the next step.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a duty.
	if (response == "s_2d5d4bf0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Good, I have plenty of work for you. Pirate activity in the area is still fairly high. There are plenty of pirates to hunt or you could help escort transports moving supplies.
			string_id message = new string_id (c_stringFile, "s_4dc7104e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Destroy Duty] I'm interested in hunting more B-Wing Prototypes.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Escort Duty] I'm interested in escorting transports.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to do this later.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13e807c3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79ab4bbe");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5ebce168");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like training.
	if (response == "s_943c7ba6")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: There is nothing more that I can teach you hon. You need to move on in order to grow.
			string_id message = new string_id (c_stringFile, "s_f85e6621");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I appreciate all you have done for me but I am ready to move on.
	if (response == "s_3e77e17d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_transferToPrisk (player, npc);

			//-- NPC: I feared as much. I hate to lose someone with your obvious...talents, but the Emperor is in need of pilots with your skill. Prisk Kith'Vys has mentioned that he could use a good pilot, so I suggested you. He is roaming around here somewhere, just tell him that I sent you. Don't be fooled by his gruff, straightforward manner...he is really just a softy. Keep safe cutie.
			string_id message = new string_id (c_stringFile, "s_aac65592");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey hon, glad you stopped in. Word just came down from the Black Epsilon command group: we're moving forward with the next phase of our operation. They want you to be the primary operative.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Primary operative?
	if (response == "s_df75425")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_flagQuestSeriesComplete (player, npc);

			//-- NPC: It's a promotion. Black Epsilon feels you've shown sufficient loyalty and skill to be elevated in rank. You'll be in charge of flying mission critical operations in this region. You may work directly with other agents of the Emperor.
			string_id message = new string_id (c_stringFile, "s_fb05d4a4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I am honored.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_665a7735");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's a promotion. Black Epsilon feels you've shown sufficient loyalty and skill to be elevated in rank. You'll be in charge of flying mission critical operations in this region. You may work directly with other agents of the Emperor.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am honored.
	if (response == "s_665a7735")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: So you should be. There are very few active primary operatives in Black Epsilon. The Emperor himself is putting his faith and trust in you. I suppose it isn't necessary for me to say that failure would be punished harshly.
			string_id message = new string_id (c_stringFile, "s_5e109aee");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will not fail the Empire.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c602907a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you should be. There are very few active primary operatives in Black Epsilon. The Emperor himself is putting his faith and trust in you. I suppose it isn't necessary for me to say that failure would be punished harshly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will not fail the Empire.
	if (response == "s_c602907a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pose_proudly");

			//-- NPC: Glory for Emperor Palpatine! Go celebrate your promotion and come back when you're ready to get started on the next phase of your development.
			string_id message = new string_id (c_stringFile, "s_66f5a5c0");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon has authorized me to give you special instruction. Field training that will make you a more effective agent.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of training?
	if (response == "s_19ff301f")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_canBuySkill1 (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Today you'll be learning about Imperial technology. So far you've been flying a basic TIE.  The normal TIE is quite a bit more complicated than that.  For one thing, you'll find that you can install better components on it... better weapons, better armor, and so on.
			string_id message = new string_id (c_stringFile, "s_444df4b9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready for training.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not yet ready to learn that.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_403");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_404");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_canBuySkill2 (player, npc))
		{
			//-- NPC: Now you're going to learn about weapons. With just a little more training, you could be using better weapons.  Missiles can really help to swing the battle your way, and this skill can allow you to use some good ones.
			string_id message = new string_id (c_stringFile, "s_400");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready for training.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not yet ready to learn that.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_408");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_412");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 33);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_canBuySkill3 (player, npc))
		{
			//-- NPC: You are now going to learn about Imperial operations. It's no secret that Imperial pilots utilize some of the best starfighter tactics the galaxy has ever seen.  I can get you started on the road to mastering these uniquely Imperial procedures.
			string_id message = new string_id (c_stringFile, "s_401");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready for training.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not yet ready to learn that.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_416");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_420");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 36);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_canBuySkill4 (player, npc))
		{
			//-- NPC: Today we focus on navicomputer management. I can teach you how to utilize some of the basic functionality of the droid interface to normalize your shields, overload your weapons, and that sort of thing.
			string_id message = new string_id (c_stringFile, "s_402");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready for training.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not yet ready to learn that.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_424");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_428");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: You still have some work for me to do before I will train you. Okay, hon? Why don't you just finish up with what I am asking you to do? Then we will get you all trained up.
			string_id message = new string_id (c_stringFile, "s_eec1eeb4");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't need any training.
	if (response == "s_710daa61")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animRubChin (player, npc);

			//-- NPC: Hah, that's what you think! It's your choice, but you may not get this chance again. I suggest that you take it while you can.
			string_id message = new string_id (c_stringFile, "s_1d0a2959");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Today you'll be learning about Imperial technology. So far you've been flying a basic TIE.  The normal TIE is quite a bit more complicated than that.  For one thing, you'll find that you can install better components on it... better weapons, better armor, and so on.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready for training.
	if (response == "s_403")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_giveSkill1 (player, npc);

			//-- NPC: Good. Report back to me when you are ready for an assignment.
			string_id message = new string_id (c_stringFile, "s_406");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not yet ready to learn that.
	if (response == "s_404")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's your choice, but these are essential skills. Come back when you're ready.
			string_id message = new string_id (c_stringFile, "s_405");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch33 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now you're going to learn about weapons. With just a little more training, you could be using better weapons.  Missiles can really help to swing the battle your way, and this skill can allow you to use some good ones.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready for training.
	if (response == "s_408")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_giveSkill2 (player, npc);

			//-- NPC: Good. Report back to me when you are ready for an assignment.
			string_id message = new string_id (c_stringFile, "s_410");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not yet ready to learn that.
	if (response == "s_412")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's your choice, but these are essential skills. Come back when you're ready.
			string_id message = new string_id (c_stringFile, "s_414");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch36 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are now going to learn about Imperial operations. It's no secret that Imperial pilots utilize some of the best starfighter tactics the galaxy has ever seen.  I can get you started on the road to mastering these uniquely Imperial procedures.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready for training.
	if (response == "s_416")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_giveSkill3 (player, npc);

			//-- NPC: Good. Report back to me when you are ready for an assignment.
			string_id message = new string_id (c_stringFile, "s_418");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not yet ready to learn that.
	if (response == "s_420")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's your choice, but these are essential skills. Come back when you're ready.
			string_id message = new string_id (c_stringFile, "s_422");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Today we focus on navicomputer management. I can teach you how to utilize some of the basic functionality of the droid interface to normalize your shields, overload your weapons, and that sort of thing.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready for training.
	if (response == "s_424")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_giveSkill4 (player, npc);

			//-- NPC: Good. Report back to me when you are ready for an assignment.
			string_id message = new string_id (c_stringFile, "s_426");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not yet ready to learn that.
	if (response == "s_428")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It's your choice, but these are essential skills. Come back when you're ready.
			string_id message = new string_id (c_stringFile, "s_430");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch44 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ground ops is working on the sabotage plan and I haven't received word from Black Epsilon regarding new space operations. For now, I have a few duties you can work on while we wait.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is a duty?
	if (response == "s_6a128385")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Duty missions are open ended assignments. They end when you choose to end them. For example, if I assign you the task of hunting B-Wing prototypes, you can destroy as many as you want. You can end the duty any time from the mission entry in your datapad. Perform duties to earn additional pay and experience.  Once you've received enough experience, I can teach you new skills.
			string_id message = new string_id (c_stringFile, "s_2ea86030");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm interested in a duty.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm done for now.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_95");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1091c96a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 45);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a duty.
	if (response == "s_99")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Good, I have plenty of work for you. Pirate activity in the area is still fairly high. There are plenty of pirates to hunt or you could help escort transports moving supplies.
			string_id message = new string_id (c_stringFile, "s_4dc7104e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Destroy Duty] I'm interested in hunting more B-Wing Prototypes.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Escort Duty] I'm interested in escorting transports.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to do this later.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13e807c3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79ab4bbe");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5ebce168");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like training.
	if (response == "s_111")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: You don't have the experience for training, yet.  Perform some more duties.
			string_id message = new string_id (c_stringFile, "s_7bff5a7f");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want to enlist with the ground forces
	if (response == "s_761039fa")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: It is about time you sought a greater commitment to the Empire. You can change your level of commitment to the Empire using the /pvp command. This will allow you to switch between being a combatant and in special forces.
			string_id message = new string_id (c_stringFile, "s_683cce3a");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch45 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Duty missions are open ended assignments. They end when you choose to end them. For example, if I assign you the task of hunting B-Wing prototypes, you can destroy as many as you want. You can end the duty any time from the mission entry in your datapad. Perform duties to earn additional pay and experience.  Once you've received enough experience, I can teach you new skills.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a duty.
	if (response == "s_95")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Good, I have plenty of work for you. Pirate activity in the area is still fairly high. There are plenty of pirates to hunt or you could help escort transports moving supplies.
			string_id message = new string_id (c_stringFile, "s_4dc7104e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: [Destroy Duty] I'm interested in hunting more B-Wing Prototypes.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: [Escort Duty] I'm interested in escorting transports.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Actually, I'd like to do this later.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13e807c3");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_79ab4bbe");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5ebce168");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm done for now.
	if (response == "s_1091c96a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: Report back to me when you are ready for some work.
			string_id message = new string_id (c_stringFile, "s_88ffee3a");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good, I have plenty of work for you. Pirate activity in the area is still fairly high. There are plenty of pirates to hunt or you could help escort transports moving supplies.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Destroy Duty] I'm interested in hunting more B-Wing Prototypes.
	if (response == "s_13e807c3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_grantDestroyDuty (player, npc);

			//-- NPC: The Rebels still have prototype B-Wings in the system. Black Epsilon is paying agents a bounty for any that are destroyed. It helps our cause and it's a good way to hone your combat skills.
			string_id message = new string_id (c_stringFile, "s_e3bb98c5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider them dead.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7839f2d4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 48);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: [Escort Duty] I'm interested in escorting transports.
	if (response == "s_79ab4bbe")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantEscortDuty (player, npc);

			//-- NPC: We still have several key transports moving through the region on a regular basis. Most are ferrying operational supplies for us, but some are carrying equipment for other Imperial agencies. Black Epsilon will pay for every transport you escort safely.
			string_id message = new string_id (c_stringFile, "s_fb5547eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on it.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80d8485c");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 50);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I'd like to do this later.
	if (response == "s_5ebce168")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Alright, report back to me when you are ready.
			string_id message = new string_id (c_stringFile, "s_7f8a87c");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch48 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Rebels still have prototype B-Wings in the system. Black Epsilon is paying agents a bounty for any that are destroyed. It helps our cause and it's a good way to hone your combat skills.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Consider them dead.
	if (response == "s_7839f2d4")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Report back to me when you would like a new duty or mission.
			string_id message = new string_id (c_stringFile, "s_ee63dfa9");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch50 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We still have several key transports moving through the region on a regular basis. Most are ferrying operational supplies for us, but some are carrying equipment for other Imperial agencies. Black Epsilon will pay for every transport you escort safely.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it.
	if (response == "s_80d8485c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Report back to me when you would like a new duty or mission.
			string_id message = new string_id (c_stringFile, "s_ee63dfa9");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you take out the B-Wing prototype?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It was a close fight, but I came out on top.
	if (response == "s_b224e12")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animPoliteApplause (player, npc);

			//-- NPC: I love it when you talk like that. The destruction of the prototype ship and all of the other trouble we've been causing should put the Rebels on high alert. A few more little pushes and they'll make the mistake we need to justify a full Imperial occupation of Corellia.
			string_id message = new string_id (c_stringFile, "s_f09f78be");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: For the Emperor.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15799d85");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 55);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He's toast. Not such a tough ship after all.
	if (response == "s_6372912d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The destruction of the prototype ship and all of the other trouble we've been causing should put the Rebels on high alert. A few more little pushes and they'll make the mistake we need to justify a full Imperial occupation of Corellia.
			string_id message = new string_id (c_stringFile, "s_e574a24f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: My pay?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_659a2365");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch55 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I love it when you talk like that. The destruction of the prototype ship and all of the other trouble we've been causing should put the Rebels on high alert. A few more little pushes and they'll make the mistake we need to justify a full Imperial occupation of Corellia.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: For the Emperor.
	if (response == "s_15799d85")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_hasWeirdHead (player, npc))
		{
			corellia_imperial_trainer_1_action_giveRewardMission4 (player, npc);

			//-- NPC: For the Emperor, indeed. Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. Unfortunately, these standard issue helmets are not suited to meet your, uh... cranial proportions. Nevertheless, you've done an admirable job and Black Epsilon has taken note of your success.
			string_id message = new string_id (c_stringFile, "s_219f04cc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Cranial proportions?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Thank you.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6aae4cb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_125");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 56);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_polite");

			corellia_imperial_trainer_1_action_giveRewardMission4 (player, npc);

			//-- NPC: For the Emperor, indeed. You've done an admirable job and Black Epsilon has taken note of your success. Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. It's pretty menacing, should make you feel more the part for these operations.
			string_id message = new string_id (c_stringFile, "s_54eaa333");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_130");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 60);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For the Emperor, indeed. Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. Unfortunately, these standard issue helmets are not suited to meet your, uh... cranial proportions. Nevertheless, you've done an admirable job and Black Epsilon has taken note of your success.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Cranial proportions?
	if (response == "s_c6aae4cb")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. The Empire rarely enlists non-Humans as pilots, and so we are poorly prepared to equip someone such as yourself. But do not be discouraged. Your current standing in the Imperial Navy is a testament to your abilities.
			string_id message = new string_id (c_stringFile, "s_42dfe6db");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thank you.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b9b27823");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 57);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_125")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: You've exceeded my expectations. Black Epsilon was right to recruit you. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_127");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Indeed. The Empire rarely enlists non-Humans as pilots, and so we are poorly prepared to equip someone such as yourself. But do not be discouraged. Your current standing in the Imperial Navy is a testament to your abilities.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_b9b27823")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: You've exceeded my expectations. Black Epsilon was right to recruit you. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_46405dbf");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch60 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: For the Emperor, indeed. You've done an admirable job and Black Epsilon has taken note of your success. Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. It's pretty menacing, should make you feel more the part for these operations.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you.
	if (response == "s_130")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: You've exceeded my expectations. Black Epsilon was right to recruit you. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_132");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch62 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The destruction of the prototype ship and all of the other trouble we've been causing should put the Rebels on high alert. A few more little pushes and they'll make the mistake we need to justify a full Imperial occupation of Corellia.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My pay?
	if (response == "s_659a2365")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_hasWeirdHead (player, npc))
		{
			corellia_imperial_trainer_1_action_giveRewardMission4 (player, npc);

			//-- NPC: Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. Unfortunately, these standard issue helmets are not suited to meet your, uh... cranial proportions.
			string_id message = new string_id (c_stringFile, "s_23580c13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Cranial proportions?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I see...
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_giveRewardMission4 (player, npc);

			//-- NPC: Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. It looks pretty menacing, should make you feel more the part for these operations.
			string_id message = new string_id (c_stringFile, "s_83dc5be7");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It's a little big...
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1cca067");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 67);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. Unfortunately, these standard issue helmets are not suited to meet your, uh... cranial proportions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Cranial proportions?
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. The Empire rarely enlists non-Humans as pilots, and so we are poorly prepared to equip someone such as yourself. But do not be discouraged. Your current standing in the Imperial Navy is a testament to your abilities.
			string_id message = new string_id (c_stringFile, "s_140");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see...
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_614b71f0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 64);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see...
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Pilot, you've exceeded my expectations. Black Epsilon was right to recruit you. With any luck, the Emperor's plans for this system will be fulfilled within the year. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_146");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch64 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Indeed. The Empire rarely enlists non-Humans as pilots, and so we are poorly prepared to equip someone such as yourself. But do not be discouraged. Your current standing in the Imperial Navy is a testament to your abilities.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see...
	if (response == "s_614b71f0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Pilot, you've exceeded my expectations. Black Epsilon was right to recruit you. With any luck, the Emperor's plans for this system will be fulfilled within the year. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_3599ff41");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch67 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here is your pay for the B-Wing mission. I've also gotten a hold of a TIE pilot helmet. It looks pretty menacing, should make you feel more the part for these operations.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's a little big...
	if (response == "s_1cca067")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: They are all that way. The helm contains an inertial dampening system that helps prevent blackouts during tactical maneuvers as well as various optical systems that integrate with the standard TIE flight interface.
			string_id message = new string_id (c_stringFile, "s_a65a372a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I see...
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They are all that way. The helm contains an inertial dampening system that helps prevent blackouts during tactical maneuvers as well as various optical systems that integrate with the standard TIE flight interface.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I see...
	if (response == "s_151")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Pilot, you've exceeded my expectations. Black Epsilon was right to recruit you. With any luck, the Emperor's plans for this system will be fulfilled within the year. Come back when you are ready for more work.
			string_id message = new string_id (c_stringFile, "s_153");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you eliminate the B-Wing prototype?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ah, no...it's a tough ship.
	if (response == "s_64a94075")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animRubChin (player, npc);

			//-- NPC: Failure at this point is only going to encourage the Rebels to invest further in experimental ship designs. You need to get back up there and bag a B-Wing. Show the Rebels that technology isn't going to be their salvation.
			string_id message = new string_id (c_stringFile, "s_3ac44381");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I think I can take one out.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I need some time to study the B-Wing operational logs.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ffba9145");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15588832");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Failure at this point is only going to encourage the Rebels to invest further in experimental ship designs. You need to get back up there and bag a B-Wing. Show the Rebels that technology isn't going to be their salvation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I can take one out.
	if (response == "s_ffba9145")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission4 (player, npc);

			//-- NPC: Excellent. Let me know when you've done it.
			string_id message = new string_id (c_stringFile, "s_3ddbe3ce");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need some time to study the B-Wing operational logs.
	if (response == "s_15588832")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: Good idea. Let me know when you're ready to get back up there and try again.
			string_id message = new string_id (c_stringFile, "s_d0803d68");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch74 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I think you'll like this mission, hon. You get to test your mettle against some new Rebel technology. Real cutting edge stuff, too.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm always up for a challenge.
	if (response == "s_55f35dd9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animExplain (player, npc);

			//-- NPC: Apparently the Rebels are testing a new prototype starfighter called the B-Wing. It's a heavy assault fighter, loaded with weapons and layered in armor. B-Wing prototypes have been spotted in the Corellian system. We want you to find one and destroy it.
			string_id message = new string_id (c_stringFile, "s_540bd789");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Destroy it? Why not capture it?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801033a0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want some training.
	if (response == "s_5da44265")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: And you've earned it!  I'll make a deal with you, %NU.  Do just one more assignment for me, and I'll train you to be a better starfighter pilot.  Are you up for a challenge?
			string_id message = new string_id (c_stringFile, "s_6942389e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm always up for a challenge.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 79);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Apparently the Rebels are testing a new prototype starfighter called the B-Wing. It's a heavy assault fighter, loaded with weapons and layered in armor. B-Wing prototypes have been spotted in the Corellian system. We want you to find one and destroy it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Destroy it? Why not capture it?
	if (response == "s_801033a0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Imperial Intelligence has already captured extensive documentation on the ship's design, so we don't need to capture a working prototype. We'd prefer to simply send a message to the Rebellion: 'We know your secrets and they don't scare us one bit'.
			string_id message = new string_id (c_stringFile, "s_3bcb2c4a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like a fun job.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34089768");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 76);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch76 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Imperial Intelligence has already captured extensive documentation on the ship's design, so we don't need to capture a working prototype. We'd prefer to simply send a message to the Rebellion: 'We know your secrets and they don't scare us one bit'.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like a fun job.
	if (response == "s_34089768")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: Don't get too confident. The B-Wing is apparently one tough bofa treat. Blasters, missiles, good sensors and visibility. Outmaneuver her and you'll win. Our superiors think this assignment is a gamble, but I put in a good word for you. Don't let me down.
			string_id message = new string_id (c_stringFile, "s_3b6083ca");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No problem.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261cfae");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 77);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch77 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't get too confident. The B-Wing is apparently one tough bofa treat. Blasters, missiles, good sensors and visibility. Outmaneuver her and you'll win. Our superiors think this assignment is a gamble, but I put in a good word for you. Don't let me down.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No problem.
	if (response == "s_c261cfae")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission4 (player, npc);

			//-- NPC: Report back to me when you've taken out the prototype ship. Good luck, hon.
			string_id message = new string_id (c_stringFile, "s_5dd3c672");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch79 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And you've earned it!  I'll make a deal with you, %NU.  Do just one more assignment for me, and I'll train you to be a better starfighter pilot.  Are you up for a challenge?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm always up for a challenge.
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animExplain (player, npc);

			//-- NPC: Apparently the Rebels are testing a new prototype starfighter called the B-Wing. It's a heavy assault fighter, loaded with weapons and layered in armor. B-Wing prototypes have been spotted in the Corellian system. We want you to find one and destroy it.
			string_id message = new string_id (c_stringFile, "s_540bd789");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Destroy it? Why not capture it?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_801033a0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch80 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My boys in ground ops say they received the package. Good work. They're going to be moving forward with the dirtier side of the plan soon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was attacked by a CorSec patrol during the mission.
	if (response == "s_dd5ca133")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animNodHead (player, npc);

			//-- NPC: So I heard. More unfortunate casualties. I'm glad to see you didn't hesitate in eliminating them.
			string_id message = new string_id (c_stringFile, "s_72fd1d8c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: If someone shoots at me, I shoot back.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34ac7110");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 81);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch81 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So I heard. More unfortunate casualties. I'm glad to see you didn't hesitate in eliminating them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: If someone shoots at me, I shoot back.
	if (response == "s_34ac7110")
	{
		//-- [NOTE] 
		if (!corellia_imperial_trainer_1_condition_isWookieeOrIthorian (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_imperial_trainer_1_action_giveRewardMission3 (player, npc);

			//-- NPC: Just remember that sometimes you need to shoot first to survive. Our superiors are pleased that we've proceeded this far in our operation. Here is your payment plus a bonus. I also had a TIE pilot flight suit made for you.
			string_id message = new string_id (c_stringFile, "s_1d1dfdd3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fc27931b");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			corellia_imperial_trainer_1_action_giveRewardMission3 (player, npc);

			//-- NPC: Just remember that sometimes you need to shoot first to survive. Our superiors are pleased that we've proceeded this far in our operation. Here is your payment plus a bonus. I also had a double bandolier made for you.
			string_id message = new string_id (c_stringFile, "s_240aee17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_183");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 84);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch82 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just remember that sometimes you need to shoot first to survive. Our superiors are pleased that we've proceeded this far in our operation. Here is your payment plus a bonus. I also had a TIE pilot flight suit made for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_fc27931b")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: Hon, you are really shaping up to be a fine agent. Keep sharp. I'll have more work for you soon.
			string_id message = new string_id (c_stringFile, "s_33d3f25d");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch84 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just remember that sometimes you need to shoot first to survive. Our superiors are pleased that we've proceeded this far in our operation. Here is your payment plus a bonus. I also had a double bandolier made for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_183")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animBothSalute (player, npc);

			//-- NPC: Hon, you are really shaping up to be a fine agent. Keep sharp. I'll have more work for you soon.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch86 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't believe you failed the escort. This operation is crucial. We don't have much of the explosive to spare!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But, I...
	if (response == "s_fad19320")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: I don't want to hear it. This operation is critical, so we have another transport coming in. Make sure this one arrives.
			string_id message = new string_id (c_stringFile, "s_8cf0a3be");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will not fail you.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I need to figure out what went wrong.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25042a7a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8fdf4d92");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 87);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't want to hear it. This operation is critical, so we have another transport coming in. Make sure this one arrives.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will not fail you.
	if (response == "s_25042a7a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			corellia_imperial_trainer_1_action_grantMission3 (player, npc);

			//-- NPC: See that you don't. Report back to me when you've successfully completed the operation.
			string_id message = new string_id (c_stringFile, "s_eb66b332");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to figure out what went wrong.
	if (response == "s_8fdf4d92")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Don't hesitate too long. The ship will be arriving in the system shortly.
			string_id message = new string_id (c_stringFile, "s_c722467d");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch90 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back, babe. Glad to see you're still with us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready for the next step in the operation.
	if (response == "s_7a80cd06")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animPoundFist (player, npc);

			//-- NPC: Glad to see you came with your game face on, because we're going to up the ante. We've got a transport coming into the system soon carrying some delicate cargo. I need you to meet this transport and escort it safely to near Coronet orbit.
			string_id message = new string_id (c_stringFile, "s_8dec57cb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's on the transport?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1ca122f0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 91);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are you going to train me now?
	if (response == "s_4d31f286")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh_titter");

			//-- NPC: Oh you are an ambitious one, %NU, I'll give you that.  But I need you to move on to the next step in the operation now.  There'll be plenty of time for training later.
			string_id message = new string_id (c_stringFile, "s_c168cb82");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the next step?  I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7c1600a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 100);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch91 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad to see you came with your game face on, because we're going to up the ante. We've got a transport coming into the system soon carrying some delicate cargo. I need you to meet this transport and escort it safely to near Coronet orbit.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's on the transport?
	if (response == "s_1ca122f0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Some very nasty and very illegal explosive devices. We need to get them planet-side so our ground ops team can wire up a little demonstration of Rebel fanaticism.
			string_id message = new string_id (c_stringFile, "s_42a16c5f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does that mean?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dd67013");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 92);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch92 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Some very nasty and very illegal explosive devices. We need to get them planet-side so our ground ops team can wire up a little demonstration of Rebel fanaticism.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does that mean?
	if (response == "s_dd67013")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: We're going to destroy the barracks of the 72nd Imperial Army Division, based in Coronet. The explosives are of Mon Cal manufacture...extremely rare. Since the Mon Cal are open supporters of the Rebellion, it will look very much like a Rebel operation.
			string_id message = new string_id (c_stringFile, "s_b7b2ca97");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're going to kill your own troops?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b1fa2372");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 93);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch93 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We're going to destroy the barracks of the 72nd Imperial Army Division, based in Coronet. The explosives are of Mon Cal manufacture...extremely rare. Since the Mon Cal are open supporters of the Rebellion, it will look very much like a Rebel operation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're going to kill your own troops?
	if (response == "s_b1fa2372")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animConverse (player, npc);

			//-- NPC: Getting a weak stomach, hon? This is a war and in war there are casualties. If destroying that barracks brings full Imperial occupation to this system and shuts down Rebel operations here, more Imperial lives will have been saved in the long run.
			string_id message = new string_id (c_stringFile, "s_b00eaf8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: A brilliant plan.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: This sounds excessive...
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_995b811");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32ab69ab");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 94);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch94 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Getting a weak stomach, hon? This is a war and in war there are casualties. If destroying that barracks brings full Imperial occupation to this system and shuts down Rebel operations here, more Imperial lives will have been saved in the long run.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: A brilliant plan.
	if (response == "s_995b811")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Black Epsilon has calculated thousands of permutations on this scenario. The numbers don't lie. This will be a key move in bringing Corellia fully into the civil war on the side of the Empire.
			string_id message = new string_id (c_stringFile, "s_b0f32222");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like the right move, then.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9265da40");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This sounds excessive...
	if (response == "s_32ab69ab")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: It is excessive. Local civilian support for the Rebellion will be crushed. The Corellian government will be forced to take measures to stop Rebel aggression. The Rebels will plead innocence, all the while the vids report Imperial casualties.
			string_id message = new string_id (c_stringFile, "s_a45281b6");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose you have a point.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not so sure about this...
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6d2bb136");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_13bbdfe7");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 95);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch95 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It is excessive. Local civilian support for the Rebellion will be crushed. The Corellian government will be forced to take measures to stop Rebel aggression. The Rebels will plead innocence, all the while the vids report Imperial casualties.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose you have a point.
	if (response == "s_6d2bb136")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Black Epsilon has calculated thousands of permutations on this scenario. The numbers don't lie. This will be a key move in bringing Corellia fully into the civil war on the side of the Empire.
			string_id message = new string_id (c_stringFile, "s_b0f32222");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds like the right move, then.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9265da40");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 96);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not so sure about this...
	if (response == "s_13bbdfe7")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Now is not the time to second guess your masters. The fulfillment of our goals is within reach. Remember your oath. The Emperor has willed this and has foreseen a favorable outcome.
			string_id message = new string_id (c_stringFile, "s_d2d78159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then I suppose I don't have a choice.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_644da0b1");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 98);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch96 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon has calculated thousands of permutations on this scenario. The numbers don't lie. This will be a key move in bringing Corellia fully into the civil war on the side of the Empire.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds like the right move, then.
	if (response == "s_9265da40")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission3 (player, npc);

			//-- NPC: Go meet up with that transport and escort it to safety. Report back to me when you've done the job.
			string_id message = new string_id (c_stringFile, "s_2df5ef77");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch98 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Now is not the time to second guess your masters. The fulfillment of our goals is within reach. Remember your oath. The Emperor has willed this and has foreseen a favorable outcome.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Then I suppose I don't have a choice.
	if (response == "s_644da0b1")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission3 (player, npc);

			//-- NPC: If you want to stay alive, no. Report back to me when you've done the job.
			string_id message = new string_id (c_stringFile, "s_c0c1f033");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch100 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh you are an ambitious one, %NU, I'll give you that.  But I need you to move on to the next step in the operation now.  There'll be plenty of time for training later.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's the next step?  I'm ready.
	if (response == "s_7c1600a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animPoundFist (player, npc);

			//-- NPC: Glad to see you came with your game face on, because we're going to up the ante. We've got a transport coming into the system soon carrying some delicate cargo. I need you to meet this transport and escort it safely to near Coronet orbit.
			string_id message = new string_id (c_stringFile, "s_8dec57cb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's on the transport?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1ca122f0");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 91);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch101 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey babe. Did you deal with those annoying little Rebel trainees?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: They weren't much of a challenge.
	if (response == "s_fa187bb6")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Don't worry, if we get the Rebels stirred up enough, I'm sure they'll ship in the big guns. That's what we want, after all. A big move by the Rebels would justify a big counter move by the Empire.
			string_id message = new string_id (c_stringFile, "s_f498906e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm more interested in the pay than the politics.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_386d47c9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 102);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Took out enough of them to send a message.
	if (response == "s_36eb0383")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			corellia_imperial_trainer_1_action_giveRewardMission2 (player, npc);

			//-- NPC: Excellent. You seem to understand what it takes to work with Black Epsilon. Our superiors will be pleased. Here's a little payment for the operation.
			string_id message = new string_id (c_stringFile, "s_1345d43f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: When do I get to meet these superiors?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67ded17");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch102 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't worry, if we get the Rebels stirred up enough, I'm sure they'll ship in the big guns. That's what we want, after all. A big move by the Rebels would justify a big counter move by the Empire.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm more interested in the pay than the politics.
	if (response == "s_386d47c9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			corellia_imperial_trainer_1_action_giveRewardMission2 (player, npc);

			//-- NPC: Here's your money for that last job. You know, hon, Black Epsilon is a political organization. We want members who understand the delicate balance of galactic power. I'm starting to have doubts about our...compatibility.
			string_id message = new string_id (c_stringFile, "s_45c1b2ad");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Give me credits and I give you results. Nothing else matters.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ee39efb1");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 103);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch103 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's your money for that last job. You know, hon, Black Epsilon is a political organization. We want members who understand the delicate balance of galactic power. I'm starting to have doubts about our...compatibility.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me credits and I give you results. Nothing else matters.
	if (response == "s_ee39efb1")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: For now, that's all the motivation I need. Later, I'll want to know you see things our way. Come back when you are ready to work on the next step in our operation.
			string_id message = new string_id (c_stringFile, "s_c782972e");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch105 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent. You seem to understand what it takes to work with Black Epsilon. Our superiors will be pleased. Here's a little payment for the operation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When do I get to meet these superiors?
	if (response == "s_67ded17")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: They work through me and only me. The less you know, the less you tell when you get caught.
			string_id message = new string_id (c_stringFile, "s_407c41b9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't you mean IF I get caught?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f6629a2e");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 106);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch106 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They work through me and only me. The less you know, the less you tell when you get caught.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't you mean IF I get caught?
	if (response == "s_f6629a2e")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yeah, sorry, hon. IF you get caught. Come back when you are ready for the next step in our operation.
			string_id message = new string_id (c_stringFile, "s_7912ee34");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch108 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon demands results. You have failed to bring those results. If you can't bring yourself to do this job, there are others who will.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I ran into some trouble, but I'm ready to try again.
	if (response == "s_28490f70")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission2Again (player, npc);

			//-- NPC: Good to hear it. Let me know when the job is done.
			string_id message = new string_id (c_stringFile, "s_6f5dc45e");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need to think about a better plan of attack, first.
	if (response == "s_96c066fe")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Come back when you want to try again.
			string_id message = new string_id (c_stringFile, "s_28d99e75");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch111 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So what do you want to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What agency do you work for?
	if (response == "s_87f86e3e")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The majority of Imperial military operations are handled by the Navy and the Army. Both are massive, bureaucratic organizations. They destroy their enemies utterly, but sometimes a lighter touch is needed.
			string_id message = new string_id (c_stringFile, "s_a8d68602");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Which means?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8879f039");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 115);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Are you going to train me?
	if (response == "s_192ddc14")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Not just yet, %NU.  You still have a few more assignments to complete before I'll train you.  Now, I promised to answer questions for you... so what do you want to know?
			string_id message = new string_id (c_stringFile, "s_5c5f5b06");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What agency do you work for?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_239");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 112);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch112 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not just yet, %NU.  You still have a few more assignments to complete before I'll train you.  Now, I promised to answer questions for you... so what do you want to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What agency do you work for?
	if (response == "s_239")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The majority of Imperial military operations are handled by the Navy and the Army. Both are massive, bureaucratic organizations. They destroy their enemies utterly, but sometimes a lighter touch is needed.
			string_id message = new string_id (c_stringFile, "s_a8d68602");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Which means?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8879f039");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 115);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch113 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey cutey. I see you made it back in one piece. I've already heard the news. You managed to take out an entire Rebel security patrol. Nice work. Here's your payment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nothing to it. Now, you owe me some answers.
	if (response == "s_334f003c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "greet");

			//-- NPC: Aren't we the tough one? So what do you want to know?
			string_id message = new string_id (c_stringFile, "s_67b99efb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What agency do you work for?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_244");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 114);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch114 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Aren't we the tough one? So what do you want to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What agency do you work for?
	if (response == "s_244")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The majority of Imperial military operations are handled by the Navy and the Army. Both are massive, bureaucratic organizations. They destroy their enemies utterly, but sometimes a lighter touch is needed.
			string_id message = new string_id (c_stringFile, "s_a8d68602");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Which means?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8879f039");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 115);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch115 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The majority of Imperial military operations are handled by the Navy and the Army. Both are massive, bureaucratic organizations. They destroy their enemies utterly, but sometimes a lighter touch is needed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Which means?
	if (response == "s_8879f039")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: When the Emperor desires to resolve a problem and the overt use of force is not politically feasible, he calls upon us. Black Epsilon.
			string_id message = new string_id (c_stringFile, "s_1bf00a8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Black Epsilon...
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fe85123f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 116);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch116 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: When the Emperor desires to resolve a problem and the overt use of force is not politically feasible, he calls upon us. Black Epsilon.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Black Epsilon...
	if (response == "s_fe85123f")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We are a division of the Imperial Navy, but no record in the Imperial Archive on Coruscant would indicate our existence. We serve the will of the Emperor directly and silently. When political necessity requires a war, we create war. When it requires peace, we silence those who oppose peace.
			string_id message = new string_id (c_stringFile, "s_e99f26f3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse4 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f78cffa");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_257");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_268");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_295");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_314");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 117);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch117 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We are a division of the Imperial Navy, but no record in the Imperial Archive on Coruscant would indicate our existence. We serve the will of the Emperor directly and silently. When political necessity requires a war, we create war. When it requires peace, we silence those who oppose peace.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I join Black Epsilon?
	if (response == "s_1f78cffa")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.
			string_id message = new string_id (c_stringFile, "s_ca3b3777");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70edc281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10499a33");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3c26f38a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d2e23af2");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 118);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire work with a Zabrak?
	if (response == "s_257")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.
			string_id message = new string_id (c_stringFile, "s_ce07308a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 119);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why trust me?
	if (response == "s_268")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Babe, I don't trust anyone.
			string_id message = new string_id (c_stringFile, "s_f866da28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then why recruit me?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_da3e5ec3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 120);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Black Epsilon doing here?
	if (response == "s_295")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.
			string_id message = new string_id (c_stringFile, "s_81a6747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I mean on Corellia.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff1e8d6a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_314")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch118 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire work with a Zabrak?
	if (response == "s_70edc281")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.
			string_id message = new string_id (c_stringFile, "s_ce07308a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 119);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why trust me?
	if (response == "s_10499a33")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Babe, I don't trust anyone.
			string_id message = new string_id (c_stringFile, "s_f866da28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then why recruit me?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_da3e5ec3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 120);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Black Epsilon doing here?
	if (response == "s_3c26f38a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.
			string_id message = new string_id (c_stringFile, "s_81a6747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I mean on Corellia.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff1e8d6a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_d2e23af2")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch119 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I join Black Epsilon?
	if (response == "s_260")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.
			string_id message = new string_id (c_stringFile, "s_ca3b3777");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70edc281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10499a33");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3c26f38a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d2e23af2");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 118);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why trust me?
	if (response == "s_262")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Babe, I don't trust anyone.
			string_id message = new string_id (c_stringFile, "s_f866da28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then why recruit me?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_da3e5ec3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 120);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Black Epsilon doing here?
	if (response == "s_264")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.
			string_id message = new string_id (c_stringFile, "s_81a6747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I mean on Corellia.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff1e8d6a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_266")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch120 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Babe, I don't trust anyone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Then why recruit me?
	if (response == "s_da3e5ec3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: I gave you a test and you passed. You killed for the Emperor without worrying about the consequences. To be a member of Black Epsilon, you must apply your will totally and act without the burden of conscience. We do what others can not.
			string_id message = new string_id (c_stringFile, "s_bb310cb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do you know I'm sincere?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f1f8a5ca");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch121 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I gave you a test and you passed. You killed for the Emperor without worrying about the consequences. To be a member of Black Epsilon, you must apply your will totally and act without the burden of conscience. We do what others can not.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do you know I'm sincere?
	if (response == "s_f1f8a5ca")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Few would swear to the Emperor and then kill in his name insincerely. The Emperor knew that in your heart you desired to strike out at your enemies. Your actions prove your loyalty.
			string_id message = new string_id (c_stringFile, "s_de514757");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes...it did feel right.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I'm not a killer.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_485d8416");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48f07357");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch122 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Few would swear to the Emperor and then kill in his name insincerely. The Emperor knew that in your heart you desired to strike out at your enemies. Your actions prove your loyalty.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes...it did feel right.
	if (response == "s_485d8416")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: I think you'll find loyal service to the Emperor is very rewarding.
			string_id message = new string_id (c_stringFile, "s_cf202613");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_277");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_279");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_281");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_283");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 123);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm not a killer.
	if (response == "s_48f07357")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: So you claim, yet you killed. In time you will come to realize the righteousness of your actions.
			string_id message = new string_id (c_stringFile, "s_f0dfde7f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_287");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_289");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_291");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 124);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch123 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I think you'll find loyal service to the Emperor is very rewarding.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I join Black Epsilon?
	if (response == "s_277")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.
			string_id message = new string_id (c_stringFile, "s_ca3b3777");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70edc281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10499a33");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3c26f38a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d2e23af2");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 118);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire work with a Zabrak?
	if (response == "s_279")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.
			string_id message = new string_id (c_stringFile, "s_ce07308a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 119);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Black Epsilon doing here?
	if (response == "s_281")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.
			string_id message = new string_id (c_stringFile, "s_81a6747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I mean on Corellia.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff1e8d6a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_283")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch124 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you claim, yet you killed. In time you will come to realize the righteousness of your actions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I join Black Epsilon?
	if (response == "s_287")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.
			string_id message = new string_id (c_stringFile, "s_ca3b3777");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70edc281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10499a33");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3c26f38a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d2e23af2");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 118);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire work with a Zabrak?
	if (response == "s_289")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.
			string_id message = new string_id (c_stringFile, "s_ce07308a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 119);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is Black Epsilon doing here?
	if (response == "s_291")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.
			string_id message = new string_id (c_stringFile, "s_81a6747");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I mean on Corellia.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff1e8d6a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch125 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Before the destruction of the Death Star, we primarily operated in the Outer Rim, softening new worlds for Imperial expansion. Since the rise of the Rebellion, we have been recalled to the Core Worlds.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I mean on Corellia.
	if (response == "s_ff1e8d6a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Corellia has declared neutrality in the so called 'Galactic Civil War.' At the same time, they are host to a wide range of Rebel operations, including the protection of known collaborators. The Emperor doesn't like this situation.
			string_id message = new string_id (c_stringFile, "s_727f229");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why doesn't the Emperor just invade?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e1ea9c75");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch126 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Corellia has declared neutrality in the so called 'Galactic Civil War.' At the same time, they are host to a wide range of Rebel operations, including the protection of known collaborators. The Emperor doesn't like this situation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why doesn't the Emperor just invade?
	if (response == "s_e1ea9c75")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: If the Navy invades, other planets loyal to the Empire might turn to the Rebellion. The Emperor built his great Galactic Empire through a deft mix of politics and war. Sometimes, hon, the former is preferable to the latter.
			string_id message = new string_id (c_stringFile, "s_8b4aa06c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ah, like Mandalore.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_747c5a79");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 127);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch127 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If the Navy invades, other planets loyal to the Empire might turn to the Rebellion. The Emperor built his great Galactic Empire through a deft mix of politics and war. Sometimes, hon, the former is preferable to the latter.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ah, like Mandalore.
	if (response == "s_747c5a79")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: You know your history, I'm impressed! Yes, the Mandalorians tried to build an empire through war alone and were ultimately defeated. They didn't understand manipulation. To achieve victory you sometimes have to offer the embrace of peace while holding a hidden dagger.
			string_id message = new string_id (c_stringFile, "s_506c3428");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And Black Epsilon is that dagger?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1930ad3a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 128);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch128 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You know your history, I'm impressed! Yes, the Mandalorians tried to build an empire through war alone and were ultimately defeated. They didn't understand manipulation. To achieve victory you sometimes have to offer the embrace of peace while holding a hidden dagger.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And Black Epsilon is that dagger?
	if (response == "s_1930ad3a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Black Epsilon is one such tool. The Emperor wisely does not invest all of his trust in a single agent. Should we fail, others would eliminate us and take our place. Thus we do not fail.
			string_id message = new string_id (c_stringFile, "s_c81a8a32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_306");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_308");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_310");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_312");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 129);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch129 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Black Epsilon is one such tool. The Emperor wisely does not invest all of his trust in a single agent. Should we fail, others would eliminate us and take our place. Thus we do not fail.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How do I join Black Epsilon?
	if (response == "s_306")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Hon, you already are a part of Black Epsilon. You swore to the Emperor and you've shown your loyalty.  Your position with the agency is assured. Of course, if I discover that you intend to betray us, your life will be forfeit.
			string_id message = new string_id (c_stringFile, "s_ca3b3777");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire work with a Zabrak?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_70edc281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10499a33");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3c26f38a");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d2e23af2");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 118);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why trust me?
	if (response == "s_308")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: Babe, I don't trust anyone.
			string_id message = new string_id (c_stringFile, "s_f866da28");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then why recruit me?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_da3e5ec3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 120);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire work with a Zabrak?
	if (response == "s_310")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: The Emperor is willing to lay aside minor prejudice to work with talented individuals. I have long since proven my worth. You, on the other hand, have much to prove.
			string_id message = new string_id (c_stringFile, "s_ce07308a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How do I join Black Epsilon?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why trust me?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is Black Epsilon doing here?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: What's my next assignment?
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_262");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_266");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 119);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's my next assignment?
	if (response == "s_312")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.
			string_id message = new string_id (c_stringFile, "s_27c9aa85");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm ready.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1adbadc4");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 130);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch130 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Mmm, all worked up and ready for another go. I like that. As it happens, I do have another assignment for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm ready.
	if (response == "s_1adbadc4")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Your attack on the Rebel patrol was very successful. The attack looked like a failed act of Rebel aggression. Popular support for the Rebellion on Corellia is faltering. The Rebels suspect something's up, so they're starting to beef up their operations.
			string_id message = new string_id (c_stringFile, "s_95d0bcb3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What's the next step?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_86c66182");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 131);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch131 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Your attack on the Rebel patrol was very successful. The attack looked like a failed act of Rebel aggression. Popular support for the Rebellion on Corellia is faltering. The Rebels suspect something's up, so they're starting to beef up their operations.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What's the next step?
	if (response == "s_86c66182")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: We need to make sure that we keep their military power in check while they increase their activity. Stirring up the chuba nest isn't going to do any good if the Rebels end up fortifying Corellia.
			string_id message = new string_id (c_stringFile, "s_51db72fc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That makes sense.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef85b67c");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 132);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch132 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need to make sure that we keep their military power in check while they increase their activity. Stirring up the chuba nest isn't going to do any good if the Rebels end up fortifying Corellia.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That makes sense.
	if (response == "s_ef85b67c")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: I have discovered that the Rebels are training X-Wing cadets in Corellian space. The Rebels are quickly working to recruit new pilots to their cause. Destroying the cadets will cripple that effort. Corellian citizens will think twice about signing up if the Rebels can't even protect their young and inexperienced.
			string_id message = new string_id (c_stringFile, "s_11c38900");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds easy.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ec3c3e1d");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 133);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch133 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have discovered that the Rebels are training X-Wing cadets in Corellian space. The Rebels are quickly working to recruit new pilots to their cause. Destroying the cadets will cripple that effort. Corellian citizens will think twice about signing up if the Rebels can't even protect their young and inexperienced.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy.
	if (response == "s_ec3c3e1d")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: The trainees shouldn't be a match for you, but their instructors might. You are going to have to hunt them down in the Corellian system. Intelligence has not yet been able to locate their training grounds but there are reports of a Rebel station somewhere in the system. Might be a good start. Be on guard and don't worry if one escapes and reports you. The Empire is fully justified in destroying terrorist training grounds found within its jurisdiction.
			string_id message = new string_id (c_stringFile, "s_a074ac18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will not fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1ff4247a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 134);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch134 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The trainees shouldn't be a match for you, but their instructors might. You are going to have to hunt them down in the Corellian system. Intelligence has not yet been able to locate their training grounds but there are reports of a Rebel station somewhere in the system. Might be a good start. Be on guard and don't worry if one escapes and reports you. The Empire is fully justified in destroying terrorist training grounds found within its jurisdiction.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will not fail.
	if (response == "s_1ff4247a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission2 (player, npc);

			//-- NPC: Report back to me when you're done and we'll talk about the next step.
			string_id message = new string_id (c_stringFile, "s_3c33e829");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch136 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: No luck with the Rebels eh?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I ran into some trouble.
	if (response == "s_88da6887")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: A minor skirmish between an Imperial pilot and a Rebel patrol isn't exactly the kind of thing that will motivate Corellia to run to the Empire. Particularly not when the Empire loses. I want total carnage. Bait the Rebels into attacking you and smash them.
			string_id message = new string_id (c_stringFile, "s_4afb3952");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I get the idea.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I understand you're angry but...
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_97d43fda");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_593d4b61");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 137);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch137 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A minor skirmish between an Imperial pilot and a Rebel patrol isn't exactly the kind of thing that will motivate Corellia to run to the Empire. Particularly not when the Empire loses. I want total carnage. Bait the Rebels into attacking you and smash them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I get the idea.
	if (response == "s_97d43fda")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			corellia_imperial_trainer_1_action_grantMission1 (player, npc);

			//-- NPC: I take my job seriously, babe. Get back out there and do it right this time.
			string_id message = new string_id (c_stringFile, "s_da237511");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I understand you're angry but...
	if (response == "s_593d4b61")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			//-- NPC: This is a serious operation, hon. Get a drink and chill out. Come back when you want to try this thing again.
			string_id message = new string_id (c_stringFile, "s_12d7f011");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch140 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey there, hon. Ready to talk business?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the job.
	if (response == "s_96682689")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: As you know, Corellia has been officially neutral in the galactic civil war. Despite this declaration of neutrality and some deft political maneuvering on behalf of the Corellian leadership, a strong Rebel sentiment has taken hold here. Rumor has it that Princess Leia Organa herself is operating a command center in the area.
			string_id message = new string_id (c_stringFile, "s_a37bb512");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've heard these rumors before.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c023d5a9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 141);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you train me?
	if (response == "s_2c9c30a0")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "hair_flip");

			//-- NPC: I can, hon, but I'm not going to... not yet.  I need you to do some things for me first.
			string_id message = new string_id (c_stringFile, "s_33a8fcd8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do you need me to do?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5bd69df6");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 149);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch141 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As you know, Corellia has been officially neutral in the galactic civil war. Despite this declaration of neutrality and some deft political maneuvering on behalf of the Corellian leadership, a strong Rebel sentiment has taken hold here. Rumor has it that Princess Leia Organa herself is operating a command center in the area.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've heard these rumors before.
	if (response == "s_c023d5a9")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I'm sure you have, hon. So you'll also be aware that the Emperor disapproves of this harboring of criminal activity and, naturally, wishes to put an end to it. The problem is that Corellia is a politically valuable world. Any overt move to take the planet by force would alienate her people and push her further towards Rebel ideology.
			string_id message = new string_id (c_stringFile, "s_d0a7527e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm here for a job, not a political science lesson.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ac893f3a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 142);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch142 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sure you have, hon. So you'll also be aware that the Emperor disapproves of this harboring of criminal activity and, naturally, wishes to put an end to it. The problem is that Corellia is a politically valuable world. Any overt move to take the planet by force would alienate her people and push her further towards Rebel ideology.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm here for a job, not a political science lesson.
	if (response == "s_ac893f3a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Listen to the lesson, then you'll get the job. I want to make sure you understand the delicacy of the situation.
			string_id message = new string_id (c_stringFile, "s_83980c8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on then.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ccf66c81");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 143);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch143 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Listen to the lesson, then you'll get the job. I want to make sure you understand the delicacy of the situation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on then.
	if (response == "s_ccf66c81")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: As I was saying. The Emperor can't order a direct invasion of Corellia. He needs a politically acceptable reason to make a move. My job is to provide that reason.
			string_id message = new string_id (c_stringFile, "s_41d4922");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So you're a spy.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c261b36a");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 144);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch144 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: As I was saying. The Emperor can't order a direct invasion of Corellia. He needs a politically acceptable reason to make a move. My job is to provide that reason.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So you're a spy.
	if (response == "s_c261b36a")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: After a fashion. There's plenty of me to reveal later. I want you to fly a patrol in low orbit near Coronet. Use an Imperial TIE fighter. Show the flag. Most importantly, attract the attention of the Rebels. The Rebellion is a violent terrorist organization. They won't be able to resist a lone TIE strutting about in enemy territory. When they move in to shoot you down, eliminate them.
			string_id message = new string_id (c_stringFile, "s_82040511");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You want me to kill them?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d1613a21");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 145);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch145 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: After a fashion. There's plenty of me to reveal later. I want you to fly a patrol in low orbit near Coronet. Use an Imperial TIE fighter. Show the flag. Most importantly, attract the attention of the Rebels. The Rebellion is a violent terrorist organization. They won't be able to resist a lone TIE strutting about in enemy territory. When they move in to shoot you down, eliminate them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You want me to kill them?
	if (response == "s_d1613a21")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: That would be the point, dear. The destruction of a small Rebel force should stir things up a bit. The Rebels will probably start flying more patrols, putting up a more obvious presence. Exactly the kind of thing we need to betray Corellian neutrality. If anyone questions you, say you defended yourself against a hostile force while on patrol duty.
			string_id message = new string_id (c_stringFile, "s_41e7fbb3");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: When I get back, I expect some answers.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2d4c3812");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 146);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch146 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That would be the point, dear. The destruction of a small Rebel force should stir things up a bit. The Rebels will probably start flying more patrols, putting up a more obvious presence. Exactly the kind of thing we need to betray Corellian neutrality. If anyone questions you, say you defended yourself against a hostile force while on patrol duty.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: When I get back, I expect some answers.
	if (response == "s_2d4c3812")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Oh, hon, you're no fun. Do this job and you'll get your answers. I'll have more work for you, too. Obviously one little incident won't be enough to achieve our goals. Come back and talk to me when you've killed the Rebels.
			string_id message = new string_id (c_stringFile, "s_6fb821bb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You can count on it.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38909ce3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 147);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch147 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, hon, you're no fun. Do this job and you'll get your answers. I'll have more work for you, too. Obviously one little incident won't be enough to achieve our goals. Come back and talk to me when you've killed the Rebels.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You can count on it.
	if (response == "s_38909ce3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			corellia_imperial_trainer_1_action_grantMission1 (player, npc);

			//-- NPC: Oh and be careful. I'd hate to see that cute face get a scratch.
			string_id message = new string_id (c_stringFile, "s_43fe629");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch149 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can, hon, but I'm not going to... not yet.  I need you to do some things for me first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you need me to do?
	if (response == "s_5bd69df6")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: As you know, Corellia has been officially neutral in the galactic civil war. Despite this declaration of neutrality and some deft political maneuvering on behalf of the Corellian leadership, a strong Rebel sentiment has taken hold here. Rumor has it that Princess Leia Organa herself is operating a command center in the area.
			string_id message = new string_id (c_stringFile, "s_a37bb512");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've heard these rumors before.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c023d5a9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 141);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch150 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, aren't you a cute one. My name is Hakasha Sireen. Is there something I can do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was told you are looking for a pilot.
	if (response == "s_11bb9c43")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: You're a pilot? Interesting... Yes, I'm looking to hire a pilot. The job isn't easy and you'll have to work with minimal information. You'll be shot at. Probably have to kill some people, too. Sure you want this kind of work?
			string_id message = new string_id (c_stringFile, "s_f93af369");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Doesn't sound like anything I'm not used to.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, I'm interested in keeping my skin.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_be86775e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8417be65");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 151);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch151 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You're a pilot? Interesting... Yes, I'm looking to hire a pilot. The job isn't easy and you'll have to work with minimal information. You'll be shot at. Probably have to kill some people, too. Sure you want this kind of work?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doesn't sound like anything I'm not used to.
	if (response == "s_be86775e")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Oh is that a fact? I don't want to hire someone with a lot of baggage. If you're too hot with CorSec you can look elsewhere.
			string_id message = new string_id (c_stringFile, "s_1d646fae");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't worry about CorSec. I can handle the heat.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_df871c0b");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 152);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, I'm interested in keeping my skin.
	if (response == "s_8417be65")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: Then don't waste my time, hon.
			string_id message = new string_id (c_stringFile, "s_b1097fe");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch152 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh is that a fact? I don't want to hire someone with a lot of baggage. If you're too hot with CorSec you can look elsewhere.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't worry about CorSec. I can handle the heat.
	if (response == "s_df871c0b")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Good. That kind of confidence is what I'm looking for. I represent an agency interested in seeing the Imperial presence in this region of space increased. I think you can help me achieve that goal.
			string_id message = new string_id (c_stringFile, "s_6a750265");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is this agency?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm a supporter of the Empire. What can I do to help?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Does this job pay?
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Sorry, I'm not interested in helping the Empire.
			boolean hasResponse3 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e749e2cd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62027e5");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92a51c16");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d80177b5");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 153);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch153 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. That kind of confidence is what I'm looking for. I represent an agency interested in seeing the Imperial presence in this region of space increased. I think you can help me achieve that goal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this agency?
	if (response == "s_e749e2cd")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: All in good time, hon. Show me you're serious and then we can share all the dirty little secrets.
			string_id message = new string_id (c_stringFile, "s_7e4287eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I support the Empire. What can I do to help?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Whatever. Does this job pay?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11816971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32fca1d6");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 154);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a supporter of the Empire. What can I do to help?
	if (response == "s_62027e5")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Being a supporter is commendable, but for this job I need to know you're loyal. You must swear obedience to the Emperor. Do it now, or walk away.
			string_id message = new string_id (c_stringFile, "s_f0fc751b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I swear to serve the Emperor, to uphold his law, and to do his will without fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Swear? That seems a little extreme.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Swear to the Emperor? I can't do that.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_845e6ef5");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2fb75072");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7b9b2577");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 155);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Does this job pay?
	if (response == "s_92a51c16")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Right to the point. I like that. Yeah, it pays. Imperial credits and the opportunity for our relationship to get... closer. Of course, all of this depends upon your discretion. Tell someone about the job and you'll be paid with a different kind of currency.
			string_id message = new string_id (c_stringFile, "s_c7c75ec4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I support the Empire. What can I do to help?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is this agency?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_393");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_395");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 165);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, I'm not interested in helping the Empire.
	if (response == "s_d80177b5")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			//-- NPC: Then don't waste my time.
			string_id message = new string_id (c_stringFile, "s_2db4d111");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch154 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: All in good time, hon. Show me you're serious and then we can share all the dirty little secrets.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. I support the Empire. What can I do to help?
	if (response == "s_11816971")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Being a supporter is commendable, but for this job I need to know you're loyal. You must swear obedience to the Emperor. Do it now, or walk away.
			string_id message = new string_id (c_stringFile, "s_f0fc751b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I swear to serve the Emperor, to uphold his law, and to do his will without fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Swear? That seems a little extreme.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Swear to the Emperor? I can't do that.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_845e6ef5");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2fb75072");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7b9b2577");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 155);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Whatever. Does this job pay?
	if (response == "s_32fca1d6")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_multiple");

			//-- NPC: Right to the point. I like that. Yeah, it pays. Imperial credits and the opportunity for our relationship to get... closer. Of course, all of this depends upon your discretion. Tell someone about the job and you'll be paid with a different kind of currency.
			string_id message = new string_id (c_stringFile, "s_c7c75ec4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I support the Empire. What can I do to help?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What is this agency?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_393");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_395");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 165);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch155 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Being a supporter is commendable, but for this job I need to know you're loyal. You must swear obedience to the Emperor. Do it now, or walk away.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I swear to serve the Emperor, to uphold his law, and to do his will without fail.
	if (response == "s_845e6ef5")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_polite");

			corellia_imperial_trainer_1_action_giveMembershipBadge (player, npc);

			//-- NPC: So witnessed. Congratulations, hon, you've made a very wise decision. For this operation, you'll need legitimate credentials. From now on, your ID will indicate your status as a Pilot Initiate in the Imperial Navy. My agency will ensure that the Navy records reflect this...half truth.
			string_id message = new string_id (c_stringFile, "s_d537ac2e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So now I'm an Imperial Pilot? Just like that?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4ecd165f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Swear? That seems a little extreme.
	if (response == "s_2fb75072")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: If this was a normal job, I might agree. It isn't a normal job. I need someone I know I can trust. The agency I work for is very interested in the loyalty of its employees.
			string_id message = new string_id (c_stringFile, "s_ae56cee4");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This doesn't make sense. The Empire has a policy against hiring non-humans and you're a Zabrak.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7c7f3198");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 161);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Swear to the Emperor? I can't do that.
	if (response == "s_7b9b2577")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Maybe you should think about what it means to be a supporter of the Empire. Have a good evening, hon.
			string_id message = new string_id (c_stringFile, "s_cd5427a6");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch156 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So witnessed. Congratulations, hon, you've made a very wise decision. For this operation, you'll need legitimate credentials. From now on, your ID will indicate your status as a Pilot Initiate in the Imperial Navy. My agency will ensure that the Navy records reflect this...half truth.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So now I'm an Imperial Pilot? Just like that?
	if (response == "s_4ecd165f")
	{
		//-- [NOTE] 
		if (!corellia_imperial_trainer_1_condition_hasAShip (player, npc))
		{
			doAnimationAction (npc, "celebrate");

			corellia_imperial_trainer_1_action_grantTheNewbieShip (player, npc);

			//-- NPC: Just like that. I am not big on ceremony so we are not going to worry about that much. I am authorized to grant you a basic TIE. If you want we can smash a bottle of corellian wine against it but I figure that would be a waste of good wine. The way I see it, you'll either do what I say and prove you have what it takes, or you'll die. 
			string_id message = new string_id (c_stringFile, "s_c10b8471");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You aren't exactly doing a good job of reassuring me.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3e8986a7");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 157);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition_hasAShip (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			corellia_imperial_trainer_1_action_grantTheNewbieShip (player, npc);

			//-- NPC: Just like that. Sure, there's usually the years of formal officer education, the background checks, the certification trials...a mess, really. We can dispense with the formal stuff. The way I see it, you'll either do what I say and prove you have what it takes, or you'll die.
			string_id message = new string_id (c_stringFile, "s_9644818a");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You aren't exactly doing a good job of reassuring me.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_375");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 159);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch157 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just like that. I am not big on ceremony so we are not going to worry about that much. I am authorized to grant you a basic TIE. If you want we can smash a bottle of corellian wine against it but I figure that would be a waste of good wine. The way I see it, you'll either do what I say and prove you have what it takes, or you'll die. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You aren't exactly doing a good job of reassuring me.
	if (response == "s_3e8986a7")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Look on the bright side, at least I won't make you call me 'sir'. Shall we get down to business?
			string_id message = new string_id (c_stringFile, "s_78dd7bba");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. What's the job?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4b5d9495");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 158);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch158 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Look on the bright side, at least I won't make you call me 'sir'. Shall we get down to business?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. What's the job?
	if (response == "s_4b5d9495")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: As you know, Corellia has been officially neutral in the galactic civil war. Despite this declaration of neutrality and some deft political maneuvering on behalf of the Corellian leadership, a strong Rebel sentiment has taken hold here. Rumor has it that Princess Leia Organa herself is operating a command center in the area.
			string_id message = new string_id (c_stringFile, "s_a37bb512");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've heard these rumors before.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c023d5a9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 141);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch159 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just like that. Sure, there's usually the years of formal officer education, the background checks, the certification trials...a mess, really. We can dispense with the formal stuff. The way I see it, you'll either do what I say and prove you have what it takes, or you'll die.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You aren't exactly doing a good job of reassuring me.
	if (response == "s_375")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Look on the bright side, at least I won't make you call me 'sir'. Shall we get down to business?
			string_id message = new string_id (c_stringFile, "s_377");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. What's the job?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_379");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 160);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch160 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Look on the bright side, at least I won't make you call me 'sir'. Shall we get down to business?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. What's the job?
	if (response == "s_379")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: As you know, Corellia has been officially neutral in the galactic civil war. Despite this declaration of neutrality and some deft political maneuvering on behalf of the Corellian leadership, a strong Rebel sentiment has taken hold here. Rumor has it that Princess Leia Organa herself is operating a command center in the area.
			string_id message = new string_id (c_stringFile, "s_a37bb512");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I've heard these rumors before.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c023d5a9");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 141);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch161 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If this was a normal job, I might agree. It isn't a normal job. I need someone I know I can trust. The agency I work for is very interested in the loyalty of its employees.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This doesn't make sense. The Empire has a policy against hiring non-humans and you're a Zabrak.
	if (response == "s_7c7f3198")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			corellia_imperial_trainer_1_action_animLaugh (player, npc);

			//-- NPC: How perceptive! Yes, I am a Zabrak. The Imperial policies don't apply to me or anyone with the agency.
			string_id message = new string_id (c_stringFile, "s_4acb4a79");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's all you have to say about it?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_702795f8");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 162);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch162 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: How perceptive! Yes, I am a Zabrak. The Imperial policies don't apply to me or anyone with the agency.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's all you have to say about it?
	if (response == "s_702795f8")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: That's all I have to say for now. Swear to the Emperor, prove your loyalty to the Empire, and then we can get personal.
			string_id message = new string_id (c_stringFile, "s_8b179721");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine, I will swear. I swear to serve the Emperor, to uphold his law, and to do his will without fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I won't swear to serve the Emperor.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_423667ed");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54328ce3");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 163);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch163 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's all I have to say for now. Swear to the Emperor, prove your loyalty to the Empire, and then we can get personal.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine, I will swear. I swear to serve the Emperor, to uphold his law, and to do his will without fail.
	if (response == "s_423667ed")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_polite");

			corellia_imperial_trainer_1_action_giveMembershipBadge (player, npc);

			//-- NPC: So witnessed. Congratulations, hon, you've made a very wise decision. For this operation, you'll need legitimate credentials. From now on, your ID will indicate your status as a Pilot Initiate in the Imperial Navy. My agency will ensure that the Navy records reflect this...half truth.
			string_id message = new string_id (c_stringFile, "s_d537ac2e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So now I'm an Imperial Pilot? Just like that?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4ecd165f");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 156);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I won't swear to serve the Emperor.
	if (response == "s_54328ce3")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Maybe you should think about what it means to be a supporter of the Empire. Have a good evening, hon.
			string_id message = new string_id (c_stringFile, "s_cd5427a6");
			utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_imperial_trainer_1_handleBranch165 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Right to the point. I like that. Yeah, it pays. Imperial credits and the opportunity for our relationship to get... closer. Of course, all of this depends upon your discretion. Tell someone about the job and you'll be paid with a different kind of currency.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. I support the Empire. What can I do to help?
	if (response == "s_393")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Being a supporter is commendable, but for this job I need to know you're loyal. You must swear obedience to the Emperor. Do it now, or walk away.
			string_id message = new string_id (c_stringFile, "s_f0fc751b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I swear to serve the Emperor, to uphold his law, and to do his will without fail.
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Swear? That seems a little extreme.
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Swear to the Emperor? I can't do that.
			boolean hasResponse2 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_845e6ef5");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2fb75072");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7b9b2577");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 155);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this agency?
	if (response == "s_395")
	{
		//-- [NOTE] 
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: All in good time, hon. Show me you're serious and then we can share all the dirty little secrets.
			string_id message = new string_id (c_stringFile, "s_7e4287eb");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. I support the Empire. What can I do to help?
			boolean hasResponse0 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Whatever. Does this job pay?
			boolean hasResponse1 = false;
			if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11816971");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_32fca1d6");

				utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 154);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_imperial_trainer_1");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName (self, "Hakasha Sireen");
	factions.setFaction( self, factions.FACTION_IMPERIAL );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );
	setCondition( self, CONDITION_SPACE_INTERESTING );
	setName (self, "Hakasha Sireen");
	factions.setFaction( self, factions.FACTION_IMPERIAL );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_imperial_trainer_1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasVeryFirstQuest (player, npc))
	{
		doAnimationAction (npc, "point_away");

		//-- NPC: What do you need, hon? You've got your assignment, and the control device for your ship is set up in your datapad.  You need to go to the Starport and access the starship terminal to launch into space.
		string_id message = new string_id (c_stringFile, "s_c006779f");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Where should I go?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What do I do?
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: How do I get back?
		boolean hasResponse2 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: Where is my ship?
		boolean hasResponse3 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32c46e00");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_85dd7d6c");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4358efe9");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 1);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!corellia_imperial_trainer_1_condition_hasSpaceExp (player, npc))
	{
		//-- NPC: Well, aren't you a cute one. But unless you're a pilot, I'm afraid there's not much I can do for you.
		string_id message = new string_id (c_stringFile, "s_cae1bdcf");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isRebelPilot (player, npc))
	{
		doAnimationAction (npc, "shake_head_no");

		//-- NPC: Sorry, I don't deal with Rebels.
		string_id message = new string_id (c_stringFile, "s_bf5586b8");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isNeutralPilot (player, npc))
	{
		doAnimationAction (npc, "wave_finger_warning");

		//-- NPC: I think I recognize you. You're on a wanted list I think... I can't work with known members of criminal organizations.
		string_id message = new string_id (c_stringFile, "s_9e6137e3");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_lostShip (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Nice to see you again hon. Are you here for business or pleasure?
		string_id message = new string_id (c_stringFile, "s_cc282429");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I...well you see...I sort of lost my ship.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_ca2a7f20");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 11);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isNotImperial (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		//-- NPC: I am afraid we cannot work with non-Imperial personnel. Why don't you find an Imperial Recruiter and get this little problem cleared up.
		string_id message = new string_id (c_stringFile, "s_d742dc00");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isImperialNonMember (player, npc))
	{
		doAnimationAction (npc, "nod_head_multiple");

		//-- NPC: You're an Imperial pilot? Too bad you're already assigned to another unit. I'd be sure you'd make a fine addition to the Epsilon. What brings you here?
		string_id message = new string_id (c_stringFile, "s_2efb24e9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'd like to request a mission.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_29e5ec7");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 16);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isWorkingForPrisk (player, npc))
	{
		doAnimationAction (npc, "greet");

		//-- NPC: Hiya hon. It's very sweet of you to come back for a visit but you no longer work for me. You should go see Prisk.
		string_id message = new string_id (c_stringFile, "s_62ce5e6e");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_isOnMission (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		//-- NPC: Come back when you're done with your mission. You can abort your mission if you want to start over.
		string_id message = new string_id (c_stringFile, "s_4b074298");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasCompletedSeries (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		//-- NPC: Welcome back. You might like to know that I have mentioned your name to one of my superiors and he is most interested in meeting you. But I would highly recommend that you do not go until you feel yourself ready to take the next step.
		string_id message = new string_id (c_stringFile, "s_afec2e39");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm interested in a duty.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'd like training.
		boolean hasResponse1 = false;
		if (!corellia_imperial_trainer_1_condition_canBuySkill (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I appreciate all you have done for me but I am ready to move on.
		boolean hasResponse2 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2d5d4bf0");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_943c7ba6");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3e77e17d");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 22);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasAllSkills (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Hey hon, glad you stopped in. Word just came down from the Black Epsilon command group: we're moving forward with the next phase of our operation. They want you to be the primary operative.
		string_id message = new string_id (c_stringFile, "s_a60c6c26");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Primary operative?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_df75425");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 25);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForSecondSkill (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Black Epsilon has authorized me to give you special instruction. Field training that will make you a more effective agent.
		string_id message = new string_id (c_stringFile, "s_56b5e7e6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of training?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't need any training.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_19ff301f");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_710daa61");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 29);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForDuty (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: Ground ops is working on the sabotage plan and I haven't received word from Black Epsilon regarding new space operations. For now, I have a few duties you can work on while we wait.
		string_id message = new string_id (c_stringFile, "s_15d6b9a5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What is a duty?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm interested in a duty.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'd like training.
		boolean hasResponse2 = false;
		if (!corellia_imperial_trainer_1_condition_canBuySkill (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I want to enlist with the ground forces
		boolean hasResponse3 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6a128385");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_99");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_111");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_761039fa");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 44);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasWonMission4 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Did you take out the B-Wing prototype?
		string_id message = new string_id (c_stringFile, "s_293e6269");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: It was a close fight, but I came out on top.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: He's toast. Not such a tough ship after all.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b224e12");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6372912d");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 54);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasFailedMission4 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Did you eliminate the B-Wing prototype?
		string_id message = new string_id (c_stringFile, "s_b4d32046");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Ah, no...it's a tough ship.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64a94075");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 70);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForMission4 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: I think you'll like this mission, hon. You get to test your mettle against some new Rebel technology. Real cutting edge stuff, too.
		string_id message = new string_id (c_stringFile, "s_fbd7d1ba");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm always up for a challenge.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I want some training.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_55f35dd9");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5da44265");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 74);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasWonMission3 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: My boys in ground ops say they received the package. Good work. They're going to be moving forward with the dirtier side of the plan soon.
		string_id message = new string_id (c_stringFile, "s_885decf4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was attacked by a CorSec patrol during the mission.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_dd5ca133");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 80);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasFailedMission3 (player, npc))
	{
		corellia_imperial_trainer_1_action_animGestureWild (player, npc);

		//-- NPC: I can't believe you failed the escort. This operation is crucial. We don't have much of the explosive to spare!
		string_id message = new string_id (c_stringFile, "s_c890222b");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: But, I...
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fad19320");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 86);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForMission3 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Welcome back, babe. Glad to see you're still with us.
		string_id message = new string_id (c_stringFile, "s_2559ccf6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm ready for the next step in the operation.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Are you going to train me now?
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7a80cd06");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4d31f286");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 90);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasWonMission2 (player, npc))
	{
		corellia_imperial_trainer_1_action_animBothSalute (player, npc);

		//-- NPC: Hey babe. Did you deal with those annoying little Rebel trainees?
		string_id message = new string_id (c_stringFile, "s_95797708");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: They weren't much of a challenge.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Took out enough of them to send a message.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fa187bb6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36eb0383");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 101);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasFailedMission2 (player, npc))
	{
		doAnimationAction (npc, "shake_head_disgust");

		corellia_imperial_trainer_1_action_animDisgust (player, npc);

		//-- NPC: Black Epsilon demands results. You have failed to bring those results. If you can't bring yourself to do this job, there are others who will.
		string_id message = new string_id (c_stringFile, "s_b2e9f062");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I ran into some trouble, but I'm ready to try again.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I need to think about a better plan of attack, first.
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_28490f70");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96c066fe");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 108);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForMission2 (player, npc))
	{
		corellia_imperial_trainer_1_action_animPoliteApplause (player, npc);

		//-- NPC: So what do you want to know?
		string_id message = new string_id (c_stringFile, "s_7dad1c0c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What agency do you work for?
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Are you going to train me?
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_87f86e3e");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_192ddc14");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 111);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasWonMission1 (player, npc))
	{
		doAnimationAction (npc, "greet");

		corellia_imperial_trainer_1_action_giveRewardMission1 (player, npc);

		//-- NPC: Hey cutey. I see you made it back in one piece. I've already heard the news. You managed to take out an entire Rebel security patrol. Nice work. Here's your payment.
		string_id message = new string_id (c_stringFile, "s_34d65199");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Nothing to it. Now, you owe me some answers.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_334f003c");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 113);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_hasFailedMission1 (player, npc))
	{
		corellia_imperial_trainer_1_action_animDisgust (player, npc);

		//-- NPC: No luck with the Rebels eh?
		string_id message = new string_id (c_stringFile, "s_71df5543");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I ran into some trouble.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_88da6887");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 136);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition_readyForMission1 (player, npc))
	{
		doAnimationAction (npc, "standing_placate");

		//-- NPC: Hey there, hon. Ready to talk business?
		string_id message = new string_id (c_stringFile, "s_5a48897a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Tell me about the job.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Can you train me?
		boolean hasResponse1 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96682689");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2c9c30a0");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 140);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "nod_head_once");

		corellia_imperial_trainer_1_action_eraseClientPath (player, npc);

		//-- NPC: Well, aren't you a cute one. My name is Hakasha Sireen. Is there something I can do for you?
		string_id message = new string_id (c_stringFile, "s_53c3dd52");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I was told you are looking for a pilot.
		boolean hasResponse0 = false;
		if (corellia_imperial_trainer_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11bb9c43");

			utils.setScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId", 150);

			npcStartConversation (player, npc, "corellia_imperial_trainer_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_imperial_trainer_1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

	if (branchId == 1 && corellia_imperial_trainer_1_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && corellia_imperial_trainer_1_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && corellia_imperial_trainer_1_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_imperial_trainer_1_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && corellia_imperial_trainer_1_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && corellia_imperial_trainer_1_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && corellia_imperial_trainer_1_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && corellia_imperial_trainer_1_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && corellia_imperial_trainer_1_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && corellia_imperial_trainer_1_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && corellia_imperial_trainer_1_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && corellia_imperial_trainer_1_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && corellia_imperial_trainer_1_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && corellia_imperial_trainer_1_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && corellia_imperial_trainer_1_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && corellia_imperial_trainer_1_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && corellia_imperial_trainer_1_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 33 && corellia_imperial_trainer_1_handleBranch33 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 36 && corellia_imperial_trainer_1_handleBranch36 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && corellia_imperial_trainer_1_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 44 && corellia_imperial_trainer_1_handleBranch44 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 45 && corellia_imperial_trainer_1_handleBranch45 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && corellia_imperial_trainer_1_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 48 && corellia_imperial_trainer_1_handleBranch48 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 50 && corellia_imperial_trainer_1_handleBranch50 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && corellia_imperial_trainer_1_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 55 && corellia_imperial_trainer_1_handleBranch55 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && corellia_imperial_trainer_1_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && corellia_imperial_trainer_1_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 60 && corellia_imperial_trainer_1_handleBranch60 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 62 && corellia_imperial_trainer_1_handleBranch62 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && corellia_imperial_trainer_1_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 64 && corellia_imperial_trainer_1_handleBranch64 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 67 && corellia_imperial_trainer_1_handleBranch67 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && corellia_imperial_trainer_1_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && corellia_imperial_trainer_1_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && corellia_imperial_trainer_1_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 74 && corellia_imperial_trainer_1_handleBranch74 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && corellia_imperial_trainer_1_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 76 && corellia_imperial_trainer_1_handleBranch76 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 77 && corellia_imperial_trainer_1_handleBranch77 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 79 && corellia_imperial_trainer_1_handleBranch79 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 80 && corellia_imperial_trainer_1_handleBranch80 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 81 && corellia_imperial_trainer_1_handleBranch81 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 82 && corellia_imperial_trainer_1_handleBranch82 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 84 && corellia_imperial_trainer_1_handleBranch84 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 86 && corellia_imperial_trainer_1_handleBranch86 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && corellia_imperial_trainer_1_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 90 && corellia_imperial_trainer_1_handleBranch90 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 91 && corellia_imperial_trainer_1_handleBranch91 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 92 && corellia_imperial_trainer_1_handleBranch92 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 93 && corellia_imperial_trainer_1_handleBranch93 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 94 && corellia_imperial_trainer_1_handleBranch94 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 95 && corellia_imperial_trainer_1_handleBranch95 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 96 && corellia_imperial_trainer_1_handleBranch96 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 98 && corellia_imperial_trainer_1_handleBranch98 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 100 && corellia_imperial_trainer_1_handleBranch100 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 101 && corellia_imperial_trainer_1_handleBranch101 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 102 && corellia_imperial_trainer_1_handleBranch102 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 103 && corellia_imperial_trainer_1_handleBranch103 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 105 && corellia_imperial_trainer_1_handleBranch105 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 106 && corellia_imperial_trainer_1_handleBranch106 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 108 && corellia_imperial_trainer_1_handleBranch108 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 111 && corellia_imperial_trainer_1_handleBranch111 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 112 && corellia_imperial_trainer_1_handleBranch112 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 113 && corellia_imperial_trainer_1_handleBranch113 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 114 && corellia_imperial_trainer_1_handleBranch114 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 115 && corellia_imperial_trainer_1_handleBranch115 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 116 && corellia_imperial_trainer_1_handleBranch116 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 117 && corellia_imperial_trainer_1_handleBranch117 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 118 && corellia_imperial_trainer_1_handleBranch118 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 119 && corellia_imperial_trainer_1_handleBranch119 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 120 && corellia_imperial_trainer_1_handleBranch120 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 121 && corellia_imperial_trainer_1_handleBranch121 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 122 && corellia_imperial_trainer_1_handleBranch122 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 123 && corellia_imperial_trainer_1_handleBranch123 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 124 && corellia_imperial_trainer_1_handleBranch124 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 125 && corellia_imperial_trainer_1_handleBranch125 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 126 && corellia_imperial_trainer_1_handleBranch126 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 127 && corellia_imperial_trainer_1_handleBranch127 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 128 && corellia_imperial_trainer_1_handleBranch128 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 129 && corellia_imperial_trainer_1_handleBranch129 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 130 && corellia_imperial_trainer_1_handleBranch130 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 131 && corellia_imperial_trainer_1_handleBranch131 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 132 && corellia_imperial_trainer_1_handleBranch132 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 133 && corellia_imperial_trainer_1_handleBranch133 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 134 && corellia_imperial_trainer_1_handleBranch134 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 136 && corellia_imperial_trainer_1_handleBranch136 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 137 && corellia_imperial_trainer_1_handleBranch137 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 140 && corellia_imperial_trainer_1_handleBranch140 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 141 && corellia_imperial_trainer_1_handleBranch141 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 142 && corellia_imperial_trainer_1_handleBranch142 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 143 && corellia_imperial_trainer_1_handleBranch143 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 144 && corellia_imperial_trainer_1_handleBranch144 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 145 && corellia_imperial_trainer_1_handleBranch145 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 146 && corellia_imperial_trainer_1_handleBranch146 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 147 && corellia_imperial_trainer_1_handleBranch147 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 149 && corellia_imperial_trainer_1_handleBranch149 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 150 && corellia_imperial_trainer_1_handleBranch150 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 151 && corellia_imperial_trainer_1_handleBranch151 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 152 && corellia_imperial_trainer_1_handleBranch152 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 153 && corellia_imperial_trainer_1_handleBranch153 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 154 && corellia_imperial_trainer_1_handleBranch154 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 155 && corellia_imperial_trainer_1_handleBranch155 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 156 && corellia_imperial_trainer_1_handleBranch156 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 157 && corellia_imperial_trainer_1_handleBranch157 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 158 && corellia_imperial_trainer_1_handleBranch158 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 159 && corellia_imperial_trainer_1_handleBranch159 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 160 && corellia_imperial_trainer_1_handleBranch160 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 161 && corellia_imperial_trainer_1_handleBranch161 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 162 && corellia_imperial_trainer_1_handleBranch162 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 163 && corellia_imperial_trainer_1_handleBranch163 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 165 && corellia_imperial_trainer_1_handleBranch165 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_imperial_trainer_1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

