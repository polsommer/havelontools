// ======================================================================
//
// dantooine_rebel_trainer_2.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.skill;
include library.space_flags;
include library.space_quest;
include library.utils;
include library.xp;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/dantooine_rebel_trainer_2";

// ======================================================================
// Script Conditions
// ======================================================================

boolean dantooine_rebel_trainer_2_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForMission1 (obj_id player, obj_id npc)
{
	if 	(( hasSkill( player, "pilot_rebel_navy_starships_02" ) ||
		hasSkill( player, "pilot_rebel_navy_weapons_02" ) ||
		hasSkill( player, "pilot_rebel_navy_procedures_02" ) ||
		hasSkill( player, "pilot_rebel_navy_droid_02" )) && 
		space_flags.hasSpaceFlag(player, "vortexPilot") &&
		!space_quest.hasWonQuest ( player, "destroy_surpriseattack", "vortex_mission_1"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasFailedMission1 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "destroy_surpriseattack", "vortex_mission_1" ) ||
		 space_quest.hasAbortedQuest( player, "destroy_surpriseattack", "vortex_mission_1" ) ||
		 space_quest.hasFailedQuest( player, "escort", "vortex_mission_1" ) ||
		 space_quest.hasAbortedQuest( player, "escort", "vortex_mission_1" ) ||
		 space_quest.hasFailedQuest( player, "inspect", "vortex_mission_1" ) ||
		 space_quest.hasAbortedQuest( player, "inspect", "vortex_mission_1" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasWonMission1 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "destroy_surpriseattack", "vortex_mission_1" ) &&
		!space_quest.hasReceivedReward( player, "destroy_surpriseattack", "vortex_mission_1" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForMission2 (obj_id player, obj_id npc)
{
	string[] skills = { "pilot_rebel_navy_starships_02", 
						"pilot_rebel_navy_weapons_02",
						"pilot_rebel_navy_procedures_02",
						"pilot_rebel_navy_droid_02" };
	int j = 0;
	for ( int i=0; i<skills.length; i++ )
	{
		if ( hasSkill( player, skills[i] ) )
			j++;
	}
	if (( j == 2 ) && space_flags.hasSpaceFlag(player, "vortexPilot") &&
	!space_quest.hasWonQuest( player, "escort", "vortex_mission_2"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasWonMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "escort", "vortex_mission_2" ) &&
		!space_quest.hasReceivedReward( player, "escort", "vortex_mission_2" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasFailedMission2 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "escort", "vortex_mission_2" ) ||
		 space_quest.hasAbortedQuest( player, "escort", "vortex_mission_2" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isOnMission (obj_id player, obj_id npc)
{
	if ( space_quest.hasQuest( player, "destroy_surpriseattack", "vortex_mission_1" ) ||
		 space_quest.hasQuest( player, "escort", "vortex_mission_1" ) ||
		 space_quest.hasQuest( player, "inspect", "vortex_mission_1" ) ||
		 space_quest.hasQuest( player, "escort", "vortex_mission_2" ) ||
		 space_quest.hasQuest( player, "recovery", "vortex_mission_3" ) ||
		 space_quest.hasQuest( player, "inspect", "vortex_mission_4" ) ||
		 space_quest.hasQuest( player, "escort_duty", "vortex_mission_5" ) ||
		 space_quest.hasQuest( player, "destroy_duty", "vortex_mission_6" ) ||
		 space_quest.hasQuest( player, "recovery_duty", "vortex_mission_7" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForMission3 (obj_id player, obj_id npc)
{
	string[] skills = { "pilot_rebel_navy_starships_02", 
						"pilot_rebel_navy_weapons_02",
						"pilot_rebel_navy_procedures_02",
						"pilot_rebel_navy_droid_02" };
	int j = 0;
	for ( int i=0; i<skills.length; i++ )
	{
		if ( hasSkill( player, skills[i] ) )
			j++;
	}
	if (( j == 3 ) && space_flags.hasSpaceFlag(player, "vortexPilot") &&
	!space_quest.hasWonQuest ( player, "recovery", "vortex_mission_3"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasFailedMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "recovery", "vortex_mission_3" ) ||
		 space_quest.hasAbortedQuest( player, "recovery", "vortex_mission_3" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasWonMission3 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "recovery", "vortex_mission_3" ) &&
		!space_quest.hasReceivedReward( player, "recovery", "vortex_mission_3" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForMission4 (obj_id player, obj_id npc)
{
	string[] skills = { "pilot_rebel_navy_starships_02", 
						"pilot_rebel_navy_weapons_02",
						"pilot_rebel_navy_procedures_02",
						"pilot_rebel_navy_droid_02" };
	int j = 0;
	for ( int i=0; i<skills.length; i++ )
	{
		if ( hasSkill( player, skills[i] ) )
			j++;
	}
	if (( j == 4 ) && space_flags.hasSpaceFlag(player, "vortexPilot") &&
	!space_quest.hasWonQuest ( player, "inspect", "vortex_mission_4"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasWonMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasWonQuest( player, "inspect", "vortex_mission_4" ) &&
		!space_quest.hasReceivedReward( player, "inspect", "vortex_mission_4" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasFailedMission4 (obj_id player, obj_id npc)
{
	if ( space_quest.hasFailedQuest( player, "inspect", "vortex_mission_4" ) ||
		 space_quest.hasAbortedQuest( player, "inspect", "vortex_mission_4" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForDuty (obj_id player, obj_id npc)
{
	if ( space_flags.getIntSpaceFlag(player, "vortexPilot") == 2 )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForSecondSkill (obj_id player, obj_id npc)
{
	if ( !hasSkill( player, "pilot_rebel_navy_starships_02" ) &&
		 !hasSkill( player, "pilot_rebel_navy_weapons_02" ) &&
		 !hasSkill( player, "pilot_rebel_navy_procedures_02" ) &&
		 !hasSkill( player, "pilot_rebel_navy_droid_02" ) )
		 return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canBuySkill1 (obj_id player, obj_id npc)
{
	if ( !hasSkill( player, "pilot_rebel_navy_starships_02" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_starships_02" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canBuySkill2 (obj_id player, obj_id npc)
{
	if ( !hasSkill( player, "pilot_rebel_navy_weapons_02" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_weapons_02" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canBuySkill3 (obj_id player, obj_id npc)
{
	if ( !hasSkill( player, "pilot_rebel_navy_procedures_02" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_procedures_02" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canBuySkill4 (obj_id player, obj_id npc)
{
	if ( !hasSkill( player, "pilot_rebel_navy_droid_02" ) && space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_droid_02" ) )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canBuySkill (obj_id player, obj_id npc)
{
	if ( space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_starships_02" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_weapons_02" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_procedures_02" ) ||
		space_quest.isPlayerQualifiedForSkill( player, "pilot_rebel_navy_droid_02" ) && 
		space_flags.hasSpaceFlag(player, "vortexPilot"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasAllSkills (obj_id player, obj_id npc)
{
	/*
	if ( space_quest.hasReceivedReward( player, "inspect", "vortex_mission_4" ) &&
		  hasSkill( player, "pilot_rebel_navy_starships_02" ) &&
		  hasSkill( player, "pilot_rebel_navy_weapons_02" ) &&
		  hasSkill( player, "pilot_rebel_navy_procedures_02" ) &&
		  hasSkill( player, "pilot_rebel_navy_droid_02" ) )
		return true;
	else
		return false;
	*/
	
	if(space_quest.hasReceivedReward( player, "inspect", "vortex_mission_4" ) &&
	   space_flags.hasCompletedTierTwo(player))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasCompletedSeries (obj_id player, obj_id npc)
{
	return space_quest.hasCompletedQuestSeries( player, "imperial_corellia_1" );
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isGm (obj_id player, obj_id npc)
{
	return ( hasObjVar( player, "gm" ) );
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isNeutralPilot (obj_id player, obj_id npc)
{
	if ( hasSkill( player, "pilot_neutral_novice" ) )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isRebelNonMember (obj_id player, obj_id npc)
{
	return (hasSkill( player, "pilot_rebel_navy_novice" ) && !space_flags.hasSpaceFlag(player, "vortexPilot"));
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasNoSkills (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isImperial (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if (playerFaction == null)  
		return hasSkill( player, "pilot_imperial_navy_novice" );
			
	if (playerFaction.equals("Imperial") || hasSkill( player, "pilot_imperial_navy_novice" ) )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_correctRebelPilot (obj_id player, obj_id npc)
{
	if ( hasSkill( player, "pilot_rebel_navy_starships_01" ) &&
		hasSkill( player, "pilot_rebel_navy_weapons_01" ) &&
		hasSkill( player, "pilot_rebel_navy_procedures_01" ) &&
		hasSkill( player, "pilot_rebel_navy_droid_01" ) &&
		hasSkill( player, "pilot_rebel_navy_novice" ) &&
		space_flags.getIntSpaceFlag(player, "vortexPilot") == 1 )
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_readyForTier3 (obj_id player, obj_id npc)
{
	/*
	if 	(( hasSkill( player, "pilot_rebel_navy_starships_02" ) &&
		hasSkill( player, "pilot_rebel_navy_weapons_02" ) &&
		hasSkill( player, "pilot_rebel_navy_procedures_02" ) &&
		hasSkill( player, "pilot_rebel_navy_droid_02" )) && 
		hasObjVar (player, "vortexPilot") &&
		space_quest.hasReceivedReward ( player, "inspect", "vortex_mission_4"))
		return true;
	else
		return false;
	*/
	
	if(space_flags.hasCompletedTierTwo(player) &&
	   space_flags.hasSpaceFlag(player, "vortexPilot") &&
	   space_quest.hasReceivedReward ( player, "inspect", "vortex_mission_4"))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isOnAnotherMission (obj_id player, obj_id npc)
{
	return space_quest.hasQuest( player);
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_onMyTrack (obj_id player, obj_id npc)
{
	return space_flags.isSpaceTrack(player, space_flags.REBEL_NABOO);
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_canFlyNonTrackDuty (obj_id player, obj_id npc)
{
	if(space_flags.hasCompletedTierOne(player) && !space_quest.hasQuest(player))
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_isPilot (obj_id player, obj_id npc)
{
	return space_flags.hasAnyPilotSkill(player);
}

// ----------------------------------------------------------------------

boolean dantooine_rebel_trainer_2_condition_hasNegativeFaction (obj_id player, obj_id npc)
{
	return ( factions.getFactionStanding( player, factions.FACTION_REBEL ) < 0.0f );
}

// ======================================================================
// Script Actions
// ======================================================================

void dantooine_rebel_trainer_2_action_grantMission1 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	
	// Mission grant.
	space_quest.grantQuest( player, "escort", "vortex_mission_1" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveRewardMission1 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "destroy_surpriseattack", "vortex_mission_1" ))
		return;
		
	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	space_quest.giveReward( player, "destroy_surpriseattack", "vortex_mission_1", 5000, "object/tangible/ship/components/shield_generator/shd_mission_reward_rebel_incom_k77.iff" );
	factions.addFactionStanding( player, factions.FACTION_REBEL, 75.0f );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_setVortexPilot (obj_id player, obj_id npc)
{

	space_flags.setSpaceFlag(player, "vortexPilot", 2);

}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantMission2 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	
	// Assign mission.
	space_quest.grantQuest( player, "escort", "vortex_mission_2" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveRewardMission2 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "escort", "vortex_mission_2" ))
		return;

	// Animation.
	faceTo( npc, player );
	
	// Give credits.
	space_quest.giveReward( player, "escort", "vortex_mission_2", 5000, "object/tangible/ship/components/droid_interface/ddi_mission_reward_rebel_moncal_d22.iff" );
	factions.addFactionStanding( player, factions.FACTION_REBEL, 75.0f );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantMission3 (obj_id player, obj_id npc)
{
	// Assign mission.
	space_quest.grantQuest( player, "recovery", "vortex_mission_3" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveRewardMission3 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "recovery", "vortex_mission_3" ))
		return;

	// Animation.
	faceTo( npc, player );
	
	// Give reward.
	space_quest.giveReward( player, "recovery", "vortex_mission_3", 5000, "object/tangible/ship/components/booster/bst_mission_reward_rebel_novaldex_hypernova.iff" );
	factions.addFactionStanding( player, factions.FACTION_REBEL, 75.0f );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantMission4 (obj_id player, obj_id npc)
{
	// Wave finger.
	faceTo( npc, player );
	
	// Assign mission.
	space_quest.grantQuest( player, "inspect", "vortex_mission_4" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveRewardMission4 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "inspect", "vortex_mission_4" ))
		return;

	// Animation.
	faceTo( npc, player );
	
	// Give reward.
	space_quest.giveReward( player, "inspect", "vortex_mission_4", 5000, "object/tangible/ship/components/weapon/wpn_mission_reward_rebel_taim_ion_driver.iff" );
	space_flags.setSpaceFlag(player, "vortexPilot", 3);
	factions.addFactionStanding( player, factions.FACTION_REBEL, 75.0f );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveSkill1 (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	
	//note:  I'm changing this - no freebies at tier2!
	skill.purchaseSkill( player, "pilot_rebel_navy_starships_02" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveSkill2 (obj_id player, obj_id npc)
{
	faceTo( npc, player );

	//note:  I'm changing this - no freebies at tier2!
	skill.purchaseSkill( player, "pilot_rebel_navy_weapons_02" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveSkill3 (obj_id player, obj_id npc)
{
	faceTo( npc, player );

	//note:  I'm changing this - no freebies at tier2!
	skill.purchaseSkill( player, "pilot_rebel_navy_procedures_02" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_giveSkill4 (obj_id player, obj_id npc)
{
	faceTo( npc, player );

	//note:  I'm changing this - no freebies at tier2!
	skill.purchaseSkill( player, "pilot_rebel_navy_droid_02" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_flagQuestSeriesComplete (obj_id player, obj_id npc)
{
	faceTo( npc, player );
	doAnimationAction( npc, "salute1" );
	doAnimationAction( player, "salute1" );

	space_quest.setQuestSeriesFlag( player, "imperial_corellia_1", space_quest.QUEST_SERIES_COMPLETED );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantDestroyDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "destroy_duty", "vortex_mission_6" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantRecoveryDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "recovery_duty", "vortex_mission_7" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_grantEscortDuty (obj_id player, obj_id npc)
{
	space_quest.grantQuest( player, "escort_duty", "vortex_mission_5" );
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_removeVortexPilot (obj_id player, obj_id npc)
{
	space_flags.removeSpaceFlag(player, "vortexPilot");
}

// ----------------------------------------------------------------------

void dantooine_rebel_trainer_2_action_face (obj_id player, obj_id npc)
{
	faceTo( npc, player );
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int dantooine_rebel_trainer_2_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Woah, there, %TU.  Just what do you think you're doing?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?
	if (response == "s_900f01d1")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Haven't you heard?  You've been grounded.  I don't know what you did, but Alliance HQ is pretty mad about it.
			string_id message = new string_id (c_stringFile, "s_7f77ceba");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What do I do?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f8b02865");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Haven't you heard?  You've been grounded.  I don't know what you did, but Alliance HQ is pretty mad about it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do I do?
	if (response == "s_f8b02865")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: Beats me.  Better do something to improve your standing in the eyes of the Rebel Alliance though, or they'll never trust you with a mission again.
			string_id message = new string_id (c_stringFile, "s_96605d37");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You don't look like a Vortex pilot. What can I do for you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have any missions that I can fly?
	if (response == "s_c23a0a19")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition_canFlyNonTrackDuty (player, npc))
		{
			//-- NPC: I do have a few elective duty tasks. Are you interested?
			string_id message = new string_id (c_stringFile, "s_10d3ddf5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Actually, no.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52917b0d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28f9c5ec");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sorry, I can only assign missions to Vortex pilots. Perhaps you should go speak to your commanding officer.
			string_id message = new string_id (c_stringFile, "s_87a97a09");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I do have a few elective duty tasks. Are you interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course.
	if (response == "s_52917b0d")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Actually, no.
	if (response == "s_28f9c5ec")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, good bye then.
			string_id message = new string_id (c_stringFile, "s_faebdc4c");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Quick! We have another chance to catch that officer before he reaches the Imperial fleet. Here are the new coordinates. Suit up and get going!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't do it. He's too heavily guarded.
	if (response == "s_1d85385d")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Nonsense! Get your act together. Finish what you started, %NU. There's no turning back now!
			string_id message = new string_id (c_stringFile, "s_21736cfe");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Great! I hate failure!
	if (response == "s_6a35a7eb")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission4 (player, npc);

			//-- NPC: Good. This is our last chance, %NU. May the Force be with you!
			string_id message = new string_id (c_stringFile, "s_424b5808");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have it within our grasp, thanks to you,  %NU. Outstanding job up there. Rest up and get ready for the final step. It's time to shut this Imperial operation down for good!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir. It was a close call.
	if (response == "s_f931eb62")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_giveRewardMission4 (player, npc);

			//-- NPC: Indeed %NU. Here's the completion bonus. You've earned every last bit of it. Come back later. Hopefully by then, the plan of attack will be completed.
			string_id message = new string_id (c_stringFile, "s_450d0c76");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have to admit, I impressed even myself.
	if (response == "s_7363d4a2")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_giveRewardMission4 (player, npc);

			//-- NPC: I'm sure. Here's your completion bonus; I know you've been looking forward to it. Come back later. Hopefully by then, we'll have a battle plan ready to go.
			string_id message = new string_id (c_stringFile, "s_7088f02a");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Perfect timing, %NU. We are ready for the next phase of our mission. We have finally learned what this project is all about - AND we've figured out a way to stop it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Give me the short version; I'm ready for action.
	if (response == "s_1807105")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is no such thing as the short version, %NU. You need to understand what we are dealing with here.
			string_id message = new string_id (c_stringFile, "s_8bc4846e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, alright, go on.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_777420ae");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 22);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't right now, Vrovel. I have things to do.
	if (response == "s_2ca477ff")
	{
		doAnimationAction (player, "refuse_offer_affection");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: You better take care of your business quick, %NU. We are running out of time!
			string_id message = new string_id (c_stringFile, "s_451de7ba");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Finally! What is it all about?
	if (response == "s_9793aadf")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The Empire is creating a new type of star fighter. It is a combination of a pilot and his ship. The technicians meld the pilot into the ship with cybernetics. They become one. The Force crystals keep the abomination alive. The crystals do other things as well; we don't fully understand them yet. 
			string_id message = new string_id (c_stringFile, "s_84d88402");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's madness! Pilots give up their lives to fly that thing?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Guess the Empire is desperate to find some decent pilots.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c4fba26");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2d54810a");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is no such thing as the short version, %NU. You need to understand what we are dealing with here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, alright, go on.
	if (response == "s_777420ae")
	{
		doAnimationAction (player, "sigh_deeply");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: The Empire is creating a new type of star fighter. It is a combination of a pilot and his ship. The technicians meld the pilot into the ship with cybernetics. They become one. The Force crystals keep the abomination alive. The crystals do other things as well; we don't fully understand them yet. 
			string_id message = new string_id (c_stringFile, "s_84d88402");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's madness! Pilots give up their lives to fly that thing?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Guess the Empire is desperate to find some decent pilots.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8c4fba26");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2d54810a");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire is creating a new type of star fighter. It is a combination of a pilot and his ship. The technicians meld the pilot into the ship with cybernetics. They become one. The Force crystals keep the abomination alive. The crystals do other things as well; we don't fully understand them yet. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's madness! Pilots give up their lives to fly that thing?
	if (response == "s_8c4fba26")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: I doubt that they volunteer for it, %NU... This has to be stopped, for the good of the galaxy and all that is just. We need to find out where this criminal activity takes place. We may have a lead. 
			string_id message = new string_id (c_stringFile, "s_bed2d9a5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is the plan?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9dbb5a9a");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 25);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Guess the Empire is desperate to find some decent pilots.
	if (response == "s_2d54810a")
	{
		doAnimationAction (player, "laugh_cackle");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: I would laugh with you, if it wasn't so horrific %NU. We have to find out where this research is taking place. We may have a lead.
			string_id message = new string_id (c_stringFile, "s_4c539d9e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fcf4d778");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 29);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I doubt that they volunteer for it, %NU... This has to be stopped, for the good of the galaxy and all that is just. We need to find out where this criminal activity takes place. We may have a lead. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is the plan?
	if (response == "s_9dbb5a9a")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The SpyNet has identified one of the officers working on this project. They've even provided us with his travel route. He's on his way to the Star Destroyer in the Dantooine system. We have laid out an intercept course. You need to disable his shuttle. You can find the starting location in your onboard nav computer.
			string_id message = new string_id (c_stringFile, "s_ee59d5b1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't right now. Can it wait?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9b291e2");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The SpyNet has identified one of the officers working on this project. They've even provided us with his travel route. He's on his way to the Star Destroyer in the Dantooine system. We have laid out an intercept course. You need to disable his shuttle. You can find the starting location in your onboard nav computer.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Consider it done.
	if (response == "s_16d870fe")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			dantooine_rebel_trainer_2_action_grantMission4 (player, npc);

			//-- NPC: I hope so %NU, for all of us. Here are the intercept coordinates. If he's not there, search the nearby area and pray that he didn't get past you. Best of luck, my friend.
			string_id message = new string_id (c_stringFile, "s_49003628");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't right now. Can it wait?
	if (response == "s_9b291e2")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: No! Wrap up your business immediately. We can't let this opportunity slip by.
			string_id message = new string_id (c_stringFile, "s_31f985f7");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch29 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I would laugh with you, if it wasn't so horrific %NU. We have to find out where this research is taking place. We may have a lead.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How?
	if (response == "s_fcf4d778")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: The SpyNet has identified one of the officers working on this project. They've even provided us with his travel route. He's on his way to the Star Destroyer in the Dantooine system. We have laid out an intercept course. You need to disable his shuttle. You can find the starting location in your onboard nav computer.
			string_id message = new string_id (c_stringFile, "s_ee59d5b1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't right now. Can it wait?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16d870fe");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9b291e2");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 26);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I understand that the smuggler arrived safely at Lok. Very well done, %NU. I'm glad we didn't have to take any extreme measures. Here's your completion bonus. Get some rest. You deserve it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir. I'll be back shortly.
	if (response == "s_4d99132b")
	{
		doAnimationAction (player, "bow3");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			//-- NPC: Good. %NU, the Alliance is lucky to have you.
			string_id message = new string_id (c_stringFile, "s_9694dc98");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Rest? Bah! I'm ready for action!
	if (response == "s_93f5b2e2")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: If you say so. We have some duty work.
			string_id message = new string_id (c_stringFile, "s_5cde55e2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Excellent! Give me the rundown.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, think I'll spend some of this bonus.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e02f4f90");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52eb52dc");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you say so. We have some duty work.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Excellent! Give me the rundown.
	if (response == "s_e02f4f90")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, think I'll spend some of this bonus.
	if (response == "s_52eb52dc")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "belly_laugh");

			//-- NPC: That's the %NU I know. Come back when you're ready. But don't take too long! There's a lot of work to do.
			string_id message = new string_id (c_stringFile, "s_46f83a2d");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch34 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I heard of your misfortune, %TU. I have some good news, though. The clever smuggler managed to avoid capture. He escaped in a pod. Now we will get a second chance. Are you ready %NU?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Excellent. Payback time!
	if (response == "s_e3516195")
	{
		doAnimationAction (player, "applause_excited");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Indeed. Here are the new coordinates. Hopefully you will be able to slip by undetected this time.
			string_id message = new string_id (c_stringFile, "s_a82e4fe0");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not going back into that death trap!
	if (response == "s_5d243499")
	{
		doAnimationAction (player, "refuse_offer_affection");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: You disappoint me, %TU. I didn't take you for a coward.
			string_id message = new string_id (c_stringFile, "s_739ccb66");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch37 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have a problem, %NU. The smuggler that sold you the information in Yavin has been captured by the Empire. They are transporting him to an interrogator as we speak. We have to save him!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does it matter? We have what we needed from him.
	if (response == "s_aa05c8e8")
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes, but he knows what was in that data. Under no circumstances can the Empire be allowed to find out what we know about their research project.
			string_id message = new string_id (c_stringFile, "s_71eef77f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Agreed. Where do I find him?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I suppose. So what do you want me to do?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f520dc9f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dedb7d52");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 38);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who cares! I have other things to attend to.
	if (response == "s_db0d4bc2")
	{
		doAnimationAction (player, "dismiss");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Sometimes I wonder what is going on inside that head of yours, %TU.
			string_id message = new string_id (c_stringFile, "s_624d0dce");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where is he?
	if (response == "s_3aa053cf")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's being transported from Yavin 4 right now. You need to disable his prison transport and unlock his energy cell by hacking into the ship's computer. Then he can take control of the ship and head for safety. Under no circumstances can he fall into Empire hands - even if it means his death. Do I make myself clear?
			string_id message = new string_id (c_stringFile, "s_5459b64");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes sir!
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Killing civilians is not my style, Vrovel.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_87");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6af7ee");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 47);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch38 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, but he knows what was in that data. Under no circumstances can the Empire be allowed to find out what we know about their research project.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Agreed. Where do I find him?
	if (response == "s_f520dc9f")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: He's being transported from Yavin 4 right now. You need to disable the prison transport and unlock his energy cell. You can accomplish this by hacking into the ship's computer. Once you've done that, he can take control of the ship and head for safety. He cannot fall into the hands of the Imperial interrogators, even if it means that he doesn't make it at all. Understood?
			string_id message = new string_id (c_stringFile, "s_92364805");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes sir!
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't do that...
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a30c1a53");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4922a9d");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 39);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose. So what do you want me to do?
	if (response == "s_dedb7d52")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Intercept the prison transport in the Yavin system. Disable it and unlock the smuggler's energy cell by hacking in to the ship's computer. He CANNOT fall into Empire hands. Do I make myself clear?
			string_id message = new string_id (c_stringFile, "s_7dc6a3c6");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure. Maybe I should just terminate him right away, just to be safe?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't do that...
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Very.
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_261519e4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ca3670fd");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 42);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch39 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He's being transported from Yavin 4 right now. You need to disable the prison transport and unlock his energy cell. You can accomplish this by hacking into the ship's computer. Once you've done that, he can take control of the ship and head for safety. He cannot fall into the hands of the Imperial interrogators, even if it means that he doesn't make it at all. Understood?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes sir!
	if (response == "s_a30c1a53")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Good. You can intercept the prison transport at these coordinates in the Yavin system. May the Force be with you, %NU.
			string_id message = new string_id (c_stringFile, "s_729c6465");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't do that...
	if (response == "s_b4922a9d")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: This is war, %NU! You have some time to reconsider. But if you don't, I may have to reassign you to another part of the navy.
			string_id message = new string_id (c_stringFile, "s_524b8ce7");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch42 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Intercept the prison transport in the Yavin system. Disable it and unlock the smuggler's energy cell by hacking in to the ship's computer. He CANNOT fall into Empire hands. Do I make myself clear?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure. Maybe I should just terminate him right away, just to be safe?
	if (response == "s_261519e4")
	{
		doAnimationAction (player, "slit_throat");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Sometimes I wonder if you are on the right side in this war, %TU. We don't attack civilians unless it's absolutely necessary. Now get yourself over to the Yavin system and save this man from the Empire's clutches!
			string_id message = new string_id (c_stringFile, "s_7ca73534");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't do that...
	if (response == "s_77")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: This is war, %NU! You have some time to reconsider. But if you don't, I may have to reassign you to another part of the navy.
			string_id message = new string_id (c_stringFile, "s_79");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very.
	if (response == "s_ca3670fd")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Good. You can intercept the transport at these coordinates in the Yavin system. May the Force be with you, %NU.
			string_id message = new string_id (c_stringFile, "s_48235568");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch47 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: He's being transported from Yavin 4 right now. You need to disable his prison transport and unlock his energy cell by hacking into the ship's computer. Then he can take control of the ship and head for safety. Under no circumstances can he fall into Empire hands - even if it means his death. Do I make myself clear?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes sir!
	if (response == "s_87")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Good. As much as it pains me to make decisions like this, this is what you have to do in wartime. Here are the intercept coordinates of the prison transport in Yavin. May the Force be with you, %NU.
			string_id message = new string_id (c_stringFile, "s_78de5e19");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Killing civilians is not my style, Vrovel.
	if (response == "s_c6af7ee")
	{
		doAnimationAction (player, "refuse_offer_affection");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_accusingly");

			//-- NPC: Then you better save him, %NU! This pains me as well, but under no circumstances can the Empire learn how much we know about their research project!
			string_id message = new string_id (c_stringFile, "s_64fbc05f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't do that...
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2c4789b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_94");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 49);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch49 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Then you better save him, %NU! This pains me as well, but under no circumstances can the Empire learn how much we know about their research project!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood.
	if (response == "s_2c4789b")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Good. Intercept his prison transport at this location in the Yavin system. Good luck, and may the Force be with you, %TU.
			string_id message = new string_id (c_stringFile, "s_339b44ad");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't do that...
	if (response == "s_94")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: This is war, %NU! You have some time to reconsider.  But if you don't, I may have to reassign you to another part of the navy.
			string_id message = new string_id (c_stringFile, "s_9eadc5d9");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch52 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fantastic performance, %NU! We will soon find out what this is all about and how we can disrupt the Empire's plans.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir. What happens now?
	if (response == "s_fe92f35f")
	{
		doAnimationAction (player, "bow3");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave1");

			doAnimationAction (player, "wave1");

			dantooine_rebel_trainer_2_action_giveRewardMission2 (player, npc);

			//-- NPC: You should get some rest and then fly some duties while we put our plans together. Here's your completion bonus for a job well done. See you soon, %NU.
			string_id message = new string_id (c_stringFile, "s_561c250a");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wasn't exactly difficult. Where's my bonus?
	if (response == "s_235bfb27")
	{
		doAnimationAction (player, "hair_flip");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_giveRewardMission2 (player, npc);

			//-- NPC: If you weren't such a good pilot...very well, here's the mission completion bonus.
			string_id message = new string_id (c_stringFile, "s_15c6406b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Good, now what?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e997312f");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 54);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch54 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you weren't such a good pilot...very well, here's the mission completion bonus.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Good, now what?
	if (response == "s_e997312f")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Take some personal time or fly some duties while we formulate our plans.
			string_id message = new string_id (c_stringFile, "s_73bf51b7");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch56 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm glad you made it, %NU. I have a confession to make. We didn't send you out with the correct data.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?
	if (response == "s_105")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "refuse_offer_affection");

			//-- NPC: I'm sorry ,%NU. We couldn't risk the possibility of that data falling into Imperial hands. This attack against you confirmed that we have a traitor working against us. We wanted to draw him out. We did, thanks to you. Again, my apologies. I couldn't tell you.
			string_id message = new string_id (c_stringFile, "s_f11d138d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: This better lead to something, Vrovel. I almost died out there!
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b17504ae");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 57);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch57 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sorry ,%NU. We couldn't risk the possibility of that data falling into Imperial hands. This attack against you confirmed that we have a traitor working against us. We wanted to draw him out. We did, thanks to you. Again, my apologies. I couldn't tell you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: This better lead to something, Vrovel. I almost died out there!
	if (response == "s_b17504ae")
	{
		doAnimationAction (player, "pound_fist_palm");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes. I would not have been able to forgive myself had that happened. But I had confidence in your abilities. Now one of my most trusted men has gone over every inch of your ship, looking for trackers. This time I am the only one that will know your route and your mission. Will you indulge me and take the mission again, for real this time?
			string_id message = new string_id (c_stringFile, "s_f0c94176");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose. But this time I better be hauling the right data!
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I need some time to recover from my wounds.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24084ede");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_304f442f");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 58);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch58 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes. I would not have been able to forgive myself had that happened. But I had confidence in your abilities. Now one of my most trusted men has gone over every inch of your ship, looking for trackers. This time I am the only one that will know your route and your mission. Will you indulge me and take the mission again, for real this time?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose. But this time I better be hauling the right data!
	if (response == "s_24084ede")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow3");

			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Indeed you will. I'm very grateful the Alliance sent us such a honorable soldier. Be careful %NU. We can't afford to fail.
			string_id message = new string_id (c_stringFile, "s_9c5e6360");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I need some time to recover from my wounds.
	if (response == "s_304f442f")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: I understand %NU. But I hope you rest up quickly. We are running out of time.
			string_id message = new string_id (c_stringFile, "s_5e7cd3e1");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch61 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great! I was looking for you, %NU. We've made a breakthrough. We've analyzed the Imperial research project information. It seems to include something about Force Crystals. We are not sure what it's all about yet, but that's what the material that their 'science team' has been extracting from Dantooine caves.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what is my part in this, sir?
	if (response == "s_b91de387")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We have very little information. But we've received word from one of Nym's smugglers in the Yavin system. He was examining some of the debris left from the Empire's destroyed space station. (Remember that explosion?) He apparently found some data there, relating to this same project.
			string_id message = new string_id (c_stringFile, "s_b712823e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. Go on, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Doesn't explain what my part in this is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432be150");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188656b1");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What are Force Crystals?
	if (response == "s_8a5579fe")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: It's a common term for crystals that emit powerful bursts of light when induced by resonant frequencies. In the past, they were used by the Jedi Knights to construct their lightsabers. Although rare, they can still be found in different areas of the galaxy.
			string_id message = new string_id (c_stringFile, "s_f2fabb27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why would the Empire want these crystals?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Okay, I think it's time you explain what the Vortex is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_de6ce73a");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 68);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not now, Vrovel; I'm busy.
	if (response == "s_dcf1ce97")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmph. Well, you need to get un-busy and get back to me quickly. This is a high-priority task!
			string_id message = new string_id (c_stringFile, "s_c358c931");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch62 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have very little information. But we've received word from one of Nym's smugglers in the Yavin system. He was examining some of the debris left from the Empire's destroyed space station. (Remember that explosion?) He apparently found some data there, relating to this same project.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good. Go on, sir.
	if (response == "s_432be150")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: You need to smuggle our data to Yavin and meet up with one of our scientists who is stationed there. He has purchased the smuggler's information. He will try to make sense of the different pieces of data.
			string_id message = new string_id (c_stringFile, "s_ed422a6f");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I will do my best, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I can't go to Yavin right now. I will be back as soon as I can.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b74318f4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dd108499");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 63);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doesn't explain what my part in this is.
	if (response == "s_188656b1")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "slow_down");

			//-- NPC: If you calm down and let me finish, I'll explain everything. One of our scientists is on his way to meet the smuggler at a space station in the Yavin system now. You need to take the information to that base and meet with our scientist. He will purchase the smuggler's data, compare it to your data, and see if he can't make some kind of connection. 
			string_id message = new string_id (c_stringFile, "s_861734b9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's it? No problem.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't think so. That place is crawling with Imperials.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_73ff6c2b");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e2b7d84c");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 66);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch63 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You need to smuggle our data to Yavin and meet up with one of our scientists who is stationed there. He has purchased the smuggler's information. He will try to make sense of the different pieces of data.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will do my best, sir.
	if (response == "s_b74318f4")
	{
		doAnimationAction (player, "bow3");

		//-- [NOTE] Mission 2 goes here. Smuggle mission to Yavin sector.
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Be careful. If this data falls into the hands of the Empire, it is lost forever. Stay sharp out there, %NU.
			string_id message = new string_id (c_stringFile, "s_605dfe75");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't go to Yavin right now. I will be back as soon as I can.
	if (response == "s_dd108499")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: We are not playing games here, %NU! You need to hurry up and finish what it is you have to do so that you can get underway on this project immediately.
			string_id message = new string_id (c_stringFile, "s_303fc274");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch66 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you calm down and let me finish, I'll explain everything. One of our scientists is on his way to meet the smuggler at a space station in the Yavin system now. You need to take the information to that base and meet with our scientist. He will purchase the smuggler's data, compare it to your data, and see if he can't make some kind of connection. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's it? No problem.
	if (response == "s_73ff6c2b")
	{
		//-- [NOTE] Mission 2 goes here. Smuggle mission to Yavin sector.
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_finger_warning");

			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Be careful. If this data falls into the hands of the Empire, it is lost forever. Stay sharp out there, %NU.
			string_id message = new string_id (c_stringFile, "s_605dfe75");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't think so. That place is crawling with Imperials.
	if (response == "s_e2b7d84c")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: I didn't think you were a coward, %TU! Maybe I should rethink your place here.
			string_id message = new string_id (c_stringFile, "s_e244bb48");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch68 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It's a common term for crystals that emit powerful bursts of light when induced by resonant frequencies. In the past, they were used by the Jedi Knights to construct their lightsabers. Although rare, they can still be found in different areas of the galaxy.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why would the Empire want these crystals?
	if (response == "s_de6ce73a")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_forward");

			//-- NPC: That's what we want to find out. And with your help, we shall succeed %NU.
			string_id message = new string_id (c_stringFile, "s_1fd8891b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All right. What is my mission?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Okay, I think it's time you explain what the Vortex is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8631d353");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48398692");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 69);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, I think it's time you explain what the Vortex is.
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm. Yes, I suppose you are right. The Vortex is the name of the planet where our agency was formed. We have since relocated many times to avoid the Imperial Inquisition, but our goal remains the same.
			string_id message = new string_id (c_stringFile, "s_65ce28c1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And what is that goal?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is the Inquisition so interested in your activities?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e5546db1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff86e506");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 70);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch69 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That's what we want to find out. And with your help, we shall succeed %NU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right. What is my mission?
	if (response == "s_8631d353")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We have very little information. But we've received word from one of Nym's smugglers in the Yavin system. He was examining some of the debris left from the Empire's destroyed space station. (Remember that explosion?) He apparently found some data there, relating to this same project.
			string_id message = new string_id (c_stringFile, "s_b712823e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. Go on, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Doesn't explain what my part in this is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432be150");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188656b1");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay, I think it's time you explain what the Vortex is.
	if (response == "s_48398692")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "rub_chin_thoughtful");

			//-- NPC: Hmm. Yes, I suppose you are right. The Vortex is the name of the planet where our agency was formed. We have since relocated many times to avoid the Imperial Inquisition, but our goal remains the same.
			string_id message = new string_id (c_stringFile, "s_65ce28c1");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: And what is that goal?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why is the Inquisition so interested in your activities?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e5546db1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff86e506");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 70);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch70 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm. Yes, I suppose you are right. The Vortex is the name of the planet where our agency was formed. We have since relocated many times to avoid the Imperial Inquisition, but our goal remains the same.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: And what is that goal?
	if (response == "s_e5546db1")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We investigate anything relating to the Force or the ancient Jedi Knights. Our hope is to find Jedi to aid us in the war against the Empire and to learn as much as we can about the Force. Many people in the Alliance think our group is absurd.
			string_id message = new string_id (c_stringFile, "s_dea568e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How come?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I might agree with them, Jedi were a myth, last I heard.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4cf117bb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef95a2b0");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why is the Inquisition so interested in your activities?
	if (response == "s_ff86e506")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: They want to confiscate our library. It holds decades of information, gathered from all corners of the galaxy, on anything relating to the Force.
			string_id message = new string_id (c_stringFile, "s_bd1936e2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Understood. And what does the Vortex hope to accomplish?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_507325ab");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 75);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch71 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We investigate anything relating to the Force or the ancient Jedi Knights. Our hope is to find Jedi to aid us in the war against the Empire and to learn as much as we can about the Force. Many people in the Alliance think our group is absurd.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How come?
	if (response == "s_4cf117bb")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Not many believe in the Force. Or they think that all the Jedi have been exterminated by the Empire. If that was true, though, why is the Empire wasting millions of credits on Jedi hunts? No, my friend, the Jedi still exist. In fact, we have found a few already - and we've convinced them  to join the Alliance.
			string_id message = new string_id (c_stringFile, "s_dcece74b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: There are Jedi working for the Rebel Alliance?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Very interesting. So what's my mission?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_1f3a637e");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_144");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 72);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I might agree with them, Jedi were a myth, last I heard.
	if (response == "s_ef95a2b0")
	{
		doAnimationAction (player, "belly_laugh");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: If that was true, though, why is the Empire wasting millions of credits on Jedi hunts? No, my friend, the Jedi still exist. In fact, we have found a few already - and we've convinced them  to join the Alliance.
			string_id message = new string_id (c_stringFile, "s_a9c811de");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: There are Jedi working for the Rebel Alliance?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 74);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch72 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not many believe in the Force. Or they think that all the Jedi have been exterminated by the Empire. If that was true, though, why is the Empire wasting millions of credits on Jedi hunts? No, my friend, the Jedi still exist. In fact, we have found a few already - and we've convinced them  to join the Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: There are Jedi working for the Rebel Alliance?
	if (response == "s_1f3a637e")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yes, only but a few. And so far, they are mostly untrained Jedi. It's hard for us to train them, as the only information we have available is from old documents that are often hard to comprehend. We are making more and more progress, however.
			string_id message = new string_id (c_stringFile, "s_8bb57c8b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very interesting. So what's my mission?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f0eba675");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 73);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very interesting. So what's my mission?
	if (response == "s_144")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We have very little information. But we've received word from one of Nym's smugglers in the Yavin system. He was examining some of the debris left from the Empire's destroyed space station. (Remember that explosion?) He apparently found some data there, relating to this same project.
			string_id message = new string_id (c_stringFile, "s_b712823e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. Go on, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Doesn't explain what my part in this is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432be150");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188656b1");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch73 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, only but a few. And so far, they are mostly untrained Jedi. It's hard for us to train them, as the only information we have available is from old documents that are often hard to comprehend. We are making more and more progress, however.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very interesting. So what's my mission?
	if (response == "s_f0eba675")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We have very little information. But we've received word from one of Nym's smugglers in the Yavin system. He was examining some of the debris left from the Empire's destroyed space station. (Remember that explosion?) He apparently found some data there, relating to this same project.
			string_id message = new string_id (c_stringFile, "s_b712823e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good. Go on, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Doesn't explain what my part in this is.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_432be150");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_188656b1");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 62);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch74 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If that was true, though, why is the Empire wasting millions of credits on Jedi hunts? No, my friend, the Jedi still exist. In fact, we have found a few already - and we've convinced them  to join the Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: There are Jedi working for the Rebel Alliance?
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Yes, only but a few. And so far, they are mostly untrained Jedi. It's hard for us to train them, as the only information we have available is from old documents that are often hard to comprehend. We are making more and more progress, however.
			string_id message = new string_id (c_stringFile, "s_8bb57c8b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very interesting. So what's my mission?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f0eba675");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 73);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch75 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: They want to confiscate our library. It holds decades of information, gathered from all corners of the galaxy, on anything relating to the Force.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Understood. And what does the Vortex hope to accomplish?
	if (response == "s_507325ab")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: We investigate anything relating to the Force or the ancient Jedi Knights. Our hope is to find Jedi to aid us in the war against the Empire and to learn as much as we can about the Force. Many people in the Alliance think our group is absurd.
			string_id message = new string_id (c_stringFile, "s_dea568e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How come?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I might agree with them, Jedi were a myth, last I heard.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4cf117bb");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ef95a2b0");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 71);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch77 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did I give you the wrong location or something? Let me double-check your datapad.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah, something must be wrong.
	if (response == "s_f4f48ced")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] Give mission 1 here. Disable mission.
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			doAnimationAction (player, "goodbye");

			dantooine_rebel_trainer_2_action_grantMission1 (player, npc);

			//-- NPC: All fixed. Make haste for the Lok system.
			string_id message = new string_id (c_stringFile, "s_6a1fe0ee");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now. I will be back.
	if (response == "s_d5273669")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well hurry back. We need your skills for this!
			string_id message = new string_id (c_stringFile, "s_c2eb0440");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch80 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Glad to have you back in one piece, %NU. We were worried there for a while. It's apparent that someone set you up. We are trying to figure out who that someone is. The Inquisitor onboard the ship was probably going to try and force you to bring him to me. Anyway, here's your completion bonus.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thank you, sir. So what happens now?
	if (response == "s_266422af")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, even though it was a setup, it had some truth to it and we might have found a second source from which to retrieve the information.
			string_id message = new string_id (c_stringFile, "s_df11a579");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: So when do I take off?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b8b49994");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 81);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll be back. It's time to put this bonus to good use.
	if (response == "s_73b1dbda")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: Haha! Well, don't take too long. We have a lot of work to do still, and we will need your expertise soon again.
			string_id message = new string_id (c_stringFile, "s_266c4054");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch81 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, even though it was a setup, it had some truth to it and we might have found a second source from which to retrieve the information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So when do I take off?
	if (response == "s_b8b49994")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_no");

			//-- NPC: Not yet, my friend. We are still analyzing our information. Take on a few duties and get some more experience under your belt.
			string_id message = new string_id (c_stringFile, "s_b2e20726");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: All right. What duties are available?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Bah! Menial tasks like that are worthless.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I can't right now, but I will be back as soon as possible.
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9d33db7");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dcc384fa");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a1e6b9f4");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 82);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch82 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not yet, my friend. We are still analyzing our information. Take on a few duties and get some more experience under your belt.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: All right. What duties are available?
	if (response == "s_9d33db7")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Bah! Menial tasks like that are worthless.
	if (response == "s_dcc384fa")
	{
		doAnimationAction (player, "wave_on_dismissing");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: If you're going to succeed, you need to be the best pilot out there - better than any Imperial pilot! An attitude like that won't do! You have to constantly sharpen your skills, %TU!
			string_id message = new string_id (c_stringFile, "s_3890da84");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Fine, what tasks are available right now?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Bah, I don't have time for this. I'll be back.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aaf61b87");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_330ba710");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 83);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't right now, but I will be back as soon as possible.
	if (response == "s_a1e6b9f4")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Okay. Just don't let your piloting skills slip; we will need them more than ever now. Practice every chance you get.
			string_id message = new string_id (c_stringFile, "s_55a5f573");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch83 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: If you're going to succeed, you need to be the best pilot out there - better than any Imperial pilot! An attitude like that won't do! You have to constantly sharpen your skills, %TU!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine, what tasks are available right now?
	if (response == "s_aaf61b87")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Bah, I don't have time for this. I'll be back.
	if (response == "s_330ba710")
	{
		doAnimationAction (player, "wave_on_dismissing");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: I'm starting to think that my trust in you was misplaced, %TU.
			string_id message = new string_id (c_stringFile, "s_fb5d75c8");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch87 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] This is to get mission 1
	//-- NPC: There you are! Just in time. This is the real deal, %NU. We have learned that the Empire is starting a new research project. It is of particular interest to us. A Rebel Officer on Lok has asked us to send a pilot to help retrieve more information.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait! You promised to tell me what the Vortex is about.
	if (response == "s_90297a58")
	{
		doAnimationAction (player, "slow_down");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is no time now, my young friend. I will give you the answers soon. But for now, your presence is needed in the Lok system, %TU.
			string_id message = new string_id (c_stringFile, "s_13aaae57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, but what is this research project?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Alright, where do I go and who am I meeting?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9805ba81");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77213dae");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 88);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this research project?
	if (response == "s_9a079bb1")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have very little information, which is where you come in, my friend. You have to travel to the Lok system immediately.
			string_id message = new string_id (c_stringFile, "s_1e45ad6c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. Who do I meet and where?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f2a21231");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3436f186");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. Who do I meet and where?
	if (response == "s_184")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There's a Rebel operative named Finn Darktrin stationed at Lok. He will rendezvous with you. He has information on the location and ship signature of an Imperial shuttle. It's carrying a scientist - and he is working on this project. We need to capture that scientist and interrogate him.
			string_id message = new string_id (c_stringFile, "s_dad7c05e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't have time to go to Lok right now.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is this research project?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92aee067");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3360046f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_191");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_193");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 90);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry, I can't right now. I'll be back.
	if (response == "s_e9c1932")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: This is urgent %NU! Whatever it is you need to do, do it quickly.
			string_id message = new string_id (c_stringFile, "s_c4279134");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch88 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is no time now, my young friend. I will give you the answers soon. But for now, your presence is needed in the Lok system, %TU.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, but what is this research project?
	if (response == "s_9805ba81")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have very little information, which is where you come in, my friend. You have to travel to the Lok system immediately.
			string_id message = new string_id (c_stringFile, "s_1e45ad6c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. Who do I meet and where?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f2a21231");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3436f186");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright, where do I go and who am I meeting?
	if (response == "s_77213dae")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There's a Rebel operative named Finn Darktrin stationed at Lok. He will rendezvous with you. He has information on the location and ship signature of an Imperial shuttle. It's carrying a scientist - and he is working on this project. We need to capture that scientist and interrogate him.
			string_id message = new string_id (c_stringFile, "s_dad7c05e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't have time to go to Lok right now.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is this research project?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92aee067");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3360046f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_191");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_193");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 90);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch89 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have very little information, which is where you come in, my friend. You have to travel to the Lok system immediately.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Alright. Who do I meet and where?
	if (response == "s_f2a21231")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There's a Rebel operative named Finn Darktrin stationed at Lok. He will rendezvous with you. He has information on the location and ship signature of an Imperial shuttle. It's carrying a scientist - and he is working on this project. We need to capture that scientist and interrogate him.
			string_id message = new string_id (c_stringFile, "s_dad7c05e");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Consider it done, sir.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't have time to go to Lok right now.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: What is this research project?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_92aee067");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3360046f");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_191");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_193");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 90);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
	if (response == "s_3436f186")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is no time now, my young friend. I will give you the answers soon. But for now, your presence is needed in the Lok system, %TU.
			string_id message = new string_id (c_stringFile, "s_13aaae57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, but what is this research project?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Alright, where do I go and who am I meeting?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9805ba81");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77213dae");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 88);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch90 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There's a Rebel operative named Finn Darktrin stationed at Lok. He will rendezvous with you. He has information on the location and ship signature of an Imperial shuttle. It's carrying a scientist - and he is working on this project. We need to capture that scientist and interrogate him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Consider it done, sir.
	if (response == "s_92aee067")
	{
		//-- [NOTE] Mission 1 quest is activated here. Disable mission.
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission1 (player, npc);

			//-- NPC: Excellent. May the force be with you, %TU.
			string_id message = new string_id (c_stringFile, "s_4c86e37b");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time to go to Lok right now.
	if (response == "s_3360046f")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: What?! This is of the utmost importance. If you continue to disappoint me like this, I will have you working a moisture harvester on Tatooine for the rest of your career. Get out of here and don't come back until you're ready to work!
			string_id message = new string_id (c_stringFile, "s_3e1fc046");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is this research project?
	if (response == "s_191")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have very little information, which is where you come in, my friend. You have to travel to the Lok system immediately.
			string_id message = new string_id (c_stringFile, "s_1e45ad6c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright. Who do I meet and where?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f2a21231");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3436f186");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 89);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wait. You promised to tell me what the Vortex is about!
	if (response == "s_193")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is no time now, my young friend. I will give you the answers soon. But for now, your presence is needed in the Lok system, %TU.
			string_id message = new string_id (c_stringFile, "s_13aaae57");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Alright, but what is this research project?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Alright, where do I go and who am I meeting?
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9805ba81");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_77213dae");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 88);

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcSpeak (player, pp);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				prose_package pp = new prose_package ();
				pp.stringId = message;
				pp.actor.set (player);
				pp.target.set (npc);

				npcEndConversationWithMessage (player, pp);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch94 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back, %NU. You have acquired some experience in our ways and I believe you are ready for some training. Are you willing?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I am.
	if (response == "s_9b8d2abd")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition_canBuySkill1 (player, npc))
		{
			//-- NPC: Good. Your lesson today is on multi-role starcraft.
			string_id message = new string_id (c_stringFile, "s_341");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds interesting.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_345");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 95);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition_canBuySkill2 (player, npc))
		{
			//-- NPC: Good. Your lesson today is on intermediate Alliance starship ordinance.
			string_id message = new string_id (c_stringFile, "s_342");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds interesting.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_347");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 97);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition_canBuySkill3 (player, npc))
		{
			//-- NPC: Good. Your lesson today is on space combat techniques.
			string_id message = new string_id (c_stringFile, "s_343");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds interesting.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_349");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 99);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good. Your lesson today is on reactor engineering algorithms.
			string_id message = new string_id (c_stringFile, "s_344");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds interesting.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_351");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 101);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: All right. But we need your help, so don't take too long, %NU.
			string_id message = new string_id (c_stringFile, "s_82930541");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch95 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Your lesson today is on multi-role starcraft.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds interesting.
	if (response == "s_345")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_giveSkill1 (player, npc);

			//-- NPC: Very well, I will have one of the pilots teach you. When you are ready, come back to me. An urgent situation is developing. I could use your newly acquired skills.
			string_id message = new string_id (c_stringFile, "s_359");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch97 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Your lesson today is on intermediate Alliance starship ordinance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds interesting.
	if (response == "s_347")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_giveSkill2 (player, npc);

			//-- NPC: Very well. I will have one of the pilots instruct you. When you are ready, come back to me. An urgent situation is developing. I could use your newly acquired skills.
			string_id message = new string_id (c_stringFile, "s_357");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch99 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Your lesson today is on space combat techniques.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds interesting.
	if (response == "s_349")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_giveSkill3 (player, npc);

			//-- NPC: Very well. I will have one of the pilots instruct you. When you are ready, come back to me. An urgent situation is developing. I could use your newly acquired skills.
			string_id message = new string_id (c_stringFile, "s_355");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch101 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good. Your lesson today is on reactor engineering algorithms.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds interesting.
	if (response == "s_351")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_giveSkill4 (player, npc);

			//-- NPC: Very well. I will have one of the pilots instruct you. When you are ready, come back to me. An urgent situation is developing. I could use your newly acquired skills.
			string_id message = new string_id (c_stringFile, "s_353");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch104 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you, %NU. Ready to hear the list of active duties?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes sir.
	if (response == "s_9b43a7ee")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now, I have some things to attend to.
	if (response == "s_6b054777")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well but hurry back, there's lots to do and little time, as always.
			string_id message = new string_id (c_stringFile, "s_7c61dac0");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a Developer/Tester and want missions.
	if (response == "s_6b158a0e")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which mission?
			string_id message = new string_id (c_stringFile, "s_9ffd1405");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want mission 1.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want mission 2.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want mission 3.
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I want mission 4.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I want Escort Duty.
			boolean hasResponse4 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I want Recovery Duty.
			boolean hasResponse5 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I want Destroy Duty.
			boolean hasResponse6 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165db597");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64b6ea44");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b6af2b98");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_816055e2");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_2c008858");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7a128ed0");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_544003d6");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 111);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch105 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll help you with some escort tasks.
	if (response == "s_9828194f")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_grantEscortDuty (player, npc);

			//-- NPC: Good. I will tell our freighters and shuttles where they can meet-up with you. When you feel that you have learned our routes well enough, come back and see me. If you think you have enough experience, let me know and we will teach you a few of our skills. Good luck, %TU.
			string_id message = new string_id (c_stringFile, "s_b21d8dfe");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
	if (response == "s_a7fb8221")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_grantRecoveryDuty (player, npc);

			//-- NPC: Indeed. I will have the locations of the Imperial ships transmitted to you above orbit. Come back and see me later for different duties. Or, if you feel that you have enough experience, let me know and we will teach you some of our skills. Good luck out there %TU.
			string_id message = new string_id (c_stringFile, "s_360d72eb");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
	if (response == "s_948462ad")
	{
		doAnimationAction (player, "slit_throat");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_grantDestroyDuty (player, npc);

			//-- NPC: If you can stand up to that firepower, I will be most pleased. We will transmit locations as we find them once you enter orbit. Come find me after you (or your ship) need a break and pick a new assignment. If you feel experienced enough, let us know and we'll teach you some of our skills. Go get them %TU.
			string_id message = new string_id (c_stringFile, "s_16e68393");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcEndConversationWithMessage (player, pp);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some quick things I need to fix first. I will be back.
	if (response == "s_cd1a5817")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright. But hurry, this is not a vacation.
			string_id message = new string_id (c_stringFile, "s_b09129f6");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch111 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 1.
	if (response == "s_165db597")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission1 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_f3cbd30c");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 2.
	if (response == "s_64b6ea44")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_244");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 3.
	if (response == "s_b6af2b98")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_247");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 4.
	if (response == "s_816055e2")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission4 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_250");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Escort Duty.
	if (response == "s_2c008858")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantEscortDuty (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_253");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Recovery Duty.
	if (response == "s_7a128ed0")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantRecoveryDuty (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_256");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Destroy Duty.
	if (response == "s_544003d6")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantDestroyDuty (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_259");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch119 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are %TU, the new pilot the navy sent us? Good, you couldn't have come at a better time. I am Vrovel. We are a part of the Rebel Alliance called the Vortex. We have several missions that require your assistance. But first I would like to see how well you can work with us. I have some duty work for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry, you must have mistaken me for someone else.
	if (response == "s_d049b613")
	{
		doAnimationAction (player, "refuse_offer_affection");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Hmm, then I must ask you to leave immediately.
			string_id message = new string_id (c_stringFile, "s_b5a9bcf1");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The Vortex? I've never heard of you before.
	if (response == "s_45236b6c")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I'm not surprised. I will go in to more detail of what it is we do later, but we need to know how well you can work with us before we can give out any information on our operations here.
			string_id message = new string_id (c_stringFile, "s_2a02eb78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, sir. I'm ready, what are my orders?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I didn't sign up to be kept in the dark. I'm out of here.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I suppose. But I will hold you to your promise. You have information?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: These high-risk missions? High-risk means more pay right?
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e788dfef");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_5088ea12");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cff9d397");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a59f4abe");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 121);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a Developer/Tester and want missions.
	if (response == "s_277")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which mission?
			string_id message = new string_id (c_stringFile, "s_279");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want mission 1.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want mission 2.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want mission 3.
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I want mission 4.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I want Escort Duty.
			boolean hasResponse4 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I want Recovery Duty.
			boolean hasResponse5 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I want Destroy Duty.
			boolean hasResponse6 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_281");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_285");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_289");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_293");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_297");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_301");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_305");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 126);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch121 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm not surprised. I will go in to more detail of what it is we do later, but we need to know how well you can work with us before we can give out any information on our operations here.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, sir. I'm ready, what are my orders?
	if (response == "s_e788dfef")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "refuse_offer_affection");

			dantooine_rebel_trainer_2_action_setVortexPilot (player, npc);

			//-- NPC: Don't salute me, soldier! The Imperial presence has increased around here lately, so we are pretending to be a scientific expedition. If an Imperial scout sees you saluting me, we might find ourselves in a holding cell tomorrow! We currently have a few duty assignments. That would test your mettle.  You can take your pick.
			string_id message = new string_id (c_stringFile, "s_f22c0d35");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sorry, sir. What are my options?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_60e93806");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 122);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I didn't sign up to be kept in the dark. I'm out of here.
	if (response == "s_5088ea12")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Yes this is clearly not for you. Good bye.
			string_id message = new string_id (c_stringFile, "s_299ce3a0");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose. But I will hold you to your promise. You have information?
	if (response == "s_cff9d397")
	{
		doAnimationAction (player, "rub_chin_thoughtful");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			dantooine_rebel_trainer_2_action_setVortexPilot (player, npc);

			//-- NPC: Very well, I will tell you what I can when the time comes around. Now we have some duties for you. Are you ready?
			string_id message = new string_id (c_stringFile, "s_6ad1ad62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes. How can I help?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22a1e2bb");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 124);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: These high-risk missions? High-risk means more pay right?
	if (response == "s_a59f4abe")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			dantooine_rebel_trainer_2_action_setVortexPilot (player, npc);

			//-- NPC: We are not bounty hunters! You will be paid your regular salary, and at times you can keep things you collect from the enemy. Now that we have that squared away, are you ready to pick your task?
			string_id message = new string_id (c_stringFile, "s_57c7d4b9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay okay, no need to get upset. What are my options?
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_33f02b70");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 125);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch122 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't salute me, soldier! The Imperial presence has increased around here lately, so we are pretending to be a scientific expedition. If an Imperial scout sees you saluting me, we might find ourselves in a holding cell tomorrow! We currently have a few duty assignments. That would test your mettle.  You can take your pick.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, sir. What are my options?
	if (response == "s_60e93806")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch124 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well, I will tell you what I can when the time comes around. Now we have some duties for you. Are you ready?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. How can I help?
	if (response == "s_22a1e2bb")
	{
		doAnimationAction (player, "nod_head_once");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch125 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We are not bounty hunters! You will be paid your regular salary, and at times you can keep things you collect from the enemy. Now that we have that squared away, are you ready to pick your task?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay okay, no need to get upset. What are my options?
	if (response == "s_33f02b70")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "check_wrist_device");

			//-- NPC: We have some freighters requiring escort past Imperial patrols. We also have a few opportunities to hijack Imperial ships, and of course we could launch some guerilla strikes on Imperial Scout patrols. We want you to assist with these duties until we feel you have enough experience to proceed with your training. But they operate on a volunteer basis and can be aborted at any time.
			string_id message = new string_id (c_stringFile, "s_62726774");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll help you with some escort tasks.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hijacking Imperial ships! That sounds exciting.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Not many can stand toe-to-toe in a dogfight with me. Where are these guys?
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I have some quick things I need to fix first. I will be back.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_9828194f");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a7fb8221");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_948462ad");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cd1a5817");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 105);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch126 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 1.
	if (response == "s_281")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission1 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_283");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 2.
	if (response == "s_285")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_287");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 3.
	if (response == "s_289")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_291");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 4.
	if (response == "s_293")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission4 (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_295");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Escort Duty.
	if (response == "s_297")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantEscortDuty (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_299");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Recovery Duty.
	if (response == "s_301")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_303");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Destroy Duty.
	if (response == "s_305")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_307");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch134 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Please leave. This is private property. Thank you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm a Developer/Tester and want missions.
	if (response == "s_310")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which mission?
			string_id message = new string_id (c_stringFile, "s_312");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I want mission 1.
			boolean hasResponse0 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I want mission 2.
			boolean hasResponse1 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I want mission 3.
			boolean hasResponse2 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I want mission 4.
			boolean hasResponse3 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I want Escort Duty.
			boolean hasResponse4 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I want Recovery Duty.
			boolean hasResponse5 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I want Destroy Duty.
			boolean hasResponse6 = false;
			if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_314");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_317");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_320");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_323");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_326");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_330");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_334");

				utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 135);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Fine, goodbye.
	if (response == "s_6f6eeaf3")
	{
		doAnimationAction (player, "goodbye");

		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			//-- NPC: Goodbye.
			string_id message = new string_id (c_stringFile, "s_e6772f13");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Say please? Oh you did. Never mind.
	if (response == "s_9f0a282")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Okay, you can leave now.
			string_id message = new string_id (c_stringFile, "s_a6720368");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int dantooine_rebel_trainer_2_handleBranch135 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which mission?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 1.
	if (response == "s_314")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission1 (player, npc);

			//-- NPC: Very well. Escort in Lok sector. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_3080e198");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 2.
	if (response == "s_317")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission2 (player, npc);

			//-- NPC: Very well. Escort in Yavin sector. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_8b97769");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 3.
	if (response == "s_320")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission3 (player, npc);

			//-- NPC: Very well. Recovery in Yavin sector. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_8b6b8696");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want mission 4.
	if (response == "s_323")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantMission4 (player, npc);

			//-- NPC: Very well. Inspect in Dantooine sector. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_c763dbaa");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Escort Duty.
	if (response == "s_326")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			dantooine_rebel_trainer_2_action_grantEscortDuty (player, npc);

			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_328");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Recovery Duty.
	if (response == "s_330")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_332");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I want Destroy Duty.
	if (response == "s_334")
	{
		//-- [NOTE] 
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well. If you find any errors or have suggestions, report them to Niklas at njohansson@soe.sony.com
			string_id message = new string_id (c_stringFile, "s_336");
			utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.dantooine_rebel_trainer_2");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_SPACE_INTERESTING);
	setInvulnerable (self, true);
	factions.setFaction( self, factions.FACTION_REBEL );
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_SPACE_INTERESTING);
	setInvulnerable (self, true );
	factions.setFaction( self, factions.FACTION_REBEL );
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);

	faceTo( self, player );
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.dantooine_rebel_trainer_2");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!dantooine_rebel_trainer_2_condition_isPilot (player, npc))
	{
		//-- NPC: Please leave. This is private property.
		string_id message = new string_id (c_stringFile, "s_8ea054c0");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_readyForTier3 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		//-- NPC: Good to see you, %NU.  I've really enjoyed our time together. But now I'm placing you under the command of Brother Ezkiel. You can find him right over there. He will continue your guidance in the Vortex. Stay in touch, my friend!
		string_id message = new string_id (c_stringFile, "s_319cfac4");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_isImperial (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: What do you want? We're running a legal scientific expedition here.
		string_id message = new string_id (c_stringFile, "s_6e50b681");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_isNeutralPilot (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Please leave. This is private property!
		string_id message = new string_id (c_stringFile, "s_b6efe97d");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasNegativeFaction (player, npc))
	{
		doAnimationAction (npc, "slow_down");

		//-- NPC: Woah, there, %TU.  Just what do you think you're doing?
		string_id message = new string_id (c_stringFile, "s_b9e38f83");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_900f01d1");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 5);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!dantooine_rebel_trainer_2_condition_onMyTrack (player, npc))
	{
		//-- NPC: You don't look like a Vortex pilot. What can I do for you?
		string_id message = new string_id (c_stringFile, "s_14c2f902");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have any missions that I can fly?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c23a0a19");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 8);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_isRebelNonMember (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Greetings %TU. Too bad you're already working for a different part of the Alliance Navy. We are short a few pilots at the moment.
		string_id message = new string_id (c_stringFile, "s_be0843f2");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_isOnMission (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: What are you still doing here %TU? Time is of the essence!
		string_id message = new string_id (c_stringFile, "s_d69a6474");
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_isOnAnotherMission (player, npc))
	{
		//-- NPC: What's your name again? Oh yes, I see you on the duty roster. But it looks like you already have an assignment. Wrap that up, and then we can talk.
		string_id message = new string_id (c_stringFile, "s_d0f52630");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasFailedMission4 (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Quick! We have another chance to catch that officer before he reaches the Imperial fleet. Here are the new coordinates. Suit up and get going!
		string_id message = new string_id (c_stringFile, "s_59d7264c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I can't do it. He's too heavily guarded.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Great! I hate failure!
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1d85385d");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6a35a7eb");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 15);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasWonMission4 (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: We have it within our grasp, thanks to you,  %NU. Outstanding job up there. Rest up and get ready for the final step. It's time to shut this Imperial operation down for good!
		string_id message = new string_id (c_stringFile, "s_74e55e9e");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you, sir. It was a close call.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I have to admit, I impressed even myself.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f931eb62");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7363d4a2");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 18);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_readyForMission4 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Perfect timing, %NU. We are ready for the next phase of our mission. We have finally learned what this project is all about - AND we've figured out a way to stop it.
		string_id message = new string_id (c_stringFile, "s_985bcff1");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Give me the short version; I'm ready for action.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I can't right now, Vrovel. I have things to do.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Finally! What is it all about?
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_1807105");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2ca477ff");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9793aadf");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 21);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasWonMission3 (player, npc))
	{
		doAnimationAction (npc, "applause_polite");

		dantooine_rebel_trainer_2_action_giveRewardMission3 (player, npc);

		//-- NPC: I understand that the smuggler arrived safely at Lok. Very well done, %NU. I'm glad we didn't have to take any extreme measures. Here's your completion bonus. Get some rest. You deserve it.
		string_id message = new string_id (c_stringFile, "s_e6de2bcb");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you, sir. I'll be back shortly.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Rest? Bah! I'm ready for action!
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4d99132b");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_93f5b2e2");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 30);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasFailedMission3 (player, npc))
	{
		doAnimationAction (npc, "greet");

		doAnimationAction (player, "greet");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: I heard of your misfortune, %TU. I have some good news, though. The clever smuggler managed to avoid capture. He escaped in a pod. Now we will get a second chance. Are you ready %NU?
		string_id message = new string_id (c_stringFile, "s_e8baa9a9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Excellent. Payback time!
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not going back into that death trap!
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e3516195");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_5d243499");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 34);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_readyForMission3 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "greet");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: We have a problem, %NU. The smuggler that sold you the information in Yavin has been captured by the Empire. They are transporting him to an interrogator as we speak. We have to save him!
		string_id message = new string_id (c_stringFile, "s_4d4bd15c");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What does it matter? We have what we needed from him.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Who cares! I have other things to attend to.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Where is he?
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_aa05c8e8");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_db0d4bc2");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3aa053cf");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 37);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasWonMission2 (player, npc))
	{
		doAnimationAction (npc, "applause_polite");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Fantastic performance, %NU! We will soon find out what this is all about and how we can disrupt the Empire's plans.
		string_id message = new string_id (c_stringFile, "s_d6450824");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you, sir. What happens now?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Wasn't exactly difficult. Where's my bonus?
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fe92f35f");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_235bfb27");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 52);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasFailedMission2 (player, npc))
	{
		doAnimationAction (npc, "nervous");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: I'm glad you made it, %NU. I have a confession to make. We didn't send you out with the correct data.
		string_id message = new string_id (c_stringFile, "s_5a928bc");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_105");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 56);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_readyForMission2 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Great! I was looking for you, %NU. We've made a breakthrough. We've analyzed the Imperial research project information. It seems to include something about Force Crystals. We are not sure what it's all about yet, but that's what the material that their 'science team' has been extracting from Dantooine caves.
		string_id message = new string_id (c_stringFile, "s_d9b0de0a");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: So what is my part in this, sir?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What are Force Crystals?
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Not now, Vrovel; I'm busy.
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b91de387");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8a5579fe");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_dcf1ce97");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 61);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasFailedMission1 (player, npc))
	{
		doAnimationAction (npc, "rub_chin_thoughtful");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Did I give you the wrong location or something? Let me double-check your datapad.
		string_id message = new string_id (c_stringFile, "s_2faaa2e5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yeah, something must be wrong.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now. I will be back.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f4f48ced");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d5273669");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 77);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_hasWonMission1 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		dantooine_rebel_trainer_2_action_giveRewardMission1 (player, npc);

		//-- NPC: Glad to have you back in one piece, %NU. We were worried there for a while. It's apparent that someone set you up. We are trying to figure out who that someone is. The Inquisitor onboard the ship was probably going to try and force you to bring him to me. Anyway, here's your completion bonus.
		string_id message = new string_id (c_stringFile, "s_f204572b");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Thank you, sir. So what happens now?
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'll be back. It's time to put this bonus to good use.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_266422af");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_73b1dbda");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 80);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] This is to get mission 1
	if (dantooine_rebel_trainer_2_condition_readyForMission1 (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: There you are! Just in time. This is the real deal, %NU. We have learned that the Empire is starting a new research project. It is of particular interest to us. A Rebel Officer on Lok has asked us to send a pilot to help retrieve more information.
		string_id message = new string_id (c_stringFile, "s_5b12c8f8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Wait! You promised to tell me what the Vortex is about.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What is this research project?
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Alright. Who do I meet and where?
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I'm sorry, I can't right now. I'll be back.
		boolean hasResponse3 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_90297a58");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9a079bb1");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_184");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_e9c1932");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 87);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_canBuySkill (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "bow3");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Welcome back, %NU. You have acquired some experience in our ways and I believe you are ready for some training. Are you willing?
		string_id message = new string_id (c_stringFile, "s_8917475d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I am.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9b8d2abd");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 94);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_readyForDuty (player, npc))
	{
		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Good to see you, %NU. Ready to hear the list of active duties?
		string_id message = new string_id (c_stringFile, "s_2ba96f57");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes sir.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not right now, I have some things to attend to.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a Developer/Tester and want missions.
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9b43a7ee");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6b054777");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6b158a0e");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 104);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition_correctRebelPilot (player, npc))
	{
		doAnimationAction (npc, "bow3");

		doAnimationAction (player, "wave1");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: You are %TU, the new pilot the navy sent us? Good, you couldn't have come at a better time. I am Vrovel. We are a part of the Rebel Alliance called the Vortex. We have several missions that require your assistance. But first I would like to see how well you can work with us. I have some duty work for you.
		string_id message = new string_id (c_stringFile, "s_e14c4a10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm sorry, you must have mistaken me for someone else.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: The Vortex? I've never heard of you before.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm a Developer/Tester and want missions.
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d049b613");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_45236b6c");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_277");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 119);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		dantooine_rebel_trainer_2_action_face (player, npc);

		//-- NPC: Please leave. This is private property. Thank you.
		string_id message = new string_id (c_stringFile, "s_3475f83d");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm a Developer/Tester and want missions.
		boolean hasResponse0 = false;
		if (dantooine_rebel_trainer_2_condition_isGm (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Fine, goodbye.
		boolean hasResponse1 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: Say please? Oh you did. Never mind.
		boolean hasResponse2 = false;
		if (dantooine_rebel_trainer_2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_310");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6f6eeaf3");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9f0a282");

			utils.setScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId", 134);

			npcStartConversation (player, npc, "dantooine_rebel_trainer_2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "dantooine_rebel_trainer_2")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

	if (branchId == 5 && dantooine_rebel_trainer_2_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && dantooine_rebel_trainer_2_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && dantooine_rebel_trainer_2_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && dantooine_rebel_trainer_2_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && dantooine_rebel_trainer_2_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && dantooine_rebel_trainer_2_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && dantooine_rebel_trainer_2_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && dantooine_rebel_trainer_2_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && dantooine_rebel_trainer_2_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && dantooine_rebel_trainer_2_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && dantooine_rebel_trainer_2_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 29 && dantooine_rebel_trainer_2_handleBranch29 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && dantooine_rebel_trainer_2_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && dantooine_rebel_trainer_2_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 34 && dantooine_rebel_trainer_2_handleBranch34 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 37 && dantooine_rebel_trainer_2_handleBranch37 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 38 && dantooine_rebel_trainer_2_handleBranch38 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 39 && dantooine_rebel_trainer_2_handleBranch39 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 42 && dantooine_rebel_trainer_2_handleBranch42 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 47 && dantooine_rebel_trainer_2_handleBranch47 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 49 && dantooine_rebel_trainer_2_handleBranch49 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 52 && dantooine_rebel_trainer_2_handleBranch52 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 54 && dantooine_rebel_trainer_2_handleBranch54 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 56 && dantooine_rebel_trainer_2_handleBranch56 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 57 && dantooine_rebel_trainer_2_handleBranch57 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 58 && dantooine_rebel_trainer_2_handleBranch58 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 61 && dantooine_rebel_trainer_2_handleBranch61 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 62 && dantooine_rebel_trainer_2_handleBranch62 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 63 && dantooine_rebel_trainer_2_handleBranch63 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 66 && dantooine_rebel_trainer_2_handleBranch66 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 68 && dantooine_rebel_trainer_2_handleBranch68 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 69 && dantooine_rebel_trainer_2_handleBranch69 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 70 && dantooine_rebel_trainer_2_handleBranch70 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 71 && dantooine_rebel_trainer_2_handleBranch71 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 72 && dantooine_rebel_trainer_2_handleBranch72 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 73 && dantooine_rebel_trainer_2_handleBranch73 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 74 && dantooine_rebel_trainer_2_handleBranch74 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 75 && dantooine_rebel_trainer_2_handleBranch75 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 77 && dantooine_rebel_trainer_2_handleBranch77 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 80 && dantooine_rebel_trainer_2_handleBranch80 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 81 && dantooine_rebel_trainer_2_handleBranch81 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 82 && dantooine_rebel_trainer_2_handleBranch82 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 83 && dantooine_rebel_trainer_2_handleBranch83 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 87 && dantooine_rebel_trainer_2_handleBranch87 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 88 && dantooine_rebel_trainer_2_handleBranch88 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 89 && dantooine_rebel_trainer_2_handleBranch89 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 90 && dantooine_rebel_trainer_2_handleBranch90 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 94 && dantooine_rebel_trainer_2_handleBranch94 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 95 && dantooine_rebel_trainer_2_handleBranch95 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 97 && dantooine_rebel_trainer_2_handleBranch97 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 99 && dantooine_rebel_trainer_2_handleBranch99 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 101 && dantooine_rebel_trainer_2_handleBranch101 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 104 && dantooine_rebel_trainer_2_handleBranch104 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 105 && dantooine_rebel_trainer_2_handleBranch105 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 111 && dantooine_rebel_trainer_2_handleBranch111 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 119 && dantooine_rebel_trainer_2_handleBranch119 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 121 && dantooine_rebel_trainer_2_handleBranch121 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 122 && dantooine_rebel_trainer_2_handleBranch122 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 124 && dantooine_rebel_trainer_2_handleBranch124 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 125 && dantooine_rebel_trainer_2_handleBranch125 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 126 && dantooine_rebel_trainer_2_handleBranch126 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 134 && dantooine_rebel_trainer_2_handleBranch134 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 135 && dantooine_rebel_trainer_2_handleBranch135 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.dantooine_rebel_trainer_2.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

