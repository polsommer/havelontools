// ======================================================================
//
// theme_park_record_keeper_imperial.script
// Copyright 2003, Sony Online Entertainment
// All Rights Reserved.
//
// DO NOT EDIT THIS AUTO-GENERATED FILE.  PLEASE USE THE CONVERATION EDITOR!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/theme_park_record_keeper_imperial";

// ======================================================================
// Script Conditions
// ======================================================================

boolean theme_park_record_keeper_imperial_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_imperial_condition_theme_park_complete (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.imperial")) {
	
		if(hasObjVar(player, "theme_park_imperial")) {
		
			int gating = getIntObjVar(player, "theme_park_imperial");
			
			if(gating >= 39) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_imperial_condition_theme_park_in_progress (obj_id player, obj_id npc)
{
	if(!hasObjVar(player, "theme_park_reset.imperial")) {
	
		if(hasObjVar(player, "theme_park_imperial")) {
		
			int gating = getIntObjVar(player, "theme_park_imperial");
			
			if(gating > 0) {
			
				return true;
			}
		}
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_imperial_condition_already_reset (obj_id player, obj_id npc)
{
	if(hasObjVar(player, "theme_park_reset.imperial")) {
	
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean theme_park_record_keeper_imperial_condition_not_imperial (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);

	if(playerFaction == null || playerFaction == "") {

		playerFaction = "neutral";

	}

	if(!playerFaction.equals(factions.FACTION_IMPERIAL)) {

		return true;
	}
	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void theme_park_record_keeper_imperial_action__defaultAction (obj_id player, obj_id npc)
{
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_imperial_action_reset_gating (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.imperial", true);

	int gating = getIntObjVar(player, "theme_park_imperial");
	removeObjVar(player, "theme_park_imperial");
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Imperial -- " + getName(player) + " (" + player + ") has opted to RESET his/her theme park obj var [" + gating + "] and START OVER");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_imperial_action_set_redo (obj_id player, obj_id npc)
{
	setObjVar(player, "theme_park_reset.imperial", true);
	
	CustomerServiceLog("ThemePark", "RESET OPTION: Imperial -- " + getName(player) + " (" + player + ") has opted to NOT RESET his/her theme park obj var and CONTINUE");
}

// ----------------------------------------------------------------------

void theme_park_record_keeper_imperial_action_face_to (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "npc.conversation.theme_park_record_keeper_imperial");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "npc.conversation.theme_park_record_keeper_imperial");

	return SCRIPT_CONTINUE;
}


// ======================================================================
// Script Triggers
// ======================================================================

trigger OnStartNpcConversation (obj_id player)
{
	if (ai_lib.isInCombat (self) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (theme_park_record_keeper_imperial_condition_not_imperial (player, self))
	{
		theme_park_record_keeper_imperial_action_face_to (player, self);

		//-- NPC: I'm sorry, I only keep records for Imperial employees. I must ask you to leave now.
		string_id message = new string_id (c_stringFile, "s_cc3c10d2");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_imperial_condition_already_reset (player, self))
	{
		theme_park_record_keeper_imperial_action_face_to (player, self);

		//-- NPC: Yes, I already have your employment history compiled. You do not need to speak with me.
		string_id message = new string_id (c_stringFile, "s_13f4f4e9");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_imperial_condition_theme_park_complete (player, self))
	{
		theme_park_record_keeper_imperial_action_face_to (player, self);

		//-- NPC: Hello. Yes, I recognize you. Who wouldn't? You have done great services for the Empire. Actually I'm glad you stopped by, as I need to ask you some questions.
		string_id message = new string_id (c_stringFile, "s_906058f6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 3);

			npcStartConversation (player, self, "theme_park_record_keeper_imperial", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_imperial_condition_theme_park_in_progress (player, self))
	{
		theme_park_record_keeper_imperial_action_face_to (player, self);

		//-- NPC: Hello. Ah yes, I know who you are. You have helped the Empire to a degree in the past. Actually I'm glad you stopped by, as I need to ask you some questions.
		string_id message = new string_id (c_stringFile, "s_7837b05f");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of questions?
		boolean hasResponse0 = false;
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I don't have time right now.
		boolean hasResponse1 = false;
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_f51b07ff");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2e18346d");

			setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 18);

			npcStartConversation (player, self, "theme_park_record_keeper_imperial", message, responses);
		}
		else
		{
			chat.chat (self, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
	{
		theme_park_record_keeper_imperial_action_face_to (player, self);

		//-- NPC: I don't believe that you have an employment history with the Empire. You do not need to speak with me.
		string_id message = new string_id (c_stringFile, "s_8886fdb");
		chat.chat (self, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "theme_park_record_keeper_imperial")
		return SCRIPT_CONTINUE;

	int branchId = getIntObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

	//-- [BRANCH NOTE] 
	//-- NPC: Hello. Yes, I recognize you. Who wouldn't? You have done great services for the Empire. Actually I'm glad you stopped by, as I need to ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 3 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
			string_id message = new string_id (c_stringFile, "s_c2663b63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does this have to do with me?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cc551f39");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello. Yes, I recognize you. Who wouldn't? You have done great services for the Empire. Actually I'm glad you stopped by, as I need to ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hello. Yes, I recognize you. Who wouldn't? You have done great services for the Empire. Actually I'm glad you stopped by, as I need to ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 3 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello. Yes, I recognize you. Who wouldn't? You have done great services for the Empire. Actually I'm glad you stopped by, as I need to ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does this have to do with me?
	if (branchId == 4 && response == "s_cc551f39")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
			string_id message = new string_id (c_stringFile, "s_bc41b885");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. What do you need?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b7023094");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 4 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. What do you need?
	if (branchId == 5 && response == "s_b7023094")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_5c8a1b58");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does that entail?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history right now.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_3cf75f2d");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6e88ecc1");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 5 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does that entail?
	if (branchId == 6 && response == "s_3cf75f2d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Empire. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_37160714");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 6 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history right now.
	if (branchId == 6 && response == "s_6e88ecc1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Normally, those held in such high esteem as yourself are not asked to perform such services as you have done in the past. However, if you wish, I can reset your employment history with the Empire. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Empire. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 7 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, do not reset my history right now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_93e226b7");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded again, and it will in no way reduce your standing in the rank of the Empire. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 8 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_imperial_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with Kaja Or'zee when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_f1105bbd");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 8 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 11 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_imperial_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with Kaja Or'zee when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_f1105bbd");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, do not reset my history right now.
	if (branchId == 11 && response == "s_93e226b7")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Please come back and see me again if you change your mind.
			string_id message = new string_id (c_stringFile, "s_ea196d60");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hello. Ah yes, I know who you are. You have helped the Empire to a degree in the past. Actually I'm glad you stopped by, as I need to ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of questions?
	if (branchId == 18 && response == "s_f51b07ff")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
			string_id message = new string_id (c_stringFile, "s_c2663b63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What does this have to do with me?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_cc551f39");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello. Ah yes, I know who you are. You have helped the Empire to a degree in the past. Actually I'm glad you stopped by, as I need to ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Hello. Ah yes, I know who you are. You have helped the Empire to a degree in the past. Actually I'm glad you stopped by, as I need to ask you some questions.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't have time right now.
	if (branchId == 18 && response == "s_2e18346d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Hello. Ah yes, I know who you are. You have helped the Empire to a degree in the past. Actually I'm glad you stopped by, as I need to ask you some questions.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What does this have to do with me?
	if (branchId == 19 && response == "s_cc551f39")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
			string_id message = new string_id (c_stringFile, "s_bc41b885");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: OK. What do you need?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I've got to be going now.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b7023094");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710595f4");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 19 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'You see, I've performed a grievous error, and many of the Imperial employment records were lost in a major computer crash. Given the rash nature of Lord Vader, I'm quite lucky to be alive actually.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: OK. What do you need?
	if (branchId == 20 && response == "s_b7023094")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
			string_id message = new string_id (c_stringFile, "s_ac97bdc2");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've got to be going now.
	if (branchId == 20 && response == "s_710595f4")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I see. Please come back and speak with me when you get a free moment.
			string_id message = new string_id (c_stringFile, "s_26df7262");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Well, in order to keep my head on my shoulders, I have to recompile all the data in a timely fashion, and I need to ask you a question or two regarding your employment history.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 21 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_ce56f943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 21 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_2380d732");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 21 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 21 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 21 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you like, I can reset your employment history and you can begin your service again. Otherwise, you can continue your services where you left off. Remember that once you decide, you cannot change your mind. Do you want me to reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 22 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_2380d732");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 22 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 22 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 22 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 23 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_ce56f943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 23 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 23 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 23 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. Reset my employment history.
	if (branchId == 24 && response == "s_4fd35e09")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_imperial_action_reset_gating (player, self);

			//-- NPC: Very well, it is done. You may go speak with Kaja Or'zee when you are ready to begin your service again.
			string_id message = new string_id (c_stringFile, "s_f1105bbd");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 24 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Take all the time you need.
			string_id message = new string_id (c_stringFile, "s_3c440d33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 26 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_ce56f943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 26 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_2380d732");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 26 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 26 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 26 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: YES, I am sure. I want to continue my service.
	if (branchId == 27 && response == "s_f7565bbd")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			theme_park_record_keeper_imperial_action_set_redo (player, self);

			//-- NPC: Very well, it is done. You may continue your service to the Empire where you last left off.
			string_id message = new string_id (c_stringFile, "s_f2538a47");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
	//-- [RESPONSE NOTE] 
	//-- PLAYER: NO, wait. Let me think a moment longer.
	if (branchId == 27 && response == "s_ebce22a9")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: I understand completely. Take all the time you need.
			string_id message = new string_id (c_stringFile, "s_3c440d33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse4 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to reset my history?
	if (branchId == 29 && response == "s_a76f22bf")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If I reset your history, you will be able to go back and assist the Empire again as you have done in the past. But don't worry, you will be rewarded, and it will in no way reduce your standing in the rank of the Empire. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_ce56f943");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to continue my service?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14693cf1");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: What if I decide to continue my service?
	if (branchId == 29 && response == "s_14693cf1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: If you choose to continue from where you left off, you will simply return to the person which last gave you a job. You will then serve however he or she deems best. But remember that once you decide you cannot change your mind. Shall I reset your history?
			string_id message = new string_id (c_stringFile, "s_2380d732");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What if I decide to reset my history?
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes, please reset my employment history.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: No, do not reset my history. I will continue my service.
			boolean hasResponse2 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: Can I decide later?
			boolean hasResponse3 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a76f22bf");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ff20b1f1");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_e3c4a3d5");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_bfd7fb6d");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please reset my employment history.
	if (branchId == 29 && response == "s_ff20b1f1")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but keep in mind that once I reset your history, it cannot be undone. Are you sure that you want me to reset your employment history?
			string_id message = new string_id (c_stringFile, "s_b193a14c");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. Reset my employment history.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_4fd35e09");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, do not reset my history. I will continue my service.
	if (branchId == 29 && response == "s_e3c4a3d5")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Alright, but remember that once you decide to continue, you cannot change your mind. Are you sure that you want to continue your service where you left off?
			string_id message = new string_id (c_stringFile, "s_49d330ac");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: YES, I am sure. I want to continue my service.
			boolean hasResponse0 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: NO, wait. Let me think a moment longer.
			boolean hasResponse1 = false;
			if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_f7565bbd");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ebce22a9");

				setObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId", 27);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

				npcSpeak (player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	//-- [BRANCH NOTE] 
	//-- NPC: I understand completely. Take all the time you need.
	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can I decide later?
	if (branchId == 29 && response == "s_bfd7fb6d")
	{
		//-- [NOTE] 
		if (theme_park_record_keeper_imperial_condition__defaultCondition (player, self))
		{
			//-- NPC: Certainly. Simply return and speak with me again when you have made your decision.
			string_id message = new string_id (c_stringFile, "s_4b845961");
			removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

			npcSpeak (player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		chat.chat (self, "Error:  All conditions for OnNpcConversationResponse for branch 'I understand completely. Take all the time you need.' were false.");

		return SCRIPT_CONTINUE;
	}

	chat.chat (self, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	removeObjVar (player, "conversation.theme_park_record_keeper_imperial.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

