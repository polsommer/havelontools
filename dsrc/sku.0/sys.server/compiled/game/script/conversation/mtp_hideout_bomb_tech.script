// ======================================================================
//
// mtp_hideout_bomb_tech.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_hideout_bomb_tech";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_hideout_bomb_tech_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_isElligibleForBombQuest (obj_id player, obj_id npc)
{
	return (!mtp_hideout_bomb_tech_condition_hasCompletedOrActiveBombQuest(player, npc) && !mtp_hideout_bomb_tech_condition_hasCompletedOrActiveLokCampQuest(player, npc));
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedOrActiveBombQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "quest/mtp_hideout_collect_bomb_items");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedOrActiveLokCampQuest (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "quest/mtp_camp_quest_lok");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedLokCamp (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest/mtp_camp_quest_lok");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedBombQuest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "quest/mtp_hideout_collect_bomb_items");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedBothLokAndBomb (obj_id player, obj_id npc)
{
	return (mtp_hideout_bomb_tech_condition_hasCompletedBombQuest(player, npc) && mtp_hideout_bomb_tech_condition_hasCompletedLokCamp(player, npc));
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedBombNotLok (obj_id player, obj_id npc)
{
	return (mtp_hideout_bomb_tech_condition_hasCompletedBombQuest(player, npc) && !mtp_hideout_bomb_tech_condition_hasCompletedOrActiveLokCampQuest(player, npc));
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasBombActiveSignalWaiting (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "quest/mtp_hideout_collect_bomb_items") && 
	groundquests.isTaskActive(player, "quest/mtp_hideout_collect_bomb_items", "returnTechnician");
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_hasCompletedBombLokActive (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "quest/mtp_camp_quest_lok") && 
	mtp_hideout_bomb_tech_condition_hasCompletedBombQuest(player, npc);	
}

// ----------------------------------------------------------------------

boolean mtp_hideout_bomb_tech_condition_bombQuestActiveButNotComplete (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "quest/mtp_hideout_collect_bomb_items");
}

// ======================================================================
// Script Actions
// ======================================================================

void mtp_hideout_bomb_tech_action_grantBombPartQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/mtp_hideout_collect_bomb_items");
}

// ----------------------------------------------------------------------

void mtp_hideout_bomb_tech_action_sendSignalBombCompletion (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokeToTechnician");
}

// ----------------------------------------------------------------------

void mtp_hideout_bomb_tech_action_grantLokCampQuest (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "quest/mtp_camp_quest_lok");
}

// ----------------------------------------------------------------------

void mtp_hideout_bomb_tech_action_clearBombAndRegrant (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "quest/mtp_hideout_collect_bomb_items");
	groundquests.grantQuest(player, "quest/mtp_hideout_collect_bomb_items");
}

// ----------------------------------------------------------------------

void mtp_hideout_bomb_tech_action_clearLokAndRegrant (obj_id player, obj_id npc)
{
	groundquests.clearQuest(player, "quest/mtp_camp_quest_lok");
	groundquests.grantQuest(player, "quest/mtp_camp_quest_lok");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_hideout_bomb_tech_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh dear.  The King didn't send you did he?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.  You looked like you needed help, so here I am.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Whew!  You are a saviour.  I really need some help.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What seems to be the problem?
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "accept_affection");

			//-- NPC: Oh! Errr. This is an unexpected pleasure. I am honored by your presence.
			string_id message = new string_id (c_stringFile, "s_26");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You may dispense with the pleasantries. I'm here to put you back on schedule. 
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Whew!  You are a saviour.  I really need some help.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What seems to be the problem?
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need parts that are missing for the bombs I am making.  Can you go collect the parts?
			string_id message = new string_id (c_stringFile, "s_23");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds easy.  Where are the parts?
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need parts that are missing for the bombs I am making.  Can you go collect the parts?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds easy.  Where are the parts?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well I don't know.  My old assistant has successfully made me look bad by hiding the most important bomb parts.  I assume they are here in the hideout somewhere.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh. I bet I know where the parts are. What are they?
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Why don't I just find your old assistant and get him to tell me where the parts are?
			boolean hasResponse1 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well I don't know.  My old assistant has successfully made me look bad by hiding the most important bomb parts.  I assume they are here in the hideout somewhere.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh. I bet I know where the parts are. What are they?
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_grantBombPartQuest (player, npc);

			//-- NPC: Let me add the parts needed to your datapad.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why don't I just find your old assistant and get him to tell me where the parts are?
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well. Uh.  He met with an explosive end.  I guess I should have asked him where he hid the parts before I... oh well.
			string_id message = new string_id (c_stringFile, "s_37");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Well. I guess I'll just have to find the parts.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_39");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well. Uh.  He met with an explosive end.  I guess I should have asked him where he hid the parts before I... oh well.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Well. I guess I'll just have to find the parts.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_grantBombPartQuest (player, npc);

			//-- NPC: Let me add the parts needed to your datapad.
			string_id message = new string_id (c_stringFile, "s_40");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh! Errr. This is an unexpected pleasure. I am honored by your presence.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You may dispense with the pleasantries. I'm here to put you back on schedule. 
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "apologize");

			//-- NPC: I assure you I am working as fast as I can. 
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Perhaps I can find new ways to motivate you.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I assure you I am working as fast as I can. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Perhaps I can find new ways to motivate you.
	if (response == "s_34")
	{
		doAnimationAction (player, "shakefist");

		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "squirm");

			//-- NPC: I tell you, this station ...uh I mean ...these bombs will be operational as planned.
			string_id message = new string_id (c_stringFile, "s_38");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The King does not share your optimistic appraisal of the situation.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I tell you, this station ...uh I mean ...these bombs will be operational as planned.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The King does not share your optimistic appraisal of the situation.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shrug_shoulders");

			//-- NPC: But, he asks the impossible. I need more parts!
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Then perhaps you can tell him when he arrives.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: But, he asks the impossible. I need more parts!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Then perhaps you can tell him when he arrives.
	if (response == "s_46")
	{
		doAnimationAction (player, "point_down");

		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "scared");

			//-- NPC: The King's coming here?
			string_id message = new string_id (c_stringFile, "s_48");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That is correct! And, he is most displeased with your apparent lack of progress. 
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The King's coming here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That is correct! And, he is most displeased with your apparent lack of progress. 
	if (response == "s_50")
	{
		doAnimationAction (player, "shakefist");

		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "nervous");

			//-- NPC: We shall double our efforts!
			string_id message = new string_id (c_stringFile, "s_52");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I hope so, for your sake. The King is not as forgiving as I am.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_54");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We shall double our efforts!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hope so, for your sake. The King is not as forgiving as I am.
	if (response == "s_54")
	{
		doAnimationAction (player, "loser");

		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "weeping");

			//-- NPC: *Sob*
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Do you have all the parts?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yep.  Here they are.
	if (response == "s_60")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_sendSignalBombCompletion (player, npc);

			//-- NPC: Fantastic!  Here.  This is all I have but I hope it is enough to show my appreciation.
			string_id message = new string_id (c_stringFile, "s_62");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Fantastic!  Here.  This is all I have but I hope it is enough to show my appreciation.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ever consider becoming a bomb maker?  I so need a new assistant.
			string_id message = new string_id (c_stringFile, "s_66");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You seem really nice for a bomb maker.  
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_76");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 20);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ever consider becoming a bomb maker?  I so need a new assistant.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You seem really nice for a bomb maker.  
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks.  I try to treat everyone the way I want to be treated.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't you worry about where your creations are placed? 
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello again.  Are you having trouble finding the items?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. My datapad data somehow got corrupted can you give me the information again?
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_clearBombAndRegrant (player, npc);

			//-- NPC: Okay.  Let me break it down for you.
			string_id message = new string_id (c_stringFile, "s_72");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ever consider becoming a bomb maker?  I so need a new assistant.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You seem really nice for a bomb maker.  
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thanks.  I try to treat everyone the way I want to be treated.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Don't you worry about where your creations are placed? 
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thanks.  I try to treat everyone the way I want to be treated.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Don't you worry about where your creations are placed? 
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Most of the bombs are placed in low traffic areas next to machinery.  Sometimes there are risks and that bothers me.
			string_id message = new string_id (c_stringFile, "s_82");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Risks?
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Most of the bombs are placed in low traffic areas next to machinery.  Sometimes there are risks and that bothers me.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Risks?
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes.  Like on Lok.  I hear there is a group targeting a room in a building.  The next room over is the building sleeping quarters.
			string_id message = new string_id (c_stringFile, "s_86");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow.  Where is this building?
			boolean hasResponse0 = false;
			if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_88");

				utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes.  Like on Lok.  I hear there is a group targeting a room in a building.  The next room over is the building sleeping quarters.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow.  Where is this building?
	if (response == "s_88")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_grantLokCampQuest (player, npc);

			//-- NPC: I don't know.  All I have is the location of the camp.  Maybe you can travel there and convince them to move the bomb to another target.
			string_id message = new string_id (c_stringFile, "s_90");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_bomb_tech_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thanks again for all your help.  I hope it goes well on Lok for you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am having problems with the Lok location. Can you give it to me again?
	if (response == "s_96")
	{
		//-- [NOTE] 
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			mtp_hideout_bomb_tech_action_clearLokAndRegrant (player, npc);

			//-- NPC: Sure
			string_id message = new string_id (c_stringFile, "s_98");
			utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_hideout_bomb_tech");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_SPACE_INTERESTING);	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_hideout_bomb_tech");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_isElligibleForBombQuest (player, npc))
	{
		//-- NPC: Oh dear.  The King didn't send you did he?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No.  You looked like you needed help, so here I am.
		boolean hasResponse0 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes.
		boolean hasResponse1 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 1);

			npcStartConversation (player, npc, "mtp_hideout_bomb_tech", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_hasBombActiveSignalWaiting (player, npc))
	{
		//-- NPC: Do you have all the parts?
		string_id message = new string_id (c_stringFile, "s_58");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yep.  Here they are.
		boolean hasResponse0 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_60");

			utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 15);

			npcStartConversation (player, npc, "mtp_hideout_bomb_tech", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_bombQuestActiveButNotComplete (player, npc))
	{
		//-- NPC: Hello again.  Are you having trouble finding the items?
		string_id message = new string_id (c_stringFile, "s_68");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. My datapad data somehow got corrupted can you give me the information again?
		boolean hasResponse0 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_70");

			utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 18);

			npcStartConversation (player, npc, "mtp_hideout_bomb_tech", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_hasCompletedBombNotLok (player, npc))
	{
		//-- NPC: Ever consider becoming a bomb maker?  I so need a new assistant.
		string_id message = new string_id (c_stringFile, "s_74");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: You seem really nice for a bomb maker.  
		boolean hasResponse0 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_76");

			utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 20);

			npcStartConversation (player, npc, "mtp_hideout_bomb_tech", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_hasCompletedBothLokAndBomb (player, npc))
	{
		doAnimationAction (player, "shrug_shoulders");

		//-- NPC: I heard the camp on Lok was attacked.  Do you know anything about it?
		string_id message = new string_id (c_stringFile, "s_92");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition_hasCompletedBombLokActive (player, npc))
	{
		//-- NPC: Thanks again for all your help.  I hope it goes well on Lok for you.
		string_id message = new string_id (c_stringFile, "s_94");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am having problems with the Lok location. Can you give it to me again?
		boolean hasResponse0 = false;
		if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_96");

			utils.setScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId", 26);

			npcStartConversation (player, npc, "mtp_hideout_bomb_tech", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (mtp_hideout_bomb_tech_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hello.  Can you pass me that tool on the table over there?  Thanks.
		string_id message = new string_id (c_stringFile, "s_100");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_hideout_bomb_tech")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

	if (branchId == 1 && mtp_hideout_bomb_tech_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && mtp_hideout_bomb_tech_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && mtp_hideout_bomb_tech_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && mtp_hideout_bomb_tech_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && mtp_hideout_bomb_tech_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && mtp_hideout_bomb_tech_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && mtp_hideout_bomb_tech_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && mtp_hideout_bomb_tech_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && mtp_hideout_bomb_tech_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && mtp_hideout_bomb_tech_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && mtp_hideout_bomb_tech_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && mtp_hideout_bomb_tech_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && mtp_hideout_bomb_tech_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && mtp_hideout_bomb_tech_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && mtp_hideout_bomb_tech_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && mtp_hideout_bomb_tech_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && mtp_hideout_bomb_tech_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && mtp_hideout_bomb_tech_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && mtp_hideout_bomb_tech_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && mtp_hideout_bomb_tech_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_hideout_bomb_tech.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

