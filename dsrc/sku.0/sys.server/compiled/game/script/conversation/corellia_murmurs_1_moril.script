// ======================================================================
//
// corellia_murmurs_1_moril.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_murmurs_1_moril";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_murmurs_1_moril_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_murmurs_1_moril_condition_talktoMoril (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "coronet_murmurs_1_smuggler", "talktomoril");
}

// ----------------------------------------------------------------------

boolean corellia_murmurs_1_moril_condition_finishedwithMoril (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "coronet_murmurs_1_smuggler", "talktomoril");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_murmurs_1_moril_action_signalMoril (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "coronet_murmurs_moril");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_murmurs_1_moril_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What brings you out here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ja'inn told me about one of your jobs.
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "embarrassed");

			//-- NPC: Oh. That. Yes, well, um....it's nothing you should be getting involved with.
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: No, you don't understand. I'm getting involved.
			boolean hasResponse0 = false;
			if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11");

				utils.setScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_murmurs_1_moril_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh. That. Yes, well, um....it's nothing you should be getting involved with.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, you don't understand. I'm getting involved.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
		{
			//-- NPC: Unless you are willing to shut them down, I won't tell you anything.
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's my plan, if it's dangerous.
			boolean hasResponse0 = false;
			if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_17");

				utils.setScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corellia_murmurs_1_moril_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Unless you are willing to shut them down, I won't tell you anything.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's my plan, if it's dangerous.
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
		{
			corellia_murmurs_1_moril_action_signalMoril (player, npc);

			//-- NPC: Oh, it's dangerous. Deadly, even. I'm not willing to sacrifice myself for this, but I'll help you. I'll tell you where their next shipment is. If you are any good, you will be able to figure out where they are.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_murmurs_1_moril");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_murmurs_1_moril");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_murmurs_1_moril_condition_finishedwithMoril (player, npc))
	{
		//-- NPC: Thank you for your help, but don't draw attention to me. I'll get out of here when the coast is clear.
		string_id message = new string_id (c_stringFile, "s_14");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_murmurs_1_moril_condition_talktoMoril (player, npc))
	{
		//-- NPC: What brings you out here?
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Ja'inn told me about one of your jobs.
		boolean hasResponse0 = false;
		if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_8");

			utils.setScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId", 2);

			npcStartConversation (player, npc, "corellia_murmurs_1_moril", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_murmurs_1_moril_condition__defaultCondition (player, npc))
	{
		//-- NPC: Good day.
		string_id message = new string_id (c_stringFile, "s_20");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_murmurs_1_moril")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId");

	if (branchId == 2 && corellia_murmurs_1_moril_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && corellia_murmurs_1_moril_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && corellia_murmurs_1_moril_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_murmurs_1_moril.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

