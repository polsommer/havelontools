// ======================================================================
//
// restuss_imperial_ambush_1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.restuss_event;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/restuss_imperial_ambush_1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean restuss_imperial_ambush_1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_stage3ready (obj_id player, obj_id npc)
{
	if (factions.isImperial(player)&& restuss_event.isRestussInStageThree(npc))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_mission1Active (obj_id player, obj_id npc)
{
	if (groundquests.isQuestActive(player, "restuss_imperial_st3_comm_array") ||
		groundquests.isQuestActive(player, "restuss_imperial_st3_comm_array_spy"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_mission1Success (obj_id player, obj_id npc)
{
	if (groundquests.isTaskActive(player, "restuss_imperial_st3_comm_array", "returnExov1")||
		groundquests.isTaskActive(player, "restuss_imperial_st3_comm_array_spy", "returnExov1"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_completedMission1 (obj_id player, obj_id npc)
{
	if (groundquests.hasCompletedQuest(player, "restuss_imperial_st3_comm_array") ||
		groundquests.hasCompletedQuest(player, "restuss_imperial_st3_comm_array_spy"))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_mission2Active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "restuss_imperial_st3_ambush_1");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_mission2Success (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "restuss_imperial_st3_ambush_1", "returnExov2");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_notSpy (obj_id player, obj_id npc)
{
	if (utils.isProfession(player, utils.SPY)||
		utils.isProfession(player, utils.SMUGGLER))
		return false;
	else
		return true;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_spy (obj_id player, obj_id npc)
{
	if (utils.isProfession(player, utils.SPY)||
		utils.isProfession(player, utils.SMUGGLER))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_completedMission2 (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "restuss_imperial_st3_ambush_1");
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_playerImperial (obj_id player, obj_id npc)
{
	if (factions.isImperial(player))
		return true;
	else
		return false;
}

// ----------------------------------------------------------------------

boolean restuss_imperial_ambush_1_condition_isRebelPlayer (obj_id player, obj_id npc)
{
	return factions.isRebel(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void restuss_imperial_ambush_1_action_giveCapture (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_comm_array");
}

// ----------------------------------------------------------------------

void restuss_imperial_ambush_1_action_reward1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedExov1");
}

// ----------------------------------------------------------------------

void restuss_imperial_ambush_1_action_giveAmbush (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_ambush_1");
}

// ----------------------------------------------------------------------

void restuss_imperial_ambush_1_action_reward2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "returnedExov2");
}

// ----------------------------------------------------------------------

void restuss_imperial_ambush_1_action_giveCaptureSpy (obj_id player, obj_id npc)
{
	groundquests.grantQuest (player, "restuss_imperial_st3_comm_array_spy");
}

// ----------------------------------------------------------------------

void restuss_imperial_ambush_1_action_eject (obj_id player, obj_id npc)
{
	expelFromBuilding(player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int restuss_imperial_ambush_1_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you again, soldier. The missions remain the same. The Rebels are still moving supplies around the city and they are still harassing our survey arrays. Wherever you can assist, it will be most valuable.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll ambush the supply convoy, sir!
	if (response == "s_74")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveAmbush (player, npc);

			//-- NPC: Excellent, soldier! For the Emperor!
			string_id message = new string_id (c_stringFile, "s_76");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will take care of the survey arrays, sir!
	if (response == "s_64")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll make sure the survey arrays stay in our control, sir!
	if (response == "s_71")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Excellent, soldier. With your skills in hacking, you're perfect for this mission. Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_75");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_94")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_96");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ambush_1_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent, soldier, I have a new mission for you. The Rebels are moving supplies around the city between their base and their troops. Stealing the supplies would cripple the already struggling Rebels and add valuable resources to our mighty army.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir! Where do I find the supply convoy?
	if (response == "s_26")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveAmbush (player, npc);

			//-- NPC: It's moving from the Rebel base and around the city but it's not on a fixed schedule so we can't pinpoint it. You will have to hunt it down.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was hoping to hack some more survey arrays?
	if (response == "s_30")
	{
		doAnimationAction (player, "shake_head_no");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, we still need help with that. The Rebels refuse to leave them alone, despite your prior success.
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll get right on it, sir!
			boolean hasResponse0 = false;
			if (restuss_imperial_ambush_1_condition_notSpy (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I will handle it, sir!
			boolean hasResponse1 = false;
			if (restuss_imperial_ambush_1_condition_spy (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
			boolean hasResponse2 = false;
			if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_65");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_36");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				utils.setScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_46")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ambush_1_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Alright, we still need help with that. The Rebels refuse to leave them alone, despite your prior success.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll get right on it, sir!
	if (response == "s_65")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_67");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I will handle it, sir!
	if (response == "s_36")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Excellent, soldier, with your skills in hacking, you're perfect for this mission. Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_69");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_42")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_44");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int restuss_imperial_ambush_1_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I was hoping you would stop by, soldier. We have some new orders for you. We've placed sensor arrays in Restuss to help us in our search for research material left after the explosion. The Rebel scum had the nerve to capture some of these to use for themselves. This can't stand; we need you to recapture them!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm all over it, sir!
	if (response == "s_52")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCapture (player, npc);

			//-- NPC: Excellent, soldier! Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not a problem, sir!
	if (response == "s_61")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			restuss_imperial_ambush_1_action_giveCaptureSpy (player, npc);

			//-- NPC: Excellent, soldier. With your skills in hacking, you're perfect for this mission. Show them the might of the Imperial Army!
			string_id message = new string_id (c_stringFile, "s_63");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
	if (response == "s_56")
	{
		doAnimationAction (player, "salute2");

		//-- [NOTE] 
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "salute2");

			//-- NPC: Fine, soldier. For the Emperor!
			string_id message = new string_id (c_stringFile, "s_58");
			utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.restuss_imperial_ambush_1");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.restuss_imperial_ambush_1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_isRebelPlayer (player, npc))
	{
		restuss_imperial_ambush_1_action_eject (player, npc);

		//-- NPC: We don't need your kind here.
		string_id message = new string_id (c_stringFile, "s_57");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_mission2Success (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_ambush_1_action_reward2 (player, npc);

		//-- NPC: Splendid work, soldier! The Rebel soldiers have stopped most of their attacks and are hiding among the rubble in Restuss after their supplies didn't arrive. These supplies will also prove most useful for our own troops!
		string_id message = new string_id (c_stringFile, "s_39");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_mission1Success (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		restuss_imperial_ambush_1_action_reward1 (player, npc);

		//-- NPC: Excellent, most of the survey arrays are back and running in our control. Good work, soldier!
		string_id message = new string_id (c_stringFile, "s_10");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_mission1Active (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: We still need all the survey arrays to be in our possession, soldier.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_mission2Active (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: That supply convoy still needs to be ambushed, soldier.
		string_id message = new string_id (c_stringFile, "s_25");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_completedMission2 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Good to see you again, soldier. The missions remain the same. The Rebels are still moving supplies around the city and they are still harassing our survey arrays. Wherever you can assist, it will be most valuable.
		string_id message = new string_id (c_stringFile, "s_72");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll ambush the supply convoy, sir!
		boolean hasResponse0 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I will take care of the survey arrays, sir!
		boolean hasResponse1 = false;
		if (restuss_imperial_ambush_1_condition_notSpy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'll make sure the survey arrays stay in our control, sir!
		boolean hasResponse2 = false;
		if (restuss_imperial_ambush_1_condition_spy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse3 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_74");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_71");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_94");

			utils.setScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId", 6);

			npcStartConversation (player, npc, "restuss_imperial_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_completedMission1 (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: Excellent, soldier, I have a new mission for you. The Rebels are moving supplies around the city between their base and their troops. Stealing the supplies would cripple the already struggling Rebels and add valuable resources to our mighty army.
		string_id message = new string_id (c_stringFile, "s_23");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not a problem, sir! Where do I find the supply convoy?
		boolean hasResponse0 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I was hoping to hack some more survey arrays?
		boolean hasResponse1 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_46");

			utils.setScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId", 11);

			npcStartConversation (player, npc, "restuss_imperial_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_stage3ready (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: I was hoping you would stop by, soldier. We have some new orders for you. We've placed sensor arrays in Restuss to help us in our search for research material left after the explosion. The Rebel scum had the nerve to capture some of these to use for themselves. This can't stand; we need you to recapture them!
		string_id message = new string_id (c_stringFile, "s_50");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm all over it, sir!
		boolean hasResponse0 = false;
		if (restuss_imperial_ambush_1_condition_notSpy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not a problem, sir!
		boolean hasResponse1 = false;
		if (restuss_imperial_ambush_1_condition_spy (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I have some other things to take care of first, sir. I'll be back!
		boolean hasResponse2 = false;
		if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_52");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_61");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_56");

			utils.setScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId", 18);

			npcStartConversation (player, npc, "restuss_imperial_ambush_1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition_playerImperial (player, npc))
	{
		doAnimationAction (npc, "salute2");

		doAnimationAction (player, "salute2");

		//-- NPC: I'm still awaiting new orders, soldier. Come back later and I will have your mission plan ready.
		string_id message = new string_id (c_stringFile, "s_53");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (restuss_imperial_ambush_1_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "dismiss");

		//-- NPC: Move along, citizen. This is no place for a civilian!
		string_id message = new string_id (c_stringFile, "s_60");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "restuss_imperial_ambush_1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

	if (branchId == 6 && restuss_imperial_ambush_1_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && restuss_imperial_ambush_1_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && restuss_imperial_ambush_1_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && restuss_imperial_ambush_1_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.restuss_imperial_ambush_1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

