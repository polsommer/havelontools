// ======================================================================
//
// community_tcg_photo_contest_painting_handout.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.collection;
include library.conversation;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/community_tcg_photo_contest_painting_handout";

// ======================================================================
// Script Conditions
// ======================================================================

boolean community_tcg_photo_contest_painting_handout_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting02 (obj_id player, obj_id npc)
{
	if( hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_02") )
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting01 (obj_id player, obj_id npc)
{
	if( hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_01") )
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_canReceivePaintings (obj_id player, obj_id npc)
{
	if ( isFreeTrialAccount(player) )
	{
		return false;
	}
	
	int myAge = getCurrentBirthDate() - getPlayerBirthDate(player);
	if( hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker") || myAge  < 10 )
	{
		return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_hasNone (obj_id player, obj_id npc)
{
	if( hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_01") || 
	hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_02") ||
	hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_03") )
	{
		return false;
	}
	return true;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_not_old_enough (obj_id player, obj_id npc)
{	
	int myAge = getCurrentBirthDate() - getPlayerBirthDate(player);
	//check character age if they are less than 10 days no joy
	if( myAge < 10 )
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_hasReceivedAllPaintings (obj_id player, obj_id npc)
{
	if( hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker") )
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting03 (obj_id player, obj_id npc)
{
	if( hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_03") )
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean community_tcg_photo_contest_painting_handout_condition_isTrialAccountPlayer (obj_id player, obj_id npc)
{
	if ( isFreeTrialAccount(player) )
	{
		return true;
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void community_tcg_photo_contest_painting_handout_action_grantPainting03 (obj_id player, obj_id npc)
{
	if( !isValidId(player) || !isValidId(npc) )
		return;
		
	if( !hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker" ) && 
	!hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_03") )
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Painting03***)
		obj_id painting03 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_03", pInv);
		
		if( isValidId(painting03) || exists(painting03) )	
		{
			if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_03") )
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_03", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_03" + "(" + painting03 + ").");
		}
	}
}

// ----------------------------------------------------------------------

void community_tcg_photo_contest_painting_handout_action_grantPainting02 (obj_id player, obj_id npc)
{
	if( !isValidId(player) || !isValidId(npc) )
		return;
		
	if( !hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker" ) && 
	!hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_02") )
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Painting02***)
		obj_id painting02 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_02", pInv);
		
		if( isValidId(painting02) || exists(painting02) )	
		{
			if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_02") )
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_02", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_02" + "(" + painting02 + ").");
		}
	}	
}

// ----------------------------------------------------------------------

void community_tcg_photo_contest_painting_handout_action_grantAllPaintings (obj_id player, obj_id npc)
{
	if( !isIdValid(player) || !isIdValid(npc) )
		return;
	//Check to see if they have completed the Collection already.
	if( !hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker") )
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);

		if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_01") )
		{
			obj_id painting01 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_01", pInv);
			if( isValidId(painting01) || exists(painting01) )	
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_01", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_01" + "(" + painting01 + ").");
		}
		if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_02") )
		{
			obj_id painting02 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_02", pInv);
			if( isValidId(painting02) || exists(painting02) )	
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_02", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_02" + "(" + painting02 + ").");
		}
		if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_03") )
		{
			obj_id painting03 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_03", pInv);
			if( isValidId(painting03) || exists(painting03) )	
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_03", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_03" + "(" + painting03 + ").");
		}
	}
}

// ----------------------------------------------------------------------

void community_tcg_photo_contest_painting_handout_action_grantPainting01 (obj_id player, obj_id npc)
{
	if( !isValidId(player) || !isValidId(npc) )
		return;
		
	if( !hasCompletedCollection(player, "player_received_tcg_gcw_photo_painting_2010_tracker" ) && 
	!hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_01") )
	{
		//get player inventory
		obj_id pInv = utils.getInventoryContainer(player);
		//create the gift in their inventory (***Painting01***)
		obj_id painting01 = static_item.createNewItemFunction("community_tcg_gcw_photo_contest_painting_2010_01", pInv);
		
		if( isValidId(painting01) || exists(painting01) )	
		{
			if( !hasCompletedCollectionSlot(player, "received_tcg_gcw_photo_painting_2010_01") )
			{
				//increment collection tracker slot
				modifyCollectionSlotValue(player, "received_tcg_gcw_photo_painting_2010_01", 1);
			}
			CustomerServiceLog("Collection: ", "Player " + getFirstName(player) + "(" + player + ") received " + "community_tcg_gcw_photo_contest_painting_2010_01" + "(" + painting01 + ").");
		}
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int community_tcg_photo_contest_painting_handout_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hello there! I am a master in the allocation of beautiful and exquisite art...far superior to anything a so called Distribution Specialist might offer. I have some special artwork now available for a limited time.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you have?
	if (response == "s_7")
	{
		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have been asked...and by asked, I mean well-paid...to make certain that three wonderful works of art become known to each and every household in the galaxy. For a limited time, I can offer you any or all of these paintings completely free of charge.
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow! Yes, I'll take a free painting.
			boolean hasResponse0 = false;
			if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Paintings? Art? Blech! No thanks.
			boolean hasResponse1 = false;
			if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				utils.setScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested.
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will only be here for a limited time.  Should you change your mind, come back and see me.
			string_id message = new string_id (c_stringFile, "s_36");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int community_tcg_photo_contest_painting_handout_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have been asked...and by asked, I mean well-paid...to make certain that three wonderful works of art become known to each and every household in the galaxy. For a limited time, I can offer you any or all of these paintings completely free of charge.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow! Yes, I'll take a free painting.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_right");

			//-- NPC: Excellent. Which paintings would you like?
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll take 'Padawan Training'.
			boolean hasResponse0 = false;
			if (!community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I like 'Imperial Agent'.
			boolean hasResponse1 = false;
			if (!community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: My favorite is 'Intense Performer'.
			boolean hasResponse2 = false;
			if (!community_tcg_photo_contest_painting_handout_condition_hasReceivedPainting03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'd like to get all three paintings.
			boolean hasResponse3 = false;
			if (community_tcg_photo_contest_painting_handout_condition_hasNone (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_25");

				utils.setScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Paintings? Art? Blech! No thanks.
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will only be here for a limited time.  Should you change your mind, come back and see me. And you really should change your mind...
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int community_tcg_photo_contest_painting_handout_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent. Which paintings would you like?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll take 'Padawan Training'.
	if (response == "s_15")
	{
		community_tcg_photo_contest_painting_handout_action_grantPainting01 (player, npc);

		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Such drama and tension in this painting. Well chosen.
			string_id message = new string_id (c_stringFile, "s_17");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I like 'Imperial Agent'.
	if (response == "s_19")
	{
		community_tcg_photo_contest_painting_handout_action_grantPainting02 (player, npc);

		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Kneeling in victory over a fallen foe. Stylish and would probably match your sofa. Enjoy!
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: My favorite is 'Intense Performer'.
	if (response == "s_37")
	{
		community_tcg_photo_contest_painting_handout_action_grantPainting03 (player, npc);

		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Passion and intensity flow through this painting. My favorite as well.
			string_id message = new string_id (c_stringFile, "s_38");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to get all three paintings.
	if (response == "s_25")
	{
		community_tcg_photo_contest_painting_handout_action_grantAllPaintings (player, npc);

		//-- [NOTE] 
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Here you go...all three paintings are yours.  Enjoy them and remember: Engineers are better than Specialists!
			string_id message = new string_id (c_stringFile, "s_27");
			utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

string_id SID_NOT_OLD_ENOUGH = new string_id("collection", "not_old_enough");

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.community_tcg_photo_contest_painting_handout");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.community_tcg_photo_contest_painting_handout");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (community_tcg_photo_contest_painting_handout_condition_hasReceivedAllPaintings (player, npc))
	{
		//-- NPC: Hey there!  I hope you're enjoying the new paintings. Remember Matilda for all your most important painting needs!
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_tcg_photo_contest_painting_handout_condition_canReceivePaintings (player, npc))
	{
		//-- NPC: Hello there! I am a master in the allocation of beautiful and exquisite art...far superior to anything a so called Distribution Specialist might offer. I have some special artwork now available for a limited time.
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you have?
		boolean hasResponse0 = false;
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not interested.
		boolean hasResponse1 = false;
		if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			utils.setScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId", 2);

			npcStartConversation (player, npc, "community_tcg_photo_contest_painting_handout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_tcg_photo_contest_painting_handout_condition_isTrialAccountPlayer (player, npc))
	{
		//-- NPC: Not sure if you're going to stick around, eh? Well, if you decide to stay for good, come back and I'll have some paintings for you.
		string_id message = new string_id (c_stringFile, "s_41");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_tcg_photo_contest_painting_handout_condition_not_old_enough (player, npc))
	{
		//-- NPC: It looks like you're new to the area.  If you come back after you've been around for 10 days or more, I'll have a few gifts for you.
		string_id message = new string_id (c_stringFile, "s_42");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (community_tcg_photo_contest_painting_handout_condition__defaultCondition (player, npc))
	{
		//-- NPC: Paintings are my life. Really...it's true. Well, not just painting...all types of artwork. Oh, and I like puppies too.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "community_tcg_photo_contest_painting_handout")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

	if (branchId == 2 && community_tcg_photo_contest_painting_handout_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && community_tcg_photo_contest_painting_handout_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && community_tcg_photo_contest_painting_handout_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.community_tcg_photo_contest_painting_handout.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

