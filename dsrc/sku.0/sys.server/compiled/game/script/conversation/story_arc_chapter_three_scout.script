// ======================================================================
//
// story_arc_chapter_three_scout.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.instance;
include library.space_dungeon;
include library.space_dungeon_data;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/story_arc_chapter_three_scout";

// ======================================================================
// Script Conditions
// ======================================================================

boolean story_arc_chapter_three_scout_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean story_arc_chapter_three_scout_condition_readyToEnterOne (obj_id player, obj_id npc)
{
	if (instance.isFlaggedForInstance(player, "mustafar_droid_army"))
		return true;
		
	if (groundquests.isTaskActive(player, "som_story_arc_chapter_three_01", "mustafar_droidarmy_battle"))
	{
		instance.flagPlayerForInstance(player, "mustafar_droid_army");
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean story_arc_chapter_three_scout_condition_readyToEnterAgain (obj_id player, obj_id npc)
{
	if (instance.isFlaggedForInstance(player, "mustafar_droid_army"))
		return true;
		
	if (groundquests.hasCompletedTask(player, "som_story_arc_chapter_three_01", "mustafar_droidarmy_battle") || 
		groundquests.hasCompletedQuest(player, "som_story_arc_chapter_three_01"))
		{
			instance.flagPlayerForInstance(player, "mustafar_droid_army");
			return true;
		}

	return false;
}

// ----------------------------------------------------------------------

boolean story_arc_chapter_three_scout_condition_godModeWalkAround (obj_id player, obj_id npc)
{
	return isGod(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void story_arc_chapter_three_scout_action_sendGroupToBattlefield (obj_id player, obj_id npc)
{
	instance.requestInstanceMovement(player, "mustafar_droid_army");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int story_arc_chapter_three_scout_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You want to head back in?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_9")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nervous");

			story_arc_chapter_three_scout_action_sendGroupToBattlefield (player, npc);

			//-- NPC: You are braver than I would have thought. Alright, let's go. And remember: keep them from destroying that generator.
			string_id message = new string_id (c_stringFile, "s_11");
			utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nope.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yeah, it is a battleground in there.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int story_arc_chapter_three_scout_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The droids are massing up ahead. They look like they are getting ready to make a strike at the facility, but they are being held up in the pass. A few of the boys got some weapons and are doing their best to slow their advance. We even managed to install a shield generator. I would bet everything that the droids are going to strike there first.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: So what do you need me to do?
	if (response == "s_17")
	{
		//-- [NOTE] 
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Get in there and help our boys guard that shield generator. If that goes down, there isn't a whole lot that stands between the droids and us.
			string_id message = new string_id (c_stringFile, "s_19");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ok, I am ready to face them down.
			boolean hasResponse0 = false;
			if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Maybe I should go get some help?
			boolean hasResponse1 = false;
			if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_23");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int story_arc_chapter_three_scout_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Get in there and help our boys guard that shield generator. If that goes down, there isn't a whole lot that stands between the droids and us.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ok, I am ready to face them down.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			story_arc_chapter_three_scout_action_sendGroupToBattlefield (player, npc);

			//-- NPC: Good. Those droids mean business, so watch your back and keep that shield generator safe. Let's move.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Maybe I should go get some help?
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Yeah, why don't you do that. But remember, our boys cannot slow them down for very much longer.
			string_id message = new string_id (c_stringFile, "s_32");
			utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.story_arc_chapter_three_scout");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition( self, CONDITION_INTERESTING );
	setName (self, "Scout Olon Lono");

	if (!hasObjVar(self, "space_dungeon.ticket.point"))
		setObjVar(self, "space_dungeon.ticket.point", "mustafar");
	if (!hasObjVar(self, "space_dungeon.ticket.dungeon"))
		setObjVar(self, "space_dungeon.ticket.dungeon", "droid_battlefield");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setCondition( self, CONDITION_INTERESTING );
	setName (self, "Scout Olon Lono");

	if (!hasObjVar(self, "space_dungeon.ticket.point"))
		setObjVar(self, "space_dungeon.ticket.point", "mustafar");
	if (!hasObjVar(self, "space_dungeon.ticket.dungeon"))
		setObjVar(self, "space_dungeon.ticket.dungeon", "droid_battlefield");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.story_arc_chapter_three_scout");

	return SCRIPT_CONTINUE;
}

trigger OnClusterWideDataResponse(string manage_name, string dungeon_type, int request_id, string[] element_name_list, dictionary[] dungeon_data, int lock_key)
{
	// This trigger is fired whenever a request for space dungeon travel has been made.
	LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse");

	// Get the player that initiated this trigger.
	obj_id player = space_dungeon.getDungeonTraveler(self, request_id);
	if (!isIdValid(player) || !player.isAuthoritative())
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- player is invalid or not authoritative.");
		releaseClusterWideDataLock("dungeon", lock_key);

		if (isIdValid(player))
			space_dungeon.cleanupPlayerTicketObjvars(player);

		return SCRIPT_CONTINUE;
	}

	obj_id ticket = null;

	if (hasObjVar(player, space_dungeon.VAR_TICKET_USED))
		ticket = getObjIdObjVar(player, space_dungeon.VAR_TICKET_USED);
	else
	{
		//-- player can be used as the ticket, and carries all the necessary ticket information as objvars
		ticket = player;
	}

	// Make sure the player ticket is still valid
	if (!isIdValid(ticket) || !ticket.isAuthoritative())
	{
		sendSystemMessage(player, space_dungeon.SID_ILLEGAL_TICKET);
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}

	if (!manage_name.equals("dungeon"))
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- ignorning manage_name " + manage_name + " because it is not dungeon.");
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}
	if (request_id < 1)
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- invalid request_id value of " + request_id);
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}
	if (dungeon_data == null)
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- dungeon_data is null.");
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}
	if (element_name_list == null)
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- element_name_list is null.");
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}
	if (dungeon_type == null)
	{
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- dungeon_type is null.");
		space_dungeon.cleanupPlayerTicketObjvars(player);
		releaseClusterWideDataLock("dungeon", lock_key);

		return SCRIPT_CONTINUE;
	}

	// The dungeon type is the dungeon name with a wildcard search (ie: dungeon_name*)
	string dungeon_name = dungeon_type.substring(0, dungeon_type.length() - 1);
	//LOG("space_dungeon", "dungeon_name ->" + dungeon_name);

	// Pull the data we need from the dictionary.
	for (int i = 0; i < dungeon_data.length; i++)
	{
		// Check to make certain that the name is in the dungeon datatable.
		if (false == space_dungeon_data.isValidDungeon(dungeon_name))
		{
			LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- dungeon name of " + dungeon_name + " is not in the dungeon datatable.");
			break;
		}
		dictionary dungeon = dungeon_data[i];
		obj_id dungeon_id = dungeon.getObjId("dungeon_id");
		//int participants = dungeon.getInt("participants");
		int session_id = dungeon.getInt("session_id");
		LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- session_id ->" + session_id + " dungeon_instance ->" + element_name_list[i]);
		float[] dungeon_position = {dungeon.getInt("position_x"), dungeon.getInt("position_y"), dungeon.getInt("position_z")};
		if (!isIdValid(dungeon_id))
		{
			LOG("space_dungeon", "travel_space_dungeon.OnClusterWideDataResponse -- bad data found for dungeon entry " + i + ". Ignoring.");
			continue;
		}
		if (session_id < 1)
		{
			// Mark the player with his dungeon session id
			setObjVar(player, space_dungeon.VAR_SESSION_ID, lock_key);

			// Update the cluster data with the session_id.
			dictionary dungeon_update = new dictionary();
			dungeon_update.put("session_id", lock_key);
			updateClusterWideData("dungeon", element_name_list[i], dungeon_update, lock_key);

			// Release the lock on the dungeon data
			releaseClusterWideDataLock("dungeon", lock_key);

			// Send a message to the dungeon to mark it's session id.  After this is acknowledged, the transport starts.
			dictionary d = new dictionary();
			d.put("session_id", lock_key);
			d.put("request_id", request_id);
			d.put("player", player);
			d.put("ticket_collector", self);
			if (hasObjVar(ticket, space_dungeon.VAR_TICKET_QUEST_TYPE))
				d.put("quest_type", getStringObjVar(ticket, space_dungeon.VAR_TICKET_QUEST_TYPE));
			messageTo(dungeon_id, "msgSetSessionId", d, 0.0f, false);

			return SCRIPT_CONTINUE;
		}
	}

	// Release the lock on the dungeon data
	releaseClusterWideDataLock("dungeon", lock_key);

	// Clean up the player's ticket data
	space_dungeon.cleanupPlayerTicketObjvars(player);
	space_dungeon.removeDungeonTraveler(self, request_id);

	// Could not find a dungeon.  Check for a "fictional" reason to deny entry. If that doesn't exist, give the
	// generic response.
	string_id success = space_dungeon_data.getDungeonFailureString(dungeon_name);
	if (success == null)
		sendSystemMessage(player, space_dungeon.SID_UNABLE_TO_FIND_DUNGEON);
	else
		sendSystemMessage(player, success);

	return SCRIPT_CONTINUE;
}


/***** MESSAGEHANDLERS *************************************************/
messageHandler msgStartDungeonTravel()
{
	int session_id = params.getInt("session_id");
	LOG("space_dungeon", "msgStartDungeonTravel -- session_id ->" + session_id);

	obj_id dungeon_id = params.getObjId("dungeon_id");
	if (!isIdValid(dungeon_id))
	{
		LOG("space_dungeon", "player_travel.msgStartDungeonTravel -- dungeon_id is invalid for " + self + ".");
		return SCRIPT_CONTINUE;
	}
	string dungeon_name = params.getString("dungeon_name");
	if (dungeon_id == null)
	{
		LOG("space_dungeon", "player_travel.msgStartDungeonTravel -- dungeon_name is null for " + self + ".");
		return SCRIPT_CONTINUE;
	}
	int request_id = params.getInt("request_id");
	obj_id player = space_dungeon.getDungeonTraveler(self, request_id);
	if (!isIdValid(player))
	{
		LOG("space_dungeon", "player_travel.msgStartDungeonTravel -- player is null for " + self);
		return SCRIPT_CONTINUE;
	}
	space_dungeon.removeDungeonTraveler(self, request_id);
	if (player.isAuthoritative())
	{
		location dungeon_loc = params.getLocation("dungeon_loc");
		if (dungeon_loc == null)
		{
			LOG("space_dungeon", "travel_space_dungeon.msgStartDungeonTravel -- location is null for " + self + ".");
			return SCRIPT_CONTINUE;
		}

		space_dungeon.movePlayerGroupToDungeon(player, dungeon_id, dungeon_name, dungeon_loc);
	}

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (story_arc_chapter_three_scout_condition_readyToEnterAgain (player, npc))
	{
		//-- NPC: You want to head back in?
		string_id message = new string_id (c_stringFile, "s_7");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Nope.
		boolean hasResponse1 = false;
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_21");

			utils.setScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId", 1);

			npcStartConversation (player, npc, "story_arc_chapter_three_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_arc_chapter_three_scout_condition_readyToEnterOne (player, npc))
	{
		doAnimationAction (npc, "explain");

		//-- NPC: The droids are massing up ahead. They look like they are getting ready to make a strike at the facility, but they are being held up in the pass. A few of the boys got some weapons and are doing their best to slow their advance. We even managed to install a shield generator. I would bet everything that the droids are going to strike there first.
		string_id message = new string_id (c_stringFile, "s_15");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: So what do you need me to do?
		boolean hasResponse0 = false;
		if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_17");

			utils.setScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId", 4);

			npcStartConversation (player, npc, "story_arc_chapter_three_scout", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (story_arc_chapter_three_scout_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "shush");

		//-- NPC: Shhhh. I am on a very important mission and can't be disturbed. If you are looking to help out, why don't you go talk to someone back at the facility? We probably could use the hand.
		string_id message = new string_id (c_stringFile, "s_34");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "story_arc_chapter_three_scout")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

	if (branchId == 1 && story_arc_chapter_three_scout_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && story_arc_chapter_three_scout_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && story_arc_chapter_three_scout_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.story_arc_chapter_three_scout.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

