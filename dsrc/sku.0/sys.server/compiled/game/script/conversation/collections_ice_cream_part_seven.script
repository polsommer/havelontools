// ======================================================================
//
// collections_ice_cream_part_seven.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/collections_ice_cream_part_seven";

// ======================================================================
// Script Conditions
// ======================================================================

boolean collections_ice_cream_part_seven_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean collections_ice_cream_part_seven_condition_hasActiveTask (obj_id player, obj_id npc)
{
	if(groundquests.isQuestActive(player, "chapter9_ice_cream"))
	{	
		return groundquests.isTaskActive(player, "chapter9_ice_cream", "meet_lepwalk_chan");
	}	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void collections_ice_cream_part_seven_action_signalNextTask (obj_id player, obj_id npc)
{
	modifyCollectionSlotValue(player, "col_fried_icecream_part_07", 1);
	groundquests.sendSignal(player, "meet_lepwalk_chan"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int collections_ice_cream_part_seven_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I haven't seen anyone out here in a while.  You lost?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No. I am looking for Lepwalk C'han.  Wanted to ask him about reverse engineering this fryer.
	if (response == "s_9")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			//-- NPC: I am Lepwalk Chan and I know a few things about that fryer...but I don't know how much help I will be.
			string_id message = new string_id (c_stringFile, "s_10");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tombl mentioned you might have worked on the Oil Filtration System?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_seven_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am Lepwalk Chan and I know a few things about that fryer...but I don't know how much help I will be.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tombl mentioned you might have worked on the Oil Filtration System?
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh you know Tombl?  Yeah he and I worked on the fryer.  I put in the Oil Filtration System.  It was basically responsible for filtering out food remnants left behind in the frying process. 
			string_id message = new string_id (c_stringFile, "s_14");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Why does the oil need to be filtered?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_seven_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh you know Tombl?  Yeah he and I worked on the fryer.  I put in the Oil Filtration System.  It was basically responsible for filtering out food remnants left behind in the frying process. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why does the oil need to be filtered?
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, you can't really leave the food in the oil or it will eventually burn.  The filter unit in the fryer circulates the oil and catches and destroys food particles so you can use the same oil repeatedly.
			string_id message = new string_id (c_stringFile, "s_18");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ahh...I see.
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_seven_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, you can't really leave the food in the oil or it will eventually burn.  The filter unit in the fryer circulates the oil and catches and destroys food particles so you can use the same oil repeatedly.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ahh...I see.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			//-- NPC: Anything else?
			string_id message = new string_id (c_stringFile, "s_20");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I was about to ask you the same.  Do you know anything else about the fryer?
			boolean hasResponse0 = false;
			if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int collections_ice_cream_part_seven_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Anything else?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I was about to ask you the same.  Do you know anything else about the fryer?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			collections_ice_cream_part_seven_action_signalNextTask (player, npc);

			//-- NPC: Not enough to help you.  You might want to speak to my old factory manager Nore Brrea.  I will give you a datapad location.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.collections_ice_cream_part_seven");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.collections_ice_cream_part_seven");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (collections_ice_cream_part_seven_condition_hasActiveTask (player, npc))
	{
		//-- NPC: I haven't seen anyone out here in a while.  You lost?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No. I am looking for Lepwalk C'han.  Wanted to ask him about reverse engineering this fryer.
		boolean hasResponse0 = false;
		if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_9");

			utils.setScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId", 1);

			npcStartConversation (player, npc, "collections_ice_cream_part_seven", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (collections_ice_cream_part_seven_condition__defaultCondition (player, npc))
	{
		//-- NPC: I haven't seen anyone out here in a while.  You must be lost.
		string_id message = new string_id (c_stringFile, "s_26");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "collections_ice_cream_part_seven")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

	if (branchId == 1 && collections_ice_cream_part_seven_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && collections_ice_cream_part_seven_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && collections_ice_cream_part_seven_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && collections_ice_cream_part_seven_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && collections_ice_cream_part_seven_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.collections_ice_cream_part_seven.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

