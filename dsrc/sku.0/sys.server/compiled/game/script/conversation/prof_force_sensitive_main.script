// ======================================================================
//
// prof_force_sensitive_main.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/prof_force_sensitive_main";

// ======================================================================
// Script Conditions
// ======================================================================

boolean prof_force_sensitive_main_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean prof_force_sensitive_main_condition_playerOnFS11Reward (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_force_sensitive_11", "getreward");
}

// ----------------------------------------------------------------------

boolean prof_force_sensitive_main_condition_playerfinishedFS11Quest (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "prof_force_sensitive_11");
}

// ----------------------------------------------------------------------

boolean prof_force_sensitive_main_condition_playeronFS21 (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive (player, "prof_force_sensitive_21_1");
}

// ----------------------------------------------------------------------

boolean prof_force_sensitive_main_condition_playerOnFS21Reward (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "prof_force_sensitive_21_1", "getreward");
}

// ======================================================================
// Script Actions
// ======================================================================

void prof_force_sensitive_main_action_giveRewardSignal_11 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_force_sensitive_11_reward");
}

// ----------------------------------------------------------------------

void prof_force_sensitive_main_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void prof_force_sensitive_main_action_giveRewardSignal_21 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "prof_force_sensitive_21_3_reward");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int prof_force_sensitive_main_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You look very centered. I take it you found what you were searching for?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes. I found a suitable crystal.
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			prof_force_sensitive_main_action_giveRewardSignal_21 (player, npc);

			//-- NPC: It will be useful to you. Nos'lyn sent this to me for you. It's his first lightsaber. I'd be careful who you wave it in front of, but it should serve you well. 
			string_id message = new string_id (c_stringFile, "s_14");
			utils.removeScriptVar (player, "conversation.prof_force_sensitive_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int prof_force_sensitive_main_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are %TU, are you not?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am. How did you know?
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow");

			prof_force_sensitive_main_action_giveRewardSignal_11 (player, npc);

			//-- NPC: Nos'lyn informed me of your arrival. He said that you are a very promising pupil. I can see what he means.
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.prof_force_sensitive_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course I am! How could you not know me?
	if (response == "s_24")
	{
		doAnimationAction (player, "pose_proudly");

		//-- [NOTE] 
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			prof_force_sensitive_main_action_giveRewardSignal_11 (player, npc);

			//-- NPC: Hmmm. Nos'lyn may be wrong about you. Perhaps there is not greatness so much as pride. Either way, I have something for you.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.prof_force_sensitive_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.prof_force_sensitive_main");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Sol Windtide");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Sol Windtide");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.prof_force_sensitive_main");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (prof_force_sensitive_main_condition_playerOnFS21Reward (player, npc))
	{
		//-- NPC: You look very centered. I take it you found what you were searching for?
		string_id message = new string_id (c_stringFile, "s_12");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes. I found a suitable crystal.
		boolean hasResponse0 = false;
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			utils.setScriptVar (player, "conversation.prof_force_sensitive_main.branchId", 1);

			npcStartConversation (player, npc, "prof_force_sensitive_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_force_sensitive_main_condition_playerOnFS11Reward (player, npc))
	{
		prof_force_sensitive_main_action_facePlayer (player, npc);

		//-- NPC: You are %TU, are you not?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am. How did you know?
		boolean hasResponse0 = false;
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Of course I am! How could you not know me?
		boolean hasResponse1 = false;
		if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.prof_force_sensitive_main.branchId", 3);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "prof_force_sensitive_main", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_force_sensitive_main_condition_playeronFS21 (player, npc))
	{
		//-- NPC: Ah, you are on the next step, already? Very good. I will look forward to speaking with you when you are done.
		string_id message = new string_id (c_stringFile, "s_15");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_force_sensitive_main_condition_playerfinishedFS11Quest (player, npc))
	{
		prof_force_sensitive_main_action_facePlayer (player, npc);

		//-- NPC: Nos'lyn thinks that you are doing well. You will be ready for the next step of your journey soon.
		string_id message = new string_id (c_stringFile, "s_17");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (prof_force_sensitive_main_condition__defaultCondition (player, npc))
	{
		prof_force_sensitive_main_action_facePlayer (player, npc);

		//-- NPC: Hello.  It's a lovely day today, isn't it?
		string_id message = new string_id (c_stringFile, "s_28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "prof_force_sensitive_main")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.prof_force_sensitive_main.branchId");

	if (branchId == 1 && prof_force_sensitive_main_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && prof_force_sensitive_main_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.prof_force_sensitive_main.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

