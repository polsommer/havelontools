// ======================================================================
//
// emp_day_reb_al_contact.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/emp_day_reb_al_contact";

// ======================================================================
// Script Conditions
// ======================================================================

boolean emp_day_reb_al_contact_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_hasTask2or3 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");

	return (questIsTaskActive(questId, task2, player) && !questIsTaskComplete(questId, task3, player) )	||
	(questIsTaskActive(questId, task3, player)	&& !questIsTaskComplete(questId, task2, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_pastMyTasks (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task1 = groundquests.getTaskId(questId, "converseContact");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");
	int task4 = groundquests.getTaskId(questId, "disksToContact");
	
	return questIsQuestComplete(questId, player) ||
	(!questIsTaskActive(questId, task1, player) && 
	!questIsTaskActive(questId, task2, player) && 
	!questIsTaskActive(questId, task3, player) && 
	!questIsTaskActive(questId, task4, player) &&
	questIsQuestActive(questId, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_hasDisks (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");

	return (questIsTaskComplete(questId, task2, player)	|| questIsTaskComplete(questId, task3, player) );
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_hasStartingTask (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	return questIsTaskActive(questId, 0, player);
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_hasTask2 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	return questIsTaskActive(questId, task2, player);
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_hasTask3a (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");
	return questIsTaskActive(questId, task3, player);
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_isNeutral (obj_id player, obj_id npc)
{
	int factionHashCode = pvpGetAlignedFaction(player);

	if (factionHashCode==0)
		return true;

	return false;
}

// ----------------------------------------------------------------------

boolean emp_day_reb_al_contact_condition_isAnImp (obj_id player, obj_id npc)
{
	int factionHashCode = factions.pvpGetAlignedFaction(player);
	string whichFaction = factions.getFactionNameByHashCode(factionHashCode);

	if (whichFaction==null)
		return false;

	if (whichFaction == "Imperial")
		return true;

	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void emp_day_reb_al_contact_action_historianConversed (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "converse_contact");
}

// ----------------------------------------------------------------------

void emp_day_reb_al_contact_action_diskGuy1Wp (obj_id player, obj_id npc)
{
/**********
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(-1006, 10, -3527, "tatooine");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Cantina Contact");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
***********/
}

// ----------------------------------------------------------------------

void emp_day_reb_al_contact_action_disksToHistorian (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/emp_day_rebel");
	int task2 = groundquests.getTaskId(questId, "killImperials");
	int task3 = groundquests.getTaskId(questId, "diskGuy1");

	groundquests.sendSignal(player, "disks_to_contact");

	if(questIsTaskActive(questId, task2, player) );
		questCompleteTask(questId, task2, player);

	if(questIsTaskActive(questId, task3, player) );
		questCompleteTask(questId, task3, player);
}

// ----------------------------------------------------------------------

void emp_day_reb_al_contact_action_impTechWp (obj_id player, obj_id npc)
{
/*********
	if(hasObjVar(player, "empire_day.waypoint") )
	{
		obj_id oldWaypoint = getObjIdObjVar(player, "empire_day.waypoint");
		destroyWaypointInDatapad(oldWaypoint, player);
		removeObjVar(player, "empire_day.waypoint");
	}

	location destination = new location(92, 18, -1630, "dathomir");

	obj_id waypoint = createWaypointInDatapad(player, destination);
	setObjVar(player, "empire_day.waypoint", waypoint);
	setWaypointName(waypoint, "Tellulon Verks");
	sendSystemMessage(player, new string_id("event/empire_day", "sys_msg_wp_added") );
**********/
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int emp_day_reb_al_contact_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Have you finished your assignment yet? We need those disks before more innocent civilians are arrested!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am interested in fighting. What do I need to do again?
	if (response == "s_192")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Eliminate as many Imperials as you can until you recover three of the Detainee Disks. Or if you prefer to avoid combat you can courier disks from our agents back to here.
			string_id message = new string_id (c_stringFile, "s_194");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
	if (response == "s_196")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			emp_day_reb_al_contact_action_diskGuy1Wp (player, npc);

			//-- NPC: You'll find your contact in the cantina in Moenia. I've uploaded the information to your datapad.
			string_id message = new string_id (c_stringFile, "s_198");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Empire Day. It makes me ill. We're taking on a number of missions to try to undermine Imperial propaganda. Will you help?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What kind of missions?
	if (response == "s_202")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Empire has issued its stormtroopers lists of beings they are to detain. We want to collect as many of these lists as we can.
			string_id message = new string_id (c_stringFile, "s_204");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Go on.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_206");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Empire has issued its stormtroopers lists of beings they are to detain. We want to collect as many of these lists as we can.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Go on.
	if (response == "s_206")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: By showing locals that their names are on these lists, we can prove the Empire is not out to protect, but to silence those who peacefully speak out for change.
			string_id message = new string_id (c_stringFile, "s_208");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please, continue.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_210");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: By showing locals that their names are on these lists, we can prove the Empire is not out to protect, but to silence those who peacefully speak out for change.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please, continue.
	if (response == "s_210")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We have combat and non-combat missions to fulfill but you can only participate in a combat mission if you are a member of the Rebel Alliance.
			string_id message = new string_id (c_stringFile, "s_212");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm interested in a combat mission.
			boolean hasResponse0 = false;
			if (!emp_day_reb_al_contact_condition_isNeutral (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm interested in a courier mission. 
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_214");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have combat and non-combat missions to fulfill but you can only participate in a combat mission if you are a member of the Rebel Alliance.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a combat mission.
	if (response == "s_214")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Many of the Imperial patrols have been issued a disk of names. By attacking the Imperial personnel we can get the disks and prevent some innocent arrests.
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll do it.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I need a non combat mission instead.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_218");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a courier mission. 
	if (response == "s_226")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need someone to courier disks from our agents in the field and return them here. Can do you do that?
			string_id message = new string_id (c_stringFile, "s_228");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I can. 
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like a more combat oriented assignment.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Many of the Imperial patrols have been issued a disk of names. By attacking the Imperial personnel we can get the disks and prevent some innocent arrests.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll do it.
	if (response == "s_218")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			emp_day_reb_al_contact_action_historianConversed (player, npc);

			//-- NPC: Good. Gather one disk and then return to me. Good luck.
			string_id message = new string_id (c_stringFile, "s_220");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I need a non combat mission instead.
	if (response == "s_222")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: So you want to reconsider? Nothing wrong with that, just let me know what interests you.
			string_id message = new string_id (c_stringFile, "s_224");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm interested in a combat mission.
			boolean hasResponse0 = false;
			if (!emp_day_reb_al_contact_condition_isNeutral (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm interested in a courier mission. 
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_214");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you want to reconsider? Nothing wrong with that, just let me know what interests you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a combat mission.
	if (response == "s_214")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Many of the Imperial patrols have been issued a disk of names. By attacking the Imperial personnel we can get the disks and prevent some innocent arrests.
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll do it.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I need a non combat mission instead.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_218");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a courier mission. 
	if (response == "s_226")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need someone to courier disks from our agents in the field and return them here. Can do you do that?
			string_id message = new string_id (c_stringFile, "s_228");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I can. 
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like a more combat oriented assignment.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We need someone to courier disks from our agents in the field and return them here. Can do you do that?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I can. 
	if (response == "s_230")
	{
		emp_day_reb_al_contact_action_historianConversed (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			emp_day_reb_al_contact_action_diskGuy1Wp (player, npc);

			//-- NPC: Excellent! You'll find the contact in the Cantina at Moenia.
			string_id message = new string_id (c_stringFile, "s_232");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like a more combat oriented assignment.
	if (response == "s_234")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: So you want to reconsider? Nothing wrong with that, just let me know what interests you.
			string_id message = new string_id (c_stringFile, "s_236");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm interested in a combat mission.
			boolean hasResponse0 = false;
			if (!emp_day_reb_al_contact_condition_isNeutral (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm interested in a courier mission. 
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_214");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_226");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So you want to reconsider? Nothing wrong with that, just let me know what interests you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a combat mission.
	if (response == "s_214")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: Many of the Imperial patrols have been issued a disk of names. By attacking the Imperial personnel we can get the disks and prevent some innocent arrests.
			string_id message = new string_id (c_stringFile, "s_216");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll do it.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I need a non combat mission instead.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_218");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_222");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm interested in a courier mission. 
	if (response == "s_226")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We need someone to courier disks from our agents in the field and return them here. Can do you do that?
			string_id message = new string_id (c_stringFile, "s_228");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes, I can. 
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'd like a more combat oriented assignment.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_230");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_234");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You have the disks? Excellent. These will definitely help us show the galaxy that the Empire is not out to protect anyone but themselves. Empire Day, indeed!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What should I do now?
	if (response == "s_270")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: We want to tell the public about these Detainee Disks. We have a spy inside the Empire who can transmit the lists along with our message to many sectors. We need to get our data to him immediately.
			string_id message = new string_id (c_stringFile, "s_274");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd like to help.
			boolean hasResponse0 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I've had enough intrigue for now.
			boolean hasResponse1 = false;
			if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_278");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_286");

				utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 17);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int emp_day_reb_al_contact_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We want to tell the public about these Detainee Disks. We have a spy inside the Empire who can transmit the lists along with our message to many sectors. We need to get our data to him immediately.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd like to help.
	if (response == "s_278")
	{
		emp_day_reb_al_contact_action_disksToHistorian (player, npc);

		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			emp_day_reb_al_contact_action_impTechWp (player, npc);

			//-- NPC: Excellent. Deliver this coded disk to the Imperial Technician at the Imperial Fortress on Yavin 4. Don't worry, it's remote and not heavily gaurded right now. Keep a low profile it you'll be fine. Simple as that.
			string_id message = new string_id (c_stringFile, "s_282");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I've had enough intrigue for now.
	if (response == "s_286")
	{
		//-- [NOTE] 
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			//-- NPC: I understand. Come find me if you change your mind.
			string_id message = new string_id (c_stringFile, "s_290");
			utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.emp_day_reb_al_contact");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.emp_day_reb_al_contact");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition_isAnImp (player, npc))
	{
		//-- NPC: You Imperials are traitors to every sentient being. Get lost.
		string_id message = new string_id (c_stringFile, "s_186");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition_pastMyTasks (player, npc))
	{
		//-- NPC: Good to see you again. We're making good progress showing the truth behind Empire Day. Thanks for your help.
		string_id message = new string_id (c_stringFile, "s_188");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition_hasTask2or3 (player, npc))
	{
		//-- NPC: Have you finished your assignment yet? We need those disks before more innocent civilians are arrested!
		string_id message = new string_id (c_stringFile, "s_190");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am interested in fighting. What do I need to do again?
		boolean hasResponse0 = false;
		if (emp_day_reb_al_contact_condition_hasTask2 (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I'm not interested in fighting. Where do I need to go again?
		boolean hasResponse1 = false;
		if (emp_day_reb_al_contact_condition_hasTask3a (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_192");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_196");

			utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 3);

			npcStartConversation (player, npc, "emp_day_reb_al_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition_hasStartingTask (player, npc))
	{
		//-- NPC: Empire Day. It makes me ill. We're taking on a number of missions to try to undermine Imperial propaganda. Will you help?
		string_id message = new string_id (c_stringFile, "s_200");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What kind of missions?
		boolean hasResponse0 = false;
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_202");

			utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 6);

			npcStartConversation (player, npc, "emp_day_reb_al_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition_hasDisks (player, npc))
	{
		//-- NPC: You have the disks? Excellent. These will definitely help us show the galaxy that the Empire is not out to protect anyone but themselves. Empire Day, indeed!
		string_id message = new string_id (c_stringFile, "s_260");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What should I do now?
		boolean hasResponse0 = false;
		if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_270");

			utils.setScriptVar (player, "conversation.emp_day_reb_al_contact.branchId", 16);

			npcStartConversation (player, npc, "emp_day_reb_al_contact", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (emp_day_reb_al_contact_condition__defaultCondition (player, npc))
	{
		//-- NPC: I only talk to those with references. Speak to the bartender in Anchorhead.
		string_id message = new string_id (c_stringFile, "s_294");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "emp_day_reb_al_contact")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

	if (branchId == 3 && emp_day_reb_al_contact_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && emp_day_reb_al_contact_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && emp_day_reb_al_contact_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && emp_day_reb_al_contact_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && emp_day_reb_al_contact_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && emp_day_reb_al_contact_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && emp_day_reb_al_contact_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && emp_day_reb_al_contact_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && emp_day_reb_al_contact_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && emp_day_reb_al_contact_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && emp_day_reb_al_contact_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.emp_day_reb_al_contact.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

