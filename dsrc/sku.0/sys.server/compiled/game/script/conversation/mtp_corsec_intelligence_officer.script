// ======================================================================
//
// mtp_corsec_intelligence_officer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_corsec_intelligence_officer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_corsec_intelligence_officer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ======================================================================
// Script Actions
// ======================================================================

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_corsec_intelligence_officer_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you for meeting with me such short notice. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What can I do for you?
	if (response == "s_4")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: My sources say that you have had intimate dealings with the notorious Meatlump Gang.  Since you are obviously someone that possesses, uh, the skills needed, I was hoping to enlist your assistence.
			string_id message = new string_id (c_stringFile, "s_5");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Can't the CorSec handle their own dirty work?
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_6");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: My sources say that you have had intimate dealings with the notorious Meatlump Gang.  Since you are obviously someone that possesses, uh, the skills needed, I was hoping to enlist your assistence.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can't the CorSec handle their own dirty work?
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well. Let's just say this type of help doesn't fall under the authority of the CorSec and as a result the pay is unusually higher than any mundane police work.
			string_id message = new string_id (c_stringFile, "s_7");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm listening.
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_8");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well. Let's just say this type of help doesn't fall under the authority of the CorSec and as a result the pay is unusually higher than any mundane police work.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm listening.
	if (response == "s_8")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: And of course, if anything were to happen the CorSec would disavow any knowledge of you and deny any connection.
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You said pay was unusually high?
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And of course, if anything were to happen the CorSec would disavow any knowledge of you and deny any connection.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You said pay was unusually high?
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes...I did.  I also mentioned the Meatlumps. If you decide to take the missions, you would no doubt come head to head with more of these thugs.
			string_id message = new string_id (c_stringFile, "s_11");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Pffft!  I feel sorry for them already.
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_12");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes...I did.  I also mentioned the Meatlumps. If you decide to take the missions, you would no doubt come head to head with more of these thugs.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Pffft!  I feel sorry for them already.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.  Your missions are easy enough.  Find the Meatlump Forward Outposts found on different planets throughout the galaxy, sabotage their supplies and gather intelligence.
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Forward Outposts? On other planets other than Corellia?
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Very well.  Your missions are easy enough.  Find the Meatlump Forward Outposts found on different planets throughout the galaxy, sabotage their supplies and gather intelligence.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Forward Outposts? On other planets other than Corellia?
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: I have reason to believe there are 10 outposts. Some are here on Corellia, others on other planets. They are basically camps not far from towns and cities used to launch attacks, resupply and recruit.  Interested?
			string_id message = new string_id (c_stringFile, "s_15");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Doesn't sound too difficult.
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_16");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have reason to believe there are 10 outposts. Some are here on Corellia, others on other planets. They are basically camps not far from towns and cities used to launch attacks, resupply and recruit.  Interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Doesn't sound too difficult.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Search Meatlump Safes
			string_id message = new string_id (c_stringFile, "s_17");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Search Meatlump Locked Containers
			string_id message = new string_id (c_stringFile, "s_19");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Gather Meatlump Target Map Information
			string_id message = new string_id (c_stringFile, "s_20");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Destroy Meatlump Weapons Cache
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Destroy Meatlump Food Supplies
			string_id message = new string_id (c_stringFile, "s_22");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is one other mission, but it is someone...uh, more difficult.
			string_id message = new string_id (c_stringFile, "s_23");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What is it?
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_24");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There is one other mission, but it is someone...uh, more difficult.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is it?
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Disarming Meatlump bombs before they explode.
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Huh?  You mean, find their bombs and defuse them before they explode...after the Meatlumps have set their timers?
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Disarming Meatlump bombs before they explode.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Huh?  You mean, find their bombs and defuse them before they explode...after the Meatlumps have set their timers?
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Yes actually. That is exactly what I mean.
			string_id message = new string_id (c_stringFile, "s_27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Lady...I'm your type of crazy.  Sign me up.
			boolean hasResponse0 = false;
			if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_28");

				utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_corsec_intelligence_officer_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes actually. That is exactly what I mean.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Lady...I'm your type of crazy.  Sign me up.
	if (response == "s_28")
	{
		//-- [NOTE] 
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			//-- NPC: Defuse Meatlump Bombs
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_corsec_intelligence_officer");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_corsec_intelligence_officer");

	return SCRIPT_CONTINUE;
}


// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
	{
		//-- NPC: Thank you for meeting with me such short notice. 
		string_id message = new string_id (c_stringFile, "s_3");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What can I do for you?
		boolean hasResponse0 = false;
		if (mtp_corsec_intelligence_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4");

			utils.setScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId", 1);

			npcStartConversation (player, npc, "mtp_corsec_intelligence_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_corsec_intelligence_officer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

	if (branchId == 1 && mtp_corsec_intelligence_officer_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && mtp_corsec_intelligence_officer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && mtp_corsec_intelligence_officer_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && mtp_corsec_intelligence_officer_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && mtp_corsec_intelligence_officer_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && mtp_corsec_intelligence_officer_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && mtp_corsec_intelligence_officer_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && mtp_corsec_intelligence_officer_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && mtp_corsec_intelligence_officer_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && mtp_corsec_intelligence_officer_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_corsec_intelligence_officer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

