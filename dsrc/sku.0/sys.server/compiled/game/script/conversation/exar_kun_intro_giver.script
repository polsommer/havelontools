// ======================================================================
//
// exar_kun_intro_giver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.instance;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/exar_kun_intro_giver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean exar_kun_intro_giver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean exar_kun_intro_giver_condition_exar_kun_02_active (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "exar_kun_intro_01") &&
	groundquests.isQuestActiveOrComplete(player, "exar_kun_intro_02");
}

// ----------------------------------------------------------------------

boolean exar_kun_intro_giver_condition_exar_kun_02_05_active (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "exar_kun_intro_02", "exar_kun_intro_02_05") || 
	groundquests.hasCompletedQuest(player, "exar_kun_intro_02");
}

// ----------------------------------------------------------------------

boolean exar_kun_intro_giver_condition_exar_kun_01_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActiveOrComplete(player, "exar_kun_intro_01");
}

// ======================================================================
// Script Actions
// ======================================================================

void exar_kun_intro_giver_action_exar_kun_01_grant (obj_id player, obj_id npc)
{
	groundquests.requestGrantQuest(player, "exar_kun_intro_01");
}

// ----------------------------------------------------------------------

void exar_kun_intro_giver_action_exar_kun_02_05_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "exar_kun_intro_02_05");
	
	if ( !instance.isFlaggedForInstance(player, "heroic_exar_kun") )
	{
		instance.flagPlayerForInstance(player, "heroic_exar_kun");
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int exar_kun_intro_giver_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, my friend. I...uh...was wondering if I could speak with you for a moment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, of course.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Thank you. I speak on behalf of Professor Cornelius Wagglehorn of the University of Corellia. He seeks the assistance of an adventurer such as yourself to aid him. Would you be willing to lend such aid?
			string_id message = new string_id (c_stringFile, "s_13");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I suppose I could help.
			boolean hasResponse0 = false;
			if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No, I do not wish to help you or your Professor Wagglehorn.
			boolean hasResponse1 = false;
			if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_15");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				utils.setScriptVar (player, "conversation.exar_kun_intro_giver.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, very well. Good day to you then.
			string_id message = new string_id (c_stringFile, "s_26");
			utils.removeScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int exar_kun_intro_giver_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Thank you. I speak on behalf of Professor Cornelius Wagglehorn of the University of Corellia. He seeks the assistance of an adventurer such as yourself to aid him. Would you be willing to lend such aid?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I suppose I could help.
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			exar_kun_intro_giver_action_exar_kun_01_grant (player, npc);

			//-- NPC: Most excellent. Please travel to Tyrena on Corellia and speak with Professor Wagglehorn. You'll most likely find him enjoying the view out over the water. Thank you.
			string_id message = new string_id (c_stringFile, "s_17");
			utils.removeScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I do not wish to help you or your Professor Wagglehorn.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I understand. Thank you for your time nonetheless.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.exar_kun_intro_giver");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.exar_kun_intro_giver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (exar_kun_intro_giver_condition_exar_kun_02_05_active (player, npc))
	{
		exar_kun_intro_giver_action_exar_kun_02_05_signal (player, npc);

		//-- NPC: I've made the necessary arrangements. The medallion should allow you to enter the temple and the Aurilia shuttle can take you to Yavin IV whenever you need. Good luck confronting the spirit of Exar Kun!
		string_id message = new string_id (c_stringFile, "s_5");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (exar_kun_intro_giver_condition_exar_kun_02_active (player, npc))
	{
		//-- NPC: Oh, you're here. Professor Wagglehorn had informed me that you were heading to Yavin IV to investigate the archeological dig site there.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (exar_kun_intro_giver_condition_exar_kun_01_active (player, npc))
	{
		//-- NPC: Thank you for agreeing to help Professor Wagglehorn.
		string_id message = new string_id (c_stringFile, "s_25");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
	{
		//-- NPC: Greetings, my friend. I...uh...was wondering if I could speak with you for a moment?
		string_id message = new string_id (c_stringFile, "s_9");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, of course.
		boolean hasResponse0 = false;
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No.
		boolean hasResponse1 = false;
		if (exar_kun_intro_giver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_11");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.exar_kun_intro_giver.branchId", 4);

			npcStartConversation (player, npc, "exar_kun_intro_giver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "exar_kun_intro_giver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

	if (branchId == 4 && exar_kun_intro_giver_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && exar_kun_intro_giver_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.exar_kun_intro_giver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

