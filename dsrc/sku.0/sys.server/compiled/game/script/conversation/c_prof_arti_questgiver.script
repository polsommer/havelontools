// ======================================================================
//
// c_prof_arti_questgiver.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_prof_arti_questgiver";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_prof_arti_questgiver_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	
	return questIsQuestActive(questId1, player)||questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedQuest (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	
	return questIsQuestComplete(questId1, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedSolar (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int solartool = groundquests.getTaskId(questId1, "solartool"); 
	
	return questIsTaskComplete(questId1, solartool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedGas (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int gastool = groundquests.getTaskId(questId1, "gastool"); 
	
	return questIsTaskComplete(questId1, gastool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedChem (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int chemicaltool = groundquests.getTaskId(questId1, "chemicaltool"); 
	
	return questIsTaskComplete(questId1, chemicaltool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedMineral (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int mineraltool = groundquests.getTaskId(questId1, "mineraltool"); 
	
	return questIsTaskComplete(questId1, mineraltool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedWater (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int watertool = groundquests.getTaskId(questId1, "watertool"); 
	
	return questIsTaskComplete(questId1, watertool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedFlora (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int floratool = groundquests.getTaskId(questId1, "floratool"); 
	
	return questIsTaskComplete(questId1, floratool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedWind (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int windtool = groundquests.getTaskId(questId1, "windtool"); 
	
	return questIsTaskComplete(questId1, windtool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerCompletedAll (obj_id player, obj_id npc)
{
	int questId1 = questGetQuestId("quest/c_prof_arti");
	int chemicaltool = groundquests.getTaskId(questId1, "chemicaltool"); 
	int windtool = groundquests.getTaskId(questId1, "windtool"); 
	int mineraltool = groundquests.getTaskId(questId1, "mineraltool"); 	
	int watertool = groundquests.getTaskId(questId1, "watertool"); 	
	int solartool = groundquests.getTaskId(questId1, "solartool"); 	
	int gastool = groundquests.getTaskId(questId1, "gastool"); 
	int floratool = groundquests.getTaskId(questId1, "floratool"); 	
		
	return 	questIsTaskComplete(questId1, chemicaltool, player)&&
			questIsTaskComplete(questId1, windtool, player)&&
			questIsTaskComplete(questId1, mineraltool, player)&&
			questIsTaskComplete(questId1, watertool, player)&&
			questIsTaskComplete(questId1, solartool, player)&&
			questIsTaskComplete(questId1, gastool, player)&&
			questIsTaskComplete(questId1, floratool, player);
}

// ----------------------------------------------------------------------

boolean c_prof_arti_questgiver_condition_playerhasArtisan (obj_id player, obj_id npc)
{
	if (utils.isProfession(player, utils.TRADER))
		return true;
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_prof_arti_questgiver_action_faceplayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_prof_arti_questgiver_action_giveQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_prof_arti");
	
	groundquests.grantQuest(questId, player, npc, true);
}

// ----------------------------------------------------------------------

void c_prof_arti_questgiver_action_completeQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "c_prof_arti_finished");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_prof_arti_questgiver_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey there.  You any good with tools?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can hold my own.
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.  I have a client that needs some things made.  Think you can handle it?  
			string_id message = new string_id (c_stringFile, "s_137");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'd love to.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thank you.  I don't make things for people that I don't know.
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_138");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_139");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nope.  Don't know which is the working end of a laser cutter.
	if (response == "s_135")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah.  Well, if you ever learn, come back to me.  I may have some work for you.
			string_id message = new string_id (c_stringFile, "s_136");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good.  I have a client that needs some things made.  Think you can handle it?  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'd love to.
	if (response == "s_138")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good.  I have a business proposition for you.  I don't need anything specific right now, but I'm looking for people to make things for me in the future.  Are you interested?
			string_id message = new string_id (c_stringFile, "s_141");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That depends on the conditions, of course.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Yes.  What do I need to do?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_142");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_143");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.  I don't make things for people that I don't know.
	if (response == "s_139")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I see.  Shrewd business plan there.  If you change you mind, let me know.
			string_id message = new string_id (c_stringFile, "s_140");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good.  I have a business proposition for you.  I don't need anything specific right now, but I'm looking for people to make things for me in the future.  Are you interested?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That depends on the conditions, of course.
	if (response == "s_142")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Of course.  I want to see that you are properly equipped and will pay you to make survey devices.  In the future, you will come to me when you have some spare time to make things for my employer.  He's always interested in people willing to do good work for him.
			string_id message = new string_id (c_stringFile, "s_144");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Who is your employer?
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_145");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  What do I need to do?
	if (response == "s_143")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Excellent.  I want you to make a full set of survey tools.  I'll put the list in your journal. That list will also tell you how many resources you need.  It will be worth 2000 credits to you.  Is this acceptable?
			string_id message = new string_id (c_stringFile, "s_150");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It is.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Of course.  I want to see that you are properly equipped and will pay you to make survey devices.  In the future, you will come to me when you have some spare time to make things for my employer.  He's always interested in people willing to do good work for him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Who is your employer?
	if (response == "s_145")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: That isn't especially important right now.  You will work for me.  That's all that you need to know.
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Credits are credits.  I will do as you wish. 
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm sorry, but I can't work for someone that I don't know. 
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_147");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_148");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That isn't especially important right now.  You will work for me.  That's all that you need to know.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Credits are credits.  I will do as you wish. 
	if (response == "s_147")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			//-- NPC: Excellent.  I want you to make a full set of survey tools.  I'll put the list in your journal. That list will also tell you how many resources you need.  It will be worth 2000 credits to you.  Is this acceptable?
			string_id message = new string_id (c_stringFile, "s_150");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: It is.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No.
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_151");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_153");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm sorry, but I can't work for someone that I don't know. 
	if (response == "s_148")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I see.  Shrewd business plan there.  If you change you mind, let me know.
			string_id message = new string_id (c_stringFile, "s_140");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent.  I want you to make a full set of survey tools.  I'll put the list in your journal. That list will also tell you how many resources you need.  It will be worth 2000 credits to you.  Is this acceptable?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It is.
	if (response == "s_151")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "goodbye");

			c_prof_arti_questgiver_action_giveQuest (player, npc);

			//-- NPC: Get to work then!  I'll wait here for your return.
			string_id message = new string_id (c_stringFile, "s_152");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No.
	if (response == "s_153")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: I doubt that anyone else will pay you to make things that you can keep.  Smart move there, Sparky.
			string_id message = new string_id (c_stringFile, "s_154");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have a full set of tools now.
	if (response == "s_156")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Great.  I'd recommend doing some crafting on your own.  You should be able to get any resource you need from those tools.  
			string_id message = new string_id (c_stringFile, "s_159");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Now that I have completed your job, can you tell me who you work for?
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_160");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have some questions about crafting.
	if (response == "s_157")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: I know quite a bit.  What do you want to know?
			string_id message = new string_id (c_stringFile, "s_170");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not done yet.
	if (response == "s_158")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Which devices do you have left?
			string_id message = new string_id (c_stringFile, "s_177");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I haven't finished the Water Survey Device.
			boolean hasResponse0 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedWater (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I haven't finished the Gas Pocket Survey Tool.
			boolean hasResponse1 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedGas (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I haven't finished the Flora Survey Tool.
			boolean hasResponse2 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedFlora (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I haven't finished the Chemical Survey Device.
			boolean hasResponse3 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedChem (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: I haven't finished the Ambient Solar Energy Surveying Tool.
			boolean hasResponse4 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedSolar (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			//-- PLAYER: I haven't finished the Wind Current Surveying Device.
			boolean hasResponse5 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedWater (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse5 = true;
			}

			//-- PLAYER: I haven't finished the Mineral Survey Device.
			boolean hasResponse6 = false;
			if (!c_prof_arti_questgiver_condition_playerCompletedMineral (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse6 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_178");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_179");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_180");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_181");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_182");

				if (hasResponse5)
					responses [responseIndex++] = new string_id (c_stringFile, "s_183");

				if (hasResponse6)
					responses [responseIndex++] = new string_id (c_stringFile, "s_184");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Great.  I'd recommend doing some crafting on your own.  You should be able to get any resource you need from those tools.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Now that I have completed your job, can you tell me who you work for?
	if (response == "s_160")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			c_prof_arti_questgiver_action_completeQuest (player, npc);

			//-- NPC: Sure.  It won't hurt for you to know.  I work for Jabba the Hutt.  He's the major power here, no matter what the unimportant politicians around here say.  He's a good benefactor to have on your side.  And an implacable enemy.  Just ask Mayor Guh'rantt.
			string_id message = new string_id (c_stringFile, "s_161");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll bet!  He's probably working on something big, isn't he?
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Ugh, I never thought I'd be working for a Hutt!
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_162");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_163");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sure.  It won't hurt for you to know.  I work for Jabba the Hutt.  He's the major power here, no matter what the unimportant politicians around here say.  He's a good benefactor to have on your side.  And an implacable enemy.  Just ask Mayor Guh'rantt.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll bet!  He's probably working on something big, isn't he?
	if (response == "s_162")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Boy is he ever!  Mayor Guh'rantt gets to do what Jabba wants or he's going to be overrun with Tuskens.  That is without a doubt.
			string_id message = new string_id (c_stringFile, "s_164");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Interesting.  Well, thanks.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_165");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ugh, I never thought I'd be working for a Hutt!
	if (response == "s_163")
	{
		doAnimationAction (player, "shake_head_disgust");

		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			//-- NPC: You wouldn't believe how often I have heard that.  Still, the money is good.  Speaking of money, here you go.
			string_id message = new string_id (c_stringFile, "s_167");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yeah.  Thanks.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_168");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 16);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Boy is he ever!  Mayor Guh'rantt gets to do what Jabba wants or he's going to be overrun with Tuskens.  That is without a doubt.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Interesting.  Well, thanks.
	if (response == "s_165")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back and see if I have something for you soon.
			string_id message = new string_id (c_stringFile, "s_166");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You wouldn't believe how often I have heard that.  Still, the money is good.  Speaking of money, here you go.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yeah.  Thanks.
	if (response == "s_168")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back and see if I have something for you soon.
			string_id message = new string_id (c_stringFile, "s_169");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I know quite a bit.  What do you want to know?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about experimenting.
	if (response == "s_171")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Experimenting lets you have a chance to increase the effectiveness of an item. You need a specialized tool to experiment on an item and you need to be near a crafting station.  You can find those near the Starport in Mos Eisley.  Just stand near the appropriate station while using your special crafting tool and you will be able to experiment.
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Either the item can't be made with the tool that you are using, or it requires a public or private crafting station.  Your crafting tool will filter out items that you cannot make automatically.  Check your datapad to see what the object that you want to create requires.
			string_id message = new string_id (c_stringFile, "s_174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.  I don't have any questions.
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then get back to working on my request!
			string_id message = new string_id (c_stringFile, "s_176");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Experimenting lets you have a chance to increase the effectiveness of an item. You need a specialized tool to experiment on an item and you need to be near a crafting station.  You can find those near the Starport in Mos Eisley.  Just stand near the appropriate station while using your special crafting tool and you will be able to experiment.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about experimenting.
	if (response == "s_171")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Experimenting lets you have a chance to increase the effectiveness of an item. You need a specialized tool to experiment on an item and you need to be near a crafting station.  You can find those near the Starport in Mos Eisley.  Just stand near the appropriate station while using your special crafting tool and you will be able to experiment.
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Either the item can't be made with the tool that you are using, or it requires a public or private crafting station.  Your crafting tool will filter out items that you cannot make automatically.  Check your datapad to see what the object that you want to create requires.
			string_id message = new string_id (c_stringFile, "s_174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.  I don't have any questions.
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then get back to working on my request!
			string_id message = new string_id (c_stringFile, "s_176");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Either the item can't be made with the tool that you are using, or it requires a public or private crafting station.  Your crafting tool will filter out items that you cannot make automatically.  Check your datapad to see what the object that you want to create requires.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about experimenting.
	if (response == "s_171")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Experimenting lets you have a chance to increase the effectiveness of an item. You need a specialized tool to experiment on an item and you need to be near a crafting station.  You can find those near the Starport in Mos Eisley.  Just stand near the appropriate station while using your special crafting tool and you will be able to experiment.
			string_id message = new string_id (c_stringFile, "s_172");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
	if (response == "s_173")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Either the item can't be made with the tool that you are using, or it requires a public or private crafting station.  Your crafting tool will filter out items that you cannot make automatically.  Check your datapad to see what the object that you want to create requires.
			string_id message = new string_id (c_stringFile, "s_174");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about experimenting.
			boolean hasResponse0 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What happens when I can't see an item on my crafting unit, but I have the schematic in my datapad?
			boolean hasResponse1 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Never mind.  I don't have any questions.
			boolean hasResponse2 = false;
			if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_171");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_173");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_175");

				utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Never mind.  I don't have any questions.
	if (response == "s_175")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then get back to working on my request!
			string_id message = new string_id (c_stringFile, "s_176");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_prof_arti_questgiver_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Which devices do you have left?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Water Survey Device.
	if (response == "s_178")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Gas Pocket Survey Tool.
	if (response == "s_179")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Flora Survey Tool.
	if (response == "s_180")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Chemical Survey Device.
	if (response == "s_181")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Ambient Solar Energy Surveying Tool.
	if (response == "s_182")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Wind Current Surveying Device.
	if (response == "s_183")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I haven't finished the Mineral Survey Device.
	if (response == "s_184")
	{
		//-- [NOTE] 
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			//-- NPC: It requires metal and minerals.  If you didn't know this, you can use metal in place of the minerals.
			string_id message = new string_id (c_stringFile, "s_185");
			utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_prof_arti_questgiver");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Alduq Besene");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable (self, true);
	setName (self, "Alduq Besene");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_prof_arti_questgiver");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (!c_prof_arti_questgiver_condition_playerOnQuest (player, npc))
	{
		c_prof_arti_questgiver_action_faceplayer (player, npc);

		//-- NPC: Hey there.  You any good with tools?
		string_id message = new string_id (c_stringFile, "s_133");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I can hold my own.
		boolean hasResponse0 = false;
		if (c_prof_arti_questgiver_condition_playerhasArtisan (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Nope.  Don't know which is the working end of a laser cutter.
		boolean hasResponse1 = false;
		if (!c_prof_arti_questgiver_condition_playerhasArtisan (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_134");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_135");

			utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 1);

			npcStartConversation (player, npc, "c_prof_arti_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_prof_arti_questgiver_condition_playerOnQuest (player, npc))
	{
		c_prof_arti_questgiver_action_faceplayer (player, npc);

		//-- NPC: Yes?
		string_id message = new string_id (c_stringFile, "s_155");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have a full set of tools now.
		boolean hasResponse0 = false;
		if (c_prof_arti_questgiver_condition_playerCompletedAll (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I have some questions about crafting.
		boolean hasResponse1 = false;
		if (c_prof_arti_questgiver_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm not done yet.
		boolean hasResponse2 = false;
		if (!c_prof_arti_questgiver_condition_playerCompletedAll (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_156");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_157");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_158");

			utils.setScriptVar (player, "conversation.c_prof_arti_questgiver.branchId", 11);

			npcStartConversation (player, npc, "c_prof_arti_questgiver", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_prof_arti_questgiver")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

	if (branchId == 1 && c_prof_arti_questgiver_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_prof_arti_questgiver_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_prof_arti_questgiver_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_prof_arti_questgiver_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && c_prof_arti_questgiver_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && c_prof_arti_questgiver_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && c_prof_arti_questgiver_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && c_prof_arti_questgiver_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && c_prof_arti_questgiver_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && c_prof_arti_questgiver_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && c_prof_arti_questgiver_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && c_prof_arti_questgiver_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && c_prof_arti_questgiver_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && c_prof_arti_questgiver_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && c_prof_arti_questgiver_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_prof_arti_questgiver.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

