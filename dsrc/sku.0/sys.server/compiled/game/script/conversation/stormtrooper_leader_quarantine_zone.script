// ======================================================================
//
// stormtrooper_leader_quarantine_zone.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.buff;
include library.chat;
include library.conversation;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/stormtrooper_leader_quarantine_zone";

// ======================================================================
// Script Conditions
// ======================================================================

boolean stormtrooper_leader_quarantine_zone_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean stormtrooper_leader_quarantine_zone_condition_hasQuestTwo (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.isQuestActive(player, "quest/outbreak_quest_02_imperial")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_02_rebel")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_02_neutral")
	);
}

// ----------------------------------------------------------------------

boolean stormtrooper_leader_quarantine_zone_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_imperial")
	|| groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_rebel")
	|| groundquests.hasCompletedQuest(player, "quest/outbreak_quest_01_neutral"));
}

// ----------------------------------------------------------------------

boolean stormtrooper_leader_quarantine_zone_condition_hasQuestOne (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.isQuestActive(player, "quest/outbreak_quest_01_imperial")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_01_neutral")
	|| groundquests.isQuestActive(player, "quest/outbreak_quest_01_rebel")
	);
}

// ----------------------------------------------------------------------

boolean stormtrooper_leader_quarantine_zone_condition_hasFoundContingent (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return (groundquests.hasCompletedQuest(player, "outbreak_quest_02_imeprial")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_02_neutral")
	|| groundquests.hasCompletedQuest(player, "outbreak_quest_02_rebel")	
	);
}

// ======================================================================
// Script Actions
// ======================================================================

void stormtrooper_leader_quarantine_zone_action_moveAlongSound (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	play2dNonLoopingMusic(player, "sound/voice_stormtrooper_move_along.snd");
}

// ----------------------------------------------------------------------

void stormtrooper_leader_quarantine_zone_action_warpPlayerOut (obj_id player, obj_id npc)
{
	removeObjVar(player, "outbreak.usedGate");
	buff.removeBuff(player, "death_troopers_no_vehicle");
	warpPlayer(player, "dathomir", -5777, 510, -6546, null, -5777, 510, -6546, null, true);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int stormtrooper_leader_quarantine_zone_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: So have you found any of us out there?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ever heard of a trooper called HX-138?
	if (response == "s_32")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			//-- NPC: There was this trooper from the Executor that said there was some female Darktrooper designated HX-138. I thought he was just pulling our leg. 
			string_id message = new string_id (c_stringFile, "s_33");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: He wasn't. Please let me in.
			boolean hasResponse0 = false;
			if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_35");

				utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sorry, operational security.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There was this trooper from the Executor that said there was some female Darktrooper designated HX-138. I thought he was just pulling our leg. 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He wasn't. Please let me in.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I thought that was you, %TU, are you ready to leave the quarantine zone?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_24")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah yes, %TU, are you ready to leave the quarantine zone?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.
	if (response == "s_20")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You are not allowed to leave the quarantine zone citizen.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have authorization.
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			//-- NPC: Let me see your authorization code.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Here...
			boolean hasResponse0 = false;
			if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_22");

				utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see your authorization code.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here...
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			//-- NPC: It looks in order. Are you ready to leave now?
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes
			boolean hasResponse0 = false;
			if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: It looks in order. Are you ready to leave now?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int stormtrooper_leader_quarantine_zone_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hey look boys. We found someone who isn't supposed to be in the quarantine zone.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please let me out.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			stormtrooper_leader_quarantine_zone_action_warpPlayerOut (player, npc);

			//-- NPC: Open the gate!
			string_id message = new string_id (c_stringFile, "s_29");
			utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.stormtrooper_leader_quarantine_zone");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.stormtrooper_leader_quarantine_zone");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (stormtrooper_leader_quarantine_zone_condition_hasFoundContingent (player, npc))
	{
		//-- NPC: So have you found any of us out there?
		string_id message = new string_id (c_stringFile, "s_31");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Ever heard of a trooper called HX-138?
		boolean hasResponse0 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Sorry, operational security.
		boolean hasResponse1 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_32");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_34");

			utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 1);

			npcStartConversation (player, npc, "stormtrooper_leader_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (stormtrooper_leader_quarantine_zone_condition_hasQuestTwo (player, npc))
	{
		//-- NPC: I thought that was you, %TU, are you ready to leave the quarantine zone?
		string_id message = new string_id (c_stringFile, "s_21");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_24");

			utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 3);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "stormtrooper_leader_quarantine_zone", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (stormtrooper_leader_quarantine_zone_condition_hasCompletedQuestOne (player, npc))
	{
		//-- NPC: Ah yes, %TU, are you ready to leave the quarantine zone?
		string_id message = new string_id (c_stringFile, "s_18");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.
		boolean hasResponse0 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_20");

			utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 4);

			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			npcStartConversation (player, npc, "stormtrooper_leader_quarantine_zone", null, pp, responses);
		}
		else
		{
			prose_package pp = new prose_package ();
			pp.stringId = message;
			pp.actor.set (player);
			pp.target.set (npc);

			chat.chat (npc, player, null, null, pp);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (stormtrooper_leader_quarantine_zone_condition_hasQuestOne (player, npc))
	{
		//-- NPC: You are not allowed to leave the quarantine zone citizen.
		string_id message = new string_id (c_stringFile, "s_13");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have authorization.
		boolean hasResponse0 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_15");

			utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 5);

			npcStartConversation (player, npc, "stormtrooper_leader_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
	{
		stormtrooper_leader_quarantine_zone_action_moveAlongSound (player, npc);

		//-- NPC: Hey look boys. We found someone who isn't supposed to be in the quarantine zone.
		string_id message = new string_id (c_stringFile, "s_36");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Please let me out.
		boolean hasResponse0 = false;
		if (stormtrooper_leader_quarantine_zone_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			utils.setScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId", 9);

			npcStartConversation (player, npc, "stormtrooper_leader_quarantine_zone", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "stormtrooper_leader_quarantine_zone")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

	if (branchId == 1 && stormtrooper_leader_quarantine_zone_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && stormtrooper_leader_quarantine_zone_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && stormtrooper_leader_quarantine_zone_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && stormtrooper_leader_quarantine_zone_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && stormtrooper_leader_quarantine_zone_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && stormtrooper_leader_quarantine_zone_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && stormtrooper_leader_quarantine_zone_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && stormtrooper_leader_quarantine_zone_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.stormtrooper_leader_quarantine_zone.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

