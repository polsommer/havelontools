// ======================================================================
//
// heroic_echo_collector.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.factions;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/heroic_echo_collector";

// ======================================================================
// Script Conditions
// ======================================================================

boolean heroic_echo_collector_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean heroic_echo_collector_condition_RebelCheck (obj_id player, obj_id npc)
{
	if(factions.isRebel(player) && !hasCompletedCollection(player, "kill_wampa_01") &&
	!hasCompletedCollectionSlot(player, "kill_wampa_activation"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean heroic_echo_collector_condition_ImperialCheck (obj_id player, obj_id npc)
{
	if(factions.isImperial(player) && !hasCompletedCollection(player, "kill_wampa_01") &&
	!hasCompletedCollectionSlot(player, "kill_wampa_activation"))
	{
		return true;
	}
	return false;	
}

// ----------------------------------------------------------------------

boolean heroic_echo_collector_condition_activeNotComplete (obj_id player, obj_id npc)
{
	if(!hasCompletedCollection(player, "kill_hoth_wampa_01") && hasCompletedCollectionSlot(player, "kill_wampa_activation"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean heroic_echo_collector_condition_activeAndComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "kill_hoth_wampa_01"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean heroic_echo_collector_condition_readyForComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollectionSlot(player, "kill_wampa_activation") && hasCompletedCollectionSlot(player, "kill_wampa_01") &&
	hasCompletedCollectionSlot(player, "kill_wampa_02") && hasCompletedCollectionSlot(player, "kill_wampa_03") &&
	hasCompletedCollectionSlot(player, "kill_wampa_04") && hasCompletedCollectionSlot(player, "kill_wampa_05") &&
	!hasCompletedCollectionSlot(player, "kill_wampa_complete"))
	{
		return true;
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void heroic_echo_collector_action_activateWampaKillCollection (obj_id player, obj_id npc)
{
	if(!hasCompletedCollection(player, "kill_hoth_wampa_01") && !hasCompletedCollectionSlot(player, "kill_wampa_activation"))
	{
		modifyCollectionSlotValue(player, "kill_wampa_activation", 1);
	}
}

// ----------------------------------------------------------------------

void heroic_echo_collector_action_completeWampaCollection (obj_id player, obj_id npc)
{
	if(hasCompletedCollectionSlot(player, "kill_wampa_activation") && hasCompletedCollectionSlot(player, "kill_wampa_01") &&
	hasCompletedCollectionSlot(player, "kill_wampa_02") && hasCompletedCollectionSlot(player, "kill_wampa_03") &&
	hasCompletedCollectionSlot(player, "kill_wampa_04") && hasCompletedCollectionSlot(player, "kill_wampa_05") &&
	!hasCompletedCollectionSlot(player, "kill_wampa_complete"))
	{
		modifyCollectionSlotValue(player, "kill_wampa_complete", 1);
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int heroic_echo_collector_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What are you doing here?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: We have located the Rebel base located here and are disposing of them as you and I speak.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just so we're clear from the start, I have nothing to do with them being here.  I've always been a staunch supporter of the Empire.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You still haven't told me what you're doing here.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Imperial Forces have located our base.  We are evacuating our forces as we speak.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Just so we're clear from the start, I have nothing to do with them being here.  I've always been a staunch supporter of the Rebellion.
			string_id message = new string_id (c_stringFile, "s_32");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You still haven't told me what you're doing here.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_34");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm just dropping by to see how things are going.  Are you keeping warm out here?
	if (response == "s_54")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh yes, Every night I sneak over to the destroyed barracks and hole up in there.
			string_id message = new string_id (c_stringFile, "s_56");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can't seem to find enough Wampa to finish what you asked.
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Don't worry, more are coming.  Try back tomorrow or the next.  They often spend a few days roaming around.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I finished 'thinning out' the Wampa for you.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			heroic_echo_collector_action_completeWampaCollection (player, npc);

			//-- NPC: Ah!  Thanks a lot!  This will definitely make things easier for me.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just so we're clear from the start, I have nothing to do with them being here.  I've always been a staunch supporter of the Empire.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You still haven't told me what you're doing here.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm here researching the wildlife here on Hoth.  Some may call me 'crazy', but I believe the Wampa are closely related to Wookiees.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're right, I bet most people think you're crazy.  Including me.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_21");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm here researching the wildlife here on Hoth.  Some may call me 'crazy', but I believe the Wampa are closely related to Wookiees.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're right, I bet most people think you're crazy.  Including me.
	if (response == "s_21")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Can you give me a hand with something?
			string_id message = new string_id (c_stringFile, "s_25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That would depend on what you have in mind.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am really busy right now, I must get back to my squad.
			boolean hasResponse1 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_26");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_27");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Can you give me a hand with something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That would depend on what you have in mind.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Over the past few years, the Wampa population has quadrupled in this area.  It's making it very difficult for me to continue my research.
			string_id message = new string_id (c_stringFile, "s_29");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can do that for you.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_30");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am really busy right now, I must get back to my squad.
	if (response == "s_27")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Be careful.
			string_id message = new string_id (c_stringFile, "s_28");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Over the past few years, the Wampa population has quadrupled in this area.  It's making it very difficult for me to continue my research.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can do that for you.
	if (response == "s_30")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			heroic_echo_collector_action_activateWampaKillCollection (player, npc);

			//-- NPC: Thank you!  When you've finished clearing 25 of each type, come talk to me and I'm sure I can find something to give you in return.
			string_id message = new string_id (c_stringFile, "s_31");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Just so we're clear from the start, I have nothing to do with them being here.  I've always been a staunch supporter of the Rebellion.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You still haven't told me what you're doing here.
	if (response == "s_34")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm here researching the wildlife here on Hoth.  Some may call me 'crazy', but I believe the Wampa are closely related to Wookiees.
			string_id message = new string_id (c_stringFile, "s_36");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You're right, I bet most people think you're crazy.  Including me.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_38");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm here researching the wildlife here on Hoth.  Some may call me 'crazy', but I believe the Wampa are closely related to Wookiees.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You're right, I bet most people think you're crazy.  Including me.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Can you give me a hand with something?
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That would depend on what you have in mind.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I am really busy right now, I must get back to my squad.
			boolean hasResponse1 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_50");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Can you give me a hand with something?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That would depend on what you have in mind.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Over the past few years, the Wampa population has quadrupled in this area.  It's making it very difficult for me to continue my research.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I can do that for you.
			boolean hasResponse0 = false;
			if (heroic_echo_collector_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_46");

				utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am really busy right now, I must get back to my squad.
	if (response == "s_50")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			//-- NPC: Be careful.
			string_id message = new string_id (c_stringFile, "s_52");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int heroic_echo_collector_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Over the past few years, the Wampa population has quadrupled in this area.  It's making it very difficult for me to continue my research.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I can do that for you.
	if (response == "s_46")
	{
		//-- [NOTE] 
		if (heroic_echo_collector_condition__defaultCondition (player, npc))
		{
			heroic_echo_collector_action_activateWampaKillCollection (player, npc);

			//-- NPC: Thank you!  When you've finished clearing 25 of each type, come talk to me and I'm sure I can find something to give you in return.
			string_id message = new string_id (c_stringFile, "s_48");
			utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.heroic_echo_collector");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.heroic_echo_collector");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (heroic_echo_collector_condition__defaultCondition (player, npc))
	{
		//-- NPC: What are you doing here?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: We have located the Rebel base located here and are disposing of them as you and I speak.
		boolean hasResponse0 = false;
		if (heroic_echo_collector_condition_ImperialCheck (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Imperial Forces have located our base.  We are evacuating our forces as we speak.
		boolean hasResponse1 = false;
		if (heroic_echo_collector_condition_RebelCheck (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I'm just dropping by to see how things are going.  Are you keeping warm out here?
		boolean hasResponse2 = false;
		if (heroic_echo_collector_condition_activeAndComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I can't seem to find enough Wampa to finish what you asked.
		boolean hasResponse3 = false;
		if (heroic_echo_collector_condition_activeNotComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I finished 'thinning out' the Wampa for you.
		boolean hasResponse4 = false;
		if (heroic_echo_collector_condition_readyForComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_54");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_58");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_62");

			utils.setScriptVar (player, "conversation.heroic_echo_collector.branchId", 1);

			npcStartConversation (player, npc, "heroic_echo_collector", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "heroic_echo_collector")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.heroic_echo_collector.branchId");

	if (branchId == 1 && heroic_echo_collector_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && heroic_echo_collector_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && heroic_echo_collector_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && heroic_echo_collector_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && heroic_echo_collector_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && heroic_echo_collector_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && heroic_echo_collector_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && heroic_echo_collector_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && heroic_echo_collector_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.heroic_echo_collector.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

