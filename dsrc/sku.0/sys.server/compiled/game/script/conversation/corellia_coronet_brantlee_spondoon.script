// ======================================================================
//
// corellia_coronet_brantlee_spondoon.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corellia_coronet_brantlee_spondoon";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corellia_coronet_brantlee_spondoon_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corellia_coronet_brantlee_spondoon_condition_summonedToBrantlee (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_the_informant", "the_informant_0");
}

// ----------------------------------------------------------------------

boolean corellia_coronet_brantlee_spondoon_condition_informantActive (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "corellia_coronet_capitol_problems_the_informant") &&
	groundquests.hasCompletedTask(player, "corellia_coronet_capitol_problems_the_informant", "the_informant_0") &&
	!groundquests.hasCompletedTask(player, "corellia_coronet_capitol_problems_the_informant", "the_informant_7b");
}

// ----------------------------------------------------------------------

boolean corellia_coronet_brantlee_spondoon_condition_informantComplete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_the_informant", "the_informant_8") ||
	groundquests.isTaskActive(player, "corellia_coronet_capitol_problems_the_informant", "the_informant_9") ||
	groundquests.hasCompletedQuest(player, "corellia_coronet_capitol_problems_the_informant");
}

// ----------------------------------------------------------------------

boolean corellia_coronet_brantlee_spondoon_condition_thankfulDiktat (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "corellia_coronet_capitol_problems_thankful_diktat") ||
	groundquests.hasCompletedQuest(player, "corellia_coronet_capitol_problems_thankful_diktat");
}

// ======================================================================
// Script Actions
// ======================================================================

void corellia_coronet_brantlee_spondoon_action_giveInformantQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "the_informant_0");
	return;
}

// ----------------------------------------------------------------------

void corellia_coronet_brantlee_spondoon_action_endInformantQuest (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "the_informant_8");
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corellia_coronet_brantlee_spondoon_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We received word from an informant that there is a plot in motion to discredit the Diktat and his administration. This informant wants one of us to meet with him in a warehouse where he will fill us in on the details. Go meet this informant and find out what he knows.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would be proud to do so.
	if (response == "s_12")
	{
		//-- [NOTE] 
		if (corellia_coronet_brantlee_spondoon_condition__defaultCondition (player, npc))
		{
			corellia_coronet_brantlee_spondoon_action_giveInformantQuest (player, npc);

			//-- NPC: Very well. Go to the warehouse and see what this informant has to say. I do not expect any danger, as very few people know about this meeting, but be prepared for anything just in case.
			string_id message = new string_id (c_stringFile, "s_14");
			utils.removeScriptVar (player, "conversation.corellia_coronet_brantlee_spondoon.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not right now. Maybe another time.
	if (response == "s_16")
	{
		//-- [NOTE] 
		if (corellia_coronet_brantlee_spondoon_condition__defaultCondition (player, npc))
		{
			//-- NPC: These things wait for no man, but I understand that timing can be important. Speak with me again if it suits you.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.corellia_coronet_brantlee_spondoon.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corellia_coronet_brantlee_spondoon");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable( self, true );

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corellia_coronet_brantlee_spondoon");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corellia_coronet_brantlee_spondoon_condition_thankfulDiktat (player, npc))
	{
		//-- NPC: I must express my most profound thanks for your role in clearing this administration of the accusations that were being raised against us. You are a credit to us all.
		string_id message = new string_id (c_stringFile, "s_4");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_brantlee_spondoon_condition_informantComplete (player, npc))
	{
		corellia_coronet_brantlee_spondoon_action_endInformantQuest (player, npc);

		//-- NPC: He was attacked by rogue CorSec? The fact that they actually were after this informant lends some credibility to whatever his story would have been. If only you'd gotten to that datadisk before they did. Thank you for trying.
		string_id message = new string_id (c_stringFile, "s_6");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_brantlee_spondoon_condition_informantActive (player, npc))
	{
		//-- NPC: Go meet with the informant. I do not know how long he will wait, and he made it sound like there could be people after him. 
		string_id message = new string_id (c_stringFile, "s_8");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_brantlee_spondoon_condition_summonedToBrantlee (player, npc))
	{
		//-- NPC: We received word from an informant that there is a plot in motion to discredit the Diktat and his administration. This informant wants one of us to meet with him in a warehouse where he will fill us in on the details. Go meet this informant and find out what he knows.
		string_id message = new string_id (c_stringFile, "s_10");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I would be proud to do so.
		boolean hasResponse0 = false;
		if (corellia_coronet_brantlee_spondoon_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not right now. Maybe another time.
		boolean hasResponse1 = false;
		if (corellia_coronet_brantlee_spondoon_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_12");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_16");

			utils.setScriptVar (player, "conversation.corellia_coronet_brantlee_spondoon.branchId", 4);

			npcStartConversation (player, npc, "corellia_coronet_brantlee_spondoon", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corellia_coronet_brantlee_spondoon_condition__defaultCondition (player, npc))
	{
		//-- NPC: Greetings and welcome to the heart of the Corellian government. I'm afraid that the Diktat is a busy man and cannot chat, and if he's busy, then I am as well. We do appreciate that you've come by, though, and hope that you will return again soon.
		string_id message = new string_id (c_stringFile, "s_20");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corellia_coronet_brantlee_spondoon")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corellia_coronet_brantlee_spondoon.branchId");

	if (branchId == 4 && corellia_coronet_brantlee_spondoon_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corellia_coronet_brantlee_spondoon.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

