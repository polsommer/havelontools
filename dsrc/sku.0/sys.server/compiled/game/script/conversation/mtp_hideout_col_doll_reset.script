// ======================================================================
//
// mtp_hideout_col_doll_reset.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.collection;
include library.conversation;
include library.static_item;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/mtp_hideout_col_doll_reset";

// ======================================================================
// Script Conditions
// ======================================================================

boolean mtp_hideout_col_doll_reset_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_hasAllHenchPieces (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_hench_doll_01");
	if(completedSlots != null && completedSlots.length == 6 && !hasCompletedCollectionSlot(player, "received_hench_doll_tracker"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_hasAllKingPieces (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_king_doll_01");
	if(completedSlots != null && completedSlots.length == 6 && !hasCompletedCollectionSlot(player, "received_king_doll_tracker"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_hasAllOfficerPieces (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_officer_doll_01");
	if(completedSlots != null && completedSlots.length == 6 && !hasCompletedCollectionSlot(player, "received_officer_doll_tracker"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_henchColComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_hench_doll_01"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_officerColComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_officer_doll_01"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_kingColComplete (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_king_doll_01"))
	{
		return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_noDollHench (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_hench_doll_01");
	if(completedSlots != null && completedSlots.length == 6)
	{
		if(hasCompletedCollectionSlot(player, "received_hench_doll_tracker"))
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_noDollOfficer (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_officer_doll_01");
	if(completedSlots != null && completedSlots.length == 6)
	{
		if(hasCompletedCollectionSlot(player, "received_officer_doll_tracker"))
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean mtp_hideout_col_doll_reset_condition_noDollKing (obj_id player, obj_id npc)
{
	string[] completedSlots = getCompletedCollectionSlotsInCollection(player, "col_meatlump_king_doll_01");
	if(completedSlots != null && completedSlots.length == 6)
	{
		if(hasCompletedCollectionSlot(player, "received_king_doll_tracker"))
		{
			return true;
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void mtp_hideout_col_doll_reset_action_grantHenchReward (obj_id player, obj_id npc)
{
	//Completed the collection (modify this collection's 'received' bit)
	modifyCollectionSlotValue(player, "received_hench_doll", 1);
	//get player inventory	
	obj_id pInv = utils.getInventoryContainer(player);
	//need to check the hidden collection for hench doll grant.
	if(hasCompletedCollectionSlot(player, "received_hench_doll_tracker"))
	{	
		//only grant lumps
		obj_id lumps = static_item.createNewItemFunction("item_meatlump_lump_01_01", pInv);
		//give the player 10 lumps.
		setCount(lumps, 10);	
	}
	else 
	{
		//give the player a doll - he deserves it.
		obj_id doll = static_item.createNewItemFunction("col_reward_meatlump_doll_hench_02_01", pInv);
			
		//modify the hidden slot so he doesn't receive any more dolls.
		if(!hasCompletedCollectionSlot(player, "received_hench_doll_tracker"))
		{
			modifyCollectionSlotValue(player, "received_hench_doll_tracker", 1);
		}
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_doll_reset_action_grantOfficerReward (obj_id player, obj_id npc)
{
	//Completed the collection (modify this collection's 'received' bit)
	modifyCollectionSlotValue(player, "received_officer_doll", 1);
	//get player inventory	
	obj_id pInv = utils.getInventoryContainer(player);
	//need to check the hidden collection for hench doll grant.
	if(hasCompletedCollectionSlot(player, "received_officer_doll_tracker"))
	{	
		//only grant lumps
		obj_id lumps = static_item.createNewItemFunction("item_meatlump_lump_01_01", pInv);
		//give the player 10 lumps.
		setCount(lumps, 10);	
	}
	else 
	{
		//give the player a doll - he deserves it.
		obj_id doll = static_item.createNewItemFunction("col_reward_meatlump_doll_officer_02_01", pInv);
			
		//modify the hidden slot so he doesn't receive any more dolls.
		if(!hasCompletedCollectionSlot(player, "received_officer_doll_tracker"))
		{
			modifyCollectionSlotValue(player, "received_officer_doll_tracker", 1);
		}
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_doll_reset_action_grantKingReward (obj_id player, obj_id npc)
{
	//Completed the collection (modify this collection's 'received' bit)
	modifyCollectionSlotValue(player, "received_king_doll", 1);
	//get player inventory	
	obj_id pInv = utils.getInventoryContainer(player);
	//need to check the hidden collection for hench doll grant.
	if(hasCompletedCollectionSlot(player, "received_king_doll_tracker"))
	{	
		//only grant lumps
		obj_id lumps = static_item.createNewItemFunction("item_meatlump_lump_01_01", pInv);
		//give the player 10 lumps.
		setCount(lumps, 10);	
	}
	else 
	{
		//give the player a doll - he deserves it.
		obj_id doll = static_item.createNewItemFunction("col_reward_meatlump_doll_king_02_01", pInv);
			
		//modify the hidden slot so he doesn't receive any more dolls.
		if(!hasCompletedCollectionSlot(player, "received_king_doll_tracker"))
		{
			modifyCollectionSlotValue(player, "received_king_doll_tracker", 1);
		}
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_doll_reset_action_resetHenchCollection (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_hench_doll_01"))
	{
		collection.removeCollectionForRealsies(player, "col_meatlump_hench_doll_01");
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_doll_reset_action_resetOfficerCollection (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_officer_doll_01"))
	{
		collection.removeCollectionForRealsies(player, "col_meatlump_officer_doll_01");
	}
}

// ----------------------------------------------------------------------

void mtp_hideout_col_doll_reset_action_resetKingCollection (obj_id player, obj_id npc)
{
	if(hasCompletedCollection(player, "col_meatlump_king_doll_01"))
	{
		collection.removeCollectionForRealsies(player, "col_meatlump_king_doll_01");
	}
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int mtp_hideout_col_doll_reset_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hi there! Can I help you with anything?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes!  I have collected these Hench Doll pieces.  
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I'm not much of a tailor, but let's see what I can do.
			string_id message = new string_id (c_stringFile, "s_8");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks!
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Nevermind...I've decided to wait.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_10");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_44");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have these Officer Doll pieces.   What do I do with them?
	if (response == "s_15")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can sew them together for you.  They should make a decent doll.
			string_id message = new string_id (c_stringFile, "s_17");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Please do.  I'm anxious to see the result.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: On second thought, let me wait a bit.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_19");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_45");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I hear you're the one to speak to about getting dolls fixed.
	if (response == "s_25")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not really, but I did stay at an Corellian Inn Express.
			string_id message = new string_id (c_stringFile, "s_27");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: *sigh* - Can you fix my King Doll?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I think I'm talking to the wrong person.  
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_29");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_48");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to reset the Hench Doll collection so I can do it again.
	if (response == "s_38")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can reset the collection for you...but...when you complete it from now on you will only get Lumps, not another doll.  
			string_id message = new string_id (c_stringFile, "s_40");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sounds good, I'd rather have the lumps anyway.  Let the kids keep the dolls.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What?  You have got to be kidding me!  
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_42");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_66");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 13);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would like to reset the Officer Doll collection so I can get another.
	if (response == "s_70")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Well, I won't be able to give you another doll, but I can reset the collection if you wish.  I will reward you with Lumps instead.
			string_id message = new string_id (c_stringFile, "s_72");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uhh, sounds like a good cause, I guess.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 18);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Can you reset my King Doll collection.  I want to do it again.
	if (response == "s_86")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: I can reset it, but I can't give you a second King Doll for completing it again.  
			string_id message = new string_id (c_stringFile, "s_88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What happens to the extra dolls?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_90");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I got some more Hench Doll parts.  Can I get my Lump reward?
	if (response == "s_106")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantHenchReward (player, npc);

			//-- NPC: Ah! Great!  The Meatlump Kids will be very happy.
			string_id message = new string_id (c_stringFile, "s_108");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here's all the pieces for the Officer Doll.  I'll trade you for some Lumps.
	if (response == "s_110")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantOfficerReward (player, npc);

			//-- NPC: The Mangled Meatlumps will enjoy having new toys.  This should boost their morale.
			string_id message = new string_id (c_stringFile, "s_112");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found another set of pieces for the King Doll.  Can I get some Lumps for completing it?
	if (response == "s_114")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantKingReward (player, npc);

			//-- NPC: Sure!  The King will love his new King Doll.  He must have 5000 of these by now.
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What is your job around here?
	if (response == "s_118")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: I just do odds and ends things.  Sew, knit, perform surgeries...
			string_id message = new string_id (c_stringFile, "s_120");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Uhh, surgery?
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_122");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 30);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I'm not much of a tailor, but let's see what I can do.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks!
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantHenchReward (player, npc);

			//-- NPC: Ahh, here you go.  It wasn't as difficult as I thought it would be.
			string_id message = new string_id (c_stringFile, "s_23");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nevermind...I've decided to wait.
	if (response == "s_44")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back anytime.
			string_id message = new string_id (c_stringFile, "s_47");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can sew them together for you.  They should make a decent doll.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Please do.  I'm anxious to see the result.
	if (response == "s_19")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantOfficerReward (player, npc);

			//-- NPC: Ah, here you go.  All done.
			string_id message = new string_id (c_stringFile, "s_43");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: On second thought, let me wait a bit.
	if (response == "s_45")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, take care.
			string_id message = new string_id (c_stringFile, "s_46");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not really, but I did stay at an Corellian Inn Express.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: *sigh* - Can you fix my King Doll?
	if (response == "s_29")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Sure, I can do anything!  Let me see the pieces.
			string_id message = new string_id (c_stringFile, "s_50");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Here you go.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm not sure I fully trust you.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_51");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_52");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I think I'm talking to the wrong person.  
	if (response == "s_48")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Alright, see you later.
			string_id message = new string_id (c_stringFile, "s_49");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Sure, I can do anything!  Let me see the pieces.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Here you go.
	if (response == "s_51")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_grantKingReward (player, npc);

			//-- NPC: See how easy that was! All done.
			string_id message = new string_id (c_stringFile, "s_54");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm not sure I fully trust you.
	if (response == "s_52")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Come back when you do.
			string_id message = new string_id (c_stringFile, "s_53");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can reset the collection for you...but...when you complete it from now on you will only get Lumps, not another doll.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds good, I'd rather have the lumps anyway.  Let the kids keep the dolls.
	if (response == "s_42")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'll go ahead and reset it now, remember, I will only give Lumps as a reward from now on.
			string_id message = new string_id (c_stringFile, "s_56");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Yes please!
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks, I changed my mind.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_58");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_62");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 14);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What?  You have got to be kidding me!  
	if (response == "s_66")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you have a change of heart, I'll be here.
			string_id message = new string_id (c_stringFile, "s_68");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'll go ahead and reset it now, remember, I will only give Lumps as a reward from now on.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes please!
	if (response == "s_58")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_resetHenchCollection (player, npc);

			//-- NPC: All taken care of.  You can now consume the doll parts and complete the collection again.  Return to me to get your reward Lumps.
			string_id message = new string_id (c_stringFile, "s_60");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks, I changed my mind.
	if (response == "s_62")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you have a change of heart, I'll be here.
			string_id message = new string_id (c_stringFile, "s_64");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I won't be able to give you another doll, but I can reset the collection if you wish.  I will reward you with Lumps instead.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uhh, sounds like a good cause, I guess.
	if (response == "s_74")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: A worthy cause indeed.
			string_id message = new string_id (c_stringFile, "s_76");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure, I'd be happy to help out a Mangled Meatlump.  Lumps as a reward from now on is fine.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: No thanks. I don't feel like doing the collection again.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_78");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_82");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 19);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch19 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: A worthy cause indeed.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure, I'd be happy to help out a Mangled Meatlump.  Lumps as a reward from now on is fine.
	if (response == "s_78")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_resetOfficerCollection (player, npc);

			//-- NPC: Great!  There you go, you're good to go.
			string_id message = new string_id (c_stringFile, "s_80");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I don't feel like doing the collection again.
	if (response == "s_82")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you change your mind, I'll be here helping others.
			string_id message = new string_id (c_stringFile, "s_84");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can reset it, but I can't give you a second King Doll for completing it again.  

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What happens to the extra dolls?
	if (response == "s_90")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Meatlump King himself has requested that they all be sent to him.  Apparently he has a distinct liking for them.
			string_id message = new string_id (c_stringFile, "s_92");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Ah, I see.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_94");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Meatlump King himself has requested that they all be sent to him.  Apparently he has a distinct liking for them.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Ah, I see.
	if (response == "s_94")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Would you like me to reset your King Doll collection?
			string_id message = new string_id (c_stringFile, "s_96");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure thing.  I'd be happy to get the King another King Doll.
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Hah! No way.  The King can collect his own dolls.
			boolean hasResponse1 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_98");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_102");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Would you like me to reset your King Doll collection?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure thing.  I'd be happy to get the King another King Doll.
	if (response == "s_98")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			mtp_hideout_col_doll_reset_action_resetKingCollection (player, npc);

			//-- NPC: Perfect!  I reset the collection.  Come back when you're done and I'll reward you with Lumps.
			string_id message = new string_id (c_stringFile, "s_100");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Hah! No way.  The King can collect his own dolls.
	if (response == "s_102")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: ...no respect...
			string_id message = new string_id (c_stringFile, "s_104");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I just do odds and ends things.  Sew, knit, perform surgeries...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Uhh, surgery?
	if (response == "s_122")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not too often, but it does come up.  Everyone figures, since I knit and crotche, I'd be good with patients on the operating table.
			string_id message = new string_id (c_stringFile, "s_124");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Wow, I'm glad I'm not sick!
			boolean hasResponse0 = false;
			if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_126");

				utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int mtp_hideout_col_doll_reset_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Not too often, but it does come up.  Everyone figures, since I knit and crotche, I'd be good with patients on the operating table.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Wow, I'm glad I'm not sick!
	if (response == "s_126")
	{
		//-- [NOTE] 
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			//-- NPC: If you need, I can take care of...less demanding things.  Just drop by if you need anything.
			string_id message = new string_id (c_stringFile, "s_128");
			utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.mtp_hideout_col_doll_reset");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.mtp_hideout_col_doll_reset");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
	{
		//-- NPC: Hi there! Can I help you with anything?
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes!  I have collected these Hench Doll pieces.  
		boolean hasResponse0 = false;
		if (mtp_hideout_col_doll_reset_condition_hasAllHenchPieces (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I have these Officer Doll pieces.   What do I do with them?
		boolean hasResponse1 = false;
		if (mtp_hideout_col_doll_reset_condition_hasAllOfficerPieces (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I hear you're the one to speak to about getting dolls fixed.
		boolean hasResponse2 = false;
		if (mtp_hideout_col_doll_reset_condition_hasAllKingPieces (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		//-- PLAYER: I would like to reset the Hench Doll collection so I can do it again.
		boolean hasResponse3 = false;
		if (mtp_hideout_col_doll_reset_condition_henchColComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse3 = true;
		}

		//-- PLAYER: I would like to reset the Officer Doll collection so I can get another.
		boolean hasResponse4 = false;
		if (mtp_hideout_col_doll_reset_condition_officerColComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse4 = true;
		}

		//-- PLAYER: Can you reset my King Doll collection.  I want to do it again.
		boolean hasResponse5 = false;
		if (mtp_hideout_col_doll_reset_condition_kingColComplete (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse5 = true;
		}

		//-- PLAYER: I got some more Hench Doll parts.  Can I get my Lump reward?
		boolean hasResponse6 = false;
		if (mtp_hideout_col_doll_reset_condition_noDollHench (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse6 = true;
		}

		//-- PLAYER: Here's all the pieces for the Officer Doll.  I'll trade you for some Lumps.
		boolean hasResponse7 = false;
		if (mtp_hideout_col_doll_reset_condition_noDollOfficer (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse7 = true;
		}

		//-- PLAYER: I found another set of pieces for the King Doll.  Can I get some Lumps for completing it?
		boolean hasResponse8 = false;
		if (mtp_hideout_col_doll_reset_condition_noDollKing (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse8 = true;
		}

		//-- PLAYER: What is your job around here?
		boolean hasResponse9 = false;
		if (mtp_hideout_col_doll_reset_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse9 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_15");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_25");

			if (hasResponse3)
				responses [responseIndex++] = new string_id (c_stringFile, "s_38");

			if (hasResponse4)
				responses [responseIndex++] = new string_id (c_stringFile, "s_70");

			if (hasResponse5)
				responses [responseIndex++] = new string_id (c_stringFile, "s_86");

			if (hasResponse6)
				responses [responseIndex++] = new string_id (c_stringFile, "s_106");

			if (hasResponse7)
				responses [responseIndex++] = new string_id (c_stringFile, "s_110");

			if (hasResponse8)
				responses [responseIndex++] = new string_id (c_stringFile, "s_114");

			if (hasResponse9)
				responses [responseIndex++] = new string_id (c_stringFile, "s_118");

			utils.setScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId", 1);

			npcStartConversation (player, npc, "mtp_hideout_col_doll_reset", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "mtp_hideout_col_doll_reset")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

	if (branchId == 1 && mtp_hideout_col_doll_reset_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && mtp_hideout_col_doll_reset_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && mtp_hideout_col_doll_reset_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && mtp_hideout_col_doll_reset_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && mtp_hideout_col_doll_reset_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && mtp_hideout_col_doll_reset_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && mtp_hideout_col_doll_reset_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && mtp_hideout_col_doll_reset_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 19 && mtp_hideout_col_doll_reset_handleBranch19 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && mtp_hideout_col_doll_reset_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && mtp_hideout_col_doll_reset_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && mtp_hideout_col_doll_reset_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && mtp_hideout_col_doll_reset_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && mtp_hideout_col_doll_reset_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.mtp_hideout_col_doll_reset.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

