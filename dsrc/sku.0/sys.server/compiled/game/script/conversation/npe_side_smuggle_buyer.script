// ======================================================================
//
// npe_side_smuggle_buyer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/npe_side_smuggle_buyer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean npe_side_smuggle_buyer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_buyer_condition_hasTaskActive (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "npe_side_smuggle", "npe_side_smuggle_buyer_signal");
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_buyer_condition_failedSpace (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "npe_side_smuggle", "failed")		||
			groundquests.isTaskActive(player, "npe_side_smuggle_2", "failed"));
}

// ----------------------------------------------------------------------

boolean npe_side_smuggle_buyer_condition_hasFinishedTask (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedTask(player, "npe_side_smuggle", "npe_side_smuggle_buyer_signal");
}

// ======================================================================
// Script Actions
// ======================================================================

void npe_side_smuggle_buyer_action_sendSignalComplete (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "npe_side_smuggle_buyer");
}

// ----------------------------------------------------------------------

void npe_side_smuggle_buyer_action_sendSignalFailedStart (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "smuggle_failed");
}

// ----------------------------------------------------------------------

void npe_side_smuggle_buyer_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int npe_side_smuggle_buyer_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I hear you didn't make it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, but I am not giving up. Can I gather another plant, and try again.
	if (response == "s_23")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			npe_side_smuggle_buyer_action_sendSignalFailedStart (player, npc);

			//-- NPC: Yes, but don't fail me again.
			string_id message = new string_id (c_stringFile, "s_24");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_buyer_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you the courier? Do you know what you are going to do?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I was told you would tell me.
	if (response == "s_10")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			//-- NPC: I need somone to smuggle out a plant. This plant is used to make a rare spice.
			string_id message = new string_id (c_stringFile, "s_12");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Where do you want it delivered?
			boolean hasResponse0 = false;
			if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_14");

				utils.setScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_buyer_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I need somone to smuggle out a plant. This plant is used to make a rare spice.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do you want it delivered?
	if (response == "s_14")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			//-- NPC: I will need you to send it to one of my pilots. Tarand and I are too closely watched, but you can gather this plant and meet him, right?
			string_id message = new string_id (c_stringFile, "s_16");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I don't see why not.
			boolean hasResponse0 = false;
			if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_18");

				utils.setScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int npe_side_smuggle_buyer_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I will need you to send it to one of my pilots. Tarand and I are too closely watched, but you can gather this plant and meet him, right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't see why not.
	if (response == "s_18")
	{
		//-- [NOTE] 
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			npe_side_smuggle_buyer_action_sendSignalComplete (player, npc);

			//-- NPC: Good, just gather the plant and go to the coordinates. My pilot will meet you there.
			string_id message = new string_id (c_stringFile, "s_21");
			utils.removeScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.npe_side_smuggle_buyer");

	setInvulnerable (self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName( self, "Maghr Scutu");
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setInvulnerable (self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	setName( self, "Maghr Scutu");
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.npe_side_smuggle_buyer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (npe_side_smuggle_buyer_condition_failedSpace (player, npc))
	{
		npe_side_smuggle_buyer_action_facePlayer (player, npc);

		//-- NPC: I hear you didn't make it.
		string_id message = new string_id (c_stringFile, "s_22");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, but I am not giving up. Can I gather another plant, and try again.
		boolean hasResponse0 = false;
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_23");

			utils.setScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId", 1);

			npcStartConversation (player, npc, "npe_side_smuggle_buyer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_buyer_condition_hasFinishedTask (player, npc))
	{
		npe_side_smuggle_buyer_action_facePlayer (player, npc);

		//-- NPC: I don't think that we should be seen talking anymore.
		string_id message = new string_id (c_stringFile, "s_20");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_buyer_condition_hasTaskActive (player, npc))
	{
		npe_side_smuggle_buyer_action_facePlayer (player, npc);

		//-- NPC: Are you the courier? Do you know what you are going to do?
		string_id message = new string_id (c_stringFile, "s_8");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: No, I was told you would tell me.
		boolean hasResponse0 = false;
		if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			utils.setScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId", 4);

			npcStartConversation (player, npc, "npe_side_smuggle_buyer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (npe_side_smuggle_buyer_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "wtf");

		npe_side_smuggle_buyer_action_facePlayer (player, npc);

		//-- NPC: Leave me alone. I am busy watching all the pretty birds...yeah, that's it.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "npe_side_smuggle_buyer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

	if (branchId == 1 && npe_side_smuggle_buyer_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && npe_side_smuggle_buyer_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && npe_side_smuggle_buyer_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && npe_side_smuggle_buyer_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.npe_side_smuggle_buyer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

