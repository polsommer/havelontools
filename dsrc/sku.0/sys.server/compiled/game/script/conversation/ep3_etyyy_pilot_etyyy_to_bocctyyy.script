// ======================================================================
//
// ep3_etyyy_pilot_etyyy_to_bocctyyy.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.group;
include library.space_dungeon;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_etyyy_pilot_etyyy_to_bocctyyy";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_canGoToBocctyyy (obj_id player, obj_id npc)
{
	if ( (groundquests.isQuestActive(player, "ep3_hunt_sordaan_uller_bet"))	||
	(groundquests.isQuestActive(player, "ep3_hunt_sordaan_walluga_bet")) 	||
	(groundquests.isQuestActive(player, "ep3_hunt_sordaan_mouf_bet")) 		||
	(groundquests.isQuestActive(player, "ep3_hunt_sordaan_webweaver_bet"))	)
	{
		obj_id[] tickets = space_dungeon.findValidDungeonTickets(player, npc);
		if ( tickets != null && tickets.length > 0)
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_hasBocctyyyTicket (obj_id player, obj_id npc)
{
	obj_id[] tickets = space_dungeon.findValidDungeonTickets(player, npc);
	if ( tickets != null && tickets.length > 0)
	{
		return true;
	}
		
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_isFemaleCharacter (obj_id player, obj_id npc)
{
	return getGender( player )==GENDER_FEMALE;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_tooManyInGroup (obj_id player, obj_id npc)
{
	if ( group.isGrouped(player) )
	{
		obj_id groupObj = getGroupObject(player);
		if ( isIdValid(groupObj) )
		{
			int numGroupMembers = getGroupSize(groupObj);
			if ( numGroupMembers > 6 )
				return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_isInGodeMode (obj_id player, obj_id npc)
{
	return isGod(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_etyyy_pilot_etyyy_to_bocctyyy_action_sendToBocctyyy (obj_id player, obj_id npc)
{
	space_dungeon.selectDungeonTicket(npc, player);
	return;
}

// ----------------------------------------------------------------------

void ep3_etyyy_pilot_etyyy_to_bocctyyy_action_godModeEntry (obj_id player, obj_id npc)
{
	if ( isGod(player) )
	{
		string ticketTemplate = "object/tangible/travel/travel_ticket/bocctyyy_path_ticket.iff";
		
		obj_id ticket = space_dungeon.createTicket(player, "kashyyyk_hunting", "kashyyyk_hunting", space_dungeon.KASH_THE_BET, ticketTemplate);
		if ( isIdValid(ticket) )
		{
			setObjVar(ticket, "space_dungeon.ticket.quest_type", "none");
			setObjVar(ticket, "kashyyyk.ticket_owner", player);
			
			space_dungeon.selectDungeonTicket(npc, player);
		}
	}
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_etyyy_pilot_etyyy_to_bocctyyy_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings. Are you the hunter with whom Sordaan has arranged to enter the Bocctyyy path for wager of some sort?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, that is me, and I'm ready to go.
	if (response == "s_690")
	{
		//-- [NOTE] 
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_tooManyInGroup (player, npc))
		{
			//-- NPC: There is one problem. I have orders from Sordaan himself to only allow up to 6 members in your hunting party. You currently have more than that. I'll have to ask you to address this matter and then speak with me again.
			string_id message = new string_id (c_stringFile, "s_692");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_isFemaleCharacter (player, npc))
		{
			ep3_etyyy_pilot_etyyy_to_bocctyyy_action_sendToBocctyyy (player, npc);

			//-- NPC: Very good m'lady. I'll make the final arrangements. We can get underway almost immediately.
			string_id message = new string_id (c_stringFile, "s_116");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (player, npc))
		{
			ep3_etyyy_pilot_etyyy_to_bocctyyy_action_sendToBocctyyy (player, npc);

			//-- NPC: Very good sir. I'll make the final arrangements. We can get underway almost immediately.
			string_id message = new string_id (c_stringFile, "s_694");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, but I don't think I'm ready to go just yet.
	if (response == "s_696")
	{
		//-- [NOTE] 
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (player, npc))
		{
			//-- NPC: Not a problem. Please return when you are prepared to enter, and I'll be glad to transport you there.
			string_id message = new string_id (c_stringFile, "s_698");
			utils.removeScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_canGoToBocctyyy (player, npc))
	{
		//-- NPC: Greetings. Are you the hunter with whom Sordaan has arranged to enter the Bocctyyy path for wager of some sort?
		string_id message = new string_id (c_stringFile, "s_688");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, that is me, and I'm ready to go.
		boolean hasResponse0 = false;
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Yes, but I don't think I'm ready to go just yet.
		boolean hasResponse1 = false;
		if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_690");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_696");

			utils.setScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId", 1);

			npcStartConversation (player, npc, "ep3_etyyy_pilot_etyyy_to_bocctyyy", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition_isFemaleCharacter (player, npc))
	{
		//-- NPC: Greetings, m'lady. I trust your hunting in Etyyy goes well.
		string_id message = new string_id (c_stringFile, "s_700");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_etyyy_pilot_etyyy_to_bocctyyy_condition__defaultCondition (player, npc))
	{
		//-- NPC: Greetings, good sir. I trust your hunting in Etyyy goes well.
		string_id message = new string_id (c_stringFile, "s_706");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_etyyy_pilot_etyyy_to_bocctyyy")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

	if (branchId == 1 && ep3_etyyy_pilot_etyyy_to_bocctyyy_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_etyyy_pilot_etyyy_to_bocctyyy.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

