// ======================================================================
//
// c_tutorial_rm2.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/c_tutorial_rm2";

// ======================================================================
// Script Conditions
// ======================================================================

boolean c_tutorial_rm2_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm2_condition_playerOnQuest (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainInventory = groundquests.getTaskId(questId, "explainInventory"); 
	int explainRibbon = groundquests.getTaskId(questId, "explainRibbon");
	
	boolean onTask = questIsQuestActive(questId, player)&&
		!questIsTaskComplete(questId, explainInventory, player)&&
		questIsTaskComplete(questId, explainRibbon, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm2_condition_taskComplete (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainInventory = groundquests.getTaskId(questId, "explainInventory"); 
	
	boolean onTask = questIsTaskComplete(questId, explainInventory, player);
	
	return onTask;
}

// ----------------------------------------------------------------------

boolean c_tutorial_rm2_condition_playerOnQuestStep01 (obj_id player, obj_id npc)
{
	int questId = questGetQuestId("quest/c_newbie_hall_01");
	int explainRibbon = groundquests.getTaskId(questId, "explainRibbon"); 
	
	boolean onTask = questIsQuestActive(questId, player)&&!questIsTaskComplete(questId, explainRibbon, player);
	
	return onTask;
}

// ======================================================================
// Script Actions
// ======================================================================

void c_tutorial_rm2_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
}

// ----------------------------------------------------------------------

void c_tutorial_rm2_action_actionSendSignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "explainInventory");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int c_tutorial_rm2_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We are so glad you survived that terrible pirate attack! I'm sorry we weren't able to retrieve your equipment, but perhaps you'll find something in this box to be a suitable replacement. It all comes directly from our officer's supply. Our commander said you were to have the best! Please, take a look in the box here and select the things you'd like to take with you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Which things should I take?
	if (response == "s_33")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "point_down");

			//-- NPC: I would suggest you take some food. You never know how long it will be before you can sit down to nice meal again, particularly with the threats that have been made.
			string_id message = new string_id (c_stringFile, "s_35");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Threats?
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I don't believe anything you say. I just want to eat and get out of here.
			boolean hasResponse1 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_37");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_68");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Why are you giving me things?
	if (response == "s_76")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: You can never be too careful. It's only rumors, but it's said those pirates that blew up your ship have infiltrated this station...and they mean to kill you.
			string_id message = new string_id (c_stringFile, "s_78");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: After me? Why?
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_80");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I would suggest you take some food. You never know how long it will be before you can sit down to nice meal again, particularly with the threats that have been made.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Threats?
	if (response == "s_37")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: Oh, well, they're just rumors, but those thugs that destroyed your ship have made several threats against your life. Some believe they may have infiltrated this station.
			string_id message = new string_id (c_stringFile, "s_39");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: After me? Why?
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_41");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I don't believe anything you say. I just want to eat and get out of here.
	if (response == "s_68")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "shake_head_disgust");

			//-- NPC: Yeah well, be careful. If something happened to you on my shift, the paperwork would be a nightmare. Now move on down the hall to the next room. They will have more information for you there and don't forget to get some food out of the container.
			string_id message = new string_id (c_stringFile, "s_70");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: How could I forget?  I'll take anything that's free.
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_72");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh, well, they're just rumors, but those thugs that destroyed your ship have made several threats against your life. Some believe they may have infiltrated this station.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: After me? Why?
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Well, I've said too much already. It's rumors, nothing more. Please now, move on down the hall. They have more information for you there and don't forget to get some food out of the container.
			string_id message = new string_id (c_stringFile, "s_44");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Oh yes, food.
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: But I'm not hungry.
			boolean hasResponse1 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_47");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_64");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 4);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I've said too much already. It's rumors, nothing more. Please now, move on down the hall. They have more information for you there and don't forget to get some food out of the container.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Oh yes, food.
	if (response == "s_47")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_tutorial_rm2_action_actionSendSignal (player, npc);

			//-- NPC: Grab it and go.
			string_id message = new string_id (c_stringFile, "s_51");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: But I'm not hungry.
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_tutorial_rm2_action_actionSendSignal (player, npc);

			//-- NPC: You will be later, just grab it and go.
			string_id message = new string_id (c_stringFile, "s_66");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yeah well, be careful. If something happened to you on my shift, the paperwork would be a nightmare. Now move on down the hall to the next room. They will have more information for you there and don't forget to get some food out of the container.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: How could I forget?  I'll take anything that's free.
	if (response == "s_72")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_tutorial_rm2_action_actionSendSignal (player, npc);

			//-- NPC: Take and go then.
			string_id message = new string_id (c_stringFile, "s_74");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You can never be too careful. It's only rumors, but it's said those pirates that blew up your ship have infiltrated this station...and they mean to kill you.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: After me? Why?
	if (response == "s_80")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Well, I've said too much already. It's rumors, nothing more. Please now, move on down the hall. They have more information for you there and don't forget to get some food out of the container.
			string_id message = new string_id (c_stringFile, "s_82");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Very well.
			boolean hasResponse0 = false;
			if (c_tutorial_rm2_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_84");

				utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int c_tutorial_rm2_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Well, I've said too much already. It's rumors, nothing more. Please now, move on down the hall. They have more information for you there and don't forget to get some food out of the container.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Very well.
	if (response == "s_84")
	{
		//-- [NOTE] 
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "wave_on_dismissing");

			c_tutorial_rm2_action_actionSendSignal (player, npc);

			//-- NPC: Take your food and move along please.
			string_id message = new string_id (c_stringFile, "s_86");
			utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.c_tutorial_rm2");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Lieutenant Alin");	
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Lieutenant Alin");
	ai_lib.setDefaultCalmBehavior( self, ai_lib.BEHAVIOR_SENTINEL );
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.c_tutorial_rm2");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (c_tutorial_rm2_condition_playerOnQuest (player, npc))
	{
		doAnimationAction (npc, "greet");

		c_tutorial_rm2_action_facePlayer (player, npc);

		//-- NPC: We are so glad you survived that terrible pirate attack! I'm sorry we weren't able to retrieve your equipment, but perhaps you'll find something in this box to be a suitable replacement. It all comes directly from our officer's supply. Our commander said you were to have the best! Please, take a look in the box here and select the things you'd like to take with you.
		string_id message = new string_id (c_stringFile, "s_45");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Which things should I take?
		boolean hasResponse0 = false;
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Why are you giving me things?
		boolean hasResponse1 = false;
		if (c_tutorial_rm2_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_33");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_76");

			utils.setScriptVar (player, "conversation.c_tutorial_rm2.branchId", 1);

			npcStartConversation (player, npc, "c_tutorial_rm2", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm2_condition_taskComplete (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		doAnimationAction (player, "point_right");

		c_tutorial_rm2_action_facePlayer (player, npc);

		//-- NPC: Move along the corridor please.
		string_id message = new string_id (c_stringFile, "s_88");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (c_tutorial_rm2_condition_playerOnQuestStep01 (player, npc))
	{
		doAnimationAction (npc, "point_forward");

		c_tutorial_rm2_action_facePlayer (player, npc);

		//-- NPC: You need to see Captain Clough in the reception room.
		string_id message = new string_id (c_stringFile, "s_90");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "c_tutorial_rm2")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.c_tutorial_rm2.branchId");

	if (branchId == 1 && c_tutorial_rm2_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && c_tutorial_rm2_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && c_tutorial_rm2_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && c_tutorial_rm2_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && c_tutorial_rm2_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && c_tutorial_rm2_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && c_tutorial_rm2_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.c_tutorial_rm2.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

