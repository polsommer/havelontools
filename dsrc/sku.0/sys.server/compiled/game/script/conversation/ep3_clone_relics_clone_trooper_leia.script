// ======================================================================
//
// ep3_clone_relics_clone_trooper_leia.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_clone_relics_clone_trooper_leia";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_clone_relics_clone_trooper_leia_condition_talkToLeia2 (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_clone_relics_clone_trooper_mort_rebel", "datapadToLeia"));
}

// ----------------------------------------------------------------------

boolean ep3_clone_relics_clone_trooper_leia_condition_talkToLeia1 (obj_id player, obj_id npc)
{
	return (groundquests.isTaskActive(player, "ep3_clone_relics_clone_trooper_mort_rebel", "talkLeia1"));
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_clone_relics_clone_trooper_leia_action_spokenToLeia1 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedLeia1");
}

// ----------------------------------------------------------------------

void ep3_clone_relics_clone_trooper_leia_action_spokenToLeia2 (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "datapadReturned");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_clone_relics_clone_trooper_leia_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good to see you again soldier. How did it go?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I got a hold of the scum and his logs.
	if (response == "s_145")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			//-- NPC: And Morkov?
			string_id message = new string_id (c_stringFile, "s_146");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let's just say that his business is closed, permanently.
			boolean hasResponse0 = false;
			if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_147");

				utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 2);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: And Morkov?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let's just say that his business is closed, permanently.
	if (response == "s_147")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod");

			doAnimationAction (player, "salute2");

			ep3_clone_relics_clone_trooper_leia_action_spokenToLeia2 (player, npc);

			//-- NPC: I understand... We will use these logs to track down any of the equipment we purchased from him. Thank you again soldier, you have done the Alliance a great service and saved many lives.
			string_id message = new string_id (c_stringFile, "s_148");
			utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes, how may I help you soldier?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I bring grave news your highness.
	if (response == "s_128")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Like we didn't have enough of those...
			string_id message = new string_id (c_stringFile, "s_129");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I have come across logs that show of a traitor.
			boolean hasResponse0 = false;
			if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_130");

				utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 5);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch5 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Like we didn't have enough of those...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have come across logs that show of a traitor.
	if (response == "s_130")
	{
		doAnimationAction (player, "nod");

		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			//-- NPC: Who might that be?
			string_id message = new string_id (c_stringFile, "s_131");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: The arms dealer Morkov. He's been selling you faulty weapons.
			boolean hasResponse0 = false;
			if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_132");

				utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 6);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Who might that be?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: The arms dealer Morkov. He's been selling you faulty weapons.
	if (response == "s_132")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "pound_fist_palm");

			//-- NPC: Let me see that please. < Leia takes the datapad and looks through the information on it > I've seen many men and women die from accidents and malfunctions. What we thought to be mistreatment on the soldiers part now turns out to be the intention of this monster!
			string_id message = new string_id (c_stringFile, "s_133");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: What would you have me do your highness?
			boolean hasResponse0 = false;
			if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_134");

				utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 7);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Let me see that please. < Leia takes the datapad and looks through the information on it > I've seen many men and women die from accidents and malfunctions. What we thought to be mistreatment on the soldiers part now turns out to be the intention of this monster!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What would you have me do your highness?
	if (response == "s_134")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			//-- NPC: I don't care what it takes but he has to be punished for these inhumane crimes. You know where to find him, can you do it soldier?
			string_id message = new string_id (c_stringFile, "s_135");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Of course your highness, he won't get away with this.
			boolean hasResponse0 = false;
			if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_136");

				utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_clone_relics_clone_trooper_leia_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I don't care what it takes but he has to be punished for these inhumane crimes. You know where to find him, can you do it soldier?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Of course your highness, he won't get away with this.
	if (response == "s_136")
	{
		//-- [NOTE] 
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			doAnimationAction (player, "salute2");

			ep3_clone_relics_clone_trooper_leia_action_spokenToLeia1 (player, npc);

			//-- NPC: Good. Any more information you recover from him I'd be interested in as well, it will help us track down what he's sold to us. Good luck soldier and thank you, many men and women owe you their life already.
			string_id message = new string_id (c_stringFile, "s_144");
			utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_clone_relics_clone_trooper_leia");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName(self, new string_id( "ep3/npc_names", "clone_relics_leia" ));
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName(self, new string_id( "ep3/npc_names", "clone_relics_leia" ));
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);
	faceTo (self, player);
	
	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_clone_relics_clone_trooper_leia");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_clone_relics_clone_trooper_leia_condition_talkToLeia2 (player, npc))
	{
		doAnimationAction (player, "salute2");

		//-- NPC: Good to see you again soldier. How did it go?
		string_id message = new string_id (c_stringFile, "s_125");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I got a hold of the scum and his logs.
		boolean hasResponse0 = false;
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_145");

			utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 1);

			npcStartConversation (player, npc, "ep3_clone_relics_clone_trooper_leia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_clone_relics_clone_trooper_leia_condition_talkToLeia1 (player, npc))
	{
		doAnimationAction (player, "salute2");

		//-- NPC: Yes, how may I help you soldier?
		string_id message = new string_id (c_stringFile, "s_138");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I bring grave news your highness.
		boolean hasResponse0 = false;
		if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_128");

			utils.setScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId", 4);

			npcStartConversation (player, npc, "ep3_clone_relics_clone_trooper_leia", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_clone_relics_clone_trooper_leia_condition__defaultCondition (player, npc))
	{
		doAnimationAction (player, "salute2");

		//-- NPC: Come see me later soldier, I have to go over this with Ackbar.
		string_id message = new string_id (c_stringFile, "s_137");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_clone_relics_clone_trooper_leia")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

	if (branchId == 1 && ep3_clone_relics_clone_trooper_leia_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 2 && ep3_clone_relics_clone_trooper_leia_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && ep3_clone_relics_clone_trooper_leia_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 5 && ep3_clone_relics_clone_trooper_leia_handleBranch5 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && ep3_clone_relics_clone_trooper_leia_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && ep3_clone_relics_clone_trooper_leia_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && ep3_clone_relics_clone_trooper_leia_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_clone_relics_clone_trooper_leia.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

