// ======================================================================
//
// corvette_crowley_rebel1.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.space_dungeon;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/corvette_crowley_rebel1";

// ======================================================================
// Script Conditions
// ======================================================================

boolean corvette_crowley_rebel1_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_knowsLocation3 (obj_id player, obj_id npc)
{
	return utils.hasScriptVar(player, "corl_corvette.heardLocation3");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_knowsLocation2 (obj_id player, obj_id npc)
{
	return utils.hasScriptVar(player, "corl_corvette.heardLocation2");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_knowsLocation1 (obj_id player, obj_id npc)
{
	return utils.hasScriptVar(player, "corl_corvette.heardLocation1");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_knowsAllLocations (obj_id player, obj_id npc)
{
	return ( (utils.hasScriptVar(player, "corl_corvette.heardLocation1"))
			&& (utils.hasScriptVar(player, "corl_corvette.heardLocation2"))
			&& (utils.hasScriptVar(player, "corl_corvette.heardLocation3")) );
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasStuff (obj_id player, obj_id npc)
{
	return ( (utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_intel.iff"))
			|| (utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler01.iff"))
			|| (utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler02.iff")) );
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasObject01 (obj_id player, obj_id npc)
{
	return utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_intel.iff");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasObject02 (obj_id player, obj_id npc)
{
	return utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler01.iff");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasObject03 (obj_id player, obj_id npc)
{
	return utils.playerHasItemByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler02.iff");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_notRebel (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if ( playerFaction == null || !playerFaction.equals("Rebel") )
		return true;
	
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasTravelTicket (obj_id player, obj_id npc)
{
	string ticketTemplate = "object/tangible/travel/travel_ticket/dungeon_ticket.iff";
	obj_id[] spaceTickets = utils.getAllItemsPlayerHasByTemplateInBankAndInventory(player, ticketTemplate);
	if (spaceTickets != null && spaceTickets.length > 0 )
	{
		for (int i = 0; i < spaceTickets.length; i++)
		{
			obj_id ticket = spaceTickets[i];
			if ( isIdValid(ticket) )
			{
				if (getStringObjVar (ticket, "space_dungeon.ticket.dungeon").equals ("corvette_rebel"))
					return true;
			}
		}
	}	
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (obj_id player, obj_id npc)
{
	return ( (!corvette_crowley_rebel1_condition_hasTravelTicket(player, npc)) && (!corvette_crowley_rebel1_condition_hasStuff(player, npc)) );
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_isOnQuest (obj_id player, obj_id npc)
{
	return hasObjVar(player, "corl_corvette.rebel_destroy");
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_dungeonInactive (obj_id player, obj_id npc)
{
	string isDungeonActive = getConfigSetting("Dungeon", "Corellian_Corvette_Rebel");
	if ( isDungeonActive == null || isDungeonActive == "false" || isDungeonActive == "0")
		return true;
		
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_onDifferentCorvetteQuest (obj_id player, obj_id npc)
{
	if ( hasObjVar(player, "corl_corvette") )
	{
		if ( !hasObjVar(player, "corl_corvette.rebel_destroy") )
			return true;
	}
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_hasInventorySpace (obj_id player, obj_id npc)
{
	obj_id playerInv = utils.getInventoryContainer(player);
	if ( isIdValid(playerInv) )
	{
		int free_space = getVolumeFree(playerInv);
		if (free_space > 0 )
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean corvette_crowley_rebel1_condition_earnedCorvetteReward (obj_id player, obj_id npc)
{
	return hasObjVar(player, "corvette.rebel_destroy.finished");
}

// ======================================================================
// Script Actions
// ======================================================================

void corvette_crowley_rebel1_action_heardLocation1 (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "corl_corvette.heardLocation1", 1);
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_heardLocation2 (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "corl_corvette.heardLocation2", 1);
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_heardLocation3 (obj_id player, obj_id npc)
{
	utils.setScriptVar(player, "corl_corvette.heardLocation3", 1);
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_acceptQuest (obj_id player, obj_id npc)
{
	if ( !hasObjVar(player, "corl_corvette.rebel_destroy") )
		setObjVar(player, "corl_corvette.rebel_destroy", 1);
	
	string custLogMsg = "*Corvette Ground Quest: Player %TU has started the rebel destroy quest.";
	CustomerServiceLog("DUNGEON_CorellianCorvette", custLogMsg, player);
	
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_clearLocations (obj_id player, obj_id npc)
{
	if ( utils.hasScriptVar(player, "corl_corvette.heardLocation1") )
		utils.removeScriptVar( player, "corl_corvette.heardLocation1");
		
	if ( utils.hasScriptVar(player, "corl_corvette.heardLocation2") )
		utils.removeScriptVar( player, "corl_corvette.heardLocation2");
		
	if ( utils.hasScriptVar(player, "corl_corvette.heardLocation3") )
		utils.removeScriptVar( player, "corl_corvette.heardLocation3");
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_giveTicket (obj_id player, obj_id npc)
{
	obj_id document = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_intel.iff");
	if ( isIdValid(document) )
	{
		destroyObject(document);
		
		obj_id ticket = space_dungeon.createTicket (player, "corellia", "corvette_rebel_pilot", "corvette_rebel");
		setObjVar(ticket, "space_dungeon.ticket.quest_type", "rebel_destroy");
		setObjVar(ticket, "corl_corvette.ticket_owner", player);
		setObjVar(ticket, "noTrade", true);
		attachScript(ticket, "item.special.nomove");
		attachScript(ticket, "theme_park.dungeon.corvette.corvette_quest_cleanup");
		
		string custLogMsg = "*Corvette Ground Quest: Player %TU finished the rebel destroy quest and received a rebel corvette ticket.";
		CustomerServiceLog("DUNGEON_CorellianCorvette", custLogMsg, player);
	}
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_takeObject3 (obj_id player, obj_id npc)
{
	obj_id document = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler02.iff");
	if ( isIdValid(document) )
	{
		destroyObject(document);
		
		string factionReward = "Rebel";
		if (factionReward != "none")
		{
			int factionAmt = 100;
			if (factionAmt != 0)
			{
				factions.addFactionStanding(player,factionReward,factionAmt);
			}
		}
	}
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_takeObject2 (obj_id player, obj_id npc)
{
	obj_id document = utils.getItemPlayerHasByTemplate(player, "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler01.iff");
	if ( isIdValid(document) )
	{
		destroyObject(document);
		
		string factionReward = "Rebel";
		if (factionReward != "none")
		{
			int factionAmt = 100;
			if (factionAmt != 0)
			{
				factions.addFactionStanding(player,factionReward,factionAmt);
			}
		}
	}
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_quitCorvetteQuest (obj_id player, obj_id npc)
{
	if ( hasObjVar(player, "corl_corvette") )
		removeObjVar(player, "corl_corvette");
		
	string custLogMsg = "*Corvette Ground Quest: Player %TU aborted the rebel destroy quest.";
	CustomerServiceLog("DUNGEON_CorellianCorvette", custLogMsg, player);
	
	obj_id document = null;
	string intelTemplate = "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_intel.iff";
	obj_id[] intelDocuments = utils.getAllItemsPlayerHasByTemplateInBankAndInventory(player, intelTemplate);
	if ( intelDocuments != null && intelDocuments.length > 0 )
	{
		for ( int i = 0; i < intelDocuments.length; i++ )
		{
			document = intelDocuments[i];
			if ( isIdValid(document) )
				destroyObject(document);
		}
	}
	
	string filler01Template = "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler01.iff";
	obj_id[] filler01Documents = utils.getAllItemsPlayerHasByTemplateInBankAndInventory(player, filler01Template);
	if ( filler01Documents != null && filler01Documents.length > 0 )
	{
		for ( int i = 0; i < filler01Documents.length; i++ )
		{
			document = filler01Documents[i];
			if ( isIdValid(document) )
				destroyObject(document);
		}
	}

	string filler02Template = "object/tangible/loot/dungeon/corellian_corvette/rebel_destroy_filler02.iff";
	obj_id[] filler02Documents = utils.getAllItemsPlayerHasByTemplateInBankAndInventory(player, filler02Template);
	if ( filler02Documents != null && filler02Documents.length > 0 )
	{
		for ( int i = 0; i < filler02Documents.length; i++ )
		{
			document = filler02Documents[i];
			if ( isIdValid(document) )
				destroyObject(document);
		}
	}
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_removeTicket (obj_id player, obj_id npc)
{
	corvette_crowley_rebel1_action_quitCorvetteQuest(player, npc);
	
	string ticketTemplate = "object/tangible/travel/travel_ticket/dungeon_ticket.iff";
	obj_id[] spaceTickets = utils.getAllItemsPlayerHasByTemplateInBankAndInventory(player, ticketTemplate);
	if (spaceTickets != null && spaceTickets.length > 0 )
	{
		for (int i = 0; i < spaceTickets.length; i++)
		{
			obj_id ticket = spaceTickets[i];
			if ( isIdValid(ticket) )
			{
				if ( getStringObjVar(ticket, "space_dungeon.ticket.quest_type").equals("rebel_destroy") )
				{
					destroyObject(ticket);
					string custLogMsg = "*Corvette Ground Quest: Player %TU aborted the rebel destroy quest and the rebel corvette ticket was revoked.";
					CustomerServiceLog("DUNGEON_CorellianCorvette", custLogMsg, player);
				}
			}
		}
	}	
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_facePlayer (obj_id player, obj_id npc)
{
	faceTo(npc, player);
	return;
}

// ----------------------------------------------------------------------

void corvette_crowley_rebel1_action_giveCorvetteReward (obj_id player, obj_id npc)
{
 	obj_id playerInv = getObjectInSlot(player, "inventory"); 
	if(isIdValid(playerInv))
	{
		createObject("object/tangible/loot/loot_schematic/corellian_corvette_landspeeder_av21_schematic.iff", playerInv, "");
		removeObjVar(player, "corvette.rebel_destroy.finished");
		CustomerServiceLog("DUNGEON_CorellianCorvette", "*Corvette Reward: Player %TU has been given an AV-21 schematic.", player);
	}
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int corvette_crowley_rebel1_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You've done an outstanding job! When I heard that the corvette was destroyed, I was ecstatic. Are you here for your reward?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am. Thank you.
	if (response == "s_36e1dfe9")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition_hasInventorySpace (player, npc))
		{
			corvette_crowley_rebel1_action_giveCorvetteReward (player, npc);

			//-- NPC: It is a pleasure to reward you for such a triumphant mission.
			string_id message = new string_id (c_stringFile, "s_44a0326c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (!corvette_crowley_rebel1_condition_hasInventorySpace (player, npc))
		{
			//-- NPC: Um... while I'd like nothing more than to give you your reward, you do not have room for it at the moment. Please make some space and then talk to me again.
			string_id message = new string_id (c_stringFile, "s_d3c9d7bc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No, I'm not yet ready for it.
	if (response == "s_823e1fa")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Well, whenever you're ready, just come talk to me.
			string_id message = new string_id (c_stringFile, "s_a539245b");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I am surprised to see you here. Are you in need of more information?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Where do I go again?
	if (response == "s_298e244f")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Lt. Lance at the Rebel hideout on Corellia is waiting to meet you. He will provide transportation which will enable you to intercept the stolen Corellian corvette. After you've victoriously completed your mission, return to me for a reward.
			string_id message = new string_id (c_stringFile, "s_2373d61a");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot continue with this mission. Please erase my progress from your records.
	if (response == "s_d5084988")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Are you certain? Very well. But your progress will be erased, any remaining documents will be confiscated, and the travel authorization will be revoked. If you change you mind and decide to try again, you'll have to start from the beginning.
			string_id message = new string_id (c_stringFile, "s_fb051f63");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: That's okay. I cannot continue.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Er... maybe I'll do it. Or at least think about it.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b4b735ef");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b6a784f4");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I still have documents for you.
	if (response == "s_2f26b4c4")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: I see. Which documents do you have for me?
			string_id message = new string_id (c_stringFile, "s_3bd032cd");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Are you certain? Very well. But your progress will be erased, any remaining documents will be confiscated, and the travel authorization will be revoked. If you change you mind and decide to try again, you'll have to start from the beginning.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's okay. I cannot continue.
	if (response == "s_b4b735ef")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_removeTicket (player, npc);

			//-- NPC: A pity, indeed. You have been released from the mission.
			string_id message = new string_id (c_stringFile, "s_c03449c4");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Er... maybe I'll do it. Or at least think about it.
	if (response == "s_b6a784f4")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: There is hope yet. Good luck on your mission.
			string_id message = new string_id (c_stringFile, "s_1b28b4c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch13 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see. Which documents do you have for me?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Ship Preparation Document.
	if (response == "s_7cfd3686")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_giveTicket (player, npc);

			//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.
			string_id message = new string_id (c_stringFile, "s_397c5f6d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Imperial Memorandum.
	if (response == "s_710a8214")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject2 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_9dc63a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Paid Time Off (PTO) Request.
	if (response == "s_d4a6b26")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject3 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to meet our contact on Corellia.
	if (response == "s_b0bbc0c3")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck, young recruit. Return in victory and be rewarded. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_908f0d55");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Looks like I have more to do.
	if (response == "s_a128e067")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You'll need to find the information as quickly as possible.
			string_id message = new string_id (c_stringFile, "s_da09e61c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I see you have returned. Have you found what we're looking for?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, I did.
	if (response == "s_b30bd73c")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: What exactly have you found?
			string_id message = new string_id (c_stringFile, "s_16205aba");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What am I looking for again?
	if (response == "s_4fa93758")
	{
		corvette_crowley_rebel1_action_clearLocations (player, npc);

		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: You need to find a document which details the location of the Corellian corvette. Which location do you need more information on?
			string_id message = new string_id (c_stringFile, "s_dd846d25");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I cannot continue with this mission. Please erase my progress from your records.
	if (response == "s_39")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: That is sad news, but I will do so. It will be difficult to replace you. I'll have to retrieve all documents and data gathered for this mission from you. Sorry, but it's required.
			string_id message = new string_id (c_stringFile, "s_cb6caf3");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: What exactly have you found?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Ship Preparation Document.
	if (response == "s_7cfd3686")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_giveTicket (player, npc);

			//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.
			string_id message = new string_id (c_stringFile, "s_397c5f6d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Imperial Memorandum.
	if (response == "s_710a8214")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject2 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_9dc63a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Paid Time Off (PTO) Request.
	if (response == "s_d4a6b26")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject3 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to meet our contact on Corellia.
	if (response == "s_b0bbc0c3")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck, young recruit. Return in victory and be rewarded. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_908f0d55");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Looks like I have more to do.
	if (response == "s_a128e067")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You'll need to find the information as quickly as possible.
			string_id message = new string_id (c_stringFile, "s_da09e61c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch16 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Ship Preparation Document.
	if (response == "s_7cfd3686")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_giveTicket (player, npc);

			//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.
			string_id message = new string_id (c_stringFile, "s_397c5f6d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Imperial Memorandum.
	if (response == "s_710a8214")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject2 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_9dc63a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Paid Time Off (PTO) Request.
	if (response == "s_d4a6b26")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject3 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to meet our contact on Corellia.
	if (response == "s_b0bbc0c3")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck, young recruit. Return in victory and be rewarded. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_908f0d55");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Looks like I have more to do.
	if (response == "s_a128e067")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You'll need to find the information as quickly as possible.
			string_id message = new string_id (c_stringFile, "s_da09e61c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch17 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Ship Preparation Document.
	if (response == "s_7cfd3686")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_giveTicket (player, npc);

			//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.
			string_id message = new string_id (c_stringFile, "s_397c5f6d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Imperial Memorandum.
	if (response == "s_710a8214")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject2 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_9dc63a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Paid Time Off (PTO) Request.
	if (response == "s_d4a6b26")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject3 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to meet our contact on Corellia.
	if (response == "s_b0bbc0c3")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck, young recruit. Return in victory and be rewarded. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_908f0d55");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Looks like I have more to do.
	if (response == "s_a128e067")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You'll need to find the information as quickly as possible.
			string_id message = new string_id (c_stringFile, "s_da09e61c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Ship Preparation Document.
	if (response == "s_7cfd3686")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_giveTicket (player, npc);

			//-- NPC: Excellent! This is exactly the information we've needed! We now know where the Corellian corvette is. You'll need to speak with Lt. Lance at the Rebel Alliance hideout on Corellia. He will provide transportation which will enable you to intercept the stolen Corellian corvette. When you get to the corvette, it must be destroyed before it hits Centerpoint Station near Corellia. Once that has been accomplished return to me for a reward. Now go see Lt. Lance on Corellia.
			string_id message = new string_id (c_stringFile, "s_397c5f6d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Imperial Memorandum.
	if (response == "s_710a8214")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject2 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_9dc63a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I found this Paid Time Off (PTO) Request.
	if (response == "s_d4a6b26")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_takeObject3 (player, npc);

			//-- NPC: Unfortunately, this isn't the information needed for our mission. However, any information is good information. I will reward you for this.
			string_id message = new string_id (c_stringFile, "s_31");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I found this Ship Preparation Document.
			boolean hasResponse0 = false;
			if (corvette_crowley_rebel1_condition_hasObject01 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I found this Imperial Memorandum.
			boolean hasResponse1 = false;
			if (corvette_crowley_rebel1_condition_hasObject02 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: I found this Paid Time Off (PTO) Request.
			boolean hasResponse2 = false;
			if (corvette_crowley_rebel1_condition_hasObject03 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I'm off to meet our contact on Corellia.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: Looks like I have more to do.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition_hasNoObjectsAndNoTicket (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_7cfd3686");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_710a8214");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_d4a6b26");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_b0bbc0c3");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a128e067");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 15);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm off to meet our contact on Corellia.
	if (response == "s_b0bbc0c3")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good luck, young recruit. Return in victory and be rewarded. May the Force be with you.
			string_id message = new string_id (c_stringFile, "s_908f0d55");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Looks like I have more to do.
	if (response == "s_a128e067")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Indeed. You'll need to find the information as quickly as possible.
			string_id message = new string_id (c_stringFile, "s_da09e61c");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: You need to find a document which details the location of the Corellian corvette. Which location do you need more information on?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Imperial Base.
	if (response == "s_c6392194")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation1 (player, npc);

			//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.
			string_id message = new string_id (c_stringFile, "s_fa42cc8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
	if (response == "s_aec5e53e")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation2 (player, npc);

			//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.
			string_id message = new string_id (c_stringFile, "s_2621fdc0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about Dathomir Prison.
	if (response == "s_eb5ae08")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation3 (player, npc);

			//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.
			string_id message = new string_id (c_stringFile, "s_7ed78a88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_acceptQuest (player, npc);

			//-- NPC: Hope has been uplifted in me by you. Be swift and come back safely with the information we need.
			string_id message = new string_id (c_stringFile, "s_71aabcdc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm not interested in doing this.
	if (response == "s_74a0348d")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: A pity. I am disappointed but will find another to replace you.
			string_id message = new string_id (c_stringFile, "s_762ce016");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: One of our own Corellian corvettes. Unthinkable. The Empire has crafted a diabolical political maneuver. They've stolen a Corellian corvette and are filling it with explosives. They intend to send it hurtling into Centerpoint Station near Corellia. The plan being to make the Rebels look both foolish and dangerous at the same time. We must stop them before they complete their horrible plan.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is there anything I can do to help?
	if (response == "s_59f5cee6")
	{
		corvette_crowley_rebel1_action_clearLocations (player, npc);

		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: Hmm... Indeed. You seem capable enough to help us in this endeavor. We must find the location of that Corellian corvette. We believe it to be somewhere in deep space and thus harder to find and safer in case anything goes wrong. Based on intel gathered, I know of three places you should look. Those being  the Imperial Base on Lok, the Rogue CorSec base on Corellia, and the Imperial prison on Dathomir.
			string_id message = new string_id (c_stringFile, "s_e77661bc");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not interested.
	if (response == "s_df8ea53")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			//-- NPC: I'm sorry to hear that. Very well, we'll continue on without you.
			string_id message = new string_id (c_stringFile, "s_f26df06d");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch24 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Hmm... Indeed. You seem capable enough to help us in this endeavor. We must find the location of that Corellian corvette. We believe it to be somewhere in deep space and thus harder to find and safer in case anything goes wrong. Based on intel gathered, I know of three places you should look. Those being  the Imperial Base on Lok, the Rogue CorSec base on Corellia, and the Imperial prison on Dathomir.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Imperial Base.
	if (response == "s_c6392194")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation1 (player, npc);

			//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.
			string_id message = new string_id (c_stringFile, "s_fa42cc8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
	if (response == "s_aec5e53e")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation2 (player, npc);

			//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.
			string_id message = new string_id (c_stringFile, "s_2621fdc0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about Dathomir Prison.
	if (response == "s_eb5ae08")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation3 (player, npc);

			//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.
			string_id message = new string_id (c_stringFile, "s_7ed78a88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_acceptQuest (player, npc);

			//-- NPC: Hope has been uplifted in me by you. Be swift and come back safely with the information we need.
			string_id message = new string_id (c_stringFile, "s_71aabcdc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm not interested in doing this.
	if (response == "s_74a0348d")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: A pity. I am disappointed but will find another to replace you.
			string_id message = new string_id (c_stringFile, "s_762ce016");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch25 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Imperial Base.
	if (response == "s_c6392194")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation1 (player, npc);

			//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.
			string_id message = new string_id (c_stringFile, "s_fa42cc8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
	if (response == "s_aec5e53e")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation2 (player, npc);

			//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.
			string_id message = new string_id (c_stringFile, "s_2621fdc0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about Dathomir Prison.
	if (response == "s_eb5ae08")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation3 (player, npc);

			//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.
			string_id message = new string_id (c_stringFile, "s_7ed78a88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_acceptQuest (player, npc);

			//-- NPC: Hope has been uplifted in me by you. Be swift and come back safely with the information we need.
			string_id message = new string_id (c_stringFile, "s_71aabcdc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm not interested in doing this.
	if (response == "s_74a0348d")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: A pity. I am disappointed but will find another to replace you.
			string_id message = new string_id (c_stringFile, "s_762ce016");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch26 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Imperial Base.
	if (response == "s_c6392194")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation1 (player, npc);

			//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.
			string_id message = new string_id (c_stringFile, "s_fa42cc8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
	if (response == "s_aec5e53e")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation2 (player, npc);

			//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.
			string_id message = new string_id (c_stringFile, "s_2621fdc0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about Dathomir Prison.
	if (response == "s_eb5ae08")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation3 (player, npc);

			//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.
			string_id message = new string_id (c_stringFile, "s_7ed78a88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_acceptQuest (player, npc);

			//-- NPC: Hope has been uplifted in me by you. Be swift and come back safely with the information we need.
			string_id message = new string_id (c_stringFile, "s_71aabcdc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm not interested in doing this.
	if (response == "s_74a0348d")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: A pity. I am disappointed but will find another to replace you.
			string_id message = new string_id (c_stringFile, "s_762ce016");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int corvette_crowley_rebel1_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Imperial Base.
	if (response == "s_c6392194")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation1 (player, npc);

			//-- NPC: We have reason to believe that Imperial General Otto, stationed at the Imperial base on Lok, may be supplying the explosives being used on the corvette. General Otto is known to be fairly careless, so it would not be surprising if the information you seek was in an unsecured crate or desk somewhere. Seek out his base and return with any information you find.
			string_id message = new string_id (c_stringFile, "s_fa42cc8d");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
	if (response == "s_aec5e53e")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation2 (player, npc);

			//-- NPC: Rumor is that a group of Rogue CorSec operatives have stolen some important documents from the Empire. This could well include the information I'm looking for. If so, it's in their hideout on Corellia.
			string_id message = new string_id (c_stringFile, "s_2621fdc0");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Tell me about Dathomir Prison.
	if (response == "s_eb5ae08")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_heardLocation3 (player, npc);

			//-- NPC: Many who have been taken to the Imperial Prison on Dathomir have never been seen again. It is a dangerous and forbidding place. Rumor is that the surviving crew of this corvette is incarcerated there. Travel to this dangerous planet and infiltrate the prison. Search for any information you can find.
			string_id message = new string_id (c_stringFile, "s_7ed78a88");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Tell me about the Imperial Base.
			boolean hasResponse0 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation1 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tell me about the Rogue CorSec base on Corellia.
			boolean hasResponse1 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation2 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			//-- PLAYER: Tell me about Dathomir Prison.
			boolean hasResponse2 = false;
			if (!corvette_crowley_rebel1_condition_knowsLocation3 (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse2 = true;
			}

			//-- PLAYER: I accept this mission.
			boolean hasResponse3 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse3 = true;
			}

			//-- PLAYER: No thanks. I'm not interested in doing this.
			boolean hasResponse4 = false;
			if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse4 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_c6392194");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_aec5e53e");

				if (hasResponse2)
					responses [responseIndex++] = new string_id (c_stringFile, "s_eb5ae08");

				if (hasResponse3)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a5591c27");

				if (hasResponse4)
					responses [responseIndex++] = new string_id (c_stringFile, "s_74a0348d");

				utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 24);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I accept this mission.
	if (response == "s_a5591c27")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_acceptQuest (player, npc);

			//-- NPC: Hope has been uplifted in me by you. Be swift and come back safely with the information we need.
			string_id message = new string_id (c_stringFile, "s_71aabcdc");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thanks. I'm not interested in doing this.
	if (response == "s_74a0348d")
	{
		//-- [NOTE] 
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			corvette_crowley_rebel1_action_quitCorvetteQuest (player, npc);

			//-- NPC: A pity. I am disappointed but will find another to replace you.
			string_id message = new string_id (c_stringFile, "s_762ce016");
			utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.corvette_crowley_rebel1");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	setName (self, "Master Sergeant Crowley");
	setInvulnerable(self, true);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.corvette_crowley_rebel1");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_dungeonInactive (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: Excuse me a minute, I'm awaiting important orders about an upcoming... well, I can't really reveal anything more at this time. But I must remain at full readiness. Not a moment should be wasted when the word is given.
		string_id message = new string_id (c_stringFile, "s_b155820c");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_notRebel (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: I've much to do... I'm afraid I don't have time to spare unless it involves urgent Rebel business.
		string_id message = new string_id (c_stringFile, "s_c55f8e77");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_earnedCorvetteReward (player, npc))
	{
		//-- NPC: You've done an outstanding job! When I heard that the corvette was destroyed, I was ecstatic. Are you here for your reward?
		string_id message = new string_id (c_stringFile, "s_729d86e2");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am. Thank you.
		boolean hasResponse0 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, I'm not yet ready for it.
		boolean hasResponse1 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36e1dfe9");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_823e1fa");

			utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 3);

			npcStartConversation (player, npc, "corvette_crowley_rebel1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_onDifferentCorvetteQuest (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: I suppose I could use your help, but I see that you're already busy. Come back when you've finished your current task and maybe you can still help.
		string_id message = new string_id (c_stringFile, "s_2c449c28");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_hasTravelTicket (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: I am surprised to see you here. Are you in need of more information?
		string_id message = new string_id (c_stringFile, "s_bcc53c45");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Where do I go again?
		boolean hasResponse0 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I cannot continue with this mission. Please erase my progress from your records.
		boolean hasResponse1 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I still have documents for you.
		boolean hasResponse2 = false;
		if (corvette_crowley_rebel1_condition_hasStuff (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_298e244f");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_d5084988");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_2f26b4c4");

			utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 8);

			npcStartConversation (player, npc, "corvette_crowley_rebel1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition_isOnQuest (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: I see you have returned. Have you found what we're looking for?
		string_id message = new string_id (c_stringFile, "s_a4965b23");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, I did.
		boolean hasResponse0 = false;
		if (corvette_crowley_rebel1_condition_hasStuff (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: What am I looking for again?
		boolean hasResponse1 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		//-- PLAYER: I cannot continue with this mission. Please erase my progress from your records.
		boolean hasResponse2 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse2 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b30bd73c");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_4fa93758");

			if (hasResponse2)
				responses [responseIndex++] = new string_id (c_stringFile, "s_39");

			utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 14);

			npcStartConversation (player, npc, "corvette_crowley_rebel1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
	{
		corvette_crowley_rebel1_action_facePlayer (player, npc);

		//-- NPC: One of our own Corellian corvettes. Unthinkable. The Empire has crafted a diabolical political maneuver. They've stolen a Corellian corvette and are filling it with explosives. They intend to send it hurtling into Centerpoint Station near Corellia. The plan being to make the Rebels look both foolish and dangerous at the same time. We must stop them before they complete their horrible plan.
		string_id message = new string_id (c_stringFile, "s_84bd3f49");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Is there anything I can do to help?
		boolean hasResponse0 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Not interested.
		boolean hasResponse1 = false;
		if (corvette_crowley_rebel1_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_59f5cee6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_df8ea53");

			utils.setScriptVar (player, "conversation.corvette_crowley_rebel1.branchId", 23);

			npcStartConversation (player, npc, "corvette_crowley_rebel1", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "corvette_crowley_rebel1")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

	if (branchId == 3 && corvette_crowley_rebel1_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && corvette_crowley_rebel1_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && corvette_crowley_rebel1_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 13 && corvette_crowley_rebel1_handleBranch13 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && corvette_crowley_rebel1_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && corvette_crowley_rebel1_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 16 && corvette_crowley_rebel1_handleBranch16 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 17 && corvette_crowley_rebel1_handleBranch17 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && corvette_crowley_rebel1_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && corvette_crowley_rebel1_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && corvette_crowley_rebel1_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 24 && corvette_crowley_rebel1_handleBranch24 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 25 && corvette_crowley_rebel1_handleBranch25 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 26 && corvette_crowley_rebel1_handleBranch26 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && corvette_crowley_rebel1_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.corvette_crowley_rebel1.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

