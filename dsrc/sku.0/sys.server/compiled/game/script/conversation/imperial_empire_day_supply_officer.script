// ======================================================================
//
// imperial_empire_day_supply_officer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.37 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.conversation;
include library.groundquests;
include library.holiday;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/imperial_empire_day_supply_officer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean imperial_empire_day_supply_officer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean imperial_empire_day_supply_officer_condition_hasNotCraftedSupplies (obj_id player, obj_id npc)
{
	for(int i = 0; i < holiday.ALL_IMPERIAL_QUESTS.length; i++)
	{
		if(groundquests.isQuestActive(player, holiday.ALL_IMPERIAL_QUESTS[i])
		&& groundquests.isTaskActive(player, holiday.ALL_IMPERIAL_QUESTS[i], "crafteSupplies"))
		{
			return true;
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean imperial_empire_day_supply_officer_condition_hasCompletedFirstMission (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_IMP_CRASHSITE_01_DOMESTICS)
	|| groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_IMP_CRASHSITE_01_ENG)
	|| groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_IMP_CRASHSITE_01_MUNITIONS)
	|| groundquests.hasCompletedQuest(player, holiday.EMPIREDAYQUEST_IMP_CRASHSITE_01_STRUC);
}

// ----------------------------------------------------------------------

boolean imperial_empire_day_supply_officer_condition_hasImperialMissionActiveWithTask (obj_id player, obj_id npc)
{
	for(int i = 0; i < holiday.ALL_IMPERIAL_QUESTS.length; i++)
	{
		if(groundquests.isQuestActive(player, holiday.ALL_IMPERIAL_QUESTS[i])
		&& groundquests.isTaskActive(player, holiday.ALL_IMPERIAL_QUESTS[i], holiday.ALL_IMPERIAL_QUESTS[i]))
		{
			return true;
		}
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void imperial_empire_day_supply_officer_action_activateDeliverySignal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "spokeToSupplyOfficer"); 
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int imperial_empire_day_supply_officer_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I have very important business to attend to. Please speak with the Major if you have questions.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have supplies to deliver.
	if (response == "s_7")
	{
		//-- [NOTE] 
		if (!imperial_empire_day_supply_officer_condition_hasCompletedFirstMission (player, npc))
		{
			//-- NPC: Is this some sort of prank?
			string_id message = new string_id (c_stringFile, "s_9");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Not at all. I have returned from the Rori crash site and I have a crate of supplies.
			boolean hasResponse0 = false;
			if (imperial_empire_day_supply_officer_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_11");

				utils.setScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId", 3);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (imperial_empire_day_supply_officer_condition_hasCompletedFirstMission (player, npc))
		{
			//-- NPC: Again?  You are truly the saviour.  I will be reporting your name to High Command! For once I get to report something positive. Please hand me the supplies.
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int imperial_empire_day_supply_officer_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Is this some sort of prank?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not at all. I have returned from the Rori crash site and I have a crate of supplies.
	if (response == "s_11")
	{
		//-- [NOTE] 
		if (imperial_empire_day_supply_officer_condition__defaultCondition (player, npc))
		{
			imperial_empire_day_supply_officer_action_activateDeliverySignal (player, npc);

			//-- NPC: Fantastic! I had received a report that the supplies wouldn't be making it. You just saved the Empire a great deal of money. Please hand me the supplies.
			string_id message = new string_id (c_stringFile, "s_13");
			utils.removeScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isTangible (self)) || (isPlayer (self)))
		detachScript(self, "conversation.imperial_empire_day_supply_officer");

	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.imperial_empire_day_supply_officer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (imperial_empire_day_supply_officer_condition_hasNotCraftedSupplies (player, npc))
	{
		//-- NPC: Looks like you have an inventory full of supplies you need to craft into a supply crate for me. Come back when that is done.
		string_id message = new string_id (c_stringFile, "s_17");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (imperial_empire_day_supply_officer_condition_hasImperialMissionActiveWithTask (player, npc))
	{
		//-- NPC: I have very important business to attend to. Please speak with the Major if you have questions.
		string_id message = new string_id (c_stringFile, "s_5");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have supplies to deliver.
		boolean hasResponse0 = false;
		if (imperial_empire_day_supply_officer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_7");

			utils.setScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId", 2);

			npcStartConversation (player, npc, "imperial_empire_day_supply_officer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (imperial_empire_day_supply_officer_condition__defaultCondition (player, npc))
	{
		//-- NPC: Sorry, I don't have time to talk. Speak with Major Tantor if you have questions.
		string_id message = new string_id (c_stringFile, "s_18");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "imperial_empire_day_supply_officer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId");

	if (branchId == 2 && imperial_empire_day_supply_officer_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 3 && imperial_empire_day_supply_officer_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.imperial_empire_day_supply_officer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

