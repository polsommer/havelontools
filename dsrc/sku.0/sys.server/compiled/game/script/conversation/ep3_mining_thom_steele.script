// ======================================================================
//
// ep3_mining_thom_steele.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.30 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.groundquests;
include library.space_flags;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/ep3_mining_thom_steele";

// ======================================================================
// Script Conditions
// ======================================================================

boolean ep3_mining_thom_steele_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasCompletedQuestOne (obj_id player, obj_id npc)
{
	// Returns TRUE of this quest is complete
	return (groundquests.hasCompletedQuest(player, "ep3_mining_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_isQuestOneActive (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "ep3_mining_quest_1"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_isQuestTwoActive (obj_id player, obj_id npc)
{
	return (space_quest.hasQuest( player, "patrol", "corellia_mining_quest_2" ) || 
	space_quest.hasQuest( player, "destroy_surpriseattack", "corellia_mining_quest_2" ));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_canTakeQuestTwo (obj_id player, obj_id npc)
{
	//debugSpeakMsg(player, "I have finished quest 1 = " + groundquests.hasCompletedQuest(player, "ep3_mining_quest_1"));
	return (groundquests.hasCompletedQuest(player, "ep3_mining_quest_1") && 
	!(space_quest.hasCompletedQuest( player, "patrol", "corellia_mining_quest_2" )));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_canTakeQuestThree (obj_id player, obj_id npc)
{
	return (space_quest.hasCompletedQuest(player, "patrol", "corellia_mining_quest_2") && 
	!(space_quest.hasQuest( player, "space_mining_destroy", "corellia_mining_quest_3" )));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_isQuestThreeActive (obj_id player, obj_id npc)
{
	return space_quest.hasQuest( player, "space_mining_destroy", "corellia_mining_quest_3" );
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasCompletedQuestTwo (obj_id player, obj_id npc)
{
	return (space_quest.hasWonQuest(player, "patrol", "corellia_mining_quest_2") &&
	space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_mining_quest_2") && 
	!space_quest.hasQuest( player, "space_mining_destroy", "corellia_mining_quest_3" ));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasBeenRewardedForQuestTwo (obj_id player, obj_id npc)
{
	return (space_quest.hasReceivedReward( player, "patrol", "corellia_mining_quest_2") && 
	!space_quest.hasQuest( player, "space_mining_destroy", "corellia_mining_quest_3" ));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasCompletedQuestThree (obj_id player, obj_id npc)
{
	return (space_quest.hasWonQuest(player, "space_mining_destroy", "corellia_mining_quest_3") &&
	!space_quest.hasReceivedReward( player, "space_mining_destroy", "corellia_mining_quest_3"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_completedAll (obj_id player, obj_id npc)
{
	return (space_quest.hasCompletedQuest(player, "patrol", "corellia_mining_quest_2") && 
	space_quest.hasCompletedQuest( player, "space_mining_destroy", "corellia_mining_quest_3" ) &&
	space_quest.hasCompletedQuest( player, "space_mining_destroy", "corellia_mining_quest_3") &&
	(groundquests.isQuestActive(player, "ep3_mining_quest_4") || 
	 groundquests.hasCompletedQuest(player, "ep3_mining_quest_4")));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_canTakeQuestFour (obj_id player, obj_id npc)
{
	return (space_quest.hasCompletedQuest(player, "space_mining_destroy", "corellia_mining_quest_3") && 
	!groundquests.isQuestActive(player, "ep3_mining_quest_4") &&
	space_quest.hasReceivedReward( player, "space_mining_destroy", "corellia_mining_quest_3"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_isQuestFourActive (obj_id player, obj_id npc)
{
	return (groundquests.isQuestActive(player, "ep3_mining_quest_4"));
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasFailedQuestTwo (obj_id player, obj_id npc)
{
	if (space_quest.hasAbortedQuest(player, "patrol", "corellia_mining_quest_2") ||
	  space_quest.hasFailedQuest(player, "patrol", "corellia_mining_quest_2" ))
	  {
	  	if (!space_quest.hasWonQuest(player, "patrol", "corellia_mining_quest_2"))
	  		return true;
	  
	  } 

	if((space_quest.hasAbortedQuest(player, "destroy_surpriseattack", "corellia_mining_quest_2") ||
	  space_quest.hasFailedQuest(player, "destroy_surpriseattack", "corellia_mining_quest_2" )) &&
	 !space_quest.hasWonQuest(player, "destroy_surpriseattack", "corellia_mining_quest_2"))
	 {
		return true;
	 }
		
	return false;
}

// ----------------------------------------------------------------------

boolean ep3_mining_thom_steele_condition_hasFailedQuestThree (obj_id player, obj_id npc)
{
	if (space_quest.hasAbortedQuest(player, "space_mining_destroy", "corellia_mining_quest_3") ||
	  space_quest.hasFailedQuest(player, "space_mining_destroy", "corellia_mining_quest_3" ))
	  {
	  	if (!space_quest.hasWonQuest(player, "space_mining_destroy", "corellia_mining_quest_3"))
	  		return true; 
	  } 		
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void ep3_mining_thom_steele_action_sendSignalToPlayer (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "talkedToThom");
}

// ----------------------------------------------------------------------

void ep3_mining_thom_steele_action_grantQuest2 (obj_id player, obj_id npc)
{
	// Animation.

	// Mission grant.
	space_quest.grantQuest( player, "patrol", "corellia_mining_quest_2" );
	space_flags.restoreClientPath( player );
}

// ----------------------------------------------------------------------

void ep3_mining_thom_steele_action_grantQuest3 (obj_id player, obj_id npc)
{
	// Animation.
	
	// Mission grant.
	space_quest.grantQuest( player, "space_mining_destroy", "corellia_mining_quest_3" );

}

// ----------------------------------------------------------------------

void ep3_mining_thom_steele_action_giveReward2 (obj_id player, obj_id npc)
{
	if (space_quest.hasReceivedReward( player, "patrol", "corellia_mining_quest_2" ))
		return;

	// Give credits.

	space_quest.giveReward( player, "patrol", "corellia_mining_quest_2", 1500, "object/tangible/ship/components/weapon/wpn_mining_laser_mk1.iff" );
	createObjectInInventoryAllowOverload( "object/tangible/ship/components/cargo_hold/crg_starfighter_small.iff", player );
}

// ----------------------------------------------------------------------

void ep3_mining_thom_steele_action_giveReward3 (obj_id player, obj_id npc)
{
if (space_quest.hasReceivedReward( player, "space_mining_destroy", "corellia_mining_quest_3" ))
		return;
		
	// Give credits.

	space_quest.giveReward( player, "space_mining_destroy", "corellia_mining_quest_3", 2000);
}

// ----------------------------------------------------------------------

void ep3_mining_thom_steele_action_grantQuest4 (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "ep3_mining_quest_4");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int ep3_mining_thom_steele_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Back again, eh old sport?  Did you decide on the job I had offered you?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes.  I'll take it.
	if (response == "s_236")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest4 (player, npc);

			//-- NPC: I knew you'd come through again!  Now get going!
			string_id message = new string_id (c_stringFile, "s_238");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It's not for me.  Sorry.
	if (response == "s_240")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Then why on earth did you come back to me?  Get lost!
			string_id message = new string_id (c_stringFile, "s_242");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Where are those samples?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I couldn't get them for you...
	if (response == "s_64")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest3 (player, npc);

			//-- NPC: Failure is not an option!  Get back up there and get me those samples, pilot!
			string_id message = new string_id (c_stringFile, "s_65");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Did you get me those samples?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I did.  Here they are, 'old sport'.
	if (response == "s_248")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Bah, mocking me is not the way to impress me!  In any case, thank you for getting these samples.  You can keep those resources you mined, or sell them at a resource station.  You did know you could do that, right?
			string_id message = new string_id (c_stringFile, "s_250");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: You learn something new every day.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_252");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Bah, mocking me is not the way to impress me!  In any case, thank you for getting these samples.  You can keep those resources you mined, or sell them at a resource station.  You did know you could do that, right?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: You learn something new every day.
	if (response == "s_252")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Every system has a station that will buy asteroid resources from you for a set price.  Some stations pay more for certain things than others.  There's a lot of money to be made in the mining industry!
			string_id message = new string_id (c_stringFile, "s_254");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll remember that.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_256");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Every system has a station that will buy asteroid resources from you for a set price.  Some stations pay more for certain things than others.  There's a lot of money to be made in the mining industry!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll remember that.
	if (response == "s_256")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_giveReward3 (player, npc);

			//-- NPC: Here's a little something for your troubles too.  Now, I'd like you to head back to Kashyyyk and take over some of Flash's duties while he's grounded.  You'll want to report to Captain Koh of the mining fleet when you get there.  He'll be anxious to get you up and flying.
			string_id message = new string_id (c_stringFile, "s_258");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'll head out right away.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: I'm done with mining for a while.
			boolean hasResponse1 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_260");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_264");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Here's a little something for your troubles too.  Now, I'd like you to head back to Kashyyyk and take over some of Flash's duties while he's grounded.  You'll want to report to Captain Koh of the mining fleet when you get there.  He'll be anxious to get you up and flying.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll head out right away.
	if (response == "s_260")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest4 (player, npc);

			//-- NPC: I knew you'd come through again!  Now get going!
			string_id message = new string_id (c_stringFile, "s_262");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm done with mining for a while.
	if (response == "s_264")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Let me know if you change your mind.
			string_id message = new string_id (c_stringFile, "s_266");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch15 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome back!  Thought it over a bit?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have.  I'm ready for your mission.
	if (response == "s_270")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest3 (player, npc);

			//-- NPC: Great!  You always come through...err...old friend!  An abundance of silicaceous asteroids have entered the Corellia system recently, and we'd like a piece of those minerals.  Head up there and get us a sample.  You can keep whatever you mine, we'll only scrape a bit off to test the quality.  250 units should be enough to get a proper sample.
			string_id message = new string_id (c_stringFile, "s_272");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I have, and there's no way I'm going out there.
	if (response == "s_274")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Suit yourself.
			string_id message = new string_id (c_stringFile, "s_276");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch18 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm disappointed in you pilot...that was a simple mission!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'll see that it never happens again.
	if (response == "s_57")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest2 (player, npc);

			//-- NPC: Do that.  Right now.  Come on, get moving!  Try it again and report back!
			string_id message = new string_id (c_stringFile, "s_58");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch20 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ah, back from your patrol, eh...err...old friend!  Did you give our competition the old white glove treatment?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's one way of putting it.
	if (response == "s_280")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Good job, old sport!  You and I are going to get along just fine.  Here, I have a present for you!
			string_id message = new string_id (c_stringFile, "s_282");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Is it Life Day already?
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_284");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 21);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch21 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good job, old sport!  You and I are going to get along just fine.  Here, I have a present for you!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Is it Life Day already?
	if (response == "s_284")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "laugh");

			ep3_mining_thom_steele_action_giveReward2 (player, npc);

			//-- NPC: Haw!  Good one!  No, your reward for taking care of those thugs!  This is a mining laser that we salvag...that was handed in by one of our last mining pilots when he retired without being blown completely to smithereens by pirates.  I'm also giving you a cargo hold.  You'll need to load this onto your ship before you can mine asteroids.
			string_id message = new string_id (c_stringFile, "s_286");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Such is the life of a space miner.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_288");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 22);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch22 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Haw!  Good one!  No, your reward for taking care of those thugs!  This is a mining laser that we salvag...that was handed in by one of our last mining pilots when he retired without being blown completely to smithereens by pirates.  I'm also giving you a cargo hold.  You'll need to load this onto your ship before you can mine asteroids.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Such is the life of a space miner.
	if (response == "s_288")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: Don't get me wrong, pilot,  it's dangerous out there!  But you're better than them!  You won't fall victim to space slugs, pirates, or any of the hundred other dangers mining pilots face every day!  That said, ready for another task?
			string_id message = new string_id (c_stringFile, "s_290");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure.  What did you have in mind?
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Sounds dangerous.  I'll think about it.
			boolean hasResponse1 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_292");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_296");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 23);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch23 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Don't get me wrong, pilot,  it's dangerous out there!  But you're better than them!  You won't fall victim to space slugs, pirates, or any of the hundred other dangers mining pilots face every day!  That said, ready for another task?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure.  What did you have in mind?
	if (response == "s_292")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest3 (player, npc);

			//-- NPC: An abundance of silicaceous asteroids have entered the Corellia system recently, and we'd like a piece of those minerals.  Head up there and get us a sample.  You can keep whatever you mine, we'll only scrape a bit off to test the quality.  250 units should be enough to get a proper sample.
			string_id message = new string_id (c_stringFile, "s_294");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sounds dangerous.  I'll think about it.
	if (response == "s_296")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "dismiss");

			//-- NPC: Suit yourself.
			string_id message = new string_id (c_stringFile, "s_298");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch27 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Ready for that job I was talking about?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Absolutely.  What was it again?
	if (response == "s_304")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: There have been reports of rival mining vessels horning in on our business in Corellian space.  It would be a shame if something happened to them.  You should go happen to them.  Heh.  That was a good one!
			string_id message = new string_id (c_stringFile, "s_306");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I'm on it.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_308");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 28);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch28 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: There have been reports of rival mining vessels horning in on our business in Corellian space.  It would be a shame if something happened to them.  You should go happen to them.  Heh.  That was a good one!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm on it.
	if (response == "s_308")
	{
		ep3_mining_thom_steele_action_grantQuest2 (player, npc);

		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: I knew I could count on you, old top!
			string_id message = new string_id (c_stringFile, "s_310");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch30 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Yes?  Look, I'm very busy...

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I come bearing a message from Flash Harrison on Kashyyyk.
	if (response == "s_314")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_sendSignalToPlayer (player, npc);

			//-- NPC: That windbag?  Err...I mean....that valuable asset to our company?  Flash can be a little overbearing.  What's the message?
			string_id message = new string_id (c_stringFile, "s_316");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: He's stuck on Kashyyyk, and I don't think he likes Wookiees.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_318");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 31);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch31 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: That windbag?  Err...I mean....that valuable asset to our company?  Flash can be a little overbearing.  What's the message?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: He's stuck on Kashyyyk, and I don't think he likes Wookiees.
	if (response == "s_318")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			//-- NPC: The Wookiee phobia is his problem.  Losing a mining pilot is mine.  How am I going to come up with a quick replacement for that braggart?  Hmm...you there, you look like you could hold your own out there.  Can you fly a ship?
			string_id message = new string_id (c_stringFile, "s_320");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure I can.
			boolean hasResponse0 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Nope.
			boolean hasResponse1 = false;
			if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_322");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_326");

				utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 32);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int ep3_mining_thom_steele_handleBranch32 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: The Wookiee phobia is his problem.  Losing a mining pilot is mine.  How am I going to come up with a quick replacement for that braggart?  Hmm...you there, you look like you could hold your own out there.  Can you fly a ship?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure I can.
	if (response == "s_322")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			ep3_mining_thom_steele_action_grantQuest2 (player, npc);

			//-- NPC: I knew I could count on you...err...whatever you said your name was.  Get in your ship and head up to Corellian space.  There have been reports of rival mining vessels horning in on our business.  It would be a shame if something happened to them.
			string_id message = new string_id (c_stringFile, "s_324");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Nope.
	if (response == "s_326")
	{
		//-- [NOTE] 
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "yawn");

			//-- NPC: Then I guess you can't help me.  Oh well.
			string_id message = new string_id (c_stringFile, "s_328");
			utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.ep3_mining_thom_steele");

	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Thom Steele");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	setInvulnerable (self, true);
	setName (self, "Thom Steele");

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.ep3_mining_thom_steele");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_completedAll (player, npc))
	{
		//-- NPC: I have no further work for you.
		string_id message = new string_id (c_stringFile, "s_53");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_isQuestFourActive (player, npc))
	{
		//-- NPC: Get back to Kashyyyk, pilot!
		string_id message = new string_id (c_stringFile, "s_52");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_canTakeQuestFour (player, npc))
	{
		//-- NPC: Back again, eh old sport?  Did you decide on the job I had offered you?
		string_id message = new string_id (c_stringFile, "s_234");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes.  I'll take it.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: It's not for me.  Sorry.
		boolean hasResponse1 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_236");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_240");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 3);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_hasFailedQuestThree (player, npc))
	{
		//-- NPC: Where are those samples?
		string_id message = new string_id (c_stringFile, "s_63");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I couldn't get them for you...
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_64");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 6);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_isQuestThreeActive (player, npc))
	{
		//-- NPC: Aren't you supposed to be mining?
		string_id message = new string_id (c_stringFile, "s_244");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_hasCompletedQuestThree (player, npc))
	{
		//-- NPC: Did you get me those samples?
		string_id message = new string_id (c_stringFile, "s_246");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I did.  Here they are, 'old sport'.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_248");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 9);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_hasBeenRewardedForQuestTwo (player, npc))
	{
		//-- NPC: Welcome back!  Thought it over a bit?
		string_id message = new string_id (c_stringFile, "s_268");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I have.  I'm ready for your mission.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I have, and there's no way I'm going out there.
		boolean hasResponse1 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_270");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_274");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 15);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_hasFailedQuestTwo (player, npc))
	{
		//-- NPC: I'm disappointed in you pilot...that was a simple mission!
		string_id message = new string_id (c_stringFile, "s_55");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'll see that it never happens again.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_57");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 18);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_hasCompletedQuestTwo (player, npc))
	{
		doAnimationAction (npc, "wave1");

		//-- NPC: Ah, back from your patrol, eh...err...old friend!  Did you give our competition the old white glove treatment?
		string_id message = new string_id (c_stringFile, "s_278");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: That's one way of putting it.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_280");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 20);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_isQuestTwoActive (player, npc))
	{
		//-- NPC: You already have work to do, pilot!  Get busy!
		string_id message = new string_id (c_stringFile, "s_300");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_canTakeQuestTwo (player, npc))
	{
		//-- NPC: Ready for that job I was talking about?
		string_id message = new string_id (c_stringFile, "s_302");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Absolutely.  What was it again?
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_304");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 27);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition_isQuestOneActive (player, npc))
	{
		//-- NPC: Yes?  Look, I'm very busy...
		string_id message = new string_id (c_stringFile, "s_312");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I come bearing a message from Flash Harrison on Kashyyyk.
		boolean hasResponse0 = false;
		if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_314");

			utils.setScriptVar (player, "conversation.ep3_mining_thom_steele.branchId", 30);

			npcStartConversation (player, npc, "ep3_mining_thom_steele", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (ep3_mining_thom_steele_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "wave_on_dismissing");

		//-- NPC: I don't believe we have any business to discuss.
		string_id message = new string_id (c_stringFile, "s_330");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "ep3_mining_thom_steele")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

	if (branchId == 3 && ep3_mining_thom_steele_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 6 && ep3_mining_thom_steele_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && ep3_mining_thom_steele_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && ep3_mining_thom_steele_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && ep3_mining_thom_steele_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && ep3_mining_thom_steele_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 15 && ep3_mining_thom_steele_handleBranch15 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 18 && ep3_mining_thom_steele_handleBranch18 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 20 && ep3_mining_thom_steele_handleBranch20 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 21 && ep3_mining_thom_steele_handleBranch21 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 22 && ep3_mining_thom_steele_handleBranch22 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 23 && ep3_mining_thom_steele_handleBranch23 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 27 && ep3_mining_thom_steele_handleBranch27 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 28 && ep3_mining_thom_steele_handleBranch28 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 30 && ep3_mining_thom_steele_handleBranch30 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 31 && ep3_mining_thom_steele_handleBranch31 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 32 && ep3_mining_thom_steele_handleBranch32 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.ep3_mining_thom_steele.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

