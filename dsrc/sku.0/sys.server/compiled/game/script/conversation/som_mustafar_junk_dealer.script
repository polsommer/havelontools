// ======================================================================
//
// som_mustafar_junk_dealer.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.35 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/som_mustafar_junk_dealer";

// ======================================================================
// Script Conditions
// ======================================================================

boolean som_mustafar_junk_dealer_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean som_mustafar_junk_dealer_condition_check_inv (obj_id player, obj_id npc)
{
	string datatable = "datatables/npc/junk_dealer/junk_dealer.iff";
	
	string item = "";
	string itemTemplate = "";
	
	int itemLength = dataTableGetNumRows(datatable);
	
	int x = 0;
	int y = 0;
	
	obj_id inventory = utils.getInventoryContainer(player);
	
	if(isIdValid(inventory))
	{
		obj_id[] contents = utils.getContents(inventory, true);

		if(contents != null)
		{
			for(x = 0; x < contents.length; x++)
			{
				y = 0;
				if(hasObjVar(contents[x], "junkDealer.intPrice")) 
					return true;				
				
				if (!isCrafted(contents[x])) {
					itemTemplate = getTemplateName(contents[x]);
					
					while(y < itemLength) {
	
						item = dataTableGetString(datatable, y, "items");
						
						if(itemTemplate == item) {
					
						return true;
					}
					
						y++;
					}
				}	
			}
		}
	}
	
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void som_mustafar_junk_dealer_action_start_dealing (obj_id player, obj_id npc)
{
	dictionary params = new dictionary();
	params.put("player", player);
	
	messageTo(npc, "startDealing", params, 1.0f, false);
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int som_mustafar_junk_dealer_handleBranch1 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Greetings, my friend. Perhaps you have something you wish to sell? If you do, then you have come to the right place. I am willing to take most items off your hands for a more-than-generous fee.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: As a matter of fact, I do have some stuff to sell.
	if (response == "s_6")
	{
		//-- [NOTE] 
		if (som_mustafar_junk_dealer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "beckon");

			som_mustafar_junk_dealer_action_start_dealing (player, npc);

			//-- NPC: Excellent. Let me see what you have to offer.
			string_id message = new string_id (c_stringFile, "s_8");
			utils.removeScriptVar (player, "conversation.som_mustafar_junk_dealer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: It doesn't look like I have anything to sell.
	if (response == "s_10")
	{
		doAnimationAction (player, "shrug_hands");

		//-- [NOTE] 
		if (som_mustafar_junk_dealer_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "bow3");

			//-- NPC: That is quite alright. I am always open.
			string_id message = new string_id (c_stringFile, "s_12");
			utils.removeScriptVar (player, "conversation.som_mustafar_junk_dealer.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.som_mustafar_junk_dealer");

	setInvulnerable(self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setInvulnerable(self, true);
	setCondition (self, CONDITION_CONVERSABLE);
	setCondition (self, CONDITION_INTERESTING);
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.som_mustafar_junk_dealer");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (som_mustafar_junk_dealer_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "bow2");

		//-- NPC: Greetings, my friend. Perhaps you have something you wish to sell? If you do, then you have come to the right place. I am willing to take most items off your hands for a more-than-generous fee.
		string_id message = new string_id (c_stringFile, "s_4");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: As a matter of fact, I do have some stuff to sell.
		boolean hasResponse0 = false;
		if (som_mustafar_junk_dealer_condition_check_inv (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: It doesn't look like I have anything to sell.
		boolean hasResponse1 = false;
		if (som_mustafar_junk_dealer_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_10");

			utils.setScriptVar (player, "conversation.som_mustafar_junk_dealer.branchId", 1);

			npcStartConversation (player, npc, "som_mustafar_junk_dealer", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "som_mustafar_junk_dealer")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.som_mustafar_junk_dealer.branchId");

	if (branchId == 1 && som_mustafar_junk_dealer_handleBranch1 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.som_mustafar_junk_dealer.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

