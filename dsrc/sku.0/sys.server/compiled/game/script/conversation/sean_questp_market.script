// ======================================================================
//
// sean_questp_market.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/sean_questp_market";

// ======================================================================
// Script Conditions
// ======================================================================

boolean sean_questp_market_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean sean_questp_market_condition_Campaign (obj_id player, obj_id npc)
{
	if ( hasObjVar(npc, "bestine.electionStarted") )
	{
		int electionNum = getIntObjVar(npc, "bestine.electionStarted");
		if ( hasObjVar(player, "bestine.campaign" ) )
		{
			int electionPlayerIsIn = getIntObjVar(player, "bestine.campaign");
			if ( electionPlayerIsIn >= electionNum)
			{
				if ( !hasObjVar(player, "bestine.sean_market_noroom") )
				{
					return true;
				}
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean sean_questp_market_condition_alreadyHasEvidence (obj_id player, obj_id npc)
{
	return utils.playerHasItemByTemplate(player, "object/tangible/loot/quest/sean_questp_mdisk.iff");
}

// ----------------------------------------------------------------------

boolean sean_questp_market_condition_noroomObjVar (obj_id player, obj_id npc)
{
	if ( hasObjVar(npc, "bestine.electionStarted") )
	{
		int electionNum = getIntObjVar(npc, "bestine.electionStarted");
		if ( hasObjVar(player, "bestine.campaign" ) )
		{
			int electionPlayerIsIn = getIntObjVar(player, "bestine.campaign");
			if ( electionPlayerIsIn >= electionNum)
			{
				if ( hasObjVar(player, "bestine.sean_market_noroom") ) 
				{
					return true;
				}				
			}
		}
	}
	return false;
}

// ----------------------------------------------------------------------

boolean sean_questp_market_condition_nonoffice (obj_id player, obj_id npc)
{
	return hasObjVar(npc, "bestine.electionEnded");
}

// ----------------------------------------------------------------------

boolean sean_questp_market_condition_noInventorySpace (obj_id player, obj_id npc)
{
	boolean hasNoInvRoom = false;
	obj_id playerInv = utils.getInventoryContainer(player);
	if ( isIdValid(playerInv) )
	{
		int free_space = getVolumeFree(playerInv);
		if (free_space < 1 )
		{
			hasNoInvRoom = true;
		}
	}
	return hasNoInvRoom;
}

// ======================================================================
// Script Actions
// ======================================================================

void sean_questp_market_action_noroom (obj_id player, obj_id npc)
{
	int electionNum = getIntObjVar(npc, "bestine.electionStarted");
	setObjVar( player, "bestine.sean_market_noroom", electionNum);
}

// ----------------------------------------------------------------------

void sean_questp_market_action_giveDisk (obj_id player, obj_id npc)
{
	if ( hasObjVar(player, "bestine.sean_market_noroom") )
	{
		removeObjVar(player, "bestine.sean_market_noroom");
	}
	
	string MDISK = "object/tangible/loot/quest/sean_questp_mdisk.iff";
	if (isIdValid(player))
	{
	 	obj_id playerInv = getObjectInSlot( player, "inventory" ); 
		if(isIdValid(playerInv)) 
		{
			obj_id item = createObject( MDISK, playerInv, "" );
			if(isIdValid(item))
			{
				return;
	 		}
		}
	}
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int sean_questp_market_handleBranch3 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Welcome! Oh, I remember you. Do you have enough room now to receive the evidence?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, please.
	if (response == "s_c82e9a2f")
	{
		//-- [NOTE] 
		if (!sean_questp_market_condition_noInventorySpace (player, npc))
		{
			sean_questp_market_action_giveDisk (player, npc);

			//-- NPC: Here you are. Good luck on the voting!
			string_id message = new string_id (c_stringFile, "s_14d1042b");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (sean_questp_market_condition_noInventorySpace (player, npc))
		{
			//-- NPC: You didn't have enough room again. Come back when you do.
			string_id message = new string_id (c_stringFile, "s_1b885620");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Haven't had a chance yet.
	if (response == "s_6cd9792d")
	{
		//-- [NOTE] 
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ah, well return when you've done so.
			string_id message = new string_id (c_stringFile, "s_c1035c83");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int sean_questp_market_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: We've recently established ourselves in this new marketplace . Isn't it great? Sean Trenwell used his own money to help build it.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Do you have record of that?
	if (response == "s_cb056ffb")
	{
		//-- [NOTE] 
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			//-- NPC: Actually, my Jawa friend may have something like that. Wait here a second while I discuss it with him.
			string_id message = new string_id (c_stringFile, "s_e61c91fe");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Okay.
			boolean hasResponse0 = false;
			if (sean_questp_market_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_67e6df55");

				utils.setScriptVar (player, "conversation.sean_questp_market.branchId", 8);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: That's nice. I have to go.
	if (response == "s_de2e386f")
	{
		//-- [NOTE] 
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			//-- NPC: Nice doing... well, we didn't exactly do business, did we. Thanks for coming by, I suppose.
			string_id message = new string_id (c_stringFile, "s_ce0e0612");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int sean_questp_market_handleBranch8 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Actually, my Jawa friend may have something like that. Wait here a second while I discuss it with him.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Okay.
	if (response == "s_67e6df55")
	{
		//-- [NOTE] 
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			//-- NPC: In fact, he does. You're lucky you came today. He was going to take the disk apart and recycle it to make one of his new, crazy inventions. Why do you need it?
			string_id message = new string_id (c_stringFile, "s_9e71b2ab");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Let me tell you the situation...
			boolean hasResponse0 = false;
			if (sean_questp_market_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_a4149441");

				utils.setScriptVar (player, "conversation.sean_questp_market.branchId", 9);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int sean_questp_market_handleBranch9 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: In fact, he does. You're lucky you came today. He was going to take the disk apart and recycle it to make one of his new, crazy inventions. Why do you need it?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Let me tell you the situation...
	if (response == "s_a4149441")
	{
		//-- [NOTE] 
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			//-- NPC: Oh yeah? We'd love to help! Of course, we'll give it to you for the sake of helping Sean Trenwell win the election. Here you are. Good luck!
			string_id message = new string_id (c_stringFile, "s_b4164d7b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Thanks.
			boolean hasResponse0 = false;
			if (sean_questp_market_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_fc27931b");

				utils.setScriptVar (player, "conversation.sean_questp_market.branchId", 10);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

				npcEndConversationWithMessage (player, message);
			}

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int sean_questp_market_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Oh yeah? We'd love to help! Of course, we'll give it to you for the sake of helping Sean Trenwell win the election. Here you are. Good luck!

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Thanks.
	if (response == "s_fc27931b")
	{
		//-- [NOTE] 
		if (!sean_questp_market_condition_noInventorySpace (player, npc))
		{
			sean_questp_market_action_giveDisk (player, npc);

			//-- NPC: Bye!
			string_id message = new string_id (c_stringFile, "s_60613aaf");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

		//-- [NOTE] 
		if (sean_questp_market_condition_noInventorySpace (player, npc))
		{
			sean_questp_market_action_noroom (player, npc);

			//-- NPC: Oh yeah? We'd love to help! Of course, we'll give it to you--Wait a second. Unfortunately, you don't have enough room. Come back when you do.
			string_id message = new string_id (c_stringFile, "s_a1a4c8c9");
			utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.sean_questp_market");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.sean_questp_market");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (sean_questp_market_condition_nonoffice (player, npc))
	{
		//-- NPC: Our little market is tucked away in the city, but provides wonderful rewards for brave acts. I think some of the merchants here are looking for rare bones. Not sure where you'd get them from. But someone mentioned Sand People. Does that mean anything to you?
		string_id message = new string_id (c_stringFile, "s_f319b246");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (sean_questp_market_condition_alreadyHasEvidence (player, npc))
	{
		//-- NPC: Hi again. Good to see you... and oh, since you still have that disk I gave you, my friend thinks he can use something like that in an invention of his. But I guess you still need it, don't you. Nevermind.
		string_id message = new string_id (c_stringFile, "s_c8e9e99a");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (sean_questp_market_condition_noroomObjVar (player, npc))
	{
		//-- NPC: Welcome! Oh, I remember you. Do you have enough room now to receive the evidence?
		string_id message = new string_id (c_stringFile, "s_40977666");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, please.
		boolean hasResponse0 = false;
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: Haven't had a chance yet.
		boolean hasResponse1 = false;
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_c82e9a2f");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_6cd9792d");

			utils.setScriptVar (player, "conversation.sean_questp_market.branchId", 3);

			npcStartConversation (player, npc, "sean_questp_market", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (sean_questp_market_condition_Campaign (player, npc))
	{
		//-- NPC: We've recently established ourselves in this new marketplace . Isn't it great? Sean Trenwell used his own money to help build it.
		string_id message = new string_id (c_stringFile, "s_faf0f6d6");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Do you have record of that?
		boolean hasResponse0 = false;
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: That's nice. I have to go.
		boolean hasResponse1 = false;
		if (sean_questp_market_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_cb056ffb");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_de2e386f");

			utils.setScriptVar (player, "conversation.sean_questp_market.branchId", 7);

			npcStartConversation (player, npc, "sean_questp_market", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (sean_questp_market_condition__defaultCondition (player, npc))
	{
		//-- NPC: Are you here to collect these influx capacitors? *pauses listening to the Jawa next to her* Oh... sorry, you're not the right person. While I've got your ear, I should let you know there's an election going on at the capitol. I encourage you to support Sean Trenwell if you get involved.
		string_id message = new string_id (c_stringFile, "s_7ffa475");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "sean_questp_market")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.sean_questp_market.branchId");

	if (branchId == 3 && sean_questp_market_handleBranch3 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && sean_questp_market_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 8 && sean_questp_market_handleBranch8 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 9 && sean_questp_market_handleBranch9 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && sean_questp_market_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.sean_questp_market.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

