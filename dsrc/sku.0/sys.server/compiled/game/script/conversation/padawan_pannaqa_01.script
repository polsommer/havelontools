// ======================================================================
//
// padawan_pannaqa_01.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.34 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.jedi_trials;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/padawan_pannaqa_01";

// ======================================================================
// Script Conditions
// ======================================================================

boolean padawan_pannaqa_01_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean padawan_pannaqa_01_condition_acceptedQuest (obj_id player, obj_id npc)
{
	string trialName = jedi_trials.getJediTrialName(player);
	
	if ( trialName != null && trialName.equals("pannaqa") )
	{	
		return hasObjVar(player, "jedi_trials.padawan_trials.temp.acceptedTask");
	}
	return false;
}

// ----------------------------------------------------------------------

boolean padawan_pannaqa_01_condition_isTrialPlayer (obj_id player, obj_id npc)
{
	string trialName = jedi_trials.getJediTrialName(player);
	
	if ( trialName != null && trialName.equals("pannaqa") )
	{	
		return !hasObjVar(player, "jedi_trials.padawan_trials.pannaqa.failed");
	}
	return false;
}

// ----------------------------------------------------------------------

boolean padawan_pannaqa_01_condition_spokeToTarget01 (obj_id player, obj_id npc)
{
	string trialName = jedi_trials.getJediTrialName(player);
	
	if ( trialName != null && trialName.equals("pannaqa") )
	{	
		return hasObjVar(player, "jedi_trials.padawan_trials.temp.spokeToTarget_01");
	}
	return false;
}

// ----------------------------------------------------------------------

boolean padawan_pannaqa_01_condition_spokeToTarget02 (obj_id player, obj_id npc)
{
	string trialName = jedi_trials.getJediTrialName(player);
	
	if ( trialName != null && trialName.equals("pannaqa") )
	{	
		return hasObjVar(player, "jedi_trials.padawan_trials.temp.spokeToTarget_02");
	}
	return false;
}

// ----------------------------------------------------------------------

boolean padawan_pannaqa_01_condition_completedSuccess (obj_id player, obj_id npc)
{
	string trialName = jedi_trials.getJediTrialName(player);
	
	if ( trialName != null && !trialName.equals("pannaqa") )
	{	
		return hasObjVar(player, "jedi_trials.padawan_trials.pannaqa.success");
	}
	return false;
}

// ======================================================================
// Script Actions
// ======================================================================

void padawan_pannaqa_01_action_sendToSecondNpc (obj_id player, obj_id npc)
{
	setObjVar(npc, "padawan_trials.playerAccepted", true);
	setObjVar(player, "jedi_trials.padawan_trials.temp.acceptedTask", true);
	messageTo(player, "handleSetSecondLoc", null, 1, false);
	return;
}

// ----------------------------------------------------------------------

void padawan_pannaqa_01_action_questFailure (obj_id player, obj_id npc)
{
	setObjVar(player, "jedi_trials.padawan_trials.pannaqa.failed", true);
	
	messageTo(player, "handleQuestFailure", null, 1, false);
	return;
}

// ----------------------------------------------------------------------

void padawan_pannaqa_01_action_questSuccess (obj_id player, obj_id npc)
{
	setObjVar(player, "jedi_trials.padawan_trials.pannaqa.success", true);
	
	if ( hasObjVar(player, "jedi_trials.padawan_trials.pannaqa.failed") )
	{
		removeObjVar(player, "jedi_trials.padawan_trials.pannaqa.failed");
	}
	
	messageTo(player, "handleTrialComplete", null, 1, false);
	return;
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int padawan_pannaqa_01_handleBranch2 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] Text given when the player returns with the needed part.
	//-- NPC: Do you have the part? Did you find Shendo?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Yes, Shendo wasn't difficult to find... just to deal with.
	if (response == "s_3a3e0d5d")
	{
		//-- [NOTE] Quest Completed.
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "applause_excited");

			padawan_pannaqa_01_action_questSuccess (player, npc);

			//-- NPC: Thank you so much. Hopefully this will help me get  the gardens around here into shape.
			string_id message = new string_id (c_stringFile, "s_42e0a11e");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int padawan_pannaqa_01_handleBranch4 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Any luck finding Shendo?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not yet, but don't worry... I will.
	if (response == "s_30546869")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Ahh, thank you. Please return when you have the part.
			string_id message = new string_id (c_stringFile, "s_52da7aa");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've decided that you're on your own. Find another servant.
	if (response == "s_b336be8b")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			padawan_pannaqa_01_action_questFailure (player, npc);

			//-- NPC: I see. I thank you for the consideration you've given and trust that you find your way.
			string_id message = new string_id (c_stringFile, "s_24a1738d");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int padawan_pannaqa_01_handleBranch7 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] If the player returns before talking with the second NPC.
	//-- NPC: Did you find Shendo with the vibro-tiller part?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Not yet, but don't worry... I will.
	if (response == "s_13")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "nod_head_once");

			//-- NPC: Ahh, thank you. Please return when you have the part.
			string_id message = new string_id (c_stringFile, "s_15");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I've decided that I'm done being your slave boy. You're on your own.
	if (response == "s_387d18ec")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "sigh_deeply");

			padawan_pannaqa_01_action_questFailure (player, npc);

			//-- NPC: I see. I thank you for the consideration you've given and trust that you find your way.
			string_id message = new string_id (c_stringFile, "s_18");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int padawan_pannaqa_01_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I'm sure someone of your ability will be able to assist me.  Do you have a second to spare?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I'm listening.
	if (response == "s_df607c49")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "explain");

			//-- NPC: I can't leave the village.. there's far too much to be done at the moment. But I also need a replacement part for my vibro-tiller. Without it, farming is much more difficult.
			string_id message = new string_id (c_stringFile, "s_53c84ebd");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: Sure, why not.  How can I help?
			boolean hasResponse0 = false;
			if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: What kind of mup do you take me for? I'm not doing you menial labor.
			boolean hasResponse1 = false;
			if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_dd5fc3e4");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ed2f6bdb");

				utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 11);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Quest Failed(?)
	//-- PLAYER: No, find some sap to bother with your shallow needs.
	if (response == "s_fd022a50")
	{
		doAnimationAction (player, "point_accusingly");

		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "standing_placate");

			padawan_pannaqa_01_action_questFailure (player, npc);

			//-- NPC: Sorry for bothering, I didn't mean to offend.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int padawan_pannaqa_01_handleBranch11 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: I can't leave the village.. there's far too much to be done at the moment. But I also need a replacement part for my vibro-tiller. Without it, farming is much more difficult.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Sure, why not.  How can I help?
	if (response == "s_dd5fc3e4")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			//-- NPC: Shendo, an extremely unreliable acquaintance of mine was supposed to have delivered it many hours ago but has yet to show up.  Would you be willing to find him and retrieve the part? 
			string_id message = new string_id (c_stringFile, "s_194a6a4b");
			int numberOfResponses = 0;

			boolean hasResponse = false;

			//-- PLAYER: I would be more than willing to help.
			boolean hasResponse0 = false;
			if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse0 = true;
			}

			//-- PLAYER: Tasks like this are for the servants, bother someone else.
			boolean hasResponse1 = false;
			if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
			{
				++numberOfResponses;
				hasResponse = true;
				hasResponse1 = true;
			}

			if (hasResponse)
			{
				int responseIndex = 0;
				string_id responses [] = new string_id [numberOfResponses];

				if (hasResponse0)
					responses [responseIndex++] = new string_id (c_stringFile, "s_69af28a6");

				if (hasResponse1)
					responses [responseIndex++] = new string_id (c_stringFile, "s_ad0eb2bb");

				utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 12);

				npcSpeak (player, message);
				npcSetConversationResponses (player, responses);
			}
			else
			{
				utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

				chat.chat (npc, player, message);
				npcEndConversation (player);
			}

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Quest Failed(?)
	//-- PLAYER: What kind of mup do you take me for? I'm not doing you menial labor.
	if (response == "s_ed2f6bdb")
	{
		doAnimationAction (player, "belly_laugh");

		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "standing_placate");

			padawan_pannaqa_01_action_questFailure (player, npc);

			//-- NPC: Sorry for bothering, I didn't mean to offend.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int padawan_pannaqa_01_handleBranch12 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Shendo, an extremely unreliable acquaintance of mine was supposed to have delivered it many hours ago but has yet to show up.  Would you be willing to find him and retrieve the part? 

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I would be more than willing to help.
	if (response == "s_69af28a6")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "accept_affection");

			padawan_pannaqa_01_action_sendToSecondNpc (player, npc);

			//-- NPC: Thank you kindly, I'll be here when you return.
			string_id message = new string_id (c_stringFile, "s_bbfeec70");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] Quest Failed(?)
	//-- PLAYER: Tasks like this are for the servants, bother someone else.
	if (response == "s_ad0eb2bb")
	{
		//-- [NOTE] 
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			doAnimationAction (npc, "standing_placate");

			padawan_pannaqa_01_action_questFailure (player, npc);

			//-- NPC: Sorry for bothering, I didn't mean to offend.
			string_id message = new string_id (c_stringFile, "s_72d5a837");
			utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

			chat.chat (npc, player, message);
			npcEndConversation (player);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.padawan_pannaqa_01");

	setCondition (self, CONDITION_CONVERSABLE);
	
	setName(self, "Pannaqa (a farmer)");

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);
	
	setName(self, "Pannaqa (a farmer)");
	
	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.padawan_pannaqa_01");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (padawan_pannaqa_01_condition_completedSuccess (player, npc))
	{
		doAnimationAction (npc, "pose_proudly");

		//-- NPC: Now maybe instead of just dead trees, I'll grow some vegetables. Or flowers. Or maybe just more trees.
		string_id message = new string_id (c_stringFile, "s_be0f3920");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] Text given when the player returns with the needed part.
	if (padawan_pannaqa_01_condition_spokeToTarget02 (player, npc))
	{
		//-- NPC: Do you have the part? Did you find Shendo?
		string_id message = new string_id (c_stringFile, "s_b2216c3");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Yes, Shendo wasn't difficult to find... just to deal with.
		boolean hasResponse0 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_3a3e0d5d");

			utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 2);

			npcStartConversation (player, npc, "padawan_pannaqa_01", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (padawan_pannaqa_01_condition_spokeToTarget01 (player, npc))
	{
		//-- NPC: Any luck finding Shendo?
		string_id message = new string_id (c_stringFile, "s_b9c3a3be");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not yet, but don't worry... I will.
		boolean hasResponse0 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I've decided that you're on your own. Find another servant.
		boolean hasResponse1 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_30546869");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_b336be8b");

			utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 4);

			npcStartConversation (player, npc, "padawan_pannaqa_01", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] If the player returns before talking with the second NPC.
	if (padawan_pannaqa_01_condition_acceptedQuest (player, npc))
	{
		//-- NPC: Did you find Shendo with the vibro-tiller part?
		string_id message = new string_id (c_stringFile, "s_6d11135b");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Not yet, but don't worry... I will.
		boolean hasResponse0 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: I've decided that I'm done being your slave boy. You're on your own.
		boolean hasResponse1 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_13");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_387d18ec");

			utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 7);

			npcStartConversation (player, npc, "padawan_pannaqa_01", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (padawan_pannaqa_01_condition_isTrialPlayer (player, npc))
	{
		doAnimationAction (npc, "beckon");

		//-- NPC: I'm sure someone of your ability will be able to assist me.  Do you have a second to spare?
		string_id message = new string_id (c_stringFile, "s_41aab3ed");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I'm listening.
		boolean hasResponse0 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No, find some sap to bother with your shallow needs.
		boolean hasResponse1 = false;
		if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_df607c49");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_fd022a50");

			utils.setScriptVar (player, "conversation.padawan_pannaqa_01.branchId", 10);

			npcStartConversation (player, npc, "padawan_pannaqa_01", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (padawan_pannaqa_01_condition__defaultCondition (player, npc))
	{
		doAnimationAction (npc, "shake_head_no");

		//-- NPC: One dead tree. That's pretty much all I've got to show for my farming skills. As if I should call them skills even. [*sigh*]
		string_id message = new string_id (c_stringFile, "s_1843ab7e");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "padawan_pannaqa_01")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

	if (branchId == 2 && padawan_pannaqa_01_handleBranch2 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 4 && padawan_pannaqa_01_handleBranch4 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 7 && padawan_pannaqa_01_handleBranch7 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && padawan_pannaqa_01_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 11 && padawan_pannaqa_01_handleBranch11 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 12 && padawan_pannaqa_01_handleBranch12 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.padawan_pannaqa_01.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

