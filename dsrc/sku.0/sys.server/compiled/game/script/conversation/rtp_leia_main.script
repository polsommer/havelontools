// ======================================================================
//
// rtp_leia_main.script
// Copyright 2004, Sony Online Entertainment
// All Rights Reserved.
//
// Created with SwgConversationEditor 1.36 - DO NOT EDIT THIS AUTO-GENERATED FILE!
//
// ======================================================================

// ======================================================================
// Library Includes
// ======================================================================

include library.ai_lib;
include library.chat;
include library.factions;
include library.groundquests;
include library.space_quest;
include library.utils;

// ======================================================================
// Script Constants
// ======================================================================

string c_stringFile = "conversation/rtp_leia_main";

// ======================================================================
// Script Conditions
// ======================================================================

boolean rtp_leia_main_condition__defaultCondition (obj_id player, obj_id npc)
{
	return true;
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_01_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "rtp_leia_01");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_01_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_leia_01", "rtp_leia_01_02") ||
	groundquests.hasCompletedQuest(player, "rtp_leia_01");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_02_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "rtp_leia_02");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_03_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_leia_03", "rtp_leia_03_02") ||
	groundquests.hasCompletedQuest(player, "rtp_leia_03");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_03_active (obj_id player, obj_id npc)
{
	return groundquests.isQuestActive(player, "rtp_leia_03");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rtp_leia_02_complete (obj_id player, obj_id npc)
{
	return groundquests.isTaskActive(player, "rtp_leia_02", "rtp_leia_02_03") ||
	groundquests.hasCompletedQuest(player, "rtp_leia_02");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_completedWedge (obj_id player, obj_id npc)
{
	return groundquests.hasCompletedQuest(player, "rtp_wedge_01");
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_notRebel (obj_id player, obj_id npc)
{
	string playerFaction = factions.getFaction(player);
	if ( playerFaction == null || !playerFaction.equals("Rebel") )
	{
		return true;
	}
	
	return false;
}

// ----------------------------------------------------------------------

boolean rtp_leia_main_condition_rebel_isOnLeave (obj_id player, obj_id npc)
{
	return factions.isOnLeave(player);
}

// ======================================================================
// Script Actions
// ======================================================================

void rtp_leia_main_action_rtp_leia_01_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "rtp_leia_01");
}

// ----------------------------------------------------------------------

void rtp_leia_main_action_rtp_leia_01_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_leia_01_02");
}

// ----------------------------------------------------------------------

void rtp_leia_main_action_rtp_leia_03_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_leia_03_02");
}

// ----------------------------------------------------------------------

void rtp_leia_main_action_rtp_leia_02_signal (obj_id player, obj_id npc)
{
	groundquests.sendSignal(player, "rtp_leia_02_03");
}

// ----------------------------------------------------------------------

void rtp_leia_main_action_rtp_leia_02_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "rtp_leia_02");
}

// ----------------------------------------------------------------------

void rtp_leia_main_action_rtp_leia_03_granted (obj_id player, obj_id npc)
{
	groundquests.grantQuest(player, "rtp_leia_03");
}

// ======================================================================
// Script %TO Tokens
// ======================================================================

// ======================================================================
// Script %DI Tokens
// ======================================================================

// ======================================================================
// Script %DF Tokens
// ======================================================================

// ======================================================================
// handleBranch<n> Functions 
// ======================================================================

int rtp_leia_main_handleBranch6 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Something important has come up in Nashal on Talus. A Selonian advocate named Nomi has been murdered. She was targeted by the Empire because she is sympathetic to our cause.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: What do you need me to do?
	if (response == "s_31")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			rtp_leia_main_action_rtp_leia_03_granted (player, npc);

			//-- NPC: The Empire is attempting to make it look like the Rebel Alliance killed Nomi. It is their desire to sow dissension within our ranks and to raise doubts among those who might be sympathetic to our cause. You need to make sure the blame for this atrocious act is rightfully placed on the Empire.
			string_id message = new string_id (c_stringFile, "s_33");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_35")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_37");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rtp_leia_main_handleBranch10 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: Good work. The intel we received from Major Denive has proven worth the effort. You are to travel to Talus with some security codes he provided.

	//-- [RESPONSE NOTE] 
	//-- PLAYER: Talus? I'm on my way.
	if (response == "s_22")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			rtp_leia_main_action_rtp_leia_02_granted (player, npc);

			//-- NPC: Once on Talus, hand over the security codes to one of our Bothan SpyNet operatives, Erisi Plmary. After that, you'll proceed to an Imperial command post on that planet. Using those same security codes, infiltrate and download as much of their military plans and information as possible before they update their security.
			string_id message = new string_id (c_stringFile, "s_25");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_26")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_30");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

int rtp_leia_main_handleBranch14 (obj_id player, obj_id npc, string_id response)
{
	//-- [BRANCH NOTE] 
	//-- NPC: An Imperial Officer, Major Jotil Denive, working for the Imperial Security Bureau wishes to come over to the Alliance. You will go to Bela Vistal and create a diversion so that he can take a shuttle to a meeting with one of our officers. Are you ready to leave for Bela Vistal?

	//-- [RESPONSE NOTE] 
	//-- PLAYER: I am. Let's get this underway.
	if (response == "s_36")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			rtp_leia_main_action_rtp_leia_01_granted (player, npc);

			//-- NPC: Once in Bela Vistal, disrupt Imperial communication, divert attention by destroying some Imperial shuttles, and be sure there are no Imperial guards near the Bela Vistal shuttleport.
			string_id message = new string_id (c_stringFile, "s_39");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	//-- [RESPONSE NOTE] 
	//-- PLAYER: No thank you.
	if (response == "s_41")
	{
		//-- [NOTE] 
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			//-- NPC: Very well.
			string_id message = new string_id (c_stringFile, "s_45");
			utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

			npcEndConversationWithMessage (player, message);

			return SCRIPT_CONTINUE;
		}

	}

	return SCRIPT_DEFAULT;
}

// ----------------------------------------------------------------------

// ======================================================================
// User Script Triggers
// ======================================================================

trigger OnInitialize ()
{
	if ((!isMob (self)) || (isPlayer (self)))
		detachScript(self, "conversation.rtp_leia_main");

	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnAttach ()
{
	setCondition (self, CONDITION_CONVERSABLE);

	return SCRIPT_CONTINUE;
}

trigger OnObjectMenuRequest (obj_id player, menu_info menuInfo)
{
	int menu = menuInfo.addRootMenu (menu_info_types.CONVERSE_START, null);
	menu_info_data menuInfoData = menuInfo.getMenuItemById (menu);
	menuInfoData.setServerNotify (false);
	
	faceTo( self, player );

	return SCRIPT_CONTINUE;
}

trigger OnIncapacitated (obj_id killer)
{
	clearCondition (self, CONDITION_CONVERSABLE);
	detachScript (self, "conversation.rtp_leia_main");

	return SCRIPT_CONTINUE;
}

// ======================================================================
// Script Triggers
// ======================================================================

//-- This function should move to base_class.java
boolean npcStartConversation(obj_id player, obj_id npc, string convoName, string_id greetingId, prose_package greetingProse, string_id[] responses)
{
	Object[] objects = new Object[responses.length];
	System.arraycopy(responses, 0, objects, 0, responses.length);
	return npcStartConversation(player, npc, convoName, greetingId, greetingProse, objects);
}

// ----------------------------------------------------------------------

trigger OnStartNpcConversation (obj_id player)
{
	obj_id npc = self;

	if (ai_lib.isInCombat (npc) || ai_lib.isInCombat (player))
		return SCRIPT_OVERRIDE;

	//-- [NOTE] 
	if (rtp_leia_main_condition_notRebel (player, npc))
	{
		//-- NPC: The function of this base is not of your concern. I would suggest you make yourself scarce.
		string_id message = new string_id (c_stringFile, "s_44");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (!rtp_leia_main_condition_completedWedge (player, npc))
	{
		//-- NPC: I do not have any orders for you, trooper. Try elsewhere in the base.
		string_id message = new string_id (c_stringFile, "s_46");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rebel_isOnLeave (player, npc))
	{
		//-- NPC: I'm afraid I only have orders I have are for those on active duty.
		string_id message = new string_id (c_stringFile, "s_43");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_03_complete (player, npc))
	{
		rtp_leia_main_action_rtp_leia_03_signal (player, npc);

		//-- NPC: News reports coming in from Nashal are blaming Imperial forces for Nomi's death. Good work. But no time to rest on your successes. You're needed on Lok. Check in first with Nien Nunb, but you'll eventually be reporting to Han Solo.
		string_id message = new string_id (c_stringFile, "s_9");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_03_active (player, npc))
	{
		//-- NPC: A Selonian advocate named Nomi has been murdered by the Empire. They are attempting to make it look like we are responsible. You need to make sure the blame for this atrocious act is rightfully placed on the Empire.
		string_id message = new string_id (c_stringFile, "s_29");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_02_complete (player, npc))
	{
		rtp_leia_main_action_rtp_leia_02_signal (player, npc);

		//-- NPC: Something important has come up in Nashal on Talus. A Selonian advocate named Nomi has been murdered. She was targeted by the Empire because she is sympathetic to our cause.
		string_id message = new string_id (c_stringFile, "s_28");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: What do you need me to do?
		boolean hasResponse0 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_31");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_35");

			utils.setScriptVar (player, "conversation.rtp_leia_main.branchId", 6);

			npcStartConversation (player, npc, "rtp_leia_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_02_active (player, npc))
	{
		//-- NPC: Once on Talus, hand over the security codes to one of our Bothan SpyNet operatives, Erisi Plmary. After that, you'll proceed to an Imperial command post on that planet. Using those same security codes, infiltrate and download as much of their military plans and information as possible before they update their security.
		string_id message = new string_id (c_stringFile, "s_16");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_01_complete (player, npc))
	{
		rtp_leia_main_action_rtp_leia_01_signal (player, npc);

		//-- NPC: Good work. The intel we received from Major Denive has proven worth the effort. You are to travel to Talus with some security codes he provided.
		string_id message = new string_id (c_stringFile, "s_20");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: Talus? I'm on my way.
		boolean hasResponse0 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_22");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_26");

			utils.setScriptVar (player, "conversation.rtp_leia_main.branchId", 10);

			npcStartConversation (player, npc, "rtp_leia_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition_rtp_leia_01_active (player, npc))
	{
		//-- NPC: Once in Bela Vistal, disrupt Imperial communication, divert attention by destroying some Imperial shuttles, and be sure there are no Imperial guards near the Bela Vistal shuttleport.
		string_id message = new string_id (c_stringFile, "s_32");
		chat.chat (npc, player, message);

		return SCRIPT_CONTINUE;
	}

	//-- [NOTE] 
	if (rtp_leia_main_condition__defaultCondition (player, npc))
	{
		//-- NPC: An Imperial Officer, Major Jotil Denive, working for the Imperial Security Bureau wishes to come over to the Alliance. You will go to Bela Vistal and create a diversion so that he can take a shuttle to a meeting with one of our officers. Are you ready to leave for Bela Vistal?
		string_id message = new string_id (c_stringFile, "s_34");
		int numberOfResponses = 0;

		boolean hasResponse = false;

		//-- PLAYER: I am. Let's get this underway.
		boolean hasResponse0 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse0 = true;
		}

		//-- PLAYER: No thank you.
		boolean hasResponse1 = false;
		if (rtp_leia_main_condition__defaultCondition (player, npc))
		{
			++numberOfResponses;
			hasResponse = true;
			hasResponse1 = true;
		}

		if (hasResponse)
		{
			int responseIndex = 0;
			string_id responses [] = new string_id [numberOfResponses];

			if (hasResponse0)
				responses [responseIndex++] = new string_id (c_stringFile, "s_36");

			if (hasResponse1)
				responses [responseIndex++] = new string_id (c_stringFile, "s_41");

			utils.setScriptVar (player, "conversation.rtp_leia_main.branchId", 14);

			npcStartConversation (player, npc, "rtp_leia_main", message, responses);
		}
		else
		{
			chat.chat (npc, player, message);
		}

		return SCRIPT_CONTINUE;
	}

	chat.chat (npc, "Error:  All conditions for OnStartNpcConversation were false.");

	return SCRIPT_CONTINUE;
}

// ----------------------------------------------------------------------

trigger OnNpcConversationResponse (string conversationId, obj_id player, string_id response)
{
	if (conversationId != "rtp_leia_main")
		return SCRIPT_CONTINUE;

	obj_id npc = self;

	int branchId = utils.getIntScriptVar (player, "conversation.rtp_leia_main.branchId");

	if (branchId == 6 && rtp_leia_main_handleBranch6 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 10 && rtp_leia_main_handleBranch10 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	if (branchId == 14 && rtp_leia_main_handleBranch14 (player, npc, response) == SCRIPT_CONTINUE)
		return SCRIPT_CONTINUE;

	chat.chat (npc, "Error:  Fell through all branches and responses for OnNpcConversationResponse.");

	utils.removeScriptVar (player, "conversation.rtp_leia_main.branchId");

	return SCRIPT_CONTINUE;
}

// ======================================================================

